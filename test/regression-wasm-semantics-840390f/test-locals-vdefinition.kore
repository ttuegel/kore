[topCellInitializer{}(LblinitGeneratedTopCell{}())]

module BASIC-K
  sort SortK{} []
  sort SortKItem{} []
endmodule []

module KSEQ
  import BASIC-K []

  // TODO: Provide constructor and functional axioms for `kseq` and `dotk`.
  symbol kseq{}(SortKItem{}, SortK{}) : SortK{} [constructor{}(),functional{}()]
  symbol dotk{}() : SortK{} [constructor{}(),functional{}()]

  symbol append{}(SortK{}, SortK{}) : SortK{} [function{}()]

  axiom{R}
    \equals{SortK{},R}(
      append{}(dotk{}(),K2:SortK{}),
      K2:SortK{})
  []

  axiom{R}
    \equals{SortK{},R}(
      append{}(kseq{}(K1:SortKItem{},K2:SortK{}),K3:SortK{}),
      kseq{}(K1:SortKItem{},append{}(K2:SortK{},K3:SortK{})))
  []

endmodule []

module INJ
  symbol inj{From,To}(From) : To [sortInjection{}()]

  axiom{S1,S2,S3,R}
    \equals{S3,R}(
      inj{S2,S3}(inj{S1,S2}(T:S1)),
      inj{S1,S3}(T:S1))
  []

endmodule []

module K
  import KSEQ []
  import INJ []

  // Defnitions for reachability aliases
  // Until we will have `mu` we resort to dummy definitions
  alias weakExistsFinally{A}(A) : A
  where weakExistsFinally{A}(@X:A) := @X:A []

  alias weakAlwaysFinally{A}(A) : A
  where weakAlwaysFinally{A}(@X:A) := @X:A []

  // Definitions for CTL aliases
  // Until we will have `mu` we resort to dummy definitions
  alias allPathGlobally{A}(A) : A
  where allPathGlobally{A}(@X:A) := @X:A []

endmodule []

module KWASM-LEMMAS

// imports
  import K []

// sorts
  sort SortModuleIdsCellOpt{} []
  sort SortLabelDepthCellOpt{} []
  sort SortIValType{} []
  sort SortGMutCellOpt{} []
  sort SortFRelOp{} []
  sort SortNextFuncIdxCell{} []
  sort SortGlobalAddrsCell{} []
  sort SortLabel{} []
  sort SortNumber{} []
  sort SortImportDefn{} []
  sort SortExternval{} []
  sort SortFUnOp{} []
  sort SortNextFuncAddrCell{} []
  sort SortTAddrCell{} []
  sort SortMAddrCell{} []
  sort SortTabInstCellFragment{} []
  sort SortVecType{} []
  sort SortTdataCell{} []
  sort SortNextTabAddrCellOpt{} []
  hooked-sort SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), hook{}("INT.Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(364,3,364,28)"), hasDomainValues{}()]
  sort SortFuncDefn{} []
  sort SortType{} []
  sort SortFuncAddrsCellOpt{} []
  sort SortFValType{} []
  sort SortNextFreshIdCellOpt{} []
  sort SortMdataCellOpt{} []
  sort SortSignedness{} []
  sort SortGlobalsCellFragment{} []
  sort SortLabelDepthCell{} []
  hooked-sort SortGlobalInstCellMap{} [hook{}("MAP.Map"), element{}(LblGlobalInstCellMapItem{}()), concat{}(Lbl'Unds'GlobalInstCellMap'Unds'{}()), unit{}(Lbl'Stop'GlobalInstCellMap{}())]
  sort SortTypesCellOpt{} []
  sort SortLocalsCell{} []
  sort SortFLocalCellOpt{} []
  sort SortFuncsCell{} []
  sort SortGeneratedCounterCell{} []
  sort SortCurModIdxCell{} []
  sort SortNextGlobIdxCellOpt{} []
  sort SortModIdxCell{} []
  sort SortModuleDecl{} []
  sort SortNextGlobIdxCell{} []
  sort SortNextFuncIdxCellOpt{} []
  sort SortTAddrCellOpt{} []
  sort SortOptionalInt{} []
  sort SortTabsCellFragment{} []
  sort SortLabelIdsCellOpt{} []
  sort SortGValueCell{} []
  sort SortMemArg{} []
  sort SortWasmCellOpt{} []
  sort SortMainStoreCell{} []
  hooked-sort SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(308,3,308,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), hook{}("BOOL.Bool"), hasDomainValues{}()]
  sort SortStmts{} []
  sort SortLabelIdsCell{} []
  sort SortEmptyStmt{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(132,5,132,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  hooked-sort SortFuncDefCellMap{} [hook{}("MAP.Map"), element{}(LblFuncDefCellMapItem{}()), concat{}(Lbl'Unds'FuncDefCellMap'Unds'{}()), unit{}(Lbl'Stop'FuncDefCellMap{}())]
  sort SortInlineExport{} []
  sort SortGValueCellOpt{} []
  sort SortLocalIdsCell{} []
  sort SortLoadOp{} []
  sort SortMmaxCellOpt{} []
  sort SortFModInstCellOpt{} []
  sort SortDeterministicMemoryGrowthCellOpt{} []
  hooked-sort SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), element{}(LblListItem{}()), concat{}(Lbl'Unds'List'Unds'{}()), unit{}(Lbl'Stop'List{}()), hook{}("LIST.List"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(234,3,234,31)")]
  sort SortMemsCell{} []
  sort SortDataDefn{} []
  sort SortNextModuleIdxCell{} []
  sort SortTsizeCell{} []
  sort SortMsizeCell{} []
  sort SortCvtf32Op{} []
  sort SortGlobalInstCellFragment{} []
  sort SortModuleInstancesCell{} []
  sort SortGlobalInstCell{} []
  sort SortIdentifierToken{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,5,24,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), token{}(), hasDomainValues{}()]
  sort SortCvti64Op{} []
  sort SortTableType{} []
  sort SortValstackCellOpt{} []
  sort SortGlobIdsCellOpt{} []
  sort SortModuleInstCell{} []
  sort SortMemType{} []
  sort SortMAddrCellOpt{} []
  sort SortImportDesc{} []
  sort SortValType{} []
  sort SortLocalIdsCellOpt{} []
  sort SortGlobalSpec{} []
  sort SortWasmCell{} []
  sort SortModuleRegistryCell{} []
  sort SortWasmString{} []
  hooked-sort SortMemInstCellMap{} [hook{}("MAP.Map"), element{}(LblMemInstCellMapItem{}()), concat{}(Lbl'Unds'MemInstCellMap'Unds'{}()), unit{}(Lbl'Stop'MemInstCellMap{}())]
  sort SortGlobalAddrsCellOpt{} []
  sort SortModuleIdsCell{} []
  sort SortNextTypeIdxCellOpt{} []
  sort SortBlockInstr{} []
  sort SortExportDefn{} []
  sort SortExportsCell{} []
  sort SortTestOp{} []
  sort SortTypeUse{} []
  sort SortInstr{} []
  sort SortAValType{} []
  sort SortDefns{} []
  hooked-sort SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(490,3,490,34)"), hook{}("FLOAT.Float"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), hasDomainValues{}()]
  sort SortGlobIdsCell{} []
  sort SortIUnOp{} []
  sort SortFuncType{} []
  sort SortFuncAddrsCell{} []
  sort SortTsizeCellOpt{} []
  sort SortMut{} []
  sort SortFrame{} []
  sort SortByteMap{} []
  sort SortTabAddrsCellOpt{} []
  sort SortNValType{} []
  sort SortGAddrCell{} []
  sort SortElemSegment{} []
  sort SortPlainInstr{} []
  sort SortFTypeCellOpt{} []
  sort SortTextFormatGlobalType{} []
  sort SortCurFrameCellOpt{} []
  sort SortModuleInstancesCellFragment{} []
  sort SortNextGlobAddrCell{} []
  sort SortFoldedInstr{} []
  sort SortStoreOpM{} []
  sort SortVal{} []
  sort SortTdataCellOpt{} []
  sort SortValTypes{} []
  sort SortMemInstCellFragment{} []
  sort SortModuleInstCellFragment{} []
  sort SortGlobalDefn{} []
  sort SortDeterministicMemoryGrowthCell{} []
  sort SortMemIdsCellOpt{} []
  sort SortIVal{} []
  sort SortKConfigVar{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,3,12,27)"), token{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/kast.k)"), hasDomainValues{}()]
  sort SortTmaxCell{} []
  sort SortLocalsCellOpt{} []
  hooked-sort SortString{} [hook{}("STRING.String"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(571,3,571,37)"), hasDomainValues{}()]
  sort SortFuncSpec{} []
  sort SortEndianness{} []
  sort SortFAddrCell{} []
  sort SortFLocalCell{} []
  sort SortTabInstCell{} []
  hooked-sort SortModuleInstCellMap{} [hook{}("MAP.Map"), element{}(LblModuleInstCellMapItem{}()), concat{}(Lbl'Unds'ModuleInstCellMap'Unds'{}()), unit{}(Lbl'Stop'ModuleInstCellMap{}())]
  sort SortMainStoreCellFragment{} []
  sort SortMdataCell{} []
  sort SortStmt{} []
  sort SortStoreOp{} []
  sort SortMInt{} []
  sort SortTypeKeyWord{} []
  sort SortFTypeCell{} []
  sort SortModuleRegistryCellOpt{} []
  sort SortTmaxCellOpt{} []
  sort SortCurFrameCellFragment{} []
  sort SortFuncDefCell{} []
  sort SortFuncsCellOpt{} []
  sort SortMemorySpec{} []
  sort SortCurModIdxCellOpt{} []
  sort SortWasmIntToken{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), token{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,5,25,34)"), hasDomainValues{}()]
  sort SortKCellOpt{} []
  sort SortGlobalsCell{} []
  sort SortTypeIdsCellOpt{} []
  sort SortLocalDecl{} []
  sort SortTypeIdsCell{} []
  sort SortMemIdsCell{} []
  sort SortGlobalType{} []
  sort SortTypeDecl{} []
  sort SortStartDefn{} []
  hooked-sort SortBytes{} [hasDomainValues{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), token{}(), hook{}("BYTES.Bytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(685,3,685,41)")]
  sort SortDataString{} []
  sort SortNextTabAddrCell{} []
  sort SortTabsCell{} []
  sort SortTabAddrsCell{} []
  hooked-sort SortTabInstCellMap{} [hook{}("MAP.Map"), element{}(LblTabInstCellMapItem{}()), concat{}(Lbl'Unds'TabInstCellMap'Unds'{}()), unit{}(Lbl'Stop'TabInstCellMap{}())]
  sort SortGeneratedTopCell{} []
  sort SortFCodeCell{} []
  sort SortAlignArg{} []
  sort SortCvti32Op{} []
  sort SortCurFrameCell{} []
  sort SortCvtOp{} []
  sort SortTypeDefn{} []
  sort SortModIdxCellOpt{} []
  sort SortFAddrCellOpt{} []
  sort SortFuncIdsCell{} []
  sort SortExportsCellOpt{} []
  sort SortElemDefn{} []
  sort SortValStack{} []
  sort SortGeneratedTopCellFragment{} []
  sort SortOptionalId{} []
  sort Sort'Hash'Layout{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,5,26,34)"), token{}(), hasDomainValues{}()]
  sort SortMemAddrsCell{} []
  sort SortIdentifier{} []
  sort SortMemAddrsCellOpt{} []
  sort SortFCodeCellOpt{} []
  sort SortTabIdsCellOpt{} []
  sort SortIRelOp{} []
  sort SortMsizeCellOpt{} []
  sort SortNextMemAddrCellOpt{} []
  sort SortWasmStringToken{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,5,27,34)"), token{}(), hasDomainValues{}()]
  hooked-sort SortSet{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), element{}(LblSetItem{}()), concat{}(Lbl'Unds'Set'Unds'{}()), unit{}(Lbl'Stop'Set{}()), hook{}("SET.Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,3,190,28)")]
  sort SortLoadOpM{} []
  sort SortIndex{} []
  sort SortKCell{} []
  sort SortTableElemType{} []
  sort SortMainStoreCellOpt{} []
  sort SortWasmCellFragment{} []
  sort SortTabsCellOpt{} []
  sort SortGMutCell{} []
  sort SortFuncDefCellFragment{} []
  sort SortFBinOp{} []
  sort SortMmaxCell{} []
  sort SortGlobalsCellOpt{} []
  sort SortNextGlobAddrCellOpt{} []
  sort SortFuncsCellFragment{} []
  sort SortFVal{} []
  sort SortMemInstCell{} []
  sort SortNextTypeIdxCell{} []
  sort SortTableSpec{} []
  sort SortIBinOp{} []
  sort SortMemsCellFragment{} []
  sort SortLocalDecls{} []
  sort SortOffsetArg{} []
  sort SortMemoryDefn{} []
  sort SortInstrs{} []
  sort SortNextFuncAddrCellOpt{} []
  sort SortGAddrCellOpt{} []
  sort SortFuncIdsCellOpt{} []
  sort SortFModInstCell{} []
  sort SortValstackCell{} []
  sort SortNextFreshIdCell{} []
  hooked-sort SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), concat{}(Lbl'Unds'Map'Unds'{}()), unit{}(Lbl'Stop'Map{}()), hook{}("MAP.Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(98,3,98,28)")]
  sort SortCvtf64Op{} []
  sort SortNextModuleIdxCellOpt{} []
  sort SortTypesCell{} []
  sort SortMemsCellOpt{} []
  sort SortGeneratedCounterCellOpt{} []
  sort SortTableDefn{} []
  sort SortAllocatedKind{} []
  sort SortEmptyStmts{} []
  sort SortModuleInstancesCellOpt{} []
  sort SortDefn{} []
  sort SortNextMemAddrCell{} []
  sort SortOffset{} []
  sort SortCell{} []
  sort SortTabIdsCell{} []
  sort SortInlineImport{} []
  sort SortTypeDecls{} []
  sort SortLimits{} []

// symbols
  symbol Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(SortMap{}, SortIndex{}) : SortInt{} [function{}(), klabel{}("#ContextLookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(73,20,73,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'DS2Bytes'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'DataString{}(SortDataString{}) : SortBytes{} [function{}(), klabel{}("#DS2Bytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(483,22,483,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'asLocalType'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(SortLocalDecls{}, SortValTypes{}) : SortVecType{} [function{}(), klabel{}("#asLocalType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(632,24,632,72)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  symbol Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(SortBool{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(325,20,325,56)"), function{}()]
  symbol Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(SortTypeUse{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("#checkTypeUse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(646,22,646,46)"), injective{}()]
  symbol Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(SortIVal{}) : SortIVal{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#chop"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(273,21,273,57)"), function{}()]
  symbol Lbl'Hash'concatDS'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString{}(SortDataString{}) : SortString{} [function{}(), klabel{}("#concatDS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(472,23,472,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'concatDS'LParUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString'Unds'String{}(SortDataString{}, SortString{}) : SortString{} [function{}(), klabel{}("#concatDSAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(473,23,473,87)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'ctz'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [function{}(), klabel{}("#ctz"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,20,44,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)")]
  symbol Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes'Unds'ValStack{}(SortValTypes{}, SortValStack{}) : SortValStack{} [function{}(), klabel{}("#drop"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(354,25,354,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'encodeUTF8'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int'Unds'Endianness{}(SortInt{}, SortEndianness{}) : SortBytes{} [function{}(), klabel{}("#encodeUTF8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(437,22,437,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(SortInt{}) : SortIdentifier{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#freshId"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,27,38,42)"), injective{}()]
  symbol Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(SortTypeKeyWord{}, SortTypeDecls{}, SortValTypes{}) : SortVecType{} [function{}(), klabel{}("#gatherTypes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(564,24,564,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  symbol Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(SortByteMap{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), smtlib{}("mapGet"), klabel{}("#get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(529,24,529,75)"), function{}()]
  symbol Lbl'Hash'getElemSegment'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Index'Unds'ElemSegment'Unds'Int{}(SortElemSegment{}, SortInt{}) : SortIndex{} [function{}(), klabel{}("#getElemSegment"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(88,22,88,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'getOffset'LParUndsRParUnds'WASM'Unds'Int'Unds'MemArg{}(SortMemArg{}) : SortInt{} [function{}(), klabel{}("#getOffset"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1101,20,1101,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  symbol Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(SortByteMap{}, SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), smtlib{}("getRange"), klabel{}("#getRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(517,20,517,90)"), function{}()]
  symbol Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(SortInt{}, SortOptionalInt{}) : SortBool{} [function{}(), klabel{}("#growthAllowed"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1174,21,1174,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  symbol Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(SortString{}, SortInt{}) : SortInt{} [function{}(), klabel{}("#idxCloseBracket"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(432,20,432,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  hooked-symbol Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(SortBool{}, SortSort, SortSort) : SortSort [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), smt-hook{}("ite"), hook{}("KEQUAL.ite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(867,26,867,125)"), function{}()]
  symbol Lbl'Hash'inSignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(SortIValType{}, SortInt{}) : SortBool{} [function{}(), klabel{}("#inSignedRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(225,21,225,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)")]
  symbol Lbl'Hash'inUnsignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(SortIValType{}, SortInt{}) : SortBool{} [function{}(), klabel{}("#inUnsignedRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(224,21,224,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)")]
  symbol Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(SortInt{}, SortInt{}, SortMap{}, SortMap{}, SortElemSegment{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("#initElements"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1219,25,1219,73)"), injective{}()]
  symbol Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(SortInt{}, SortValTypes{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(428,22,428,50)"), injective{}()]
  symbol Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(SortInt{}, SortValStack{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(409,22,409,48)"), injective{}()]
  symbol Lbl'Hash'isByte'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'KItem{}(SortKItem{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), smtlib{}("isByte"), klabel{}("#isByte"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(251,21,251,81)"), function{}()]
  symbol Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(SortByteMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), smtlib{}("isByteMap"), klabel{}("#isByteMap"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(250,21,250,84)"), function{}()]
  symbol Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(SortFloat{}) : SortBool{} [function{}(), klabel{}("#isInfinityOrNaN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,21,63,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)")]
  symbol Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(SortElemSegment{}) : SortInt{} [function{}(), klabel{}("#lenElemSegment"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(87,22,87,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'lengthDataPages'LParUndsRParUnds'WASM'Unds'Int'Unds'DataString{}(SortDataString{}) : SortInt{} [function{}(), klabel{}("#lengthDataPages"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1281,20,1281,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  symbol Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(SortInt{}, SortOptionalInt{}, SortLimits{}) : SortBool{} [function{}(), klabel{}("#limitsMatchImport"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1446,21,1446,75)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  symbol Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}() : SortInt{} [function{}(), klabel{}("#maxMemorySize"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1186,20,1186,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  symbol Lbl'Hash'maxTableSize'LParRParUnds'WASM'Unds'Int{}() : SortInt{} [function{}(), klabel{}("#maxTableSize"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1187,20,1187,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  symbol Lbl'Hash'minSigned'LParUndsRParUnds'KWASM-LEMMAS'Unds'Int'Unds'IValType{}(SortIValType{}) : SortInt{} [function{}(), klabel{}("#minSigned"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(230,20,230,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)")]
  symbol Lbl'Hash'minWidth'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [function{}(), klabel{}("#minWidth"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,20,43,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)")]
  symbol Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(SortIValType{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), smtlib{}("numBytes"), klabel{}("#numBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(189,20,189,82)"), function{}()]
  symbol Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}() : SortInt{} [function{}(), klabel{}("#pageSize"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1185,20,1185,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  symbol Lbl'Hash'parseWasmInt'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [function{}(), klabel{}("#parseWasmInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(214,23,214,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  hooked-symbol Lbl'Hash'parseWasmIntToken'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'WasmIntToken{}(SortWasmIntToken{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#parseWasmIntToken"), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(213,23,213,107)"), function{}()]
  hooked-symbol Lbl'Hash'parseWasmString'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'WasmStringToken{}(SortWasmStringToken{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#parseWasmString"), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(461,32,461,119)"), function{}()]
  symbol Lbl'Hash'popcnt'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [function{}(), klabel{}("#popcnt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,20,45,47)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)")]
  symbol Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(SortIValType{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), smtlib{}("pow "), klabel{}("#pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(200,20,200,74)"), function{}()]
  symbol Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(SortIValType{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), smtlib{}("pow1"), klabel{}("#pow1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(201,20,201,74)"), function{}()]
  symbol Lbl'Hash'reverse'LParUndsCommUndsRParUnds'WASM'Unds'Defns'Unds'Defns'Unds'Defns{}(SortDefns{}, SortDefns{}) : SortDefns{} [function{}(), klabel{}("#reverse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1498,22,1498,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  symbol Lbl'Hash'revs'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack{}(SortValStack{}) : SortValStack{} [function{}(), klabel{}("#revs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(355,25,355,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(SortValStack{}, SortValStack{}) : SortValStack{} [function{}(), klabel{}("#revsAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(356,25,356,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'revt'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(SortValTypes{}) : SortValTypes{} [function{}(), klabel{}("#revt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(174,25,174,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(SortValTypes{}, SortValTypes{}) : SortValTypes{} [function{}(), klabel{}("#revtAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(175,25,175,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(SortFValType{}, SortNumber{}) : SortFVal{} [function{}(), klabel{}("#round"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(288,21,288,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(SortMap{}, SortOptionalId{}, SortInt{}) : SortMap{} [function{}(), klabel{}("#saveId"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(48,20,48,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'set'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int{}(SortByteMap{}, SortInt{}, SortInt{}) : SortByteMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), smtlib{}("mapSet"), klabel{}("#set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(530,24,530,75)"), function{}()]
  symbol Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(SortByteMap{}, SortInt{}, SortInt{}, SortInt{}) : SortByteMap{} [function{}(), klabel{}("#setRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(505,24,505,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(SortIValType{}, SortInt{}) : SortInt{} [function{}(), klabel{}("#signed"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(303,20,303,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), klabel{}("#signedWidth"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(305,20,305,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(SortDefns{}, SortModuleDecl{}) : SortModuleDecl{} [function{}(), klabel{}("#sortModule"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1475,27,1475,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  symbol Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes'Unds'ValStack{}(SortValTypes{}, SortValStack{}) : SortValStack{} [function{}(), klabel{}("#take"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(353,25,353,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  hooked-symbol Lbl'Hash'unparseWasmString'LParUndsRParUnds'WASM-DATA'Unds'WasmStringToken'Unds'String{}(SortString{}) : SortWasmStringToken{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#unparseWasmString"), hook{}("STRING.string2token"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(462,32,462,119)"), function{}()]
  symbol Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(SortIValType{}, SortInt{}) : SortInt{} [function{}(), klabel{}("#unsigned"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(304,20,304,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(SortIValType{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("#width"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(188,20,188,64)"), function{}()]
  symbol Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), klabel{}("#wrap"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(277,21,277,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Hash'wrc20Body'Unds'WRC20'Unds'Defns{}() : SortDefns{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(407,26,407,37)"), injective{}()]
  symbol Lbl'Hash'wrc20Functions'Unds'WRC20'Unds'Defns{}() : SortDefns{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(409,26,409,42)"), injective{}()]
  symbol Lbl'Hash'wrc20Imports'Unds'WRC20'Unds'Defns{}() : SortDefns{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(408,26,408,40)"), injective{}()]
  symbol Lbl'Hash'wrc20ReverseBytesTypeDecls'Unds'WRC20'Unds'TypeDecls{}() : SortTypeDecls{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(411,26,411,54)"), injective{}()]
  symbol Lbl'Hash'wrc20ReverseBytes'Unds'WRC20'Unds'Defns{}() : SortDefns{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(410,26,410,45)"), injective{}()]
  symbol Lbl'Hash'wrc20'Unds'WRC20'Unds'Stmts{}() : SortStmts{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), macro{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(406,26,406,33)"), injective{}()]
  symbol Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(SortValTypes{}) : SortValStack{} [function{}(), klabel{}("#zero"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(352,25,352,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(SortPlainInstr{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), prefer{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(100,28,100,61)"), injective{}()]
  symbol Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(SortPlainInstr{}, SortInstrs{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(99,28,99,52)"), injective{}()]
  symbol Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(109,28,109,70)"), injective{}()]
  symbol Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(SortDataString{}) : SortMemorySpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(212,27,212,51)"), injective{}()]
  symbol Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(SortOffset{}, SortDataString{}) : SortDataDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1255,25,1255,66)"), injective{}()]
  symbol Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(SortIndex{}, SortOffset{}, SortDataString{}) : SortDataDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1254,25,1254,66)"), injective{}()]
  symbol Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(SortOffset{}, SortElemSegment{}) : SortElemDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1217,25,1217,67)"), injective{}()]
  symbol Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(SortIndex{}, SortOffset{}, SortElemSegment{}) : SortElemDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1216,25,1216,67)"), injective{}()]
  symbol Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(SortWasmString{}, SortExternval{}) : SortExportDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1316,27,1316,71)"), injective{}()]
  symbol Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(SortWasmString{}) : SortInlineExport{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(244,30,244,56)"), injective{}()]
  symbol Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(SortOptionalId{}, SortFuncSpec{}) : SortFuncDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(682,25,682,58)"), injective{}()]
  symbol Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(SortOptionalId{}, SortTypeUse{}) : SortImportDesc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("funcImportDesc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1337,27,1337,99)"), injective{}()]
  symbol Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(SortOptionalId{}, SortGlobalSpec{}) : SortGlobalDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(480,27,480,64)"), injective{}()]
  symbol Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(SortOptionalId{}, SortTextFormatGlobalType{}) : SortImportDesc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("globImportDesc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1340,27,1340,99)"), injective{}()]
  symbol Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}, SortInstrs{}, SortInstrs{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(115,28,115,111)"), injective{}()]
  symbol Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}, SortInstrs{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(114,28,114,89)"), injective{}()]
  symbol Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(SortWasmString{}, SortWasmString{}) : SortInlineImport{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(309,29,309,66)"), injective{}()]
  symbol Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(SortWasmString{}, SortWasmString{}, SortImportDesc{}) : SortImportDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1336,27,1336,75)"), injective{}()]
  symbol Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(733,22,733,41)"), injective{}()]
  symbol Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}) : SortFoldedInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(121,28,121,69)"), injective{}()]
  symbol Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(SortOptionalId{}, SortMemType{}) : SortImportDesc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}(" memImportDesc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1339,27,1339,99)"), injective{}()]
  symbol Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(SortOptionalId{}, SortMemorySpec{}) : SortMemoryDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(922,27,922,64)"), injective{}()]
  symbol Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(SortOptionalId{}, SortDefns{}) : SortModuleDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1509,27,1509,59)"), injective{}()]
  symbol Lbl'LPar'mut'UndsRParUnds'WASM'Unds'TextFormatGlobalType'Unds'AValType{}(SortAValType{}) : SortTextFormatGlobalType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(469,48,469,69)"), injective{}()]
  symbol Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(SortInstrs{}) : SortOffset{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1204,23,1204,45)"), injective{}()]
  symbol Lbl'LPar'start'UndsRParUnds'WASM'Unds'StartDefn'Unds'Index{}(SortIndex{}) : SortStartDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1297,26,1297,46)"), injective{}()]
  symbol Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(SortOptionalId{}, SortTableType{}) : SortImportDesc{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}(" tabImportDesc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1338,27,1338,99)"), injective{}()]
  symbol Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(SortOptionalId{}, SortTableSpec{}) : SortTableDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(867,26,867,65)"), injective{}()]
  symbol Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(SortOptionalId{}, SortTypeDecls{}) : SortTypeDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(606,25,606,71)"), injective{}()]
  symbol Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(SortIndex{}) : SortTypeUse{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), prefer{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(584,24,584,59)"), injective{}()]
  symbol Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(SortIndex{}, SortTypeDecls{}) : SortTypeUse{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(585,24,585,50)"), injective{}()]
  hooked-symbol Lbl--Float'UndsUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), smt-hook{}("fp.neg"), hook{}("FLOAT.neg"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(513,20,513,104)"), function{}()]
  hooked-symbol Lbl'Stop'Bytes'Unds'BYTES-HOOKED'Unds'Bytes{}() : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), hook{}("BYTES.empty"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(687,20,687,69)"), function{}()]
  hooked-symbol Lbl'Stop'FuncDefCellMap{}() : SortFuncDefCellMap{} [hook{}("MAP.unit"), function{}()]
  hooked-symbol Lbl'Stop'GlobalInstCellMap{}() : SortGlobalInstCellMap{} [hook{}("MAP.unit"), function{}()]
  symbol Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}() : SortOptionalInt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(101,34,101,39)"), injective{}()]
  hooked-symbol Lbl'Stop'List{}() : SortList{} [latex{}("\\dotCt{List}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), smtlib{}("smt_seq_nil"), klabel{}(".List"), hook{}("LIST.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(269,19,269,146)"), function{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString'QuotRBraUnds'DataString{}() : SortDataString{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}(".List{\"listWasmString\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(463,32,463,94)"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}() : SortElemSegment{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}(".List{\"listIndex\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,28,84,62)"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}() : SortValTypes{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}(".List{\"listValTypes\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(129,25,129,64)"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}() : SortDefns{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), anywhere{}(), klabel{}(".List{\"listStmt\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(142,27,142,65)"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}() : SortEmptyStmts{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}(".List{\"listStmt\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(140,27,140,65)"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}() : SortInstrs{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), anywhere{}(), klabel{}(".List{\"listStmt\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(141,27,141,65)"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}() : SortLocalDecls{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}(".List{\"listLocalDecl\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(628,27,628,77)"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}() : SortStmts{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), anywhere{}(), klabel{}(".List{\"listStmt\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(143,27,143,65)"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}() : SortTypeDecls{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}(".List{\"listTypeDecl\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(560,26,560,67)"), injective{}()]
  hooked-symbol Lbl'Stop'Map{}() : SortMap{} [latex{}("\\dotCt{Map}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}(".Map"), hook{}("MAP.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(108,18,108,128)"), function{}()]
  hooked-symbol Lbl'Stop'MemInstCellMap{}() : SortMemInstCellMap{} [hook{}("MAP.unit"), function{}()]
  hooked-symbol Lbl'Stop'ModuleInstCellMap{}() : SortModuleInstCellMap{} [hook{}("MAP.unit"), function{}()]
  symbol Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}() : SortMut{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(225,20,225,25)"), injective{}()]
  hooked-symbol Lbl'Stop'Set{}() : SortSet{} [latex{}("\\dotCt{Set}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}(".Set"), hook{}("SET.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(198,18,198,122)"), function{}()]
  hooked-symbol Lbl'Stop'TabInstCellMap{}() : SortTabInstCellMap{} [hook{}("MAP.unit"), function{}()]
  symbol Lbl'Stop'Type'Unds'WASM-DATA'Unds'Type{}() : SortType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(158,21,158,27)"), injective{}()]
  symbol Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}() : SortValStack{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(338,25,338,35)"), injective{}()]
  symbol Lbl'Stop'WasmString'Unds'WASM-DATA'Unds'WasmString{}() : SortWasmString{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(457,27,457,39)"), injective{}()]
  symbol Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(SortFValType{}, SortFloat{}) : SortFVal{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("<_>_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(254,21,254,58)"), injective{}()]
  symbol Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(SortIValType{}, SortInt{}) : SortIVal{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}("<_>_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(253,21,253,58)"), injective{}()]
  symbol Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(SortAValType{}, SortNumber{}) : SortVal{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), anywhere{}(), klabel{}("<_>_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(255,21,255,58)"), injective{}()]
  symbol Lbl'-LT-'curFrame'-GT-'{}(SortLocalsCell{}, SortLocalIdsCell{}, SortCurModIdxCell{}, SortLabelDepthCell{}, SortLabelIdsCell{}) : SortCurFrameCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("curFrame"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%n%3%n%4%n%5%n%6%d%n%7"), injective{}(), cell{}()]
  symbol Lbl'-LT-'curFrame'-GT-'-fragment{}(SortLocalsCellOpt{}, SortLocalIdsCellOpt{}, SortCurModIdxCellOpt{}, SortLabelDepthCellOpt{}, SortLabelIdsCellOpt{}) : SortCurFrameCellFragment{} [cellFragment{}("CurFrameCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'curModIdx'-GT-'{}(SortOptionalInt{}) : SortCurModIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("curModIdx"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(SortBool{}) : SortDeterministicMemoryGrowthCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("deterministicMemoryGrowth"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'exports'-GT-'{}(SortMap{}) : SortExportsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("exports"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'fAddr'-GT-'{}(SortInt{}) : SortFAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("fAddr"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'fCode'-GT-'{}(SortInstrs{}) : SortFCodeCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("fCode"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'fLocal'-GT-'{}(SortType{}) : SortFLocalCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("fLocal"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'fModInst'-GT-'{}(SortInt{}) : SortFModInstCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("fModInst"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'fType'-GT-'{}(SortType{}) : SortFTypeCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("fType"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcAddrs'-GT-'{}(SortMap{}) : SortFuncAddrsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("funcAddrs"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcDef'-GT-'{}(SortFAddrCell{}, SortFCodeCell{}, SortFTypeCell{}, SortFLocalCell{}, SortFModInstCell{}) : SortFuncDefCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("funcDef"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), type{}("Map"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%n%3%n%4%n%5%n%6%d%n%7"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcDef'-GT-'-fragment{}(SortFAddrCellOpt{}, SortFCodeCellOpt{}, SortFTypeCellOpt{}, SortFLocalCellOpt{}, SortFModInstCellOpt{}) : SortFuncDefCellFragment{} [cellFragment{}("FuncDefCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'funcIds'-GT-'{}(SortMap{}) : SortFuncIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("funcIds"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcs'-GT-'{}(SortFuncDefCellMap{}) : SortFuncsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("funcs"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'funcs'-GT-'-fragment{}(SortFuncDefCellMap{}) : SortFuncsCellFragment{} [cellFragment{}("FuncsCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'gAddr'-GT-'{}(SortInt{}) : SortGAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("gAddr"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'gMut'-GT-'{}(SortMut{}) : SortGMutCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("gMut"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'gValue'-GT-'{}(SortVal{}) : SortGValueCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("gValue"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'generatedCounter'-GT-'{}(SortInt{}) : SortGeneratedCounterCell{} [functional{}(), constructor{}(), cellName{}("generatedCounter"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'{}(SortWasmCell{}, SortGeneratedCounterCell{}) : SortGeneratedTopCell{} [functional{}(), constructor{}(), cellName{}("generatedTop"), format{}("%2"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'-fragment{}(SortWasmCellOpt{}, SortGeneratedCounterCellOpt{}) : SortGeneratedTopCellFragment{} [cellFragment{}("GeneratedTopCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'globIds'-GT-'{}(SortMap{}) : SortGlobIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("globIds"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'globalAddrs'-GT-'{}(SortMap{}) : SortGlobalAddrsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("globalAddrs"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'globalInst'-GT-'{}(SortGAddrCell{}, SortGValueCell{}, SortGMutCell{}) : SortGlobalInstCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("globalInst"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), type{}("Map"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%n%3%n%4%d%n%5"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'globalInst'-GT-'-fragment{}(SortGAddrCellOpt{}, SortGValueCellOpt{}, SortGMutCellOpt{}) : SortGlobalInstCellFragment{} [cellFragment{}("GlobalInstCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'globals'-GT-'{}(SortGlobalInstCellMap{}) : SortGlobalsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("globals"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'globals'-GT-'-fragment{}(SortGlobalInstCellMap{}) : SortGlobalsCellFragment{} [cellFragment{}("GlobalsCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'k'-GT-'{}(SortK{}) : SortKCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("k"), maincell{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'labelDepth'-GT-'{}(SortInt{}) : SortLabelDepthCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("labelDepth"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'labelIds'-GT-'{}(SortMap{}) : SortLabelIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("labelIds"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'localIds'-GT-'{}(SortMap{}) : SortLocalIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("localIds"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'locals'-GT-'{}(SortMap{}) : SortLocalsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("locals"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'mAddr'-GT-'{}(SortInt{}) : SortMAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("mAddr"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'mainStore'-GT-'{}(SortFuncsCell{}, SortNextFuncAddrCell{}, SortTabsCell{}, SortNextTabAddrCell{}, SortMemsCell{}, SortNextMemAddrCell{}, SortGlobalsCell{}, SortNextGlobAddrCell{}) : SortMainStoreCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("mainStore"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%n%3%n%4%n%5%n%6%n%7%n%8%n%9%d%n%10"), injective{}(), cell{}()]
  symbol Lbl'-LT-'mainStore'-GT-'-fragment{}(SortFuncsCellOpt{}, SortNextFuncAddrCellOpt{}, SortTabsCellOpt{}, SortNextTabAddrCellOpt{}, SortMemsCellOpt{}, SortNextMemAddrCellOpt{}, SortGlobalsCellOpt{}, SortNextGlobAddrCellOpt{}) : SortMainStoreCellFragment{} [cellFragment{}("MainStoreCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'mdata'-GT-'{}(SortByteMap{}) : SortMdataCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("mdata"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'memAddrs'-GT-'{}(SortMap{}) : SortMemAddrsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("memAddrs"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'memIds'-GT-'{}(SortMap{}) : SortMemIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("memIds"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'memInst'-GT-'{}(SortMAddrCell{}, SortMmaxCell{}, SortMsizeCell{}, SortMdataCell{}) : SortMemInstCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("memInst"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), type{}("Map"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%n%3%n%4%n%5%d%n%6"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'memInst'-GT-'-fragment{}(SortMAddrCellOpt{}, SortMmaxCellOpt{}, SortMsizeCellOpt{}, SortMdataCellOpt{}) : SortMemInstCellFragment{} [cellFragment{}("MemInstCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'mems'-GT-'{}(SortMemInstCellMap{}) : SortMemsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("mems"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'mems'-GT-'-fragment{}(SortMemInstCellMap{}) : SortMemsCellFragment{} [cellFragment{}("MemsCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'mmax'-GT-'{}(SortOptionalInt{}) : SortMmaxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("mmax"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'modIdx'-GT-'{}(SortInt{}) : SortModIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("modIdx"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'moduleIds'-GT-'{}(SortMap{}) : SortModuleIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("moduleIds"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'moduleInst'-GT-'{}(SortModIdxCell{}, SortExportsCell{}, SortTypeIdsCell{}, SortTypesCell{}, SortNextTypeIdxCell{}, SortFuncIdsCell{}, SortFuncAddrsCell{}, SortNextFuncIdxCell{}, SortTabIdsCell{}, SortTabAddrsCell{}, SortMemIdsCell{}, SortMemAddrsCell{}, SortGlobIdsCell{}, SortGlobalAddrsCell{}, SortNextGlobIdxCell{}) : SortModuleInstCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("moduleInst"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), type{}("Map"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%n%3%n%4%n%5%n%6%n%7%n%8%n%9%n%10%n%11%n%12%n%13%n%14%n%15%n%16%d%n%17"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'moduleInst'-GT-'-fragment{}(SortModIdxCellOpt{}, SortExportsCellOpt{}, SortTypeIdsCellOpt{}, SortTypesCellOpt{}, SortNextTypeIdxCellOpt{}, SortFuncIdsCellOpt{}, SortFuncAddrsCellOpt{}, SortNextFuncIdxCellOpt{}, SortTabIdsCellOpt{}, SortTabAddrsCellOpt{}, SortMemIdsCellOpt{}, SortMemAddrsCellOpt{}, SortGlobIdsCellOpt{}, SortGlobalAddrsCellOpt{}, SortNextGlobIdxCellOpt{}) : SortModuleInstCellFragment{} [cellFragment{}("ModuleInstCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'moduleInstances'-GT-'{}(SortModuleInstCellMap{}) : SortModuleInstancesCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("moduleInstances"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'moduleInstances'-GT-'-fragment{}(SortModuleInstCellMap{}) : SortModuleInstancesCellFragment{} [cellFragment{}("ModuleInstancesCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'moduleRegistry'-GT-'{}(SortMap{}) : SortModuleRegistryCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("moduleRegistry"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'msize'-GT-'{}(SortInt{}) : SortMsizeCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("msize"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextFreshId'-GT-'{}(SortInt{}) : SortNextFreshIdCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextFreshId"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextFuncAddr'-GT-'{}(SortInt{}) : SortNextFuncAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextFuncAddr"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextFuncIdx'-GT-'{}(SortInt{}) : SortNextFuncIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextFuncIdx"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextGlobAddr'-GT-'{}(SortInt{}) : SortNextGlobAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextGlobAddr"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextGlobIdx'-GT-'{}(SortInt{}) : SortNextGlobIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextGlobIdx"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextMemAddr'-GT-'{}(SortInt{}) : SortNextMemAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextMemAddr"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextModuleIdx'-GT-'{}(SortInt{}) : SortNextModuleIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextModuleIdx"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextTabAddr'-GT-'{}(SortInt{}) : SortNextTabAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextTabAddr"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'nextTypeIdx'-GT-'{}(SortInt{}) : SortNextTypeIdxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("nextTypeIdx"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tAddr'-GT-'{}(SortInt{}) : SortTAddrCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("tAddr"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tabAddrs'-GT-'{}(SortMap{}) : SortTabAddrsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("tabAddrs"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tabIds'-GT-'{}(SortMap{}) : SortTabIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("tabIds"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tabInst'-GT-'{}(SortTAddrCell{}, SortTmaxCell{}, SortTsizeCell{}, SortTdataCell{}) : SortTabInstCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("tabInst"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), type{}("Map"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%n%3%n%4%n%5%d%n%6"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tabInst'-GT-'-fragment{}(SortTAddrCellOpt{}, SortTmaxCellOpt{}, SortTsizeCellOpt{}, SortTdataCellOpt{}) : SortTabInstCellFragment{} [cellFragment{}("TabInstCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'tabs'-GT-'{}(SortTabInstCellMap{}) : SortTabsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("tabs"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tabs'-GT-'-fragment{}(SortTabInstCellMap{}) : SortTabsCellFragment{} [cellFragment{}("TabsCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'tdata'-GT-'{}(SortMap{}) : SortTdataCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("tdata"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tmax'-GT-'{}(SortOptionalInt{}) : SortTmaxCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("tmax"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tsize'-GT-'{}(SortInt{}) : SortTsizeCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("tsize"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'typeIds'-GT-'{}(SortMap{}) : SortTypeIdsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("typeIds"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'types'-GT-'{}(SortMap{}) : SortTypesCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("types"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'valstack'-GT-'{}(SortValStack{}) : SortValstackCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("valstack"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'wasm'-GT-'{}(SortKCell{}, SortValstackCell{}, SortCurFrameCell{}, SortModuleRegistryCell{}, SortModuleIdsCell{}, SortModuleInstancesCell{}, SortNextModuleIdxCell{}, SortMainStoreCell{}, SortDeterministicMemoryGrowthCell{}, SortNextFreshIdCell{}) : SortWasmCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), cellName{}("wasm"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("18"), contentStartColumn{}("7"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,7,90,14)"), format{}("%1%i%n%2%n%3%n%4%n%5%n%6%n%7%n%8%n%9%n%10%n%11%d%n%12"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'wasm'-GT-'-fragment{}(SortKCellOpt{}, SortValstackCellOpt{}, SortCurFrameCellOpt{}, SortModuleRegistryCellOpt{}, SortModuleIdsCellOpt{}, SortModuleInstancesCellOpt{}, SortNextModuleIdxCellOpt{}, SortMainStoreCellOpt{}, SortDeterministicMemoryGrowthCellOpt{}, SortNextFreshIdCellOpt{}) : SortWasmCellFragment{} [cellFragment{}("WasmCell"), constructor{}(), functional{}(), injective{}()]
  hooked-symbol LblBase2String'LParUndsCommUndsRParUnds'STRING'Unds'String'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("Base2String"), hook{}("STRING.base2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(600,21,600,92)"), function{}()]
  symbol LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(SortMap{}) : SortByteMap{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(498,24,498,46)"), injective{}()]
  hooked-symbol LblBytes2Int'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes'Unds'Endianness'Unds'Signedness{}(SortBytes{}, SortEndianness{}, SortSignedness{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("Bytes2Int"), hook{}("BYTES.bytes2int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(692,18,692,103)"), function{}()]
  hooked-symbol LblBytes2String'LParUndsRParUnds'BYTES-HOOKED'Unds'String'Unds'Bytes{}(SortBytes{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("Bytes2String"), hook{}("BYTES.bytes2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(695,21,695,88)"), function{}()]
  hooked-symbol LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(SortFloat{}) : SortInt{} [latex{}("{\\\\it{}Float2Int}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("Float2Int"), hook{}("FLOAT.float2int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(554,18,554,108)"), function{}()]
  hooked-symbol LblFloat2String'LParUndsRParUnds'STRING'Unds'String'Unds'Float{}(SortFloat{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("Float2String"), hook{}("STRING.float2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(595,21,595,105)"), function{}()]
  hooked-symbol LblFloat2String'LParUndsCommUndsRParUnds'STRING'Unds'String'Unds'Float'Unds'String{}(SortFloat{}, SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("FloatFormat"), hook{}("STRING.floatFormat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(596,21,596,113)"), function{}()]
  hooked-symbol LblFuncDefCellMapItem{}(SortFAddrCell{}, SortFuncDefCell{}) : SortFuncDefCellMap{} [hook{}("MAP.element"), function{}(), format{}("%5")]
  hooked-symbol LblGlobalInstCellMapItem{}(SortGAddrCell{}, SortGlobalInstCell{}) : SortGlobalInstCellMap{} [hook{}("MAP.element"), function{}(), format{}("%5")]
  symbol LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(SortInt{}, SortEndianness{}, SortSignedness{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("Int2BytesNoLen"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(694,20,694,104)"), function{}()]
  hooked-symbol LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(SortInt{}, SortInt{}, SortEndianness{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("Int2Bytes"), hook{}("BYTES.int2bytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(693,20,693,96)"), function{}()]
  hooked-symbol LblInt2Float'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortFloat{} [latex{}("{\\\\it{}Int2Float}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("Int2Float"), hook{}("FLOAT.int2float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(553,20,553,106)"), function{}()]
  hooked-symbol LblInt2String'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("Int2String"), hook{}("STRING.int2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(599,21,599,103)"), function{}()]
  hooked-symbol LblList'Coln'get{}(SortList{}, SortInt{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("List:get"), hook{}("LIST.get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(277,20,277,98)"), function{}()]
  hooked-symbol LblList'Coln'range{}(SortList{}, SortInt{}, SortInt{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("List:range"), hook{}("LIST.range"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(288,19,288,98)"), function{}()]
  hooked-symbol LblListItem{}(SortKItem{}) : SortList{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), smtlib{}("smt_seq_elem"), klabel{}("ListItem"), hook{}("LIST.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(272,19,272,136)"), function{}()]
  hooked-symbol LblMap'Coln'lookup{}(SortMap{}, SortKItem{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("Map:lookup"), hook{}("MAP.lookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(119,20,119,112)"), function{}()]
  hooked-symbol LblMap'Coln'update{}(SortMap{}, SortKItem{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), prefer{}(), klabel{}("Map:update"), hook{}("MAP.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(124,18,124,132)"), function{}()]
  hooked-symbol LblMemInstCellMapItem{}(SortMAddrCell{}, SortMemInstCell{}) : SortMemInstCellMap{} [hook{}("MAP.element"), function{}(), format{}("%5")]
  hooked-symbol LblModuleInstCellMapItem{}(SortModIdxCell{}, SortModuleInstCell{}) : SortModuleInstCellMap{} [hook{}("MAP.element"), function{}(), format{}("%5")]
  hooked-symbol LblSet'Coln'difference{}(SortSet{}, SortSet{}) : SortSet{} [latex{}("{#1}-_{\\it Set}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("Set:difference"), hook{}("SET.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(209,18,209,146)"), function{}()]
  hooked-symbol LblSet'Coln'in{}(SortKItem{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("Set:in"), hook{}("SET.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(212,19,212,106)"), function{}()]
  hooked-symbol LblSetItem{}(SortKItem{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("SetItem"), hook{}("SET.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(203,18,203,112)"), function{}()]
  hooked-symbol LblString2Base'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'Int{}(SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("String2Base"), hook{}("STRING.string2base"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(601,21,601,92)"), function{}()]
  hooked-symbol LblString2Bytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'String{}(SortString{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("String2Bytes"), hook{}("BYTES.string2bytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(696,20,696,88)"), function{}()]
  hooked-symbol LblString2Float'LParUndsRParUnds'STRING'Unds'Float'Unds'String{}(SortString{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("String2Float"), hook{}("STRING.string2float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(597,21,597,93)"), function{}()]
  hooked-symbol LblString2Identifier'LParUndsRParUnds'WASM-TEXT'Unds'IdentifierToken'Unds'String{}(SortString{}) : SortIdentifierToken{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), klabel{}("String2Identifier"), hook{}("STRING.string2token"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(132,32,132,106)"), function{}()]
  hooked-symbol LblString2Int'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("String2Int"), hook{}("STRING.string2int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(598,21,598,91)"), function{}()]
  hooked-symbol LblTabInstCellMapItem{}(SortTAddrCell{}, SortTabInstCell{}) : SortTabInstCellMap{} [hook{}("MAP.element"), function{}(), format{}("%5")]
  symbol Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(SortValTypes{}) : SortVecType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(130,25,130,40)"), injective{}()]
  hooked-symbol Lbl'UndsPerc'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}\\mathrel{\\%_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), smt-hook{}("(fp.rem roundNearestTiesToEven #1 #2)"), hook{}("FLOAT.rem"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(518,20,518,182)"), function{}()]
  hooked-symbol Lbl'UndsPerc'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\%_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("mod"), klabel{}("_%Int_"), hook{}("INT.tmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(385,18,385,170)"), function{}()]
  hooked-symbol Lbl'UndsAnd-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\&_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("andInt"), klabel{}("_&Int_"), hook{}("INT.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(396,18,396,182)"), function{}()]
  symbol Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(SortTableElemType{}, SortElemSegment{}) : SortTableSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(224,26,224,65)"), injective{}()]
  hooked-symbol Lbl'UndsStar'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}\\mathrel{\\ast_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), smt-hook{}("(fp.mul roundNearestTiesToEven #1 #2)"), hook{}("FLOAT.mul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(516,20,516,184)"), function{}()]
  hooked-symbol Lbl'UndsStar'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ast_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("*"), klabel{}("_*Int_"), hook{}("INT.mul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(381,18,381,181)"), function{}()]
  symbol Lbl'UndsPlusPlus'Defns'UndsUnds'WRC20'Unds'Defns'Unds'Defns'Unds'Defns{}(SortDefns{}, SortDefns{}) : SortDefns{} [functional{}(), function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(629,22,629,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)")]
  symbol Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(SortValStack{}, SortValStack{}) : SortValStack{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(340,22,340,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  hooked-symbol Lbl'UndsPlus'Bytes'UndsUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Bytes{}(SortBytes{}, SortBytes{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), right{}(), hook{}("BYTES.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(708,20,708,89)"), function{}()]
  hooked-symbol Lbl'UndsPlus'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}\\mathrel{+_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), smt-hook{}("(fp.add roundNearestTiesToEven #1 #2)"), hook{}("FLOAT.add"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(520,20,520,181)"), function{}()]
  hooked-symbol Lbl'UndsPlus'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{+_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("+"), klabel{}("_+Int_"), hook{}("INT.add"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(390,18,390,178)"), function{}()]
  hooked-symbol Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortString{} [latex{}("{#1}+_{\\scriptstyle\\it String}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), hook{}("STRING.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(581,21,581,139)"), function{}()]
  symbol Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(SortValTypes{}, SortValTypes{}) : SortValTypes{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(165,25,165,56)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(SortVecType{}, SortVecType{}) : SortFuncType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(133,25,133,44)"), injective{}()]
  hooked-symbol Lbl'Unds'-Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}\\mathrel{-_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), smt-hook{}("(fp.sub roundNearestTiesToEven #1 #2)"), hook{}("FLOAT.sub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(521,20,521,181)"), function{}()]
  hooked-symbol Lbl'Unds'-Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{-_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("-"), klabel{}("_-Int_"), hook{}("INT.sub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(391,18,391,178)"), function{}()]
  hooked-symbol Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [latex{}("{#1}-_{\\it Map}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), hook{}("MAP.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(131,18,131,120)"), function{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(SortAValType{}, SortCvtOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(265,27,265,44)"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(SortFValType{}, SortFBinOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(227,27,227,45)"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(SortFValType{}, SortFRelOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(252,27,252,45)"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(SortFValType{}, SortFUnOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(213,27,213,44)"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(SortFValType{}, SortLoadOpM{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1030,27,1030,46)"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(SortFValType{}, SortStoreOpM{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(973,27,973,48)"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(SortIValType{}, SortIBinOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(226,27,226,45)"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(SortIValType{}, SortIRelOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(251,27,251,45)"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(SortIValType{}, SortIUnOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(212,27,212,44)"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(SortIValType{}, SortLoadOpM{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1029,27,1029,46)"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(SortIValType{}, SortStoreOpM{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(972,27,972,48)"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(SortIValType{}, SortTestOp{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(240,27,240,45)"), injective{}()]
  symbol Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(SortAValType{}, SortCvtOp{}, SortNumber{}) : SortVal{} [function{}(), klabel{}("numberCvtOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,20,341,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)")]
  symbol Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(SortFValType{}, SortFUnOp{}, SortFloat{}) : SortVal{} [function{}(), klabel{}("floatUnOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,20,22,73)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)")]
  symbol Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IUnOp'Unds'Int{}(SortIValType{}, SortIUnOp{}, SortInt{}) : SortVal{} [function{}(), klabel{}("intUnOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,20,21,73)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)")]
  symbol Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'TestOp'Unds'Int{}(SortIValType{}, SortTestOp{}, SortInt{}) : SortVal{} [function{}(), klabel{}("intTestOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(244,20,244,72)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)")]
  symbol Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(SortIValType{}, SortLoadOp{}, SortInt{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1031,27,1031,49)"), injective{}()]
  symbol Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(SortFValType{}, SortFBinOp{}, SortFloat{}, SortFloat{}) : SortVal{} [function{}(), klabel{}("floatBinOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(106,20,106,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)")]
  symbol Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(SortFValType{}, SortFRelOp{}, SortFloat{}, SortFloat{}) : SortVal{} [function{}(), klabel{}("floatRelOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(264,20,264,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)")]
  symbol Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(SortIValType{}, SortIBinOp{}, SortInt{}, SortInt{}) : SortVal{} [function{}(), klabel{}("intBinOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(105,20,105,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)")]
  symbol Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(SortIValType{}, SortIRelOp{}, SortInt{}, SortInt{}) : SortVal{} [function{}(), klabel{}("intRelOp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(263,20,263,81)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)")]
  symbol Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(SortIValType{}, SortStoreOp{}, SortInt{}, SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(967,22,967,49)"), injective{}()]
  symbol Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(SortFValType{}, SortNumber{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(200,27,200,53)"), injective{}()]
  symbol Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(SortIValType{}, SortInt{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(199,27,199,50)"), injective{}()]
  hooked-symbol Lbl'UndsSlsh'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}\\mathrel{\\div_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), smt-hook{}("(fp.div roundNearestTiesToEven #1 #2)"), hook{}("FLOAT.div"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(517,20,517,184)"), function{}()]
  hooked-symbol Lbl'UndsSlsh'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\div_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("div"), klabel{}("_/Int_"), hook{}("INT.tdiv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(384,18,384,172)"), function{}()]
  symbol Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(SortVal{}, SortValStack{}) : SortValStack{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(339,22,339,43)"), injective{}()]
  hooked-symbol Lbl'Unds-LT--LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ll_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("shlInt"), klabel{}("_<<Int_"), hook{}("INT.shl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(394,18,394,172)"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{\\leq_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), smt-hook{}("fp.leq"), hook{}("FLOAT.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(543,19,543,151)"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\leq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("<="), klabel{}("_<=Int_"), hook{}("INT.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(410,19,410,176)"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), hook{}("MAP.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(154,19,154,91)"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), hook{}("SET.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(215,19,215,85)"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), hook{}("STRING.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(614,19,614,82)"), function{}()]
  hooked-symbol Lbl'Unds-LT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{<_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), smt-hook{}("fp.lt"), hook{}("FLOAT.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(544,19,544,147)"), function{}()]
  hooked-symbol Lbl'Unds-LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{<_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("<"), klabel{}("_<Int_"), hook{}("INT.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(411,19,411,171)"), function{}()]
  hooked-symbol Lbl'Unds-LT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), hook{}("STRING.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(613,19,613,82)"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("distinct"), klabel{}("_=/=Bool_"), hook{}("BOOL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(325,19,325,132)"), function{}()]
  symbol Lbl'UndsEqlsSlshEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{\\neq_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), smt-hook{}("(not (fp.eq #1 #2))"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(548,19,548,148)"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{/}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("distinct"), klabel{}("_=/=Int_"), hook{}("INT.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(415,19,415,188)"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{\\neq_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), notEqualEqualK{}(), smt-hook{}("distinct"), klabel{}("_=/=K_"), hook{}("KEQUAL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(860,19,860,170)"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), hook{}("STRING.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(609,19,609,94)"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("="), klabel{}("_==Bool_"), hook{}("BOOL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,19,324,124)"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{==_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), smt-hook{}("fp.eq"), klabel{}("_==Float_"), hook{}("FLOAT.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(547,19,547,167)"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("="), klabel{}("_==Int_"), hook{}("INT.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(414,19,414,177)"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{=_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), smt-hook{}("="), equalEqualK{}(), klabel{}("_==K_"), hook{}("KEQUAL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(859,19,859,156)"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), hook{}("STRING.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(583,19,583,88)"), function{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{\\geq_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), smt-hook{}("fp.geq"), hook{}("FLOAT.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(545,19,545,151)"), function{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\geq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}(">="), klabel{}("_>=Int_"), hook{}("INT.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(412,19,412,176)"), function{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), hook{}("STRING.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(616,19,616,82)"), function{}()]
  hooked-symbol Lbl'Unds-GT--GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\gg_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("shrInt"), klabel{}("_>>Int_"), hook{}("INT.shr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(393,18,393,172)"), function{}()]
  hooked-symbol Lbl'Unds-GT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortBool{} [latex{}("{#1}\\mathrel{>_{\\scriptstyle\\it Float}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), smt-hook{}("fg.gt"), hook{}("FLOAT.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(546,19,546,147)"), function{}()]
  hooked-symbol Lbl'Unds-GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{>_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}(">"), klabel{}("_>Int_"), hook{}("INT.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(413,19,413,171)"), function{}()]
  hooked-symbol Lbl'Unds-GT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), hook{}("STRING.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(615,19,615,82)"), function{}()]
  hooked-symbol Lbl'Unds'FuncDefCellMap'Unds'{}(SortFuncDefCellMap{}, SortFuncDefCellMap{}) : SortFuncDefCellMap{} [unit{}(".FuncDefCellMap"), element{}("FuncDefCellMapItem"), comm{}(), cellCollection{}(), assoc{}(), hook{}("MAP.concat"), avoid{}(), function{}(), wrapElement{}("<funcDef>")]
  hooked-symbol Lbl'Unds'GlobalInstCellMap'Unds'{}(SortGlobalInstCellMap{}, SortGlobalInstCellMap{}) : SortGlobalInstCellMap{} [unit{}(".GlobalInstCellMap"), element{}("GlobalInstCellMapItem"), comm{}(), cellCollection{}(), assoc{}(), hook{}("MAP.concat"), avoid{}(), function{}(), wrapElement{}("<globalInst>")]
  hooked-symbol Lbl'Unds'List'Unds'{}(SortList{}, SortList{}) : SortList{} [unit{}(".List"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), element{}("ListItem"), symbol'Kywd'{}(), assoc{}(), smtlib{}("smt_seq_concat"), klabel{}("_List_"), hook{}("LIST.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(267,19,267,192)"), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'Map'Unds'{}(SortMap{}, SortMap{}) : SortMap{} [unit{}(".Map"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), element{}("_|->_"), symbol'Kywd'{}(), comm{}(), assoc{}(), index{}("0"), klabel{}("_Map_"), hook{}("MAP.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(106,18,106,172)"), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'MemInstCellMap'Unds'{}(SortMemInstCellMap{}, SortMemInstCellMap{}) : SortMemInstCellMap{} [unit{}(".MemInstCellMap"), element{}("MemInstCellMapItem"), comm{}(), cellCollection{}(), assoc{}(), hook{}("MAP.concat"), avoid{}(), function{}(), wrapElement{}("<memInst>")]
  hooked-symbol Lbl'Unds'ModuleInstCellMap'Unds'{}(SortModuleInstCellMap{}, SortModuleInstCellMap{}) : SortModuleInstCellMap{} [unit{}(".ModuleInstCellMap"), element{}("ModuleInstCellMapItem"), comm{}(), cellCollection{}(), assoc{}(), hook{}("MAP.concat"), avoid{}(), function{}(), wrapElement{}("<moduleInst>")]
  hooked-symbol Lbl'Unds'Set'Unds'{}(SortSet{}, SortSet{}) : SortSet{} [unit{}(".Set"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), element{}("SetItem"), symbol'Kywd'{}(), idem{}(), comm{}(), assoc{}(), klabel{}("_Set_"), hook{}("SET.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(196,18,196,176)"), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'TabInstCellMap'Unds'{}(SortTabInstCellMap{}, SortTabInstCellMap{}) : SortTabInstCellMap{} [unit{}(".TabInstCellMap"), element{}("TabInstCellMapItem"), comm{}(), cellCollection{}(), assoc{}(), hook{}("MAP.concat"), avoid{}(), function{}(), wrapElement{}("<tabInst>")]
  symbol Lbl'Unds'WASM-DATA'Unds'OptionalId{}() : SortOptionalId{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), klabel{}(".Identifier"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,27,39,50)"), injective{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(SortBytes{}, SortInt{}, SortInt{}) : SortBytes{} [hook{}("BYTES.update"), function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(698,20,698,76)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)")]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("List:set"), hook{}("LIST.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(279,19,279,93)"), function{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(SortMap{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("_[_<-undef]"), hook{}("MAP.remove"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(127,18,127,121)"), function{}()]
  hooked-symbol Lbl'UndsLSqBUndsRSqBUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes'Unds'Int{}(SortBytes{}, SortInt{}) : SortInt{} [hook{}("BYTES.get"), function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(699,18,699,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)")]
  hooked-symbol Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(SortMap{}, SortKItem{}, SortKItem{}) : SortKItem{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("Map:lookupOrDefault"), hook{}("MAP.lookupOrDefault"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(121,20,121,138)"), function{}()]
  hooked-symbol Lbl'UndsXor-Perc'Int'UndsUnds'{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("(mod (^ #1 #2) #3)"), klabel{}("_^%Int__"), hook{}("INT.powmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(379,18,379,138)"), function{}()]
  hooked-symbol Lbl'UndsXor-'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [latex{}("{#1}^{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), hook{}("FLOAT.pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(514,20,514,98)"), function{}()]
  hooked-symbol Lbl'UndsXor-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{{\\char`\\^}_{\\!\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("^"), klabel{}("_^Int_"), hook{}("INT.pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(378,18,378,177)"), function{}()]
  symbol Lbl'UndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString{}(SortWasmString{}, SortDataString{}) : SortDataString{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), right{}(), klabel{}("listWasmString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(463,32,463,94)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(SortIndex{}, SortElemSegment{}) : SortElemSegment{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), right{}(), klabel{}("listIndex"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,28,84,62)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(SortAllocatedKind{}, SortIndex{}) : SortExternval{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(547,30,547,48)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortLimits{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(234,29,234,35)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(SortValType{}, SortValTypes{}) : SortValTypes{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), right{}(), klabel{}("listValTypes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(129,25,129,64)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(SortInlineExport{}, SortFuncSpec{}) : SortFuncSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(261,27,261,47)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(SortInlineImport{}, SortTypeUse{}) : SortFuncSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(316,25,316,44)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(SortInlineExport{}, SortGlobalSpec{}) : SortGlobalSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(247,27,247,49)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(SortInlineImport{}, SortTextFormatGlobalType{}) : SortGlobalSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(312,27,312,59)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(SortInlineExport{}, SortMemorySpec{}) : SortMemorySpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(289,27,289,49)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(SortInlineImport{}, SortMemType{}) : SortMemorySpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,27,324,46)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(SortInlineExport{}, SortTableSpec{}) : SortTableSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(275,27,275,48)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(SortInlineImport{}, SortTableType{}) : SortTableSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(320,26,320,47)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(SortDefn{}, SortDefns{}) : SortDefns{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), anywhere{}(), right{}(), klabel{}("listStmt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(142,27,142,65)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(SortEmptyStmt{}, SortEmptyStmts{}) : SortEmptyStmts{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), right{}(), klabel{}("listStmt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(140,27,140,65)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(SortTextFormatGlobalType{}, SortInstr{}) : SortGlobalSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(479,27,479,52)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(SortMut{}, SortAValType{}) : SortGlobalType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(472,27,472,38)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(SortInstr{}, SortInstrs{}) : SortInstrs{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), anywhere{}(), right{}(), klabel{}("listStmt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(141,27,141,65)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(SortLoadOp{}, SortMemArg{}) : SortLoadOpM{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1034,33,1034,45)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(SortLocalDecl{}, SortLocalDecls{}) : SortLocalDecls{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), right{}(), klabel{}("listLocalDecl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(628,27,628,77)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(SortOffsetArg{}, SortAlignArg{}) : SortMemArg{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1094,46,1094,63)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(SortStmt{}, SortStmts{}) : SortStmts{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), anywhere{}(), right{}(), klabel{}("listStmt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(143,27,143,65)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(SortStoreOp{}, SortMemArg{}) : SortStoreOpM{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(976,35,976,48)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(SortLimits{}, SortTableElemType{}) : SortTableType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(865,26,865,45)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(SortTypeKeyWord{}, SortValTypes{}) : SortTypeDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(558,26,558,45)"), injective{}()]
  symbol Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(SortTypeDecl{}, SortTypeDecls{}) : SortTypeDecls{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), right{}(), klabel{}("listTypeDecl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(560,26,560,67)"), injective{}()]
  symbol Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(SortTypeUse{}, SortLocalDecls{}, SortInstrs{}) : SortFuncSpec{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(681,25,681,49)"), injective{}()]
  hooked-symbol Lbl'Unds'andBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\wedge_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("and"), boolOperation{}(), klabel{}("_andBool_"), hook{}("BOOL.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(317,19,317,189)"), function{}()]
  hooked-symbol Lbl'Unds'andThenBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("and"), boolOperation{}(), klabel{}("_andThenBool_"), hook{}("BOOL.andThen"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(318,19,318,151)"), function{}()]
  hooked-symbol Lbl'Unds'divInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("div"), klabel{}("_divInt_"), hook{}("INT.ediv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(387,18,387,121)"), function{}()]
  symbol Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(416,19,416,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)")]
  hooked-symbol Lbl'Unds'impliesBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("=>"), boolOperation{}(), klabel{}("_impliesBool_"), hook{}("BOOL.implies"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(322,19,322,150)"), function{}()]
  hooked-symbol Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(SortKItem{}, SortList{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("_inList_"), hook{}("LIST.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(291,19,291,101)"), function{}()]
  hooked-symbol Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(SortKItem{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), hook{}("MAP.in_keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(145,19,145,93)"), function{}()]
  hooked-symbol Lbl'Unds'modInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("mod"), klabel{}("_modInt_"), hook{}("INT.emod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(388,18,388,121)"), function{}()]
  hooked-symbol Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\vee_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), smt-hook{}("or"), boolOperation{}(), klabel{}("_orBool_"), hook{}("BOOL.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(320,19,320,176)"), function{}()]
  hooked-symbol Lbl'Unds'orElseBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("or"), boolOperation{}(), klabel{}("_orElseBool_"), hook{}("BOOL.orElse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(321,19,321,148)"), function{}()]
  symbol Lbl'Unds'up'Slsh'Int'UndsUnds'WASM'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1285,20,1285,46)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  hooked-symbol Lbl'Unds'xorBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("xor"), boolOperation{}(), klabel{}("_xorBool_"), hook{}("BOOL.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(319,19,319,143)"), function{}()]
  hooked-symbol Lbl'Unds'xorInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\oplus_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("xorInt"), klabel{}("_xorInt_"), hook{}("INT.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(398,18,398,188)"), function{}()]
  hooked-symbol Lbl'UndsPipe'-'-GT-Unds'{}(SortKItem{}, SortKItem{}) : SortMap{} [latex{}("{#1}\\mapsto{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("_|->_"), hook{}("MAP.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(113,18,113,144)"), function{}()]
  hooked-symbol Lbl'UndsPipe'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{|_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("orInt"), klabel{}("_|Int_"), hook{}("INT.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(400,18,400,179)"), function{}()]
  hooked-symbol LblabsFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), smt-hook{}("fp.abs"), klabel{}("absFloat"), hook{}("FLOAT.abs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(524,20,524,105)"), function{}()]
  hooked-symbol LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), smtlib{}("int_abs"), klabel{}("absInt"), hook{}("INT.abs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(404,18,404,102)"), function{}()]
  symbol Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,22,86,26)"), injective{}()]
  hooked-symbol LblacosFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("acosFloat"), hook{}("FLOAT.acos"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(534,20,534,76)"), function{}()]
  symbol Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(121,23,121,27)"), injective{}()]
  symbol Lblalign'EqlsUndsUnds'WASM'Unds'AlignArg'Unds'Int{}(SortInt{}) : SortAlignArg{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1098,26,1098,38)"), injective{}()]
  symbol Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(170,23,170,27)"), injective{}()]
  symbol LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(SortTypeDecls{}) : SortFuncType{} [function{}(), klabel{}("TypeDeclsAsFuncType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(588,25,588,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  symbol LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(SortMap{}, SortMap{}, SortTypeUse{}) : SortFuncType{} [function{}(), klabel{}("TypeUseAsFuncType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(589,25,589,96)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  symbol LblasGMut'LParUndsRParUnds'WASM'Unds'GlobalType'Unds'TextFormatGlobalType{}(SortTextFormatGlobalType{}) : SortGlobalType{} [function{}(), klabel{}("asGMut"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(473,27,473,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  symbol LblasLocalType'LParUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls{}(SortLocalDecls{}) : SortVecType{} [function{}(), klabel{}("asLocalType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(631,25,631,72)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  hooked-symbol LblasinFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("asinFloat"), hook{}("FLOAT.asin"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(533,20,533,76)"), function{}()]
  hooked-symbol Lblatan2Float'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("atan2Float"), hook{}("FLOAT.atan2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(536,20,536,77)"), function{}()]
  hooked-symbol LblatanFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("atanFloat"), hook{}("FLOAT.atan"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(535,20,535,88)"), function{}()]
  symbol LblbigEndianBytes{}() : SortEndianness{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("bigEndianBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(689,25,689,61)"), injective{}()]
  hooked-symbol LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("bitRangeInt"), hook{}("INT.bitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(407,18,407,108)"), function{}()]
  symbol Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(SortIdentifier{}, SortTypeDecls{}, SortInstrs{}, SortOptionalId{}) : SortBlockInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(171,27,171,78)"), injective{}()]
  symbol Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(SortTypeDecls{}, SortInstrs{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(336,22,336,51)"), injective{}()]
  symbol Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(SortVecType{}, SortInstrs{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(337,22,337,51)"), injective{}()]
  symbol Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(351,27,351,36)"), injective{}()]
  symbol Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(362,27,362,39)"), injective{}()]
  symbol Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(SortElemSegment{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(371,27,371,48)"), injective{}()]
  symbol Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(768,27,768,38)"), injective{}()]
  symbol Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(SortTypeUse{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(781,27,781,49)"), injective{}()]
  hooked-symbol LblcategoryChar'LParUndsRParUnds'STRING'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("categoryChar"), hook{}("STRING.category"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(618,21,618,80)"), function{}()]
  hooked-symbol LblceilFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("ceilFloat"), hook{}("FLOAT.ceil"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(527,20,527,88)"), function{}()]
  symbol Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,57,86,62)"), injective{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("Map:choice"), hook{}("MAP.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(157,20,157,100)"), function{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set{}(SortSet{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("Set:choice"), hook{}("SET.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(221,20,221,94)"), function{}()]
  hooked-symbol LblchrChar'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("chrChar"), hook{}("STRING.chr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(586,21,586,69)"), function{}()]
  symbol Lblclz'Unds'WASM-NUMERIC'Unds'IUnOp{}() : SortIUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,22,37,26)"), injective{}()]
  symbol Lblconst'Unds'WASM-DATA'Unds'Mut{}() : SortMut{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(225,29,225,35)"), injective{}()]
  symbol Lblconvert'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}() : SortCvti32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(370,25,370,39)"), injective{}()]
  symbol Lblconvert'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}() : SortCvti32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(370,43,370,57)"), injective{}()]
  symbol Lblconvert'Unds'i64'Unds's'Unds'WASM-NUMERIC'Unds'Cvti64Op{}() : SortCvti64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(375,25,375,39)"), injective{}()]
  symbol Lblconvert'Unds'i64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti64Op{}() : SortCvti64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(375,43,375,57)"), injective{}()]
  symbol Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(226,23,226,32)"), injective{}()]
  hooked-symbol LblcosFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("cosFloat"), hook{}("FLOAT.cos"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(531,20,531,87)"), function{}()]
  hooked-symbol LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), hook{}("STRING.countAllOccurrences"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(607,18,607,132)"), function{}()]
  symbol Lblctz'Unds'WASM-NUMERIC'Unds'IUnOp{}() : SortIUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,30,37,34)"), injective{}()]
  symbol Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(SortIndex{}, SortBytes{}) : SortDataDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1256,29,1256,66)"), injective{}()]
  symbol Lbldemote'Unds'f64'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}() : SortCvtf64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(389,25,389,36)"), injective{}()]
  hooked-symbol LbldirectionalityChar'LParUndsRParUnds'STRING'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("directionalityChar"), hook{}("STRING.directionality"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(619,21,619,86)"), function{}()]
  symbol Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(223,23,223,27)"), injective{}()]
  symbol Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(142,23,142,29)"), injective{}()]
  symbol Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(134,23,134,29)"), injective{}()]
  symbol Lbldrop'Unds'WASM'Unds'PlainInstr{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(287,27,287,32)"), injective{}()]
  symbol Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(SortIndex{}, SortElemSegment{}) : SortElemDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1218,29,1218,67)"), injective{}()]
  symbol Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(276,23,276,26)"), injective{}()]
  symbol Lbleqz'Unds'WASM-NUMERIC'Unds'TestOp{}() : SortTestOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(253,23,253,27)"), injective{}()]
  hooked-symbol LblexpFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("expFloat"), hook{}("FLOAT.exp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(528,20,528,87)"), function{}()]
  hooked-symbol LblexponentBitsFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(SortFloat{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("exponentBitsFloat"), hook{}("FLOAT.exponentBits"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(506,18,506,90)"), function{}()]
  hooked-symbol LblexponentFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(SortFloat{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("exponentFloat"), hook{}("FLOAT.exponent"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(505,18,505,82)"), function{}()]
  symbol Lblextend'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}() : SortCvti32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(361,42,361,55)"), injective{}()]
  symbol Lblextend'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}() : SortCvti32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(361,25,361,38)"), injective{}()]
  symbol Lblf32'Unds'WASM-DATA'Unds'FValType{}() : SortFValType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(117,25,117,29)"), injective{}()]
  symbol Lblf64'Unds'WASM-DATA'Unds'FValType{}() : SortFValType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(117,33,117,37)"), injective{}()]
  hooked-symbol LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("fillList"), hook{}("LIST.fill"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(285,19,285,77)"), function{}()]
  hooked-symbol LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("findChar"), hook{}("STRING.findChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(592,18,592,89)"), function{}()]
  hooked-symbol LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("findString"), hook{}("STRING.find"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(590,18,590,85)"), function{}()]
  symbol LblfloatAdd{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), symbol'Kywd'{}(), klabel{}("floatAdd"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(220,23,220,54)"), injective{}()]
  symbol LblfloatEq{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), symbol'Kywd'{}(), klabel{}("floatEq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,23,324,52)"), injective{}()]
  symbol LblfloatMul{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), symbol'Kywd'{}(), klabel{}("floatMul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(222,23,222,54)"), injective{}()]
  symbol LblfloatNe{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), symbol'Kywd'{}(), klabel{}("floatNe"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(325,23,325,52)"), injective{}()]
  symbol LblfloatSub{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), symbol'Kywd'{}(), klabel{}("floatSub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(221,23,221,54)"), injective{}()]
  hooked-symbol LblfloorFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("floorFloat"), hook{}("FLOAT.floor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(526,20,526,89)"), function{}()]
  symbol Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,47,86,53)"), injective{}()]
  symbol Lblframe'UndsUndsUndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map'Unds'Int'Unds'Map{}(SortInt{}, SortValTypes{}, SortValStack{}, SortMap{}, SortInt{}, SortMap{}) : SortFrame{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(717,22,717,62)"), injective{}()]
  symbol LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), freshGenerator{}(), klabel{}("freshInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(482,18,482,72)"), function{}()]
  symbol Lblfunc'Unds'WASM-DATA'Unds'AllocatedKind{}() : SortAllocatedKind{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(546,30,546,35)"), injective{}()]
  symbol Lblfuncref'Unds'WASM'Unds'TableElemType{}() : SortTableElemType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(850,30,850,38)"), injective{}()]
  symbol LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(SortTypeKeyWord{}, SortTypeDecls{}) : SortVecType{} [function{}(), klabel{}("gatherTypes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(563,25,563,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  symbol Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(323,23,323,26)"), injective{}()]
  symbol Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,50,299,55)"), injective{}()]
  symbol Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,32,299,37)"), injective{}()]
  symbol LblgetGeneratedCounterCell{}(SortGeneratedTopCell{}) : SortGeneratedCounterCell{} [function{}()]
  symbol Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(511,27,511,44)"), injective{}()]
  symbol Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(512,27,512,44)"), injective{}()]
  symbol Lblglobal'Unds'WASM-DATA'Unds'AllocatedKind{}() : SortAllocatedKind{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(546,60,546,67)"), injective{}()]
  symbol Lblglobal'UndsUndsUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalType{}(SortOptionalId{}, SortGlobalType{}) : SortGlobalDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(481,31,481,60)"), injective{}()]
  symbol Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(SortInt{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1134,22,1134,31)"), injective{}()]
  symbol Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(321,23,321,26)"), injective{}()]
  symbol Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(286,50,286,55)"), injective{}()]
  symbol Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(286,32,286,37)"), injective{}()]
  symbol Lbli32'Unds'WASM-DATA'Unds'IValType{}() : SortIValType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(116,25,116,29)"), injective{}()]
  symbol Lbli64'Unds'WASM-DATA'Unds'IValType{}() : SortIValType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(116,33,116,37)"), injective{}()]
  symbol Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(SortIdentifier{}, SortTypeDecls{}, SortInstrs{}, SortOptionalId{}, SortInstrs{}, SortOptionalId{}) : SortBlockInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(191,27,191,100)"), injective{}()]
  symbol Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(SortOptionalId{}, SortTypeDecls{}, SortInstrs{}, SortOptionalId{}) : SortBlockInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(192,27,192,100)"), injective{}()]
  symbol Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(SortTypeDecls{}, SortInstrs{}, SortInstrs{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(380,22,380,62)"), injective{}()]
  symbol LblinitCurFrameCell{}() : SortCurFrameCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitCurModIdxCell{}() : SortCurModIdxCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitDeterministicMemoryGrowthCell{}() : SortDeterministicMemoryGrowthCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitExportsCell{}() : SortExportsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitFAddrCell{}() : SortFAddrCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitFCodeCell{}() : SortFCodeCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitFLocalCell{}() : SortFLocalCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitFModInstCell{}() : SortFModInstCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitFTypeCell{}() : SortFTypeCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitFuncAddrsCell{}() : SortFuncAddrsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitFuncDefCell{}() : SortFuncDefCellMap{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitFuncIdsCell{}() : SortFuncIdsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitFuncsCell{}() : SortFuncsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitGAddrCell{}() : SortGAddrCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitGMutCell{}() : SortGMutCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitGValueCell{}() : SortGValueCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitGeneratedCounterCell{}() : SortGeneratedCounterCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitGeneratedTopCell{}(SortMap{}) : SortGeneratedTopCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitGlobIdsCell{}() : SortGlobIdsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitGlobalAddrsCell{}() : SortGlobalAddrsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitGlobalInstCell{}() : SortGlobalInstCellMap{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitGlobalsCell{}() : SortGlobalsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitKCell{}(SortMap{}) : SortKCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitLabelDepthCell{}() : SortLabelDepthCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitLabelIdsCell{}() : SortLabelIdsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitLocalIdsCell{}() : SortLocalIdsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitLocalsCell{}() : SortLocalsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitMAddrCell{}() : SortMAddrCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitMainStoreCell{}() : SortMainStoreCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitMdataCell{}() : SortMdataCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitMemAddrsCell{}() : SortMemAddrsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitMemIdsCell{}() : SortMemIdsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitMemInstCell{}() : SortMemInstCellMap{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitMemsCell{}() : SortMemsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitMmaxCell{}() : SortMmaxCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitModIdxCell{}() : SortModIdxCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitModuleIdsCell{}() : SortModuleIdsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitModuleInstCell{}() : SortModuleInstCellMap{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitModuleInstancesCell{}() : SortModuleInstancesCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitModuleRegistryCell{}() : SortModuleRegistryCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitMsizeCell{}() : SortMsizeCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitNextFreshIdCell{}() : SortNextFreshIdCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitNextFuncAddrCell{}() : SortNextFuncAddrCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitNextFuncIdxCell{}() : SortNextFuncIdxCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitNextGlobAddrCell{}() : SortNextGlobAddrCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitNextGlobIdxCell{}() : SortNextGlobIdxCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitNextMemAddrCell{}() : SortNextMemAddrCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitNextModuleIdxCell{}() : SortNextModuleIdxCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitNextTabAddrCell{}() : SortNextTabAddrCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitNextTypeIdxCell{}() : SortNextTypeIdxCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitTAddrCell{}() : SortTAddrCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitTabAddrsCell{}() : SortTabAddrsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitTabIdsCell{}() : SortTabIdsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitTabInstCell{}() : SortTabInstCellMap{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitTabsCell{}() : SortTabsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitTdataCell{}() : SortTdataCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitTmaxCell{}() : SortTmaxCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitTsizeCell{}() : SortTsizeCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitTypeIdsCell{}() : SortTypeIdsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitTypesCell{}() : SortTypesCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitValstackCell{}() : SortValstackCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitWasmCell{}(SortMap{}) : SortWasmCell{} [initializer{}(), function{}(), noThread{}()]
  symbol Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(SortInt{}, SortVal{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(407,23,407,43)"), injective{}()]
  symbol Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(SortValTypes{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(427,23,427,46)"), injective{}()]
  symbol Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(SortValStack{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(408,23,408,48)"), injective{}()]
  hooked-symbol LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("intersectSet"), hook{}("SET.intersection"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(206,18,206,88)"), function{}()]
  symbol Lblis'Hash'Layout{}(SortK{}) : SortBool{} [function{}(), predicate{}("#Layout")]
  symbol LblisAValType{}(SortK{}) : SortBool{} [function{}(), predicate{}("AValType")]
  symbol LblisAlignArg{}(SortK{}) : SortBool{} [function{}(), predicate{}("AlignArg")]
  symbol LblisAllocatedKind{}(SortK{}) : SortBool{} [function{}(), predicate{}("AllocatedKind")]
  symbol LblisBlockInstr{}(SortK{}) : SortBool{} [function{}(), predicate{}("BlockInstr")]
  symbol LblisBool{}(SortK{}) : SortBool{} [function{}(), predicate{}("Bool")]
  symbol LblisByteMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("ByteMap")]
  symbol LblisBytes{}(SortK{}) : SortBool{} [function{}(), predicate{}("Bytes")]
  symbol LblisCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("Cell")]
  symbol LblisCurFrameCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("CurFrameCell")]
  symbol LblisCurFrameCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("CurFrameCellFragment")]
  symbol LblisCurFrameCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("CurFrameCellOpt")]
  symbol LblisCurModIdxCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("CurModIdxCell")]
  symbol LblisCurModIdxCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("CurModIdxCellOpt")]
  symbol LblisCvtOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("CvtOp")]
  symbol LblisCvtf32Op{}(SortK{}) : SortBool{} [function{}(), predicate{}("Cvtf32Op")]
  symbol LblisCvtf64Op{}(SortK{}) : SortBool{} [function{}(), predicate{}("Cvtf64Op")]
  symbol LblisCvti32Op{}(SortK{}) : SortBool{} [function{}(), predicate{}("Cvti32Op")]
  symbol LblisCvti64Op{}(SortK{}) : SortBool{} [function{}(), predicate{}("Cvti64Op")]
  symbol LblisDataDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("DataDefn")]
  symbol LblisDataString{}(SortK{}) : SortBool{} [function{}(), predicate{}("DataString")]
  symbol LblisDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("Defn")]
  symbol LblisDefns{}(SortK{}) : SortBool{} [function{}(), predicate{}("Defns")]
  symbol LblisDeterministicMemoryGrowthCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("DeterministicMemoryGrowthCell")]
  symbol LblisDeterministicMemoryGrowthCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("DeterministicMemoryGrowthCellOpt")]
  symbol LblisElemDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("ElemDefn")]
  symbol LblisElemSegment{}(SortK{}) : SortBool{} [function{}(), predicate{}("ElemSegment")]
  symbol LblisEmptyStmt{}(SortK{}) : SortBool{} [function{}(), predicate{}("EmptyStmt")]
  symbol LblisEmptyStmts{}(SortK{}) : SortBool{} [function{}(), predicate{}("EmptyStmts")]
  symbol LblisEndianness{}(SortK{}) : SortBool{} [function{}(), predicate{}("Endianness")]
  symbol LblisExportDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("ExportDefn")]
  symbol LblisExportsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ExportsCell")]
  symbol LblisExportsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ExportsCellOpt")]
  symbol LblisExternval{}(SortK{}) : SortBool{} [function{}(), predicate{}("Externval")]
  symbol LblisFAddrCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FAddrCell")]
  symbol LblisFAddrCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FAddrCellOpt")]
  symbol LblisFBinOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("FBinOp")]
  symbol LblisFCodeCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FCodeCell")]
  symbol LblisFCodeCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FCodeCellOpt")]
  symbol LblisFLocalCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FLocalCell")]
  symbol LblisFLocalCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FLocalCellOpt")]
  symbol LblisFModInstCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FModInstCell")]
  symbol LblisFModInstCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FModInstCellOpt")]
  symbol LblisFRelOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("FRelOp")]
  symbol LblisFTypeCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FTypeCell")]
  symbol LblisFTypeCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FTypeCellOpt")]
  symbol LblisFUnOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("FUnOp")]
  symbol LblisFVal{}(SortK{}) : SortBool{} [function{}(), predicate{}("FVal")]
  symbol LblisFValType{}(SortK{}) : SortBool{} [function{}(), predicate{}("FValType")]
  symbol LblisFloat{}(SortK{}) : SortBool{} [function{}(), predicate{}("Float")]
  symbol LblisFoldedInstr{}(SortK{}) : SortBool{} [function{}(), predicate{}("FoldedInstr")]
  symbol LblisFrame{}(SortK{}) : SortBool{} [function{}(), predicate{}("Frame")]
  symbol LblisFuncAddrsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncAddrsCell")]
  symbol LblisFuncAddrsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncAddrsCellOpt")]
  symbol LblisFuncDefCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncDefCell")]
  symbol LblisFuncDefCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncDefCellFragment")]
  symbol LblisFuncDefCellMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncDefCellMap")]
  symbol LblisFuncDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncDefn")]
  symbol LblisFuncIdsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncIdsCell")]
  symbol LblisFuncIdsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncIdsCellOpt")]
  symbol LblisFuncSpec{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncSpec")]
  symbol LblisFuncType{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncType")]
  symbol LblisFuncsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncsCell")]
  symbol LblisFuncsCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncsCellFragment")]
  symbol LblisFuncsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("FuncsCellOpt")]
  symbol LblisGAddrCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GAddrCell")]
  symbol LblisGAddrCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("GAddrCellOpt")]
  symbol LblisGMutCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GMutCell")]
  symbol LblisGMutCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("GMutCellOpt")]
  symbol LblisGValueCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GValueCell")]
  symbol LblisGValueCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("GValueCellOpt")]
  symbol LblisGeneratedCounterCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedCounterCell")]
  symbol LblisGeneratedCounterCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedCounterCellOpt")]
  symbol LblisGeneratedTopCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedTopCell")]
  symbol LblisGeneratedTopCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedTopCellFragment")]
  symbol LblisGlobIdsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobIdsCell")]
  symbol LblisGlobIdsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobIdsCellOpt")]
  symbol LblisGlobalAddrsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalAddrsCell")]
  symbol LblisGlobalAddrsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalAddrsCellOpt")]
  symbol LblisGlobalDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalDefn")]
  symbol LblisGlobalInstCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalInstCell")]
  symbol LblisGlobalInstCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalInstCellFragment")]
  symbol LblisGlobalInstCellMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalInstCellMap")]
  symbol LblisGlobalSpec{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalSpec")]
  symbol LblisGlobalType{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalType")]
  symbol LblisGlobalsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalsCell")]
  symbol LblisGlobalsCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalsCellFragment")]
  symbol LblisGlobalsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("GlobalsCellOpt")]
  symbol LblisIBinOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("IBinOp")]
  symbol LblisIRelOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("IRelOp")]
  symbol LblisIUnOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("IUnOp")]
  symbol LblisIVal{}(SortK{}) : SortBool{} [function{}(), predicate{}("IVal")]
  symbol LblisIValType{}(SortK{}) : SortBool{} [function{}(), predicate{}("IValType")]
  symbol LblisIdentifier{}(SortK{}) : SortBool{} [function{}(), predicate{}("Identifier")]
  symbol LblisIdentifierToken{}(SortK{}) : SortBool{} [function{}(), predicate{}("IdentifierToken")]
  symbol LblisImportDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("ImportDefn")]
  symbol LblisImportDesc{}(SortK{}) : SortBool{} [function{}(), predicate{}("ImportDesc")]
  symbol LblisIndex{}(SortK{}) : SortBool{} [function{}(), predicate{}("Index")]
  symbol LblisInfinite'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(SortFloat{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("isInfinite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(510,19,510,62)"), function{}()]
  symbol LblisInlineExport{}(SortK{}) : SortBool{} [function{}(), predicate{}("InlineExport")]
  symbol LblisInlineImport{}(SortK{}) : SortBool{} [function{}(), predicate{}("InlineImport")]
  symbol LblisInstr{}(SortK{}) : SortBool{} [function{}(), predicate{}("Instr")]
  symbol LblisInstrs{}(SortK{}) : SortBool{} [function{}(), predicate{}("Instrs")]
  symbol LblisInt{}(SortK{}) : SortBool{} [function{}(), predicate{}("Int")]
  symbol LblisK{}(SortK{}) : SortBool{} [function{}(), predicate{}("K")]
  symbol LblisKCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("KCell")]
  symbol LblisKCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("KCellOpt")]
  symbol LblisKConfigVar{}(SortK{}) : SortBool{} [function{}(), predicate{}("KConfigVar")]
  symbol LblisKItem{}(SortK{}) : SortBool{} [function{}(), predicate{}("KItem")]
  symbol LblisLabel{}(SortK{}) : SortBool{} [function{}(), predicate{}("Label")]
  symbol LblisLabelDepthCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("LabelDepthCell")]
  symbol LblisLabelDepthCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("LabelDepthCellOpt")]
  symbol LblisLabelIdsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("LabelIdsCell")]
  symbol LblisLabelIdsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("LabelIdsCellOpt")]
  symbol LblisLimits{}(SortK{}) : SortBool{} [function{}(), predicate{}("Limits")]
  symbol LblisList{}(SortK{}) : SortBool{} [function{}(), predicate{}("List")]
  symbol LblisLoadOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("LoadOp")]
  symbol LblisLoadOpM{}(SortK{}) : SortBool{} [function{}(), predicate{}("LoadOpM")]
  symbol LblisLocalDecl{}(SortK{}) : SortBool{} [function{}(), predicate{}("LocalDecl")]
  symbol LblisLocalDecls{}(SortK{}) : SortBool{} [function{}(), predicate{}("LocalDecls")]
  symbol LblisLocalIdsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("LocalIdsCell")]
  symbol LblisLocalIdsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("LocalIdsCellOpt")]
  symbol LblisLocalsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("LocalsCell")]
  symbol LblisLocalsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("LocalsCellOpt")]
  symbol LblisMAddrCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MAddrCell")]
  symbol LblisMAddrCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MAddrCellOpt")]
  symbol LblisMInt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MInt")]
  symbol LblisMainStoreCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MainStoreCell")]
  symbol LblisMainStoreCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("MainStoreCellFragment")]
  symbol LblisMainStoreCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MainStoreCellOpt")]
  symbol LblisMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("Map")]
  symbol LblisMdataCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MdataCell")]
  symbol LblisMdataCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MdataCellOpt")]
  symbol LblisMemAddrsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemAddrsCell")]
  symbol LblisMemAddrsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemAddrsCellOpt")]
  symbol LblisMemArg{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemArg")]
  symbol LblisMemIdsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemIdsCell")]
  symbol LblisMemIdsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemIdsCellOpt")]
  symbol LblisMemInstCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemInstCell")]
  symbol LblisMemInstCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemInstCellFragment")]
  symbol LblisMemInstCellMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemInstCellMap")]
  symbol LblisMemType{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemType")]
  symbol LblisMemoryDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemoryDefn")]
  symbol LblisMemorySpec{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemorySpec")]
  symbol LblisMemsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemsCell")]
  symbol LblisMemsCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemsCellFragment")]
  symbol LblisMemsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MemsCellOpt")]
  symbol LblisMmaxCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MmaxCell")]
  symbol LblisMmaxCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MmaxCellOpt")]
  symbol LblisModIdxCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModIdxCell")]
  symbol LblisModIdxCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModIdxCellOpt")]
  symbol LblisModuleDecl{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleDecl")]
  symbol LblisModuleIdsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleIdsCell")]
  symbol LblisModuleIdsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleIdsCellOpt")]
  symbol LblisModuleInstCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleInstCell")]
  symbol LblisModuleInstCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleInstCellFragment")]
  symbol LblisModuleInstCellMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleInstCellMap")]
  symbol LblisModuleInstancesCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleInstancesCell")]
  symbol LblisModuleInstancesCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleInstancesCellFragment")]
  symbol LblisModuleInstancesCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleInstancesCellOpt")]
  symbol LblisModuleRegistryCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleRegistryCell")]
  symbol LblisModuleRegistryCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleRegistryCellOpt")]
  symbol LblisMsizeCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("MsizeCell")]
  symbol LblisMsizeCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("MsizeCellOpt")]
  symbol LblisMut{}(SortK{}) : SortBool{} [function{}(), predicate{}("Mut")]
  symbol LblisNValType{}(SortK{}) : SortBool{} [function{}(), predicate{}("NValType")]
  hooked-symbol LblisNaN'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(SortFloat{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), smt-hook{}("fp.isNaN"), klabel{}("isNaN"), hook{}("FLOAT.isNaN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(509,19,509,101)"), function{}()]
  symbol LblisNextFreshIdCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextFreshIdCell")]
  symbol LblisNextFreshIdCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextFreshIdCellOpt")]
  symbol LblisNextFuncAddrCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextFuncAddrCell")]
  symbol LblisNextFuncAddrCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextFuncAddrCellOpt")]
  symbol LblisNextFuncIdxCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextFuncIdxCell")]
  symbol LblisNextFuncIdxCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextFuncIdxCellOpt")]
  symbol LblisNextGlobAddrCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextGlobAddrCell")]
  symbol LblisNextGlobAddrCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextGlobAddrCellOpt")]
  symbol LblisNextGlobIdxCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextGlobIdxCell")]
  symbol LblisNextGlobIdxCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextGlobIdxCellOpt")]
  symbol LblisNextMemAddrCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextMemAddrCell")]
  symbol LblisNextMemAddrCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextMemAddrCellOpt")]
  symbol LblisNextModuleIdxCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextModuleIdxCell")]
  symbol LblisNextModuleIdxCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextModuleIdxCellOpt")]
  symbol LblisNextTabAddrCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextTabAddrCell")]
  symbol LblisNextTabAddrCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextTabAddrCellOpt")]
  symbol LblisNextTypeIdxCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextTypeIdxCell")]
  symbol LblisNextTypeIdxCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NextTypeIdxCellOpt")]
  symbol LblisNumber{}(SortK{}) : SortBool{} [function{}(), predicate{}("Number")]
  symbol LblisOffset{}(SortK{}) : SortBool{} [function{}(), predicate{}("Offset")]
  symbol LblisOffsetArg{}(SortK{}) : SortBool{} [function{}(), predicate{}("OffsetArg")]
  symbol LblisOptionalId{}(SortK{}) : SortBool{} [function{}(), predicate{}("OptionalId")]
  symbol LblisOptionalInt{}(SortK{}) : SortBool{} [function{}(), predicate{}("OptionalInt")]
  symbol LblisPlainInstr{}(SortK{}) : SortBool{} [function{}(), predicate{}("PlainInstr")]
  symbol LblisSet{}(SortK{}) : SortBool{} [function{}(), predicate{}("Set")]
  symbol LblisSignedness{}(SortK{}) : SortBool{} [function{}(), predicate{}("Signedness")]
  symbol LblisStartDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("StartDefn")]
  symbol LblisStmt{}(SortK{}) : SortBool{} [function{}(), predicate{}("Stmt")]
  symbol LblisStmts{}(SortK{}) : SortBool{} [function{}(), predicate{}("Stmts")]
  symbol LblisStoreOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("StoreOp")]
  symbol LblisStoreOpM{}(SortK{}) : SortBool{} [function{}(), predicate{}("StoreOpM")]
  symbol LblisString{}(SortK{}) : SortBool{} [function{}(), predicate{}("String")]
  symbol LblisTAddrCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TAddrCell")]
  symbol LblisTAddrCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TAddrCellOpt")]
  symbol LblisTabAddrsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabAddrsCell")]
  symbol LblisTabAddrsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabAddrsCellOpt")]
  symbol LblisTabIdsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabIdsCell")]
  symbol LblisTabIdsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabIdsCellOpt")]
  symbol LblisTabInstCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabInstCell")]
  symbol LblisTabInstCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabInstCellFragment")]
  symbol LblisTabInstCellMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabInstCellMap")]
  symbol LblisTableDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("TableDefn")]
  symbol LblisTableElemType{}(SortK{}) : SortBool{} [function{}(), predicate{}("TableElemType")]
  symbol LblisTableSpec{}(SortK{}) : SortBool{} [function{}(), predicate{}("TableSpec")]
  symbol LblisTableType{}(SortK{}) : SortBool{} [function{}(), predicate{}("TableType")]
  symbol LblisTabsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabsCell")]
  symbol LblisTabsCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabsCellFragment")]
  symbol LblisTabsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TabsCellOpt")]
  symbol LblisTdataCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TdataCell")]
  symbol LblisTdataCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TdataCellOpt")]
  symbol LblisTestOp{}(SortK{}) : SortBool{} [function{}(), predicate{}("TestOp")]
  symbol LblisTextFormatGlobalType{}(SortK{}) : SortBool{} [function{}(), predicate{}("TextFormatGlobalType")]
  symbol LblisTmaxCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TmaxCell")]
  symbol LblisTmaxCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TmaxCellOpt")]
  symbol LblisTsizeCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TsizeCell")]
  symbol LblisTsizeCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TsizeCellOpt")]
  symbol LblisType{}(SortK{}) : SortBool{} [function{}(), predicate{}("Type")]
  symbol LblisTypeDecl{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypeDecl")]
  symbol LblisTypeDecls{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypeDecls")]
  symbol LblisTypeDefn{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypeDefn")]
  symbol LblisTypeIdsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypeIdsCell")]
  symbol LblisTypeIdsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypeIdsCellOpt")]
  symbol LblisTypeKeyWord{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypeKeyWord")]
  symbol LblisTypeUse{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypeUse")]
  symbol LblisTypesCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypesCell")]
  symbol LblisTypesCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TypesCellOpt")]
  symbol LblisVal{}(SortK{}) : SortBool{} [function{}(), predicate{}("Val")]
  symbol LblisValStack{}(SortK{}) : SortBool{} [function{}(), predicate{}("ValStack")]
  symbol LblisValType{}(SortK{}) : SortBool{} [function{}(), predicate{}("ValType")]
  symbol LblisValTypes{}(SortK{}) : SortBool{} [function{}(), predicate{}("ValTypes")]
  symbol LblisValstackCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ValstackCell")]
  symbol LblisValstackCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ValstackCellOpt")]
  symbol LblisVecType{}(SortK{}) : SortBool{} [function{}(), predicate{}("VecType")]
  symbol LblisWasmCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("WasmCell")]
  symbol LblisWasmCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("WasmCellFragment")]
  symbol LblisWasmCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("WasmCellOpt")]
  symbol LblisWasmIntToken{}(SortK{}) : SortBool{} [function{}(), predicate{}("WasmIntToken")]
  symbol LblisWasmString{}(SortK{}) : SortBool{} [function{}(), predicate{}("WasmString")]
  symbol LblisWasmStringToken{}(SortK{}) : SortBool{} [function{}(), predicate{}("WasmStringToken")]
  hooked-symbol Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(SortMap{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("keys"), hook{}("MAP.keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(142,18,142,86)"), function{}()]
  hooked-symbol Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [hook{}("MAP.keys_list"), function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(143,19,143,79)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)")]
  symbol Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(SortVecType{}, SortInstrs{}, SortValStack{}) : SortLabel{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(330,22,330,60)"), injective{}()]
  symbol Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(322,23,322,26)"), injective{}()]
  symbol Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,41,299,46)"), injective{}()]
  symbol Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,23,299,28)"), injective{}()]
  hooked-symbol LbllengthBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes{}(SortBytes{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), smtlib{}("lengthBytes"), klabel{}("lengthBytes"), hook{}("BYTES.length"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(706,18,706,99)"), function{}()]
  hooked-symbol LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("lengthString"), hook{}("STRING.length"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(585,18,585,84)"), function{}()]
  symbol LbllittleEndianBytes{}() : SortEndianness{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("littleEndianBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(688,25,688,64)"), injective{}()]
  symbol Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1078,35,1078,44)"), injective{}()]
  symbol Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1077,35,1077,44)"), injective{}()]
  symbol Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1078,48,1078,57)"), injective{}()]
  symbol Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1077,48,1077,57)"), injective{}()]
  symbol Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1078,23,1078,31)"), injective{}()]
  symbol Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1077,23,1077,31)"), injective{}()]
  symbol Lblload'Unds'WASM'Unds'LoadOp{}() : SortLoadOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1076,23,1076,28)"), injective{}()]
  symbol Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(SortIValType{}, SortInt{}, SortInt{}, SortSignedness{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1026,22,1026,62)"), injective{}()]
  symbol Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(440,27,440,43)"), injective{}()]
  symbol Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(441,27,441,43)"), injective{}()]
  symbol Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(SortIndex{}) : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(442,27,442,43)"), injective{}()]
  symbol Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(SortValTypes{}) : SortLocalDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(626,27,626,53)"), injective{}()]
  symbol Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(SortIdentifier{}, SortAValType{}) : SortLocalDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(627,27,627,53)"), injective{}()]
  hooked-symbol Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("log2Int"), hook{}("INT.log2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(405,18,405,74)"), function{}()]
  hooked-symbol LbllogFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("logFloat"), hook{}("FLOAT.log"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(529,20,529,75)"), function{}()]
  symbol Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(SortIdentifier{}, SortTypeDecls{}, SortInstrs{}, SortOptionalId{}) : SortBlockInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,27,179,77)"), injective{}()]
  symbol Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(SortTypeDecls{}, SortInstrs{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(392,22,392,50)"), injective{}()]
  symbol Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}() : SortFRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(320,23,320,26)"), injective{}()]
  symbol Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(286,41,286,46)"), injective{}()]
  symbol Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(286,23,286,28)"), injective{}()]
  hooked-symbol LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem{}(SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("makeList"), hook{}("LIST.make"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,19,281,66)"), function{}()]
  hooked-symbol LblmaxFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), smt-hook{}("fp.max"), klabel{}("maxFloat"), hook{}("FLOAT.max"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(537,20,537,93)"), function{}()]
  hooked-symbol LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), smtlib{}("int_max"), hook{}("INT.max"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(403,18,403,102)"), function{}()]
  hooked-symbol LblmaxValueFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("maxValueFloat"), hook{}("FLOAT.maxValue"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(540,20,540,80)"), function{}()]
  symbol Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(225,23,225,27)"), injective{}()]
  symbol Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1137,27,1137,39)"), injective{}()]
  symbol Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1111,27,1111,39)"), injective{}()]
  symbol Lblmemory'Unds'WASM-DATA'Unds'AllocatedKind{}() : SortAllocatedKind{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(546,49,546,56)"), injective{}()]
  symbol Lblmemory'LBraUndsUndsUndsRBraUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(SortOptionalId{}, SortInt{}, SortOptionalInt{}) : SortMemoryDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(923,31,923,73)"), injective{}()]
  hooked-symbol LblminFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(SortFloat{}, SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), smt-hook{}("fp.min"), klabel{}("minFloat"), hook{}("FLOAT.min"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(538,20,538,93)"), function{}()]
  hooked-symbol LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), smtlib{}("int_min"), hook{}("INT.min"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(402,18,402,102)"), function{}()]
  hooked-symbol LblminValueFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("minValueFloat"), hook{}("FLOAT.minValue"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(541,20,541,80)"), function{}()]
  symbol Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}() : SortFBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(224,23,224,27)"), injective{}()]
  symbol Lblmodule'UndsUndsUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Map{}(SortOptionalId{}, SortMap{}) : SortModuleDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1510,31,1510,53)"), injective{}()]
  symbol Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(121,39,121,43)"), injective{}()]
  symbol Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}() : SortIRelOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(276,30,276,33)"), injective{}()]
  symbol Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,76,86,84)"), injective{}()]
  symbol Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,30,86,34)"), injective{}()]
  hooked-symbol LblnewUUID'Unds'STRING'Unds'String{}() : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), impure{}(), hook{}("STRING.uuid"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(621,21,621,67)"), function{}()]
  symbol LblnoCurFrameCell{}() : SortCurFrameCellOpt{} [cellOptAbsent{}("CurFrameCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoCurModIdxCell{}() : SortCurModIdxCellOpt{} [cellOptAbsent{}("CurModIdxCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoDeterministicMemoryGrowthCell{}() : SortDeterministicMemoryGrowthCellOpt{} [cellOptAbsent{}("DeterministicMemoryGrowthCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoExportsCell{}() : SortExportsCellOpt{} [cellOptAbsent{}("ExportsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoFAddrCell{}() : SortFAddrCellOpt{} [cellOptAbsent{}("FAddrCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoFCodeCell{}() : SortFCodeCellOpt{} [cellOptAbsent{}("FCodeCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoFLocalCell{}() : SortFLocalCellOpt{} [cellOptAbsent{}("FLocalCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoFModInstCell{}() : SortFModInstCellOpt{} [cellOptAbsent{}("FModInstCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoFTypeCell{}() : SortFTypeCellOpt{} [cellOptAbsent{}("FTypeCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoFuncAddrsCell{}() : SortFuncAddrsCellOpt{} [cellOptAbsent{}("FuncAddrsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoFuncIdsCell{}() : SortFuncIdsCellOpt{} [cellOptAbsent{}("FuncIdsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoFuncsCell{}() : SortFuncsCellOpt{} [cellOptAbsent{}("FuncsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoGAddrCell{}() : SortGAddrCellOpt{} [cellOptAbsent{}("GAddrCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoGMutCell{}() : SortGMutCellOpt{} [cellOptAbsent{}("GMutCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoGValueCell{}() : SortGValueCellOpt{} [cellOptAbsent{}("GValueCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoGeneratedCounterCell{}() : SortGeneratedCounterCellOpt{} [cellOptAbsent{}("GeneratedCounterCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoGlobIdsCell{}() : SortGlobIdsCellOpt{} [cellOptAbsent{}("GlobIdsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoGlobalAddrsCell{}() : SortGlobalAddrsCellOpt{} [cellOptAbsent{}("GlobalAddrsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoGlobalsCell{}() : SortGlobalsCellOpt{} [cellOptAbsent{}("GlobalsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoKCell{}() : SortKCellOpt{} [cellOptAbsent{}("KCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoLabelDepthCell{}() : SortLabelDepthCellOpt{} [cellOptAbsent{}("LabelDepthCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoLabelIdsCell{}() : SortLabelIdsCellOpt{} [cellOptAbsent{}("LabelIdsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoLocalIdsCell{}() : SortLocalIdsCellOpt{} [cellOptAbsent{}("LocalIdsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoLocalsCell{}() : SortLocalsCellOpt{} [cellOptAbsent{}("LocalsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoMAddrCell{}() : SortMAddrCellOpt{} [cellOptAbsent{}("MAddrCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoMainStoreCell{}() : SortMainStoreCellOpt{} [cellOptAbsent{}("MainStoreCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoMdataCell{}() : SortMdataCellOpt{} [cellOptAbsent{}("MdataCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoMemAddrsCell{}() : SortMemAddrsCellOpt{} [cellOptAbsent{}("MemAddrsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoMemIdsCell{}() : SortMemIdsCellOpt{} [cellOptAbsent{}("MemIdsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoMemsCell{}() : SortMemsCellOpt{} [cellOptAbsent{}("MemsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoMmaxCell{}() : SortMmaxCellOpt{} [cellOptAbsent{}("MmaxCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoModIdxCell{}() : SortModIdxCellOpt{} [cellOptAbsent{}("ModIdxCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoModuleIdsCell{}() : SortModuleIdsCellOpt{} [cellOptAbsent{}("ModuleIdsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoModuleInstancesCell{}() : SortModuleInstancesCellOpt{} [cellOptAbsent{}("ModuleInstancesCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoModuleRegistryCell{}() : SortModuleRegistryCellOpt{} [cellOptAbsent{}("ModuleRegistryCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoMsizeCell{}() : SortMsizeCellOpt{} [cellOptAbsent{}("MsizeCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoNextFreshIdCell{}() : SortNextFreshIdCellOpt{} [cellOptAbsent{}("NextFreshIdCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoNextFuncAddrCell{}() : SortNextFuncAddrCellOpt{} [cellOptAbsent{}("NextFuncAddrCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoNextFuncIdxCell{}() : SortNextFuncIdxCellOpt{} [cellOptAbsent{}("NextFuncIdxCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoNextGlobAddrCell{}() : SortNextGlobAddrCellOpt{} [cellOptAbsent{}("NextGlobAddrCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoNextGlobIdxCell{}() : SortNextGlobIdxCellOpt{} [cellOptAbsent{}("NextGlobIdxCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoNextMemAddrCell{}() : SortNextMemAddrCellOpt{} [cellOptAbsent{}("NextMemAddrCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoNextModuleIdxCell{}() : SortNextModuleIdxCellOpt{} [cellOptAbsent{}("NextModuleIdxCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoNextTabAddrCell{}() : SortNextTabAddrCellOpt{} [cellOptAbsent{}("NextTabAddrCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoNextTypeIdxCell{}() : SortNextTypeIdxCellOpt{} [cellOptAbsent{}("NextTypeIdxCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoTAddrCell{}() : SortTAddrCellOpt{} [cellOptAbsent{}("TAddrCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoTabAddrsCell{}() : SortTabAddrsCellOpt{} [cellOptAbsent{}("TabAddrsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoTabIdsCell{}() : SortTabIdsCellOpt{} [cellOptAbsent{}("TabIdsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoTabsCell{}() : SortTabsCellOpt{} [cellOptAbsent{}("TabsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoTdataCell{}() : SortTdataCellOpt{} [cellOptAbsent{}("TdataCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoTmaxCell{}() : SortTmaxCellOpt{} [cellOptAbsent{}("TmaxCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoTsizeCell{}() : SortTsizeCellOpt{} [cellOptAbsent{}("TsizeCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoTypeIdsCell{}() : SortTypeIdsCellOpt{} [cellOptAbsent{}("TypeIdsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoTypesCell{}() : SortTypesCellOpt{} [cellOptAbsent{}("TypesCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoValstackCell{}() : SortValstackCellOpt{} [cellOptAbsent{}("ValstackCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoWasmCell{}() : SortWasmCellOpt{} [cellOptAbsent{}("WasmCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lblnop'Unds'WASM'Unds'PlainInstr{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(307,27,307,31)"), injective{}()]
  hooked-symbol LblnotBool'Unds'{}(SortBool{}) : SortBool{} [latex{}("\\neg_{\\scriptstyle\\it Bool}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), smt-hook{}("not"), boolOperation{}(), klabel{}("notBool_"), hook{}("BOOL.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(316,19,316,176)"), function{}()]
  symbol Lbloffset'EqlsUndsUnds'WASM'Unds'OffsetArg'Unds'Int{}(SortInt{}) : SortOffsetArg{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1097,26,1097,38)"), injective{}()]
  symbol Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(170,31,170,34)"), injective{}()]
  hooked-symbol LblordChar'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("ordChar"), hook{}("STRING.ord"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(587,18,587,69)"), function{}()]
  hooked-symbol LblpadLeftBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(SortBytes{}, SortInt{}, SortInt{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("padLeftBytes"), hook{}("BYTES.padLeft"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(703,20,703,80)"), function{}()]
  hooked-symbol LblpadRightBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(SortBytes{}, SortInt{}, SortInt{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("padRightBytes"), hook{}("BYTES.padRight"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(702,20,702,82)"), function{}()]
  symbol Lblparam'Unds'WASM'Unds'TypeKeyWord{}() : SortTypeKeyWord{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(554,28,554,34)"), injective{}()]
  symbol Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(SortIdentifier{}, SortAValType{}) : SortTypeDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(559,26,559,52)"), injective{}()]
  symbol Lblpopcnt'Unds'WASM-NUMERIC'Unds'IUnOp{}() : SortIUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,38,37,45)"), injective{}()]
  hooked-symbol LblprecisionFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(SortFloat{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("precisionFloat"), hook{}("FLOAT.precision"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(504,18,504,84)"), function{}()]
  symbol Lblproject'Coln'AValType{}(SortK{}) : SortAValType{} [function{}(), projection{}()]
  symbol Lblproject'Coln'AlignArg{}(SortK{}) : SortAlignArg{} [function{}(), projection{}()]
  symbol Lblproject'Coln'AllocatedKind{}(SortK{}) : SortAllocatedKind{} [function{}(), projection{}()]
  symbol Lblproject'Coln'BlockInstr{}(SortK{}) : SortBlockInstr{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Bool{}(SortK{}) : SortBool{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ByteMap{}(SortK{}) : SortByteMap{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Bytes{}(SortK{}) : SortBytes{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Cell{}(SortK{}) : SortCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'CurFrameCell{}(SortK{}) : SortCurFrameCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'CurFrameCellFragment{}(SortK{}) : SortCurFrameCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'CurFrameCellOpt{}(SortK{}) : SortCurFrameCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'CurModIdxCell{}(SortK{}) : SortCurModIdxCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'CurModIdxCellOpt{}(SortK{}) : SortCurModIdxCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'CvtOp{}(SortK{}) : SortCvtOp{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Cvtf32Op{}(SortK{}) : SortCvtf32Op{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Cvtf64Op{}(SortK{}) : SortCvtf64Op{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Cvti32Op{}(SortK{}) : SortCvti32Op{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Cvti64Op{}(SortK{}) : SortCvti64Op{} [function{}(), projection{}()]
  symbol Lblproject'Coln'DataDefn{}(SortK{}) : SortDataDefn{} [function{}(), projection{}()]
  symbol Lblproject'Coln'DataString{}(SortK{}) : SortDataString{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Defn{}(SortK{}) : SortDefn{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Defns{}(SortK{}) : SortDefns{} [function{}(), projection{}()]
  symbol Lblproject'Coln'DeterministicMemoryGrowthCell{}(SortK{}) : SortDeterministicMemoryGrowthCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'DeterministicMemoryGrowthCellOpt{}(SortK{}) : SortDeterministicMemoryGrowthCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ElemDefn{}(SortK{}) : SortElemDefn{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ElemSegment{}(SortK{}) : SortElemSegment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'EmptyStmt{}(SortK{}) : SortEmptyStmt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'EmptyStmts{}(SortK{}) : SortEmptyStmts{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Endianness{}(SortK{}) : SortEndianness{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ExportDefn{}(SortK{}) : SortExportDefn{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ExportsCell{}(SortK{}) : SortExportsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ExportsCellOpt{}(SortK{}) : SortExportsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Externval{}(SortK{}) : SortExternval{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FAddrCell{}(SortK{}) : SortFAddrCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FAddrCellOpt{}(SortK{}) : SortFAddrCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FBinOp{}(SortK{}) : SortFBinOp{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FCodeCell{}(SortK{}) : SortFCodeCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FCodeCellOpt{}(SortK{}) : SortFCodeCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FLocalCell{}(SortK{}) : SortFLocalCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FLocalCellOpt{}(SortK{}) : SortFLocalCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FModInstCell{}(SortK{}) : SortFModInstCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FModInstCellOpt{}(SortK{}) : SortFModInstCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FRelOp{}(SortK{}) : SortFRelOp{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FTypeCell{}(SortK{}) : SortFTypeCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FTypeCellOpt{}(SortK{}) : SortFTypeCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FUnOp{}(SortK{}) : SortFUnOp{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FVal{}(SortK{}) : SortFVal{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FValType{}(SortK{}) : SortFValType{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Float{}(SortK{}) : SortFloat{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FoldedInstr{}(SortK{}) : SortFoldedInstr{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Frame{}(SortK{}) : SortFrame{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FuncAddrsCell{}(SortK{}) : SortFuncAddrsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FuncAddrsCellOpt{}(SortK{}) : SortFuncAddrsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FuncDefCell{}(SortK{}) : SortFuncDefCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FuncDefCellFragment{}(SortK{}) : SortFuncDefCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FuncDefCellMap{}(SortK{}) : SortFuncDefCellMap{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FuncDefn{}(SortK{}) : SortFuncDefn{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FuncIdsCell{}(SortK{}) : SortFuncIdsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FuncIdsCellOpt{}(SortK{}) : SortFuncIdsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FuncSpec{}(SortK{}) : SortFuncSpec{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FuncType{}(SortK{}) : SortFuncType{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FuncsCell{}(SortK{}) : SortFuncsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FuncsCellFragment{}(SortK{}) : SortFuncsCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'FuncsCellOpt{}(SortK{}) : SortFuncsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GAddrCell{}(SortK{}) : SortGAddrCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GAddrCellOpt{}(SortK{}) : SortGAddrCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GMutCell{}(SortK{}) : SortGMutCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GMutCellOpt{}(SortK{}) : SortGMutCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GValueCell{}(SortK{}) : SortGValueCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GValueCellOpt{}(SortK{}) : SortGValueCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GeneratedCounterCell{}(SortK{}) : SortGeneratedCounterCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GeneratedCounterCellOpt{}(SortK{}) : SortGeneratedCounterCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GeneratedTopCell{}(SortK{}) : SortGeneratedTopCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GeneratedTopCellFragment{}(SortK{}) : SortGeneratedTopCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GlobIdsCell{}(SortK{}) : SortGlobIdsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GlobIdsCellOpt{}(SortK{}) : SortGlobIdsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GlobalAddrsCell{}(SortK{}) : SortGlobalAddrsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GlobalAddrsCellOpt{}(SortK{}) : SortGlobalAddrsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GlobalDefn{}(SortK{}) : SortGlobalDefn{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GlobalInstCell{}(SortK{}) : SortGlobalInstCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GlobalInstCellFragment{}(SortK{}) : SortGlobalInstCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GlobalInstCellMap{}(SortK{}) : SortGlobalInstCellMap{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GlobalSpec{}(SortK{}) : SortGlobalSpec{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GlobalType{}(SortK{}) : SortGlobalType{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GlobalsCell{}(SortK{}) : SortGlobalsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GlobalsCellFragment{}(SortK{}) : SortGlobalsCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GlobalsCellOpt{}(SortK{}) : SortGlobalsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IBinOp{}(SortK{}) : SortIBinOp{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IRelOp{}(SortK{}) : SortIRelOp{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IUnOp{}(SortK{}) : SortIUnOp{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IVal{}(SortK{}) : SortIVal{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IValType{}(SortK{}) : SortIValType{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Identifier{}(SortK{}) : SortIdentifier{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IdentifierToken{}(SortK{}) : SortIdentifierToken{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ImportDefn{}(SortK{}) : SortImportDefn{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ImportDesc{}(SortK{}) : SortImportDesc{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Index{}(SortK{}) : SortIndex{} [function{}(), projection{}()]
  symbol Lblproject'Coln'InlineExport{}(SortK{}) : SortInlineExport{} [function{}(), projection{}()]
  symbol Lblproject'Coln'InlineImport{}(SortK{}) : SortInlineImport{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Instr{}(SortK{}) : SortInstr{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Instrs{}(SortK{}) : SortInstrs{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Int{}(SortK{}) : SortInt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KCell{}(SortK{}) : SortKCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KCellOpt{}(SortK{}) : SortKCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KItem{}(SortK{}) : SortKItem{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Label{}(SortK{}) : SortLabel{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LabelDepthCell{}(SortK{}) : SortLabelDepthCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LabelDepthCellOpt{}(SortK{}) : SortLabelDepthCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LabelIdsCell{}(SortK{}) : SortLabelIdsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LabelIdsCellOpt{}(SortK{}) : SortLabelIdsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Limits{}(SortK{}) : SortLimits{} [function{}(), projection{}()]
  symbol Lblproject'Coln'List{}(SortK{}) : SortList{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LoadOp{}(SortK{}) : SortLoadOp{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LoadOpM{}(SortK{}) : SortLoadOpM{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LocalDecl{}(SortK{}) : SortLocalDecl{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LocalDecls{}(SortK{}) : SortLocalDecls{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LocalIdsCell{}(SortK{}) : SortLocalIdsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LocalIdsCellOpt{}(SortK{}) : SortLocalIdsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LocalsCell{}(SortK{}) : SortLocalsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LocalsCellOpt{}(SortK{}) : SortLocalsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MAddrCell{}(SortK{}) : SortMAddrCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MAddrCellOpt{}(SortK{}) : SortMAddrCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MInt{}(SortK{}) : SortMInt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MainStoreCell{}(SortK{}) : SortMainStoreCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MainStoreCellFragment{}(SortK{}) : SortMainStoreCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MainStoreCellOpt{}(SortK{}) : SortMainStoreCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Map{}(SortK{}) : SortMap{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MdataCell{}(SortK{}) : SortMdataCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MdataCellOpt{}(SortK{}) : SortMdataCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MemAddrsCell{}(SortK{}) : SortMemAddrsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MemAddrsCellOpt{}(SortK{}) : SortMemAddrsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MemArg{}(SortK{}) : SortMemArg{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MemIdsCell{}(SortK{}) : SortMemIdsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MemIdsCellOpt{}(SortK{}) : SortMemIdsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MemInstCell{}(SortK{}) : SortMemInstCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MemInstCellFragment{}(SortK{}) : SortMemInstCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MemInstCellMap{}(SortK{}) : SortMemInstCellMap{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MemType{}(SortK{}) : SortMemType{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MemoryDefn{}(SortK{}) : SortMemoryDefn{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MemorySpec{}(SortK{}) : SortMemorySpec{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MemsCell{}(SortK{}) : SortMemsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MemsCellFragment{}(SortK{}) : SortMemsCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MemsCellOpt{}(SortK{}) : SortMemsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MmaxCell{}(SortK{}) : SortMmaxCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MmaxCellOpt{}(SortK{}) : SortMmaxCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModIdxCell{}(SortK{}) : SortModIdxCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModIdxCellOpt{}(SortK{}) : SortModIdxCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModuleDecl{}(SortK{}) : SortModuleDecl{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModuleIdsCell{}(SortK{}) : SortModuleIdsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModuleIdsCellOpt{}(SortK{}) : SortModuleIdsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModuleInstCell{}(SortK{}) : SortModuleInstCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModuleInstCellFragment{}(SortK{}) : SortModuleInstCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModuleInstCellMap{}(SortK{}) : SortModuleInstCellMap{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModuleInstancesCell{}(SortK{}) : SortModuleInstancesCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModuleInstancesCellFragment{}(SortK{}) : SortModuleInstancesCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModuleInstancesCellOpt{}(SortK{}) : SortModuleInstancesCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModuleRegistryCell{}(SortK{}) : SortModuleRegistryCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModuleRegistryCellOpt{}(SortK{}) : SortModuleRegistryCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MsizeCell{}(SortK{}) : SortMsizeCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'MsizeCellOpt{}(SortK{}) : SortMsizeCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Mut{}(SortK{}) : SortMut{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NValType{}(SortK{}) : SortNValType{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextFreshIdCell{}(SortK{}) : SortNextFreshIdCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextFreshIdCellOpt{}(SortK{}) : SortNextFreshIdCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextFuncAddrCell{}(SortK{}) : SortNextFuncAddrCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextFuncAddrCellOpt{}(SortK{}) : SortNextFuncAddrCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextFuncIdxCell{}(SortK{}) : SortNextFuncIdxCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextFuncIdxCellOpt{}(SortK{}) : SortNextFuncIdxCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextGlobAddrCell{}(SortK{}) : SortNextGlobAddrCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextGlobAddrCellOpt{}(SortK{}) : SortNextGlobAddrCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextGlobIdxCell{}(SortK{}) : SortNextGlobIdxCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextGlobIdxCellOpt{}(SortK{}) : SortNextGlobIdxCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextMemAddrCell{}(SortK{}) : SortNextMemAddrCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextMemAddrCellOpt{}(SortK{}) : SortNextMemAddrCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextModuleIdxCell{}(SortK{}) : SortNextModuleIdxCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextModuleIdxCellOpt{}(SortK{}) : SortNextModuleIdxCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextTabAddrCell{}(SortK{}) : SortNextTabAddrCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextTabAddrCellOpt{}(SortK{}) : SortNextTabAddrCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextTypeIdxCell{}(SortK{}) : SortNextTypeIdxCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NextTypeIdxCellOpt{}(SortK{}) : SortNextTypeIdxCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Number{}(SortK{}) : SortNumber{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Offset{}(SortK{}) : SortOffset{} [function{}(), projection{}()]
  symbol Lblproject'Coln'OffsetArg{}(SortK{}) : SortOffsetArg{} [function{}(), projection{}()]
  symbol Lblproject'Coln'OptionalId{}(SortK{}) : SortOptionalId{} [function{}(), projection{}()]
  symbol Lblproject'Coln'OptionalInt{}(SortK{}) : SortOptionalInt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'PlainInstr{}(SortK{}) : SortPlainInstr{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Set{}(SortK{}) : SortSet{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Signedness{}(SortK{}) : SortSignedness{} [function{}(), projection{}()]
  symbol Lblproject'Coln'StartDefn{}(SortK{}) : SortStartDefn{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Stmt{}(SortK{}) : SortStmt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Stmts{}(SortK{}) : SortStmts{} [function{}(), projection{}()]
  symbol Lblproject'Coln'StoreOp{}(SortK{}) : SortStoreOp{} [function{}(), projection{}()]
  symbol Lblproject'Coln'StoreOpM{}(SortK{}) : SortStoreOpM{} [function{}(), projection{}()]
  symbol Lblproject'Coln'String{}(SortK{}) : SortString{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TAddrCell{}(SortK{}) : SortTAddrCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TAddrCellOpt{}(SortK{}) : SortTAddrCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TabAddrsCell{}(SortK{}) : SortTabAddrsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TabAddrsCellOpt{}(SortK{}) : SortTabAddrsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TabIdsCell{}(SortK{}) : SortTabIdsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TabIdsCellOpt{}(SortK{}) : SortTabIdsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TabInstCell{}(SortK{}) : SortTabInstCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TabInstCellFragment{}(SortK{}) : SortTabInstCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TabInstCellMap{}(SortK{}) : SortTabInstCellMap{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TableDefn{}(SortK{}) : SortTableDefn{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TableElemType{}(SortK{}) : SortTableElemType{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TableSpec{}(SortK{}) : SortTableSpec{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TableType{}(SortK{}) : SortTableType{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TabsCell{}(SortK{}) : SortTabsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TabsCellFragment{}(SortK{}) : SortTabsCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TabsCellOpt{}(SortK{}) : SortTabsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TdataCell{}(SortK{}) : SortTdataCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TdataCellOpt{}(SortK{}) : SortTdataCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TestOp{}(SortK{}) : SortTestOp{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TextFormatGlobalType{}(SortK{}) : SortTextFormatGlobalType{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TmaxCell{}(SortK{}) : SortTmaxCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TmaxCellOpt{}(SortK{}) : SortTmaxCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TsizeCell{}(SortK{}) : SortTsizeCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TsizeCellOpt{}(SortK{}) : SortTsizeCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Type{}(SortK{}) : SortType{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TypeDecl{}(SortK{}) : SortTypeDecl{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TypeDecls{}(SortK{}) : SortTypeDecls{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TypeDefn{}(SortK{}) : SortTypeDefn{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TypeIdsCell{}(SortK{}) : SortTypeIdsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TypeIdsCellOpt{}(SortK{}) : SortTypeIdsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TypeKeyWord{}(SortK{}) : SortTypeKeyWord{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TypeUse{}(SortK{}) : SortTypeUse{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TypesCell{}(SortK{}) : SortTypesCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TypesCellOpt{}(SortK{}) : SortTypesCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Val{}(SortK{}) : SortVal{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ValStack{}(SortK{}) : SortValStack{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ValType{}(SortK{}) : SortValType{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ValTypes{}(SortK{}) : SortValTypes{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ValstackCell{}(SortK{}) : SortValstackCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ValstackCellOpt{}(SortK{}) : SortValstackCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'VecType{}(SortK{}) : SortVecType{} [function{}(), projection{}()]
  symbol Lblproject'Coln'WasmCell{}(SortK{}) : SortWasmCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'WasmCellFragment{}(SortK{}) : SortWasmCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'WasmCellOpt{}(SortK{}) : SortWasmCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'WasmIntToken{}(SortK{}) : SortWasmIntToken{} [function{}(), projection{}()]
  symbol Lblproject'Coln'WasmString{}(SortK{}) : SortWasmString{} [function{}(), projection{}()]
  symbol Lblproject'Coln'WasmStringToken{}(SortK{}) : SortWasmStringToken{} [function{}(), projection{}()]
  symbol Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'allocs{}(SortModuleDecl{}) : SortDefns{} [function{}()]
  symbol Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'exports{}(SortModuleDecl{}) : SortDefns{} [function{}()]
  symbol Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'funcsGlobals{}(SortModuleDecl{}) : SortDefns{} [function{}()]
  symbol Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'id{}(SortModuleDecl{}) : SortOptionalId{} [function{}()]
  symbol Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'importDefns{}(SortModuleDecl{}) : SortDefns{} [function{}()]
  symbol Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'inits{}(SortModuleDecl{}) : SortDefns{} [function{}()]
  symbol Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'start{}(SortModuleDecl{}) : SortDefns{} [function{}()]
  symbol Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'types{}(SortModuleDecl{}) : SortDefns{} [function{}()]
  symbol Lblpromote'Unds'f32'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}() : SortCvtf32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(385,25,385,37)"), injective{}()]
  hooked-symbol LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("randInt"), hook{}("INT.rand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(485,18,485,56)"), function{}()]
  symbol Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(142,33,142,39)"), injective{}()]
  symbol Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(134,33,134,39)"), injective{}()]
  hooked-symbol LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(SortMap{}, SortSet{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("removeAll"), hook{}("MAP.removeAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(139,18,139,91)"), function{}()]
  hooked-symbol Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortString{}, SortInt{}) : SortString{} [hook{}("STRING.replace"), function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(605,21,605,107)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)")]
  hooked-symbol LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), hook{}("STRING.replaceAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(604,21,604,122)"), function{}()]
  hooked-symbol LblreplaceAtBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Bytes{}(SortBytes{}, SortInt{}, SortBytes{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("replaceAtBytes"), hook{}("BYTES.replaceAt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(701,20,701,86)"), function{}()]
  hooked-symbol LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), hook{}("STRING.replaceFirst"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(606,21,606,124)"), function{}()]
  symbol Lblresult'Unds'WASM'Unds'TypeKeyWord{}() : SortTypeKeyWord{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(554,38,554,45)"), injective{}()]
  symbol Lblreturn'Unds'WASM'Unds'PlainInstr{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(755,27,755,34)"), injective{}()]
  hooked-symbol LblreverseBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes{}(SortBytes{}) : SortBytes{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("reverseBytes"), hook{}("BYTES.reverse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(704,20,704,82)"), function{}()]
  hooked-symbol LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("rfindChar"), hook{}("STRING.rfindChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(593,18,593,90)"), function{}()]
  hooked-symbol LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("rfindString"), hook{}("STRING.rfind"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(591,18,591,86)"), function{}()]
  hooked-symbol LblrootFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Int{}(SortFloat{}, SortInt{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("rootFloat"), hook{}("FLOAT.root"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(523,20,523,76)"), function{}()]
  symbol Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(199,23,199,28)"), injective{}()]
  symbol Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(199,32,199,37)"), injective{}()]
  hooked-symbol LblroundFloat'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Int'Unds'Int{}(SortFloat{}, SortInt{}, SortInt{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("roundFloat"), hook{}("FLOAT.round"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(525,20,525,77)"), function{}()]
  symbol Lblselect'Unds'WASM'Unds'PlainInstr{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(292,27,292,34)"), injective{}()]
  symbol Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,23,185,27)"), injective{}()]
  symbol Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,41,185,47)"), injective{}()]
  symbol Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,31,185,37)"), injective{}()]
  hooked-symbol LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("signExtendBitRangeInt"), hook{}("INT.signExtendBitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(408,18,408,118)"), function{}()]
  hooked-symbol LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(SortFloat{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("signFloat"), hook{}("FLOAT.sign"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(508,19,508,80)"), function{}()]
  symbol LblsignedBytes{}() : SortSignedness{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("signedBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(690,25,690,62)"), injective{}()]
  hooked-symbol LblsignificandFloat'LParUndsRParUnds'FLOAT'Unds'MInt'Unds'Float{}(SortFloat{}) : SortMInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("significandFloat"), hook{}("FLOAT.significand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(511,19,511,77)"), function{}()]
  hooked-symbol LblsinFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("sinFloat"), hook{}("FLOAT.sin"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(530,20,530,87)"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(SortList{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), smtlib{}("smt_seq_len"), klabel{}("sizeList"), hook{}("LIST.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(294,18,294,121)"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(SortMap{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("sizeMap"), hook{}("MAP.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(151,18,151,103)"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(SortSet{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("size"), hook{}("SET.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(218,18,218,80)"), function{}()]
  symbol LblsortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'OptionalId{}(SortDefns{}, SortOptionalId{}) : SortModuleDecl{} [function{}(), klabel{}("sortModule"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1474,28,1474,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)")]
  symbol LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(SortOptionalId{}, SortDefns{}, SortDefns{}, SortDefns{}, SortDefns{}, SortDefns{}, SortDefns{}, SortDefns{}) : SortModuleDecl{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), klabel{}("sortedModule"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1471,27,1471,171)"), injective{}()]
  symbol LblsqrtFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [function{}(), klabel{}("sqrtFloat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(539,20,539,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)")]
  symbol Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,38,86,43)"), injective{}()]
  hooked-symbol LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("srandInt"), hook{}("INT.srand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(486,16,486,56)"), function{}()]
  symbol Lblstore16'Unds'WASM'Unds'StoreOp{}() : SortStoreOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1012,45,1012,53)"), injective{}()]
  symbol Lblstore32'Unds'WASM'Unds'StoreOp{}() : SortStoreOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1012,57,1012,65)"), injective{}()]
  symbol Lblstore8'Unds'WASM'Unds'StoreOp{}() : SortStoreOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1012,34,1012,41)"), injective{}()]
  symbol Lblstore'Unds'WASM'Unds'StoreOp{}() : SortStoreOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1012,24,1012,30)"), injective{}()]
  symbol Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(SortInt{}, SortInt{}, SortNumber{}) : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(969,22,969,51)"), injective{}()]
  symbol Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(121,31,121,35)"), injective{}()]
  hooked-symbol LblsubstrBytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Int'Unds'Int{}(SortBytes{}, SortInt{}, SortInt{}) : SortBytes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("substrBytes"), hook{}("BYTES.substr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(700,20,700,78)"), function{}()]
  hooked-symbol LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(SortString{}, SortInt{}, SortInt{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("substrString"), hook{}("STRING.substr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(589,21,589,99)"), function{}()]
  symbol Lbltable'Unds'WASM-DATA'Unds'AllocatedKind{}() : SortAllocatedKind{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(546,39,546,45)"), injective{}()]
  symbol Lbltable'LBraUndsUndsUndsRBraUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(SortOptionalId{}, SortInt{}, SortOptionalInt{}) : SortTableDefn{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(868,30,868,71)"), injective{}()]
  hooked-symbol LbltanFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("tanFloat"), hook{}("FLOAT.tan"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(532,20,532,75)"), function{}()]
  symbol Lbltrap'Unds'WASM'Unds'Instr{}() : SortInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(164,22,164,27)"), injective{}()]
  symbol LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(SortFloat{}) : SortFloat{} [function{}(), klabel{}("truncFloat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,22,67,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)")]
  symbol Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}() : SortFUnOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,66,86,72)"), injective{}()]
  symbol Lbltrunc'Unds'f32'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}() : SortCvtf32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(397,25,397,37)"), injective{}()]
  symbol Lbltrunc'Unds'f32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}() : SortCvtf32Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(397,41,397,53)"), injective{}()]
  symbol Lbltrunc'Unds'f64'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}() : SortCvtf64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(409,25,409,37)"), injective{}()]
  symbol Lbltrunc'Unds'f64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}() : SortCvtf64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(409,41,409,53)"), injective{}()]
  symbol Lblundefined'Unds'WASM-DATA'Unds'Val{}() : SortVal{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(263,20,263,30)"), injective{}()]
  symbol Lblunescape'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'String{}(SortString{}) : SortString{} [function{}(), klabel{}("unescape"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(379,23,379,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(SortString{}, SortInt{}, SortString{}) : SortString{} [function{}(), klabel{}("unescapeAux"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(380,23,380,83)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(SortFuncType{}) : SortFuncType{} [function{}(), klabel{}("unnameFuncType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(140,25,140,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(SortValTypes{}) : SortValTypes{} [function{}(), klabel{}("unnameValTypes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(148,25,148,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)")]
  symbol Lblunreachable'Unds'WASM'Unds'PlainInstr{}() : SortPlainInstr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(315,27,315,39)"), injective{}()]
  symbol LblunsignedBytes{}() : SortSignedness{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("unsignedBytes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(691,25,691,66)"), injective{}()]
  hooked-symbol LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List{}(SortList{}, SortInt{}, SortList{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("updateList"), hook{}("LIST.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(283,19,283,78)"), function{}()]
  hooked-symbol LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("updateMap"), hook{}("MAP.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(136,18,136,91)"), function{}()]
  hooked-symbol Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), klabel{}("values"), hook{}("MAP.values"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(148,19,148,76)"), function{}()]
  symbol Lblvar'Unds'WASM-DATA'Unds'Mut{}() : SortMut{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(225,39,225,43)"), injective{}()]
  symbol Lblwrap'Unds'i64'Unds'WASM-NUMERIC'Unds'Cvti64Op{}() : SortCvti64Op{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(353,25,353,34)"), injective{}()]
  symbol Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}() : SortIBinOp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(170,38,170,42)"), injective{}()]
  symbol Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(SortIdentifier{}, SortAValType{}) : SortNValType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(119,25,119,51)"), injective{}()]
  hooked-symbol Lbl'Tild'Int'Unds'{}(SortInt{}) : SortInt{} [latex{}("\\mathop{\\sim_{\\scriptstyle\\it Int}}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), symbol'Kywd'{}(), smtlib{}("notInt"), klabel{}("~Int_"), hook{}("INT.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(376,18,376,172)"), function{}()]

// generated axioms
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabIdsCell{}, SortKItem{}} (From:SortTabIdsCell{}))) [subsort{SortTabIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDeterministicMemoryGrowthCellOpt{}, \equals{SortDeterministicMemoryGrowthCellOpt{}, R} (Val:SortDeterministicMemoryGrowthCellOpt{}, inj{SortDeterministicMemoryGrowthCell{}, SortDeterministicMemoryGrowthCellOpt{}} (From:SortDeterministicMemoryGrowthCell{}))) [subsort{SortDeterministicMemoryGrowthCell{}, SortDeterministicMemoryGrowthCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextTabAddrCellOpt{}, SortKItem{}} (From:SortNextTabAddrCellOpt{}))) [subsort{SortNextTabAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemAddrsCellOpt{}, SortKItem{}} (From:SortMemAddrsCellOpt{}))) [subsort{SortMemAddrsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMmaxCell{}, SortCell{}} (From:SortMmaxCell{}))) [subsort{SortMmaxCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortModuleRegistryCell{}, SortCell{}} (From:SortModuleRegistryCell{}))) [subsort{SortModuleRegistryCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMdataCellOpt{}, SortKItem{}} (From:SortMdataCellOpt{}))) [subsort{SortMdataCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, inj{SortEmptyStmt{}, SortInstr{}} (From:SortEmptyStmt{}))) [subsort{SortEmptyStmt{}, SortInstr{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFuncAddrsCellOpt{}, \equals{SortFuncAddrsCellOpt{}, R} (Val:SortFuncAddrsCellOpt{}, inj{SortFuncAddrsCell{}, SortFuncAddrsCellOpt{}} (From:SortFuncAddrsCell{}))) [subsort{SortFuncAddrsCell{}, SortFuncAddrsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabAddrsCell{}, SortKItem{}} (From:SortTabAddrsCell{}))) [subsort{SortTabAddrsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSignedness{}, SortKItem{}} (From:SortSignedness{}))) [subsort{SortSignedness{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalIdsCellOpt{}, SortKItem{}} (From:SortLocalIdsCellOpt{}))) [subsort{SortLocalIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabsCellFragment{}, SortKItem{}} (From:SortTabsCellFragment{}))) [subsort{SortTabsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, inj{SortVecType{}, SortType{}} (From:SortVecType{}))) [subsort{SortVecType{}, SortType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalAddrsCell{}, SortKItem{}} (From:SortGlobalAddrsCell{}))) [subsort{SortGlobalAddrsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemInstCell{}, SortKItem{}} (From:SortMemInstCell{}))) [subsort{SortMemInstCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMap{}, SortKItem{}} (From:SortMap{}))) [subsort{SortMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortModuleInstancesCell{}, SortCell{}} (From:SortModuleInstancesCell{}))) [subsort{SortModuleInstancesCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreOp{}, SortKItem{}} (From:SortStoreOp{}))) [subsort{SortStoreOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTmaxCell{}, SortCell{}} (From:SortTmaxCell{}))) [subsort{SortTmaxCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMainStoreCell{}, SortCell{}} (From:SortMainStoreCell{}))) [subsort{SortMainStoreCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortPlainInstr{}, SortKItem{}} (From:SortPlainInstr{}))) [subsort{SortPlainInstr{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextGlobIdxCellOpt{}, \equals{SortNextGlobIdxCellOpt{}, R} (Val:SortNextGlobIdxCellOpt{}, inj{SortNextGlobIdxCell{}, SortNextGlobIdxCellOpt{}} (From:SortNextGlobIdxCell{}))) [subsort{SortNextGlobIdxCell{}, SortNextGlobIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortValType{}, \equals{SortValType{}, R} (Val:SortValType{}, inj{SortNValType{}, SortValType{}} (From:SortNValType{}))) [subsort{SortNValType{}, SortValType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAValType{}, SortKItem{}} (From:SortAValType{}))) [subsort{SortAValType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTAddrCell{}, SortKItem{}} (From:SortTAddrCell{}))) [subsort{SortTAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncIdsCellOpt{}, SortKItem{}} (From:SortFuncIdsCellOpt{}))) [subsort{SortFuncIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCvtOp{}, \equals{SortCvtOp{}, R} (Val:SortCvtOp{}, inj{SortCvti64Op{}, SortCvtOp{}} (From:SortCvti64Op{}))) [subsort{SortCvti64Op{}, SortCvtOp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIValType{}, SortKItem{}} (From:SortIValType{}))) [subsort{SortIValType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOptionalId{}, \equals{SortOptionalId{}, R} (Val:SortOptionalId{}, inj{SortIdentifier{}, SortOptionalId{}} (From:SortIdentifier{}))) [subsort{SortIdentifier{}, SortOptionalId{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFModInstCellOpt{}, \equals{SortFModInstCellOpt{}, R} (Val:SortFModInstCellOpt{}, inj{SortFModInstCell{}, SortFModInstCellOpt{}} (From:SortFModInstCell{}))) [subsort{SortFModInstCell{}, SortFModInstCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExportDefn{}, SortKItem{}} (From:SortExportDefn{}))) [subsort{SortExportDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortAValType{}, \equals{SortAValType{}, R} (Val:SortAValType{}, inj{SortIValType{}, SortAValType{}} (From:SortIValType{}))) [subsort{SortIValType{}, SortAValType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFLocalCell{}, SortKItem{}} (From:SortFLocalCell{}))) [subsort{SortFLocalCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmts{}, \equals{SortStmts{}, R} (Val:SortStmts{}, inj{SortDefns{}, SortStmts{}} (From:SortDefns{}))) [subsort{SortDefns{}, SortStmts{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextFuncAddrCell{}, SortCell{}} (From:SortNextFuncAddrCell{}))) [subsort{SortNextFuncAddrCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTextFormatGlobalType{}, \equals{SortTextFormatGlobalType{}, R} (Val:SortTextFormatGlobalType{}, inj{SortAValType{}, SortTextFormatGlobalType{}} (From:SortAValType{}))) [subsort{SortAValType{}, SortTextFormatGlobalType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBool{}, SortKItem{}} (From:SortBool{}))) [subsort{SortBool{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMmaxCell{}, SortKItem{}} (From:SortMmaxCell{}))) [subsort{SortMmaxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortImportDefn{}, SortDefn{}} (From:SortImportDefn{}))) [subsort{SortImportDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFuncsCell{}, SortCell{}} (From:SortFuncsCell{}))) [subsort{SortFuncsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEmptyStmt{}, SortKItem{}} (From:SortEmptyStmt{}))) [subsort{SortEmptyStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeUse{}, SortKItem{}} (From:SortTypeUse{}))) [subsort{SortTypeUse{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmString{}, SortKItem{}} (From:SortWasmString{}))) [subsort{SortWasmString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInstrs{}, SortKItem{}} (From:SortInstrs{}))) [subsort{SortInstrs{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, inj{SortFoldedInstr{}, SortInstr{}} (From:SortFoldedInstr{}))) [subsort{SortFoldedInstr{}, SortInstr{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMainStoreCellOpt{}, SortKItem{}} (From:SortMainStoreCellOpt{}))) [subsort{SortMainStoreCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOptionalId{}, SortKItem{}} (From:SortOptionalId{}))) [subsort{SortOptionalId{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTableDefn{}, SortKItem{}} (From:SortTableDefn{}))) [subsort{SortTableDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemorySpec{}, \equals{SortMemorySpec{}, R} (Val:SortMemorySpec{}, inj{SortMemType{}, SortMemorySpec{}} (From:SortMemType{}))) [subsort{SortMemType{}, SortMemorySpec{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTypesCellOpt{}, \equals{SortTypesCellOpt{}, R} (Val:SortTypesCellOpt{}, inj{SortTypesCell{}, SortTypesCellOpt{}} (From:SortTypesCell{}))) [subsort{SortTypesCell{}, SortTypesCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextFuncIdxCellOpt{}, \equals{SortNextFuncIdxCellOpt{}, R} (Val:SortNextFuncIdxCellOpt{}, inj{SortNextFuncIdxCell{}, SortNextFuncIdxCellOpt{}} (From:SortNextFuncIdxCell{}))) [subsort{SortNextFuncIdxCell{}, SortNextFuncIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTsizeCellOpt{}, \equals{SortTsizeCellOpt{}, R} (Val:SortTsizeCellOpt{}, inj{SortTsizeCell{}, SortTsizeCellOpt{}} (From:SortTsizeCell{}))) [subsort{SortTsizeCell{}, SortTsizeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortValTypes{}, SortKItem{}} (From:SortValTypes{}))) [subsort{SortValTypes{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemInstCellMap{}, SortKItem{}} (From:SortMemInstCellMap{}))) [subsort{SortMemInstCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTypeIdsCellOpt{}, \equals{SortTypeIdsCellOpt{}, R} (Val:SortTypeIdsCellOpt{}, inj{SortTypeIdsCell{}, SortTypeIdsCellOpt{}} (From:SortTypeIdsCell{}))) [subsort{SortTypeIdsCell{}, SortTypeIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemAddrsCellOpt{}, \equals{SortMemAddrsCellOpt{}, R} (Val:SortMemAddrsCellOpt{}, inj{SortMemAddrsCell{}, SortMemAddrsCellOpt{}} (From:SortMemAddrsCell{}))) [subsort{SortMemAddrsCell{}, SortMemAddrsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLocalIdsCellOpt{}, \equals{SortLocalIdsCellOpt{}, R} (Val:SortLocalIdsCellOpt{}, inj{SortLocalIdsCell{}, SortLocalIdsCellOpt{}} (From:SortLocalIdsCell{}))) [subsort{SortLocalIdsCell{}, SortLocalIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextModuleIdxCell{}, SortCell{}} (From:SortNextModuleIdxCell{}))) [subsort{SortNextModuleIdxCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortGlobalDefn{}, SortDefn{}} (From:SortGlobalDefn{}))) [subsort{SortGlobalDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIndex{}, SortKItem{}} (From:SortIndex{}))) [subsort{SortIndex{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeDecls{}, SortKItem{}} (From:SortTypeDecls{}))) [subsort{SortTypeDecls{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOffset{}, \equals{SortOffset{}, R} (Val:SortOffset{}, inj{SortInstrs{}, SortOffset{}} (From:SortInstrs{}))) [subsort{SortInstrs{}, SortOffset{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextGlobIdxCell{}, SortCell{}} (From:SortNextGlobIdxCell{}))) [subsort{SortNextGlobIdxCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortValstackCellOpt{}, \equals{SortValstackCellOpt{}, R} (Val:SortValstackCellOpt{}, inj{SortValstackCell{}, SortValstackCellOpt{}} (From:SortValstackCell{}))) [subsort{SortValstackCell{}, SortValstackCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBlockInstr{}, SortKItem{}} (From:SortBlockInstr{}))) [subsort{SortBlockInstr{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTAddrCellOpt{}, \equals{SortTAddrCellOpt{}, R} (Val:SortTAddrCellOpt{}, inj{SortTAddrCell{}, SortTAddrCellOpt{}} (From:SortTAddrCell{}))) [subsort{SortTAddrCell{}, SortTAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOffsetArg{}, SortKItem{}} (From:SortOffsetArg{}))) [subsort{SortOffsetArg{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortAValType{}, \equals{SortAValType{}, R} (Val:SortAValType{}, inj{SortFValType{}, SortAValType{}} (From:SortFValType{}))) [subsort{SortFValType{}, SortAValType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextTypeIdxCell{}, SortCell{}} (From:SortNextTypeIdxCell{}))) [subsort{SortNextTypeIdxCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefns{}, \equals{SortDefns{}, R} (Val:SortDefns{}, inj{SortEmptyStmts{}, SortDefns{}} (From:SortEmptyStmts{}))) [subsort{SortEmptyStmts{}, SortDefns{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncIdsCell{}, SortKItem{}} (From:SortFuncIdsCell{}))) [subsort{SortFuncIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGValueCell{}, SortKItem{}} (From:SortGValueCell{}))) [subsort{SortGValueCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncAddrsCell{}, SortKItem{}} (From:SortFuncAddrsCell{}))) [subsort{SortFuncAddrsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFuncsCellOpt{}, \equals{SortFuncsCellOpt{}, R} (Val:SortFuncsCellOpt{}, inj{SortFuncsCell{}, SortFuncsCellOpt{}} (From:SortFuncsCell{}))) [subsort{SortFuncsCell{}, SortFuncsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, inj{SortPlainInstr{}, SortInstr{}} (From:SortPlainInstr{}))) [subsort{SortPlainInstr{}, SortInstr{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTdataCell{}, SortKItem{}} (From:SortTdataCell{}))) [subsort{SortTdataCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIVal{}, SortKItem{}} (From:SortIVal{}))) [subsort{SortIVal{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFuncDefCellMap{}, \equals{SortFuncDefCellMap{}, R} (Val:SortFuncDefCellMap{}, inj{SortFuncDefCell{}, SortFuncDefCellMap{}} (From:SortFuncDefCell{}))) [subsort{SortFuncDefCell{}, SortFuncDefCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncsCell{}, SortKItem{}} (From:SortFuncsCell{}))) [subsort{SortFuncsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTableSpec{}, SortKItem{}} (From:SortTableSpec{}))) [subsort{SortTableSpec{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIBinOp{}, SortKItem{}} (From:SortIBinOp{}))) [subsort{SortIBinOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemsCellOpt{}, SortKItem{}} (From:SortMemsCellOpt{}))) [subsort{SortMemsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemsCellFragment{}, SortKItem{}} (From:SortMemsCellFragment{}))) [subsort{SortMemsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGValueCellOpt{}, SortKItem{}} (From:SortGValueCellOpt{}))) [subsort{SortGValueCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFLocalCellOpt{}, SortKItem{}} (From:SortFLocalCellOpt{}))) [subsort{SortFLocalCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFTypeCell{}, SortCell{}} (From:SortFTypeCell{}))) [subsort{SortFTypeCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFLocalCell{}, SortCell{}} (From:SortFLocalCell{}))) [subsort{SortFLocalCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortDeterministicMemoryGrowthCell{}, SortCell{}} (From:SortDeterministicMemoryGrowthCell{}))) [subsort{SortDeterministicMemoryGrowthCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMdataCell{}, SortCell{}} (From:SortMdataCell{}))) [subsort{SortMdataCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortByteMap{}, SortKItem{}} (From:SortByteMap{}))) [subsort{SortByteMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabIdsCellOpt{}, SortKItem{}} (From:SortTabIdsCellOpt{}))) [subsort{SortTabIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNumber{}, \equals{SortNumber{}, R} (Val:SortNumber{}, inj{SortFloat{}, SortNumber{}} (From:SortFloat{}))) [subsort{SortFloat{}, SortNumber{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGMutCellOpt{}, \equals{SortGMutCellOpt{}, R} (Val:SortGMutCellOpt{}, inj{SortGMutCell{}, SortGMutCellOpt{}} (From:SortGMutCell{}))) [subsort{SortGMutCell{}, SortGMutCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLoadOp{}, SortKItem{}} (From:SortLoadOp{}))) [subsort{SortLoadOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortGlobalsCell{}, SortCell{}} (From:SortGlobalsCell{}))) [subsort{SortGlobalsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncsCellFragment{}, SortKItem{}} (From:SortFuncsCellFragment{}))) [subsort{SortFuncsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTsizeCell{}, SortKItem{}} (From:SortTsizeCell{}))) [subsort{SortTsizeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalDecls{}, SortKItem{}} (From:SortLocalDecls{}))) [subsort{SortLocalDecls{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTabAddrsCellOpt{}, \equals{SortTabAddrsCellOpt{}, R} (Val:SortTabAddrsCellOpt{}, inj{SortTabAddrsCell{}, SortTabAddrsCellOpt{}} (From:SortTabAddrsCell{}))) [subsort{SortTabAddrsCell{}, SortTabAddrsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLabel{}, SortKItem{}} (From:SortLabel{}))) [subsort{SortLabel{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIdentifier{}, \equals{SortIdentifier{}, R} (Val:SortIdentifier{}, inj{SortIdentifierToken{}, SortIdentifier{}} (From:SortIdentifierToken{}))) [subsort{SortIdentifierToken{}, SortIdentifier{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLabelDepthCell{}, SortKItem{}} (From:SortLabelDepthCell{}))) [subsort{SortLabelDepthCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortKCell{}, SortCell{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortType{}, SortKItem{}} (From:SortType{}))) [subsort{SortType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmts{}, \equals{SortStmts{}, R} (Val:SortStmts{}, inj{SortInstrs{}, SortStmts{}} (From:SortInstrs{}))) [subsort{SortInstrs{}, SortStmts{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFTypeCellOpt{}, \equals{SortFTypeCellOpt{}, R} (Val:SortFTypeCellOpt{}, inj{SortFTypeCell{}, SortFTypeCellOpt{}} (From:SortFTypeCell{}))) [subsort{SortFTypeCell{}, SortFTypeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextTypeIdxCellOpt{}, \equals{SortNextTypeIdxCellOpt{}, R} (Val:SortNextTypeIdxCellOpt{}, inj{SortNextTypeIdxCell{}, SortNextTypeIdxCellOpt{}} (From:SortNextTypeIdxCell{}))) [subsort{SortNextTypeIdxCell{}, SortNextTypeIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstCell{}, SortKItem{}} (From:SortModuleInstCell{}))) [subsort{SortModuleInstCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextFreshIdCellOpt{}, \equals{SortNextFreshIdCellOpt{}, R} (Val:SortNextFreshIdCellOpt{}, inj{SortNextFreshIdCell{}, SortNextFreshIdCellOpt{}} (From:SortNextFreshIdCell{}))) [subsort{SortNextFreshIdCell{}, SortNextFreshIdCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCurFrameCellOpt{}, \equals{SortCurFrameCellOpt{}, R} (Val:SortCurFrameCellOpt{}, inj{SortCurFrameCell{}, SortCurFrameCellOpt{}} (From:SortCurFrameCell{}))) [subsort{SortCurFrameCell{}, SortCurFrameCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMsizeCellOpt{}, SortKItem{}} (From:SortMsizeCellOpt{}))) [subsort{SortMsizeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortWasmString{}, \equals{SortWasmString{}, R} (Val:SortWasmString{}, inj{SortWasmStringToken{}, SortWasmString{}} (From:SortWasmStringToken{}))) [subsort{SortWasmStringToken{}, SortWasmString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLabelDepthCellOpt{}, SortKItem{}} (From:SortLabelDepthCellOpt{}))) [subsort{SortLabelDepthCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabInstCell{}, SortKItem{}} (From:SortTabInstCell{}))) [subsort{SortTabInstCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextFuncAddrCellOpt{}, \equals{SortNextFuncAddrCellOpt{}, R} (Val:SortNextFuncAddrCellOpt{}, inj{SortNextFuncAddrCell{}, SortNextFuncAddrCellOpt{}} (From:SortNextFuncAddrCell{}))) [subsort{SortNextFuncAddrCell{}, SortNextFuncAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortExportsCell{}, SortCell{}} (From:SortExportsCell{}))) [subsort{SortExportsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortElemDefn{}, SortDefn{}} (From:SortElemDefn{}))) [subsort{SortElemDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStoreOpM{}, SortKItem{}} (From:SortStoreOpM{}))) [subsort{SortStoreOpM{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncsCellOpt{}, SortKItem{}} (From:SortFuncsCellOpt{}))) [subsort{SortFuncsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortGAddrCell{}, SortCell{}} (From:SortGAddrCell{}))) [subsort{SortGAddrCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, inj{SortBlockInstr{}, SortInstr{}} (From:SortBlockInstr{}))) [subsort{SortBlockInstr{}, SortInstr{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortLocalsCell{}, SortCell{}} (From:SortLocalsCell{}))) [subsort{SortLocalsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMsizeCell{}, SortCell{}} (From:SortMsizeCell{}))) [subsort{SortMsizeCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTsizeCellOpt{}, SortKItem{}} (From:SortTsizeCellOpt{}))) [subsort{SortTsizeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemsCellOpt{}, \equals{SortMemsCellOpt{}, R} (Val:SortMemsCellOpt{}, inj{SortMemsCell{}, SortMemsCellOpt{}} (From:SortMemsCell{}))) [subsort{SortMemsCell{}, SortMemsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortFVal{}, SortVal{}} (From:SortFVal{}))) [subsort{SortFVal{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFTypeCell{}, SortKItem{}} (From:SortFTypeCell{}))) [subsort{SortFTypeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, inj{SortWasmIntToken{}, SortInt{}} (From:SortWasmIntToken{}))) [subsort{SortWasmIntToken{}, SortInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMdataCell{}, SortKItem{}} (From:SortMdataCell{}))) [subsort{SortMdataCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeDefn{}, SortKItem{}} (From:SortTypeDefn{}))) [subsort{SortTypeDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortLabelIdsCell{}, SortCell{}} (From:SortLabelIdsCell{}))) [subsort{SortLabelIdsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSet{}, SortKItem{}} (From:SortSet{}))) [subsort{SortSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstancesCellOpt{}, SortKItem{}} (From:SortModuleInstancesCellOpt{}))) [subsort{SortModuleInstancesCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, inj{SortIVal{}, SortVal{}} (From:SortIVal{}))) [subsort{SortIVal{}, SortVal{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCvti32Op{}, SortKItem{}} (From:SortCvti32Op{}))) [subsort{SortCvti32Op{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCell{}, SortKItem{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMAddrCell{}, SortCell{}} (From:SortMAddrCell{}))) [subsort{SortMAddrCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortDataDefn{}, SortDefn{}} (From:SortDataDefn{}))) [subsort{SortDataDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortLocalIdsCell{}, SortCell{}} (From:SortLocalIdsCell{}))) [subsort{SortLocalIdsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCvtf64Op{}, SortKItem{}} (From:SortCvtf64Op{}))) [subsort{SortCvtf64Op{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextGlobAddrCellOpt{}, SortKItem{}} (From:SortNextGlobAddrCellOpt{}))) [subsort{SortNextGlobAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTmaxCell{}, SortKItem{}} (From:SortTmaxCell{}))) [subsort{SortTmaxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMainStoreCell{}, SortKItem{}} (From:SortMainStoreCell{}))) [subsort{SortMainStoreCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortWasmCellOpt{}, \equals{SortWasmCellOpt{}, R} (Val:SortWasmCellOpt{}, inj{SortWasmCell{}, SortWasmCellOpt{}} (From:SortWasmCell{}))) [subsort{SortWasmCell{}, SortWasmCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemsCell{}, SortKItem{}} (From:SortMemsCell{}))) [subsort{SortMemsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextFuncIdxCell{}, SortCell{}} (From:SortNextFuncIdxCell{}))) [subsort{SortNextFuncIdxCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLabelIdsCellOpt{}, \equals{SortLabelIdsCellOpt{}, R} (Val:SortLabelIdsCellOpt{}, inj{SortLabelIdsCell{}, SortLabelIdsCellOpt{}} (From:SortLabelIdsCell{}))) [subsort{SortLabelIdsCell{}, SortLabelIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortGMutCell{}, SortCell{}} (From:SortGMutCell{}))) [subsort{SortGMutCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortModIdxCell{}, SortCell{}} (From:SortModIdxCell{}))) [subsort{SortModIdxCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExportsCellOpt{}, \equals{SortExportsCellOpt{}, R} (Val:SortExportsCellOpt{}, inj{SortExportsCell{}, SortExportsCellOpt{}} (From:SortExportsCell{}))) [subsort{SortExportsCell{}, SortExportsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEmptyStmts{}, SortKItem{}} (From:SortEmptyStmts{}))) [subsort{SortEmptyStmts{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextMemAddrCellOpt{}, SortKItem{}} (From:SortNextMemAddrCellOpt{}))) [subsort{SortNextMemAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNValType{}, SortKItem{}} (From:SortNValType{}))) [subsort{SortNValType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExternval{}, SortKItem{}} (From:SortExternval{}))) [subsort{SortExternval{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextMemAddrCell{}, SortCell{}} (From:SortNextMemAddrCell{}))) [subsort{SortNextMemAddrCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextMemAddrCellOpt{}, \equals{SortNextMemAddrCellOpt{}, R} (Val:SortNextMemAddrCellOpt{}, inj{SortNextMemAddrCell{}, SortNextMemAddrCellOpt{}} (From:SortNextMemAddrCell{}))) [subsort{SortNextMemAddrCell{}, SortNextMemAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLabelIdsCell{}, SortKItem{}} (From:SortLabelIdsCell{}))) [subsort{SortLabelIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFUnOp{}, SortKItem{}} (From:SortFUnOp{}))) [subsort{SortFUnOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalInstCellFragment{}, SortKItem{}} (From:SortGlobalInstCellFragment{}))) [subsort{SortGlobalInstCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalInstCell{}, SortKItem{}} (From:SortGlobalInstCell{}))) [subsort{SortGlobalInstCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurFrameCell{}, SortKItem{}} (From:SortCurFrameCell{}))) [subsort{SortCurFrameCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCvtOp{}, SortKItem{}} (From:SortCvtOp{}))) [subsort{SortCvtOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeDecl{}, SortKItem{}} (From:SortTypeDecl{}))) [subsort{SortTypeDecl{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortStartDefn{}, SortDefn{}} (From:SortStartDefn{}))) [subsort{SortStartDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFCodeCellOpt{}, SortKItem{}} (From:SortFCodeCellOpt{}))) [subsort{SortFCodeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeKeyWord{}, SortKItem{}} (From:SortTypeKeyWord{}))) [subsort{SortTypeKeyWord{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextModuleIdxCellOpt{}, \equals{SortNextModuleIdxCellOpt{}, R} (Val:SortNextModuleIdxCellOpt{}, inj{SortNextModuleIdxCell{}, SortNextModuleIdxCellOpt{}} (From:SortNextModuleIdxCell{}))) [subsort{SortNextModuleIdxCell{}, SortNextModuleIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMut{}, SortKItem{}} (From:SortMut{}))) [subsort{SortMut{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOffset{}, SortKItem{}} (From:SortOffset{}))) [subsort{SortOffset{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextModuleIdxCell{}, SortKItem{}} (From:SortNextModuleIdxCell{}))) [subsort{SortNextModuleIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIndex{}, \equals{SortIndex{}, R} (Val:SortIndex{}, inj{SortIdentifier{}, SortIndex{}} (From:SortIdentifier{}))) [subsort{SortIdentifier{}, SortIndex{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIUnOp{}, SortKItem{}} (From:SortIUnOp{}))) [subsort{SortIUnOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextGlobIdxCell{}, SortKItem{}} (From:SortNextGlobIdxCell{}))) [subsort{SortNextGlobIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortValstackCellOpt{}, SortKItem{}} (From:SortValstackCellOpt{}))) [subsort{SortValstackCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemArg{}, \equals{SortMemArg{}, R} (Val:SortMemArg{}, inj{SortOffsetArg{}, SortMemArg{}} (From:SortOffsetArg{}))) [subsort{SortOffsetArg{}, SortMemArg{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModIdxCell{}, SortKItem{}} (From:SortModIdxCell{}))) [subsort{SortModIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGAddrCellOpt{}, SortKItem{}} (From:SortGAddrCellOpt{}))) [subsort{SortGAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFCodeCellOpt{}, \equals{SortFCodeCellOpt{}, R} (Val:SortFCodeCellOpt{}, inj{SortFCodeCell{}, SortFCodeCellOpt{}} (From:SortFCodeCell{}))) [subsort{SortFCodeCell{}, SortFCodeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobIdsCell{}, SortKItem{}} (From:SortGlobIdsCell{}))) [subsort{SortGlobIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLabelDepthCellOpt{}, \equals{SortLabelDepthCellOpt{}, R} (Val:SortLabelDepthCellOpt{}, inj{SortLabelDepthCell{}, SortLabelDepthCellOpt{}} (From:SortLabelDepthCell{}))) [subsort{SortLabelDepthCell{}, SortLabelDepthCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalsCellOpt{}, SortKItem{}} (From:SortGlobalsCellOpt{}))) [subsort{SortGlobalsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCell{}, SortKItem{}} (From:SortCell{}))) [subsort{SortCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemInstCellFragment{}, SortKItem{}} (From:SortMemInstCellFragment{}))) [subsort{SortMemInstCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGlobalAddrsCellOpt{}, \equals{SortGlobalAddrsCellOpt{}, R} (Val:SortGlobalAddrsCellOpt{}, inj{SortGlobalAddrsCell{}, SortGlobalAddrsCellOpt{}} (From:SortGlobalAddrsCell{}))) [subsort{SortGlobalAddrsCell{}, SortGlobalAddrsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStoreOpM{}, \equals{SortStoreOpM{}, R} (Val:SortStoreOpM{}, inj{SortStoreOp{}, SortStoreOpM{}} (From:SortStoreOp{}))) [subsort{SortStoreOp{}, SortStoreOpM{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLoadOpM{}, SortKItem{}} (From:SortLoadOpM{}))) [subsort{SortLoadOpM{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortMemoryDefn{}, SortDefn{}} (From:SortMemoryDefn{}))) [subsort{SortMemoryDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModIdxCellOpt{}, SortKItem{}} (From:SortModIdxCellOpt{}))) [subsort{SortModIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextFreshIdCellOpt{}, SortKItem{}} (From:SortNextFreshIdCellOpt{}))) [subsort{SortNextFreshIdCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOptionalInt{}, SortKItem{}} (From:SortOptionalInt{}))) [subsort{SortOptionalInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTabsCell{}, SortCell{}} (From:SortTabsCell{}))) [subsort{SortTabsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemIdsCellOpt{}, SortKItem{}} (From:SortMemIdsCellOpt{}))) [subsort{SortMemIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextGlobIdxCellOpt{}, SortKItem{}} (From:SortNextGlobIdxCellOpt{}))) [subsort{SortNextGlobIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortTypeDefn{}, SortDefn{}} (From:SortTypeDefn{}))) [subsort{SortTypeDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleIdsCell{}, SortKItem{}} (From:SortModuleIdsCell{}))) [subsort{SortModuleIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalDefn{}, SortKItem{}} (From:SortGlobalDefn{}))) [subsort{SortGlobalDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemType{}, \equals{SortMemType{}, R} (Val:SortMemType{}, inj{SortLimits{}, SortMemType{}} (From:SortLimits{}))) [subsort{SortLimits{}, SortMemType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBytes{}, SortKItem{}} (From:SortBytes{}))) [subsort{SortBytes{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOptionalInt{}, \equals{SortOptionalInt{}, R} (Val:SortOptionalInt{}, inj{SortInt{}, SortOptionalInt{}} (From:SortInt{}))) [subsort{SortInt{}, SortOptionalInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleInstCellMap{}, \equals{SortModuleInstCellMap{}, R} (Val:SortModuleInstCellMap{}, inj{SortModuleInstCell{}, SortModuleInstCellMap{}} (From:SortModuleInstCell{}))) [subsort{SortModuleInstCell{}, SortModuleInstCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}} (From:SortDeterministicMemoryGrowthCellOpt{}))) [subsort{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFuncDefCell{}, SortCell{}} (From:SortFuncDefCell{}))) [subsort{SortFuncDefCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMAddrCellOpt{}, SortKItem{}} (From:SortMAddrCellOpt{}))) [subsort{SortMAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMemIdsCell{}, SortCell{}} (From:SortMemIdsCell{}))) [subsort{SortMemIdsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFValType{}, SortKItem{}} (From:SortFValType{}))) [subsort{SortFValType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemIdsCellOpt{}, \equals{SortMemIdsCellOpt{}, R} (Val:SortMemIdsCellOpt{}, inj{SortMemIdsCell{}, SortMemIdsCellOpt{}} (From:SortMemIdsCell{}))) [subsort{SortMemIdsCell{}, SortMemIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncDefCellMap{}, SortKItem{}} (From:SortFuncDefCellMap{}))) [subsort{SortFuncDefCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalType{}, SortKItem{}} (From:SortGlobalType{}))) [subsort{SortGlobalType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurFrameCellFragment{}, SortKItem{}} (From:SortCurFrameCellFragment{}))) [subsort{SortCurFrameCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMAddrCellOpt{}, \equals{SortMAddrCellOpt{}, R} (Val:SortMAddrCellOpt{}, inj{SortMAddrCell{}, SortMAddrCellOpt{}} (From:SortMAddrCell{}))) [subsort{SortMAddrCell{}, SortMAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCvtOp{}, \equals{SortCvtOp{}, R} (Val:SortCvtOp{}, inj{SortCvti32Op{}, SortCvtOp{}} (From:SortCvti32Op{}))) [subsort{SortCvti32Op{}, SortCvtOp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGlobalsCellOpt{}, \equals{SortGlobalsCellOpt{}, R} (Val:SortGlobalsCellOpt{}, inj{SortGlobalsCell{}, SortGlobalsCellOpt{}} (From:SortGlobalsCell{}))) [subsort{SortGlobalsCell{}, SortGlobalsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextFuncIdxCellOpt{}, SortKItem{}} (From:SortNextFuncIdxCellOpt{}))) [subsort{SortNextFuncIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextModuleIdxCellOpt{}, SortKItem{}} (From:SortNextModuleIdxCellOpt{}))) [subsort{SortNextModuleIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCvtOp{}, \equals{SortCvtOp{}, R} (Val:SortCvtOp{}, inj{SortCvtf64Op{}, SortCvtOp{}} (From:SortCvtf64Op{}))) [subsort{SortCvtf64Op{}, SortCvtOp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncSpec{}, SortKItem{}} (From:SortFuncSpec{}))) [subsort{SortFuncSpec{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFuncIdsCell{}, SortCell{}} (From:SortFuncIdsCell{}))) [subsort{SortFuncIdsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIndex{}, \equals{SortIndex{}, R} (Val:SortIndex{}, inj{SortInt{}, SortIndex{}} (From:SortInt{}))) [subsort{SortInt{}, SortIndex{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMemAddrsCell{}, SortCell{}} (From:SortMemAddrsCell{}))) [subsort{SortMemAddrsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMAddrCell{}, SortKItem{}} (From:SortMAddrCell{}))) [subsort{SortMAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFCodeCell{}, SortCell{}} (From:SortFCodeCell{}))) [subsort{SortFCodeCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalIdsCell{}, SortKItem{}} (From:SortLocalIdsCell{}))) [subsort{SortLocalIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFAddrCell{}, SortCell{}} (From:SortFAddrCell{}))) [subsort{SortFAddrCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFModInstCell{}, SortCell{}} (From:SortFModInstCell{}))) [subsort{SortFModInstCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabAddrsCellOpt{}, SortKItem{}} (From:SortTabAddrsCellOpt{}))) [subsort{SortTabAddrsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGlobalInstCellMap{}, \equals{SortGlobalInstCellMap{}, R} (Val:SortGlobalInstCellMap{}, inj{SortGlobalInstCell{}, SortGlobalInstCellMap{}} (From:SortGlobalInstCell{}))) [subsort{SortGlobalInstCell{}, SortGlobalInstCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTabsCellOpt{}, \equals{SortTabsCellOpt{}, R} (Val:SortTabsCellOpt{}, inj{SortTabsCell{}, SortTabsCellOpt{}} (From:SortTabsCell{}))) [subsort{SortTabsCell{}, SortTabsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInstrs{}, \equals{SortInstrs{}, R} (Val:SortInstrs{}, inj{SortEmptyStmts{}, SortInstrs{}} (From:SortEmptyStmts{}))) [subsort{SortEmptyStmts{}, SortInstrs{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncAddrsCellOpt{}, SortKItem{}} (From:SortFuncAddrsCellOpt{}))) [subsort{SortFuncAddrsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTabIdsCell{}, SortCell{}} (From:SortTabIdsCell{}))) [subsort{SortTabIdsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncType{}, SortKItem{}} (From:SortFuncType{}))) [subsort{SortFuncType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCvtf32Op{}, SortKItem{}} (From:SortCvtf32Op{}))) [subsort{SortCvtf32Op{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypesCell{}, SortKItem{}} (From:SortTypesCell{}))) [subsort{SortTypesCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTypeIdsCell{}, SortCell{}} (From:SortTypeIdsCell{}))) [subsort{SortTypeIdsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTmaxCellOpt{}, SortKItem{}} (From:SortTmaxCellOpt{}))) [subsort{SortTmaxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMdataCellOpt{}, \equals{SortMdataCellOpt{}, R} (Val:SortMdataCellOpt{}, inj{SortMdataCell{}, SortMdataCellOpt{}} (From:SortMdataCell{}))) [subsort{SortMdataCell{}, SortMdataCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLimits{}, \equals{SortLimits{}, R} (Val:SortLimits{}, inj{SortInt{}, SortLimits{}} (From:SortInt{}))) [subsort{SortInt{}, SortLimits{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortImportDesc{}, SortKItem{}} (From:SortImportDesc{}))) [subsort{SortImportDesc{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortElemDefn{}, SortKItem{}} (From:SortElemDefn{}))) [subsort{SortElemDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFModInstCellOpt{}, SortKItem{}} (From:SortFModInstCellOpt{}))) [subsort{SortFModInstCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeIdsCellOpt{}, SortKItem{}} (From:SortTypeIdsCellOpt{}))) [subsort{SortTypeIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTdataCellOpt{}, \equals{SortTdataCellOpt{}, R} (Val:SortTdataCellOpt{}, inj{SortTdataCell{}, SortTdataCellOpt{}} (From:SortTdataCell{}))) [subsort{SortTdataCell{}, SortTdataCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTabIdsCellOpt{}, \equals{SortTabIdsCellOpt{}, R} (Val:SortTabIdsCellOpt{}, inj{SortTabIdsCell{}, SortTabIdsCellOpt{}} (From:SortTabIdsCell{}))) [subsort{SortTabIdsCell{}, SortTabIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextFreshIdCell{}, SortCell{}} (From:SortNextFreshIdCell{}))) [subsort{SortNextFreshIdCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMemInstCell{}, SortCell{}} (From:SortMemInstCell{}))) [subsort{SortMemInstCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFRelOp{}, SortKItem{}} (From:SortFRelOp{}))) [subsort{SortFRelOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLocalsCellOpt{}, \equals{SortLocalsCellOpt{}, R} (Val:SortLocalsCellOpt{}, inj{SortLocalsCell{}, SortLocalsCellOpt{}} (From:SortLocalsCell{}))) [subsort{SortLocalsCell{}, SortLocalsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortWasmCell{}, SortCell{}} (From:SortWasmCell{}))) [subsort{SortWasmCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemoryDefn{}, SortKItem{}} (From:SortMemoryDefn{}))) [subsort{SortMemoryDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTableElemType{}, SortKItem{}} (From:SortTableElemType{}))) [subsort{SortTableElemType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNumber{}, SortKItem{}} (From:SortNumber{}))) [subsort{SortNumber{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemType{}, SortKItem{}} (From:SortMemType{}))) [subsort{SortMemType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemAddrsCell{}, SortKItem{}} (From:SortMemAddrsCell{}))) [subsort{SortMemAddrsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortElemSegment{}, SortKItem{}} (From:SortElemSegment{}))) [subsort{SortElemSegment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMInt{}, SortKItem{}} (From:SortMInt{}))) [subsort{SortMInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortCurModIdxCell{}, SortCell{}} (From:SortCurModIdxCell{}))) [subsort{SortCurModIdxCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTableType{}, SortKItem{}} (From:SortTableType{}))) [subsort{SortTableType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDeterministicMemoryGrowthCell{}, SortKItem{}} (From:SortDeterministicMemoryGrowthCell{}))) [subsort{SortDeterministicMemoryGrowthCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortFuncDefn{}, SortDefn{}} (From:SortFuncDefn{}))) [subsort{SortFuncDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGMutCellOpt{}, SortKItem{}} (From:SortGMutCellOpt{}))) [subsort{SortGMutCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalsCell{}, SortKItem{}} (From:SortGlobalsCell{}))) [subsort{SortGlobalsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDataDefn{}, SortKItem{}} (From:SortDataDefn{}))) [subsort{SortDataDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCvti64Op{}, SortKItem{}} (From:SortCvti64Op{}))) [subsort{SortCvti64Op{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleRegistryCell{}, SortKItem{}} (From:SortModuleRegistryCell{}))) [subsort{SortModuleRegistryCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMmaxCellOpt{}, SortKItem{}} (From:SortMmaxCellOpt{}))) [subsort{SortMmaxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, inj{SortValType{}, SortType{}} (From:SortValType{}))) [subsort{SortValType{}, SortType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmStringToken{}, SortKItem{}} (From:SortWasmStringToken{}))) [subsort{SortWasmStringToken{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFTypeCellOpt{}, SortKItem{}} (From:SortFTypeCellOpt{}))) [subsort{SortFTypeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypeIdsCell{}, SortKItem{}} (From:SortTypeIdsCell{}))) [subsort{SortTypeIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextTabAddrCell{}, SortCell{}} (From:SortNextTabAddrCell{}))) [subsort{SortNextTabAddrCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAlignArg{}, SortKItem{}} (From:SortAlignArg{}))) [subsort{SortAlignArg{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLabelIdsCellOpt{}, SortKItem{}} (From:SortLabelIdsCellOpt{}))) [subsort{SortLabelIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextTypeIdxCellOpt{}, SortKItem{}} (From:SortNextTypeIdxCellOpt{}))) [subsort{SortNextTypeIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstancesCell{}, SortKItem{}} (From:SortModuleInstancesCell{}))) [subsort{SortModuleInstancesCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMsizeCellOpt{}, \equals{SortMsizeCellOpt{}, R} (Val:SortMsizeCellOpt{}, inj{SortMsizeCell{}, SortMsizeCellOpt{}} (From:SortMsizeCell{}))) [subsort{SortMsizeCell{}, SortMsizeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortValType{}, SortKItem{}} (From:SortValType{}))) [subsort{SortValType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExportsCell{}, SortKItem{}} (From:SortExportsCell{}))) [subsort{SortExportsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncDefCellFragment{}, SortKItem{}} (From:SortFuncDefCellFragment{}))) [subsort{SortFuncDefCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGAddrCell{}, SortKItem{}} (From:SortGAddrCell{}))) [subsort{SortGAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInlineImport{}, SortKItem{}} (From:SortInlineImport{}))) [subsort{SortInlineImport{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalsCell{}, SortKItem{}} (From:SortLocalsCell{}))) [subsort{SortLocalsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFVal{}, SortKItem{}} (From:SortFVal{}))) [subsort{SortFVal{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTdataCellOpt{}, SortKItem{}} (From:SortTdataCellOpt{}))) [subsort{SortTdataCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTmaxCellOpt{}, \equals{SortTmaxCellOpt{}, R} (Val:SortTmaxCellOpt{}, inj{SortTmaxCell{}, SortTmaxCellOpt{}} (From:SortTmaxCell{}))) [subsort{SortTmaxCell{}, SortTmaxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTextFormatGlobalType{}, SortKItem{}} (From:SortTextFormatGlobalType{}))) [subsort{SortTextFormatGlobalType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextFuncAddrCell{}, SortKItem{}} (From:SortNextFuncAddrCell{}))) [subsort{SortNextFuncAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStartDefn{}, SortKItem{}} (From:SortStartDefn{}))) [subsort{SortStartDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, inj{SortKCell{}, SortKCellOpt{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortValstackCell{}, SortCell{}} (From:SortValstackCell{}))) [subsort{SortValstackCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleIdsCellOpt{}, SortKItem{}} (From:SortModuleIdsCellOpt{}))) [subsort{SortModuleIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortFuncAddrsCell{}, SortCell{}} (From:SortFuncAddrsCell{}))) [subsort{SortFuncAddrsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFBinOp{}, SortKItem{}} (From:SortFBinOp{}))) [subsort{SortFBinOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, inj{SortFuncType{}, SortType{}} (From:SortFuncType{}))) [subsort{SortFuncType{}, SortType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortExportDefn{}, SortDefn{}} (From:SortExportDefn{}))) [subsort{SortExportDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDefn{}, SortKItem{}} (From:SortDefn{}))) [subsort{SortDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemArg{}, \equals{SortMemArg{}, R} (Val:SortMemArg{}, inj{SortAlignArg{}, SortMemArg{}} (From:SortAlignArg{}))) [subsort{SortAlignArg{}, SortMemArg{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGlobIdsCellOpt{}, \equals{SortGlobIdsCellOpt{}, R} (Val:SortGlobIdsCellOpt{}, inj{SortGlobIdsCell{}, SortGlobIdsCellOpt{}} (From:SortGlobIdsCell{}))) [subsort{SortGlobIdsCell{}, SortGlobIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurModIdxCellOpt{}, SortKItem{}} (From:SortCurModIdxCellOpt{}))) [subsort{SortCurModIdxCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModIdxCellOpt{}, \equals{SortModIdxCellOpt{}, R} (Val:SortModIdxCellOpt{}, inj{SortModIdxCell{}, SortModIdxCellOpt{}} (From:SortModIdxCell{}))) [subsort{SortModIdxCell{}, SortModIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStmts{}, SortKItem{}} (From:SortStmts{}))) [subsort{SortStmts{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortValStack{}, SortKItem{}} (From:SortValStack{}))) [subsort{SortValStack{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabsCellOpt{}, SortKItem{}} (From:SortTabsCellOpt{}))) [subsort{SortTabsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortEmptyStmt{}, SortDefn{}} (From:SortEmptyStmt{}))) [subsort{SortEmptyStmt{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMainStoreCellFragment{}, SortKItem{}} (From:SortMainStoreCellFragment{}))) [subsort{SortMainStoreCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortDefn{}, SortStmt{}} (From:SortDefn{}))) [subsort{SortDefn{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFLocalCellOpt{}, \equals{SortFLocalCellOpt{}, R} (Val:SortFLocalCellOpt{}, inj{SortFLocalCell{}, SortFLocalCellOpt{}} (From:SortFLocalCell{}))) [subsort{SortFLocalCell{}, SortFLocalCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextFuncIdxCell{}, SortKItem{}} (From:SortNextFuncIdxCell{}))) [subsort{SortNextFuncIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncDefCell{}, SortKItem{}} (From:SortFuncDefCell{}))) [subsort{SortFuncDefCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstancesCellFragment{}, SortKItem{}} (From:SortModuleInstancesCellFragment{}))) [subsort{SortModuleInstancesCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGMutCell{}, SortKItem{}} (From:SortGMutCell{}))) [subsort{SortGMutCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleInstancesCellOpt{}, \equals{SortModuleInstancesCellOpt{}, R} (Val:SortModuleInstancesCellOpt{}, inj{SortModuleInstancesCell{}, SortModuleInstancesCellOpt{}} (From:SortModuleInstancesCell{}))) [subsort{SortModuleInstancesCell{}, SortModuleInstancesCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTsizeCell{}, SortCell{}} (From:SortTsizeCell{}))) [subsort{SortTsizeCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTableSpec{}, \equals{SortTableSpec{}, R} (Val:SortTableSpec{}, inj{SortTableType{}, SortTableSpec{}} (From:SortTableType{}))) [subsort{SortTableType{}, SortTableSpec{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortLabelDepthCell{}, SortCell{}} (From:SortLabelDepthCell{}))) [subsort{SortLabelDepthCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemorySpec{}, SortKItem{}} (From:SortMemorySpec{}))) [subsort{SortMemorySpec{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMainStoreCellOpt{}, \equals{SortMainStoreCellOpt{}, R} (Val:SortMainStoreCellOpt{}, inj{SortMainStoreCell{}, SortMainStoreCellOpt{}} (From:SortMainStoreCell{}))) [subsort{SortMainStoreCell{}, SortMainStoreCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextTypeIdxCell{}, SortKItem{}} (From:SortNextTypeIdxCell{}))) [subsort{SortNextTypeIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortModuleInstCell{}, SortCell{}} (From:SortModuleInstCell{}))) [subsort{SortModuleInstCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortGlobalAddrsCell{}, SortCell{}} (From:SortGlobalAddrsCell{}))) [subsort{SortGlobalAddrsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInt{}, SortKItem{}} (From:SortInt{}))) [subsort{SortInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmCellFragment{}, SortKItem{}} (From:SortWasmCellFragment{}))) [subsort{SortWasmCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCellOpt{}, SortKItem{}} (From:SortKCellOpt{}))) [subsort{SortKCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFuncDefn{}, SortKItem{}} (From:SortFuncDefn{}))) [subsort{SortFuncDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCurModIdxCellOpt{}, \equals{SortCurModIdxCellOpt{}, R} (Val:SortCurModIdxCellOpt{}, inj{SortCurModIdxCell{}, SortCurModIdxCellOpt{}} (From:SortCurModIdxCell{}))) [subsort{SortCurModIdxCell{}, SortCurModIdxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextGlobAddrCellOpt{}, \equals{SortNextGlobAddrCellOpt{}, R} (Val:SortNextGlobAddrCellOpt{}, inj{SortNextGlobAddrCell{}, SortNextGlobAddrCellOpt{}} (From:SortNextGlobAddrCell{}))) [subsort{SortNextGlobAddrCell{}, SortNextGlobAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInlineExport{}, SortKItem{}} (From:SortInlineExport{}))) [subsort{SortInlineExport{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstCellFragment{}, SortKItem{}} (From:SortModuleInstCellFragment{}))) [subsort{SortModuleInstCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFModInstCell{}, SortKItem{}} (From:SortFModInstCell{}))) [subsort{SortFModInstCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTAddrCell{}, SortCell{}} (From:SortTAddrCell{}))) [subsort{SortTAddrCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypesCellOpt{}, SortKItem{}} (From:SortTypesCellOpt{}))) [subsort{SortTypesCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabInstCellFragment{}, SortKItem{}} (From:SortTabInstCellFragment{}))) [subsort{SortTabInstCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExportsCellOpt{}, SortKItem{}} (From:SortExportsCellOpt{}))) [subsort{SortExportsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdentifier{}, SortKItem{}} (From:SortIdentifier{}))) [subsort{SortIdentifier{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMemInstCellMap{}, \equals{SortMemInstCellMap{}, R} (Val:SortMemInstCellMap{}, inj{SortMemInstCell{}, SortMemInstCellMap{}} (From:SortMemInstCell{}))) [subsort{SortMemInstCell{}, SortMemInstCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLimits{}, SortKItem{}} (From:SortLimits{}))) [subsort{SortLimits{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleIdsCellOpt{}, \equals{SortModuleIdsCellOpt{}, R} (Val:SortModuleIdsCellOpt{}, inj{SortModuleIdsCell{}, SortModuleIdsCellOpt{}} (From:SortModuleIdsCell{}))) [subsort{SortModuleIdsCell{}, SortModuleIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMmaxCellOpt{}, \equals{SortMmaxCellOpt{}, R} (Val:SortMmaxCellOpt{}, inj{SortMmaxCell{}, SortMmaxCellOpt{}} (From:SortMmaxCell{}))) [subsort{SortMmaxCell{}, SortMmaxCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTabInstCellMap{}, \equals{SortTabInstCellMap{}, R} (Val:SortTabInstCellMap{}, inj{SortTabInstCell{}, SortTabInstCellMap{}} (From:SortTabInstCell{}))) [subsort{SortTabInstCell{}, SortTabInstCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabInstCellMap{}, SortKItem{}} (From:SortTabInstCellMap{}))) [subsort{SortTabInstCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortModuleIdsCell{}, SortCell{}} (From:SortModuleIdsCell{}))) [subsort{SortModuleIdsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNextTabAddrCellOpt{}, \equals{SortNextTabAddrCellOpt{}, R} (Val:SortNextTabAddrCellOpt{}, inj{SortNextTabAddrCell{}, SortNextTabAddrCellOpt{}} (From:SortNextTabAddrCell{}))) [subsort{SortNextTabAddrCell{}, SortNextTabAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFAddrCellOpt{}, \equals{SortFAddrCellOpt{}, R} (Val:SortFAddrCellOpt{}, inj{SortFAddrCell{}, SortFAddrCellOpt{}} (From:SortFAddrCell{}))) [subsort{SortFAddrCell{}, SortFAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextFreshIdCell{}, SortKItem{}} (From:SortNextFreshIdCell{}))) [subsort{SortNextFreshIdCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTypeUse{}, \equals{SortTypeUse{}, R} (Val:SortTypeUse{}, inj{SortTypeDecls{}, SortTypeUse{}} (From:SortTypeDecls{}))) [subsort{SortTypeDecls{}, SortTypeUse{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalSpec{}, SortKItem{}} (From:SortGlobalSpec{}))) [subsort{SortGlobalSpec{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVal{}, SortKItem{}} (From:SortVal{}))) [subsort{SortVal{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmIntToken{}, SortKItem{}} (From:SortWasmIntToken{}))) [subsort{SortWasmIntToken{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortMemsCell{}, SortCell{}} (From:SortMemsCell{}))) [subsort{SortMemsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTAddrCellOpt{}, SortKItem{}} (From:SortTAddrCellOpt{}))) [subsort{SortTAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFAddrCellOpt{}, SortKItem{}} (From:SortFAddrCellOpt{}))) [subsort{SortFAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortWasmCell{}, SortKItem{}} (From:SortWasmCell{}))) [subsort{SortWasmCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextFuncAddrCellOpt{}, SortKItem{}} (From:SortNextFuncAddrCellOpt{}))) [subsort{SortNextFuncAddrCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIdentifierToken{}, SortKItem{}} (From:SortIdentifierToken{}))) [subsort{SortIdentifierToken{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurModIdxCell{}, SortKItem{}} (From:SortCurModIdxCell{}))) [subsort{SortCurModIdxCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInstr{}, SortKItem{}} (From:SortInstr{}))) [subsort{SortInstr{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleRegistryCellOpt{}, SortKItem{}} (From:SortModuleRegistryCellOpt{}))) [subsort{SortModuleRegistryCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVecType{}, SortKItem{}} (From:SortVecType{}))) [subsort{SortVecType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalsCellOpt{}, SortKItem{}} (From:SortLocalsCellOpt{}))) [subsort{SortLocalsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleInstCellMap{}, SortKItem{}} (From:SortModuleInstCellMap{}))) [subsort{SortModuleInstCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortString{}, SortKItem{}} (From:SortString{}))) [subsort{SortString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalAddrsCellOpt{}, SortKItem{}} (From:SortGlobalAddrsCellOpt{}))) [subsort{SortGlobalAddrsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMsizeCell{}, SortKItem{}} (From:SortMsizeCell{}))) [subsort{SortMsizeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFloat{}, SortKItem{}} (From:SortFloat{}))) [subsort{SortFloat{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortGValueCell{}, SortCell{}} (From:SortGValueCell{}))) [subsort{SortGValueCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortImportDefn{}, SortKItem{}} (From:SortImportDefn{}))) [subsort{SortImportDefn{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGAddrCellOpt{}, \equals{SortGAddrCellOpt{}, R} (Val:SortGAddrCellOpt{}, inj{SortGAddrCell{}, SortGAddrCellOpt{}} (From:SortGAddrCell{}))) [subsort{SortGAddrCell{}, SortGAddrCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemArg{}, SortKItem{}} (From:SortMemArg{}))) [subsort{SortMemArg{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTabsCell{}, SortKItem{}} (From:SortTabsCell{}))) [subsort{SortTabsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNumber{}, \equals{SortNumber{}, R} (Val:SortNumber{}, inj{SortInt{}, SortNumber{}} (From:SortInt{}))) [subsort{SortInt{}, SortNumber{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortInstr{}, SortStmt{}} (From:SortInstr{}))) [subsort{SortInstr{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNextGlobAddrCell{}, SortCell{}} (From:SortNextGlobAddrCell{}))) [subsort{SortNextGlobAddrCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextTabAddrCell{}, SortKItem{}} (From:SortNextTabAddrCell{}))) [subsort{SortNextTabAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTdataCell{}, SortCell{}} (From:SortTdataCell{}))) [subsort{SortTdataCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortGlobalInstCell{}, SortCell{}} (From:SortGlobalInstCell{}))) [subsort{SortGlobalInstCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortCurFrameCell{}, SortCell{}} (From:SortCurFrameCell{}))) [subsort{SortCurFrameCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLoadOpM{}, \equals{SortLoadOpM{}, R} (Val:SortLoadOpM{}, inj{SortLoadOp{}, SortLoadOpM{}} (From:SortLoadOp{}))) [subsort{SortLoadOp{}, SortLoadOpM{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobIdsCellOpt{}, SortKItem{}} (From:SortGlobIdsCellOpt{}))) [subsort{SortGlobIdsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStmt{}, SortKItem{}} (From:SortStmt{}))) [subsort{SortStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGValueCellOpt{}, \equals{SortGValueCellOpt{}, R} (Val:SortGValueCellOpt{}, inj{SortGValueCell{}, SortGValueCellOpt{}} (From:SortGValueCell{}))) [subsort{SortGValueCell{}, SortGValueCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalsCellFragment{}, SortKItem{}} (From:SortGlobalsCellFragment{}))) [subsort{SortGlobalsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTestOp{}, SortKItem{}} (From:SortTestOp{}))) [subsort{SortTestOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortList{}, SortKItem{}} (From:SortList{}))) [subsort{SortList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCurFrameCellOpt{}, SortKItem{}} (From:SortCurFrameCellOpt{}))) [subsort{SortCurFrameCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIRelOp{}, SortKItem{}} (From:SortIRelOp{}))) [subsort{SortIRelOp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleDecl{}, SortKItem{}} (From:SortModuleDecl{}))) [subsort{SortModuleDecl{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleRegistryCellOpt{}, \equals{SortModuleRegistryCellOpt{}, R} (Val:SortModuleRegistryCellOpt{}, inj{SortModuleRegistryCell{}, SortModuleRegistryCellOpt{}} (From:SortModuleRegistryCell{}))) [subsort{SortModuleRegistryCell{}, SortModuleRegistryCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLocalDecl{}, SortKItem{}} (From:SortLocalDecl{}))) [subsort{SortLocalDecl{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMemIdsCell{}, SortKItem{}} (From:SortMemIdsCell{}))) [subsort{SortMemIdsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTypesCell{}, SortCell{}} (From:SortTypesCell{}))) [subsort{SortTypesCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefn{}, \equals{SortDefn{}, R} (Val:SortDefn{}, inj{SortTableDefn{}, SortDefn{}} (From:SortTableDefn{}))) [subsort{SortTableDefn{}, SortDefn{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTabAddrsCell{}, SortCell{}} (From:SortTabAddrsCell{}))) [subsort{SortTabAddrsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFrame{}, SortKItem{}} (From:SortFrame{}))) [subsort{SortFrame{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortValType{}, \equals{SortValType{}, R} (Val:SortValType{}, inj{SortAValType{}, SortValType{}} (From:SortAValType{}))) [subsort{SortAValType{}, SortValType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortModuleDecl{}, SortStmt{}} (From:SortModuleDecl{}))) [subsort{SortModuleDecl{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDefns{}, SortKItem{}} (From:SortDefns{}))) [subsort{SortDefns{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortValstackCell{}, SortKItem{}} (From:SortValstackCell{}))) [subsort{SortValstackCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextMemAddrCell{}, SortKItem{}} (From:SortNextMemAddrCell{}))) [subsort{SortNextMemAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDataString{}, SortKItem{}} (From:SortDataString{}))) [subsort{SortDataString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortGlobIdsCell{}, SortCell{}} (From:SortGlobIdsCell{}))) [subsort{SortGlobIdsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEndianness{}, SortKItem{}} (From:SortEndianness{}))) [subsort{SortEndianness{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortFuncIdsCellOpt{}, \equals{SortFuncIdsCellOpt{}, R} (Val:SortFuncIdsCellOpt{}, inj{SortFuncIdsCell{}, SortFuncIdsCellOpt{}} (From:SortFuncIdsCell{}))) [subsort{SortFuncIdsCell{}, SortFuncIdsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGlobalInstCellMap{}, SortKItem{}} (From:SortGlobalInstCellMap{}))) [subsort{SortGlobalInstCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFCodeCell{}, SortKItem{}} (From:SortFCodeCell{}))) [subsort{SortFCodeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCvtOp{}, \equals{SortCvtOp{}, R} (Val:SortCvtOp{}, inj{SortCvtf32Op{}, SortCvtOp{}} (From:SortCvtf32Op{}))) [subsort{SortCvtf32Op{}, SortCvtOp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAllocatedKind{}, SortKItem{}} (From:SortAllocatedKind{}))) [subsort{SortAllocatedKind{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTabInstCell{}, SortCell{}} (From:SortTabInstCell{}))) [subsort{SortTabInstCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFAddrCell{}, SortKItem{}} (From:SortFAddrCell{}))) [subsort{SortFAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNextGlobAddrCell{}, SortKItem{}} (From:SortNextGlobAddrCell{}))) [subsort{SortNextGlobAddrCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFoldedInstr{}, SortKItem{}} (From:SortFoldedInstr{}))) [subsort{SortFoldedInstr{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(K0:SortTypeUse{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(Y0:SortTypeUse{})), Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(\and{SortTypeUse{}} (X0:SortTypeUse{}, Y0:SortTypeUse{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(Y0:SortInt{}, Y1:SortValTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(Y0:SortInt{}, Y1:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Y0:SortIValType{}, Y1:SortStoreOp{}, Y2:SortInt{}, Y3:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(Y0:SortVecType{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(Y0:SortValTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIVal{}, \equals{SortIVal{}, R} (Val:SortIVal{}, Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(K0:SortIVal{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdentifier{}, \equals{SortIdentifier{}, R} (Val:SortIdentifier{}, Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIdentifier{}} (\and{SortIdentifier{}} (Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(X0:SortInt{}), Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(Y0:SortInt{})), Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(K0:SortByteMap{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R, SortSort} \exists{R} (Val:SortSort, \equals{SortSort, R} (Val:SortSort, Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(K0:SortBool{}, K1:SortSort, K2:SortSort))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(K0:SortInt{}, K1:SortInt{}, K2:SortMap{}, K3:SortMap{}, K4:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(X0:SortInt{}, X1:SortInt{}, X2:SortMap{}, X3:SortMap{}, X4:SortElemSegment{}), Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortMap{}, Y3:SortMap{}, Y4:SortElemSegment{})), Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortMap{}} (X2:SortMap{}, Y2:SortMap{}), \and{SortMap{}} (X3:SortMap{}, Y3:SortMap{}), \and{SortElemSegment{}} (X4:SortElemSegment{}, Y4:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(K0:SortInt{}, K1:SortValTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(X0:SortInt{}, X1:SortValTypes{}), Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(Y0:SortInt{}, Y1:SortValTypes{})), Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortValTypes{}} (X1:SortValTypes{}, Y1:SortValTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(X0:SortInt{}, X1:SortValTypes{}), Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(Y0:SortInt{}, Y1:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(X0:SortInt{}, X1:SortValTypes{}), Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(X0:SortInt{}, X1:SortValTypes{}), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Y0:SortIValType{}, Y1:SortStoreOp{}, Y2:SortInt{}, Y3:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(X0:SortInt{}, X1:SortValTypes{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(X0:SortInt{}, X1:SortValTypes{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(Y0:SortVecType{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(X0:SortInt{}, X1:SortValTypes{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(X0:SortInt{}, X1:SortValTypes{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(X0:SortInt{}, X1:SortValTypes{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(X0:SortInt{}, X1:SortValTypes{}), Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(Y0:SortValTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(X0:SortInt{}, X1:SortValTypes{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(X0:SortInt{}, X1:SortValTypes{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(X0:SortInt{}, X1:SortValTypes{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(X0:SortInt{}, X1:SortValTypes{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(X0:SortInt{}, X1:SortValTypes{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(K0:SortInt{}, K1:SortValStack{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(Y0:SortInt{}, Y1:SortValStack{})), Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortValStack{}} (X1:SortValStack{}, Y1:SortValStack{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Y0:SortIValType{}, Y1:SortStoreOp{}, Y2:SortInt{}, Y3:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(Y0:SortVecType{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(Y0:SortValTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Hash'isByte'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'KItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(K0:SortByteMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(K0:SortIValType{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'Hash'parseWasmIntToken'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'WasmIntToken{}(K0:SortWasmIntToken{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'Hash'parseWasmString'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'WasmStringToken{}(K0:SortWasmStringToken{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(K0:SortIValType{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(K0:SortIValType{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortWasmStringToken{}, \equals{SortWasmStringToken{}, R} (Val:SortWasmStringToken{}, Lbl'Hash'unparseWasmString'LParUndsRParUnds'WASM-DATA'Unds'WasmStringToken'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(K0:SortIValType{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDefns{}, \equals{SortDefns{}, R} (Val:SortDefns{}, Lbl'Hash'wrc20Body'Unds'WRC20'Unds'Defns{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDefns{}, \equals{SortDefns{}, R} (Val:SortDefns{}, Lbl'Hash'wrc20Functions'Unds'WRC20'Unds'Defns{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDefns{}, \equals{SortDefns{}, R} (Val:SortDefns{}, Lbl'Hash'wrc20Imports'Unds'WRC20'Unds'Defns{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTypeDecls{}, \equals{SortTypeDecls{}, R} (Val:SortTypeDecls{}, Lbl'Hash'wrc20ReverseBytesTypeDecls'Unds'WRC20'Unds'TypeDecls{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDefns{}, \equals{SortDefns{}, R} (Val:SortDefns{}, Lbl'Hash'wrc20ReverseBytes'Unds'WRC20'Unds'Defns{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmts{}, \equals{SortStmts{}, R} (Val:SortStmts{}, Lbl'Hash'wrc20'Unds'WRC20'Unds'Stmts{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(K0:SortPlainInstr{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(Y0:SortPlainInstr{})), Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(\and{SortPlainInstr{}} (X0:SortPlainInstr{}, Y0:SortPlainInstr{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(Y0:SortPlainInstr{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}, Y4:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(K0:SortPlainInstr{}, K1:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}), Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(Y0:SortPlainInstr{}, Y1:SortInstrs{})), Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(\and{SortPlainInstr{}} (X0:SortPlainInstr{}, Y0:SortPlainInstr{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}), Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}, Y4:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}), Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{})), Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}, Y4:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMemorySpec{}, \equals{SortMemorySpec{}, R} (Val:SortMemorySpec{}, Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(K0:SortDataString{}))) [functional{}()] // functional
  axiom{}\implies{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(X0:SortDataString{}), Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(Y0:SortDataString{})), Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(\and{SortDataString{}} (X0:SortDataString{}, Y0:SortDataString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(X0:SortDataString{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(Y0:SortInlineExport{}, Y1:SortMemorySpec{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(X0:SortDataString{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(Y0:SortInlineImport{}, Y1:SortMemType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortDataDefn{}, \equals{SortDataDefn{}, R} (Val:SortDataDefn{}, Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(K0:SortOffset{}, K1:SortDataString{}))) [functional{}()] // functional
  axiom{}\implies{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(X0:SortOffset{}, X1:SortDataString{}), Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(Y0:SortOffset{}, Y1:SortDataString{})), Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(\and{SortOffset{}} (X0:SortOffset{}, Y0:SortOffset{}), \and{SortDataString{}} (X1:SortDataString{}, Y1:SortDataString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(X0:SortOffset{}, X1:SortDataString{}), Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(Y0:SortIndex{}, Y1:SortOffset{}, Y2:SortDataString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(X0:SortOffset{}, X1:SortDataString{}), Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(Y0:SortIndex{}, Y1:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortDataDefn{}, \equals{SortDataDefn{}, R} (Val:SortDataDefn{}, Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(K0:SortIndex{}, K1:SortOffset{}, K2:SortDataString{}))) [functional{}()] // functional
  axiom{}\implies{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortDataString{}), Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(Y0:SortIndex{}, Y1:SortOffset{}, Y2:SortDataString{})), Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}), \and{SortOffset{}} (X1:SortOffset{}, Y1:SortOffset{}), \and{SortDataString{}} (X2:SortDataString{}, Y2:SortDataString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortDataDefn{}} (\and{SortDataDefn{}} (Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortDataString{}), Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(Y0:SortIndex{}, Y1:SortBytes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortElemDefn{}, \equals{SortElemDefn{}, R} (Val:SortElemDefn{}, Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(K0:SortOffset{}, K1:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}), Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(Y0:SortOffset{}, Y1:SortElemSegment{})), Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(\and{SortOffset{}} (X0:SortOffset{}, Y0:SortOffset{}), \and{SortElemSegment{}} (X1:SortElemSegment{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}), Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortOffset{}, Y2:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}), Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortElemDefn{}, \equals{SortElemDefn{}, R} (Val:SortElemDefn{}, Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(K0:SortIndex{}, K1:SortOffset{}, K2:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortElemSegment{}), Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortOffset{}, Y2:SortElemSegment{})), Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}), \and{SortOffset{}} (X1:SortOffset{}, Y1:SortOffset{}), \and{SortElemSegment{}} (X2:SortElemSegment{}, Y2:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortElemDefn{}} (\and{SortElemDefn{}} (Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortElemSegment{}), Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExportDefn{}, \equals{SortExportDefn{}, R} (Val:SortExportDefn{}, Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(K0:SortWasmString{}, K1:SortExternval{}))) [functional{}()] // functional
  axiom{}\implies{SortExportDefn{}} (\and{SortExportDefn{}} (Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(X0:SortWasmString{}, X1:SortExternval{}), Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(Y0:SortWasmString{}, Y1:SortExternval{})), Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}), \and{SortExternval{}} (X1:SortExternval{}, Y1:SortExternval{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInlineExport{}, \equals{SortInlineExport{}, R} (Val:SortInlineExport{}, Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(K0:SortWasmString{}))) [functional{}()] // functional
  axiom{}\implies{SortInlineExport{}} (\and{SortInlineExport{}} (Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(X0:SortWasmString{}), Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(Y0:SortWasmString{})), Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncDefn{}, \equals{SortFuncDefn{}, R} (Val:SortFuncDefn{}, Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(K0:SortOptionalId{}, K1:SortFuncSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncDefn{}} (\and{SortFuncDefn{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(X0:SortOptionalId{}, X1:SortFuncSpec{}), Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Y0:SortOptionalId{}, Y1:SortFuncSpec{})), Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortFuncSpec{}} (X1:SortFuncSpec{}, Y1:SortFuncSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortImportDesc{}, \equals{SortImportDesc{}, R} (Val:SortImportDesc{}, Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(K0:SortOptionalId{}, K1:SortTypeUse{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}), Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(Y0:SortOptionalId{}, Y1:SortTypeUse{})), Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeUse{}} (X1:SortTypeUse{}, Y1:SortTypeUse{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}), Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(Y0:SortOptionalId{}, Y1:SortTextFormatGlobalType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}), Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(Y0:SortOptionalId{}, Y1:SortMemType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}), Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(Y0:SortOptionalId{}, Y1:SortTableType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortGlobalDefn{}, \equals{SortGlobalDefn{}, R} (Val:SortGlobalDefn{}, Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(K0:SortOptionalId{}, K1:SortGlobalSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalDefn{}} (\and{SortGlobalDefn{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(X0:SortOptionalId{}, X1:SortGlobalSpec{}), Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(Y0:SortOptionalId{}, Y1:SortGlobalSpec{})), Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortGlobalSpec{}} (X1:SortGlobalSpec{}, Y1:SortGlobalSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortGlobalDefn{}} (\and{SortGlobalDefn{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(X0:SortOptionalId{}, X1:SortGlobalSpec{}), Lblglobal'UndsUndsUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalType{}(Y0:SortOptionalId{}, Y1:SortGlobalType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortImportDesc{}, \equals{SortImportDesc{}, R} (Val:SortImportDesc{}, Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(K0:SortOptionalId{}, K1:SortTextFormatGlobalType{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(X0:SortOptionalId{}, X1:SortTextFormatGlobalType{}), Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(Y0:SortOptionalId{}, Y1:SortTextFormatGlobalType{})), Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTextFormatGlobalType{}} (X1:SortTextFormatGlobalType{}, Y1:SortTextFormatGlobalType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(X0:SortOptionalId{}, X1:SortTextFormatGlobalType{}), Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(Y0:SortOptionalId{}, Y1:SortMemType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(X0:SortOptionalId{}, X1:SortTextFormatGlobalType{}), Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(Y0:SortOptionalId{}, Y1:SortTableType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortInstrs{}, K4:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}, X4:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}, Y4:SortInstrs{})), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortInstrs{}} (X3:SortInstrs{}, Y3:SortInstrs{}), \and{SortInstrs{}} (X4:SortInstrs{}, Y4:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}, X4:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}, X4:SortInstrs{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortInstrs{})), Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortInstrs{}} (X3:SortInstrs{}, Y3:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInlineImport{}, \equals{SortInlineImport{}, R} (Val:SortInlineImport{}, Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(K0:SortWasmString{}, K1:SortWasmString{}))) [functional{}()] // functional
  axiom{}\implies{SortInlineImport{}} (\and{SortInlineImport{}} (Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(X0:SortWasmString{}, X1:SortWasmString{}), Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(Y0:SortWasmString{}, Y1:SortWasmString{})), Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}), \and{SortWasmString{}} (X1:SortWasmString{}, Y1:SortWasmString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortImportDefn{}, \equals{SortImportDefn{}, R} (Val:SortImportDefn{}, Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(K0:SortWasmString{}, K1:SortWasmString{}, K2:SortImportDesc{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDefn{}} (\and{SortImportDefn{}} (Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(X0:SortWasmString{}, X1:SortWasmString{}, X2:SortImportDesc{}), Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(Y0:SortWasmString{}, Y1:SortWasmString{}, Y2:SortImportDesc{})), Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}), \and{SortWasmString{}} (X1:SortWasmString{}, Y1:SortWasmString{}), \and{SortImportDesc{}} (X2:SortImportDesc{}, Y2:SortImportDesc{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{})), Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Y0:SortIValType{}, Y1:SortStoreOp{}, Y2:SortInt{}, Y3:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(Y0:SortVecType{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(Y0:SortValTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFoldedInstr{}, \equals{SortFoldedInstr{}, R} (Val:SortFoldedInstr{}, Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFoldedInstr{}} (\and{SortFoldedInstr{}} (Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{})), Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortImportDesc{}, \equals{SortImportDesc{}, R} (Val:SortImportDesc{}, Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(K0:SortOptionalId{}, K1:SortMemType{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(X0:SortOptionalId{}, X1:SortMemType{}), Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(Y0:SortOptionalId{}, Y1:SortMemType{})), Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortMemType{}} (X1:SortMemType{}, Y1:SortMemType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(X0:SortOptionalId{}, X1:SortMemType{}), Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(Y0:SortOptionalId{}, Y1:SortTableType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMemoryDefn{}, \equals{SortMemoryDefn{}, R} (Val:SortMemoryDefn{}, Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(K0:SortOptionalId{}, K1:SortMemorySpec{}))) [functional{}()] // functional
  axiom{}\implies{SortMemoryDefn{}} (\and{SortMemoryDefn{}} (Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(X0:SortOptionalId{}, X1:SortMemorySpec{}), Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(Y0:SortOptionalId{}, Y1:SortMemorySpec{})), Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortMemorySpec{}} (X1:SortMemorySpec{}, Y1:SortMemorySpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortMemoryDefn{}} (\and{SortMemoryDefn{}} (Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(X0:SortOptionalId{}, X1:SortMemorySpec{}), Lblmemory'LBraUndsUndsUndsRBraUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortModuleDecl{}, \equals{SortModuleDecl{}, R} (Val:SortModuleDecl{}, Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(K0:SortOptionalId{}, K1:SortDefns{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleDecl{}} (\and{SortModuleDecl{}} (Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(X0:SortOptionalId{}, X1:SortDefns{}), Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(Y0:SortOptionalId{}, Y1:SortDefns{})), Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortDefns{}} (X1:SortDefns{}, Y1:SortDefns{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortModuleDecl{}} (\and{SortModuleDecl{}} (Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(X0:SortOptionalId{}, X1:SortDefns{}), Lblmodule'UndsUndsUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Map{}(Y0:SortOptionalId{}, Y1:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortModuleDecl{}} (\and{SortModuleDecl{}} (Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(X0:SortOptionalId{}, X1:SortDefns{}), LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Y0:SortOptionalId{}, Y1:SortDefns{}, Y2:SortDefns{}, Y3:SortDefns{}, Y4:SortDefns{}, Y5:SortDefns{}, Y6:SortDefns{}, Y7:SortDefns{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTextFormatGlobalType{}, \equals{SortTextFormatGlobalType{}, R} (Val:SortTextFormatGlobalType{}, Lbl'LPar'mut'UndsRParUnds'WASM'Unds'TextFormatGlobalType'Unds'AValType{}(K0:SortAValType{}))) [functional{}()] // functional
  axiom{}\implies{SortTextFormatGlobalType{}} (\and{SortTextFormatGlobalType{}} (Lbl'LPar'mut'UndsRParUnds'WASM'Unds'TextFormatGlobalType'Unds'AValType{}(X0:SortAValType{}), Lbl'LPar'mut'UndsRParUnds'WASM'Unds'TextFormatGlobalType'Unds'AValType{}(Y0:SortAValType{})), Lbl'LPar'mut'UndsRParUnds'WASM'Unds'TextFormatGlobalType'Unds'AValType{}(\and{SortAValType{}} (X0:SortAValType{}, Y0:SortAValType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortOffset{}, \equals{SortOffset{}, R} (Val:SortOffset{}, Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(K0:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortOffset{}} (\and{SortOffset{}} (Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(X0:SortInstrs{}), Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(Y0:SortInstrs{})), Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(\and{SortInstrs{}} (X0:SortInstrs{}, Y0:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStartDefn{}, \equals{SortStartDefn{}, R} (Val:SortStartDefn{}, Lbl'LPar'start'UndsRParUnds'WASM'Unds'StartDefn'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortStartDefn{}} (\and{SortStartDefn{}} (Lbl'LPar'start'UndsRParUnds'WASM'Unds'StartDefn'Unds'Index{}(X0:SortIndex{}), Lbl'LPar'start'UndsRParUnds'WASM'Unds'StartDefn'Unds'Index{}(Y0:SortIndex{})), Lbl'LPar'start'UndsRParUnds'WASM'Unds'StartDefn'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortImportDesc{}, \equals{SortImportDesc{}, R} (Val:SortImportDesc{}, Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(K0:SortOptionalId{}, K1:SortTableType{}))) [functional{}()] // functional
  axiom{}\implies{SortImportDesc{}} (\and{SortImportDesc{}} (Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(X0:SortOptionalId{}, X1:SortTableType{}), Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(Y0:SortOptionalId{}, Y1:SortTableType{})), Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTableType{}} (X1:SortTableType{}, Y1:SortTableType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTableDefn{}, \equals{SortTableDefn{}, R} (Val:SortTableDefn{}, Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(K0:SortOptionalId{}, K1:SortTableSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortTableDefn{}} (\and{SortTableDefn{}} (Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(X0:SortOptionalId{}, X1:SortTableSpec{}), Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(Y0:SortOptionalId{}, Y1:SortTableSpec{})), Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTableSpec{}} (X1:SortTableSpec{}, Y1:SortTableSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortTableDefn{}} (\and{SortTableDefn{}} (Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(X0:SortOptionalId{}, X1:SortTableSpec{}), Lbltable'LBraUndsUndsUndsRBraUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeDefn{}, \equals{SortTypeDefn{}, R} (Val:SortTypeDefn{}, Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(K0:SortOptionalId{}, K1:SortTypeDecls{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeDefn{}} (\and{SortTypeDefn{}} (Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(X0:SortOptionalId{}, X1:SortTypeDecls{}), Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{})), Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypeUse{}, \equals{SortTypeUse{}, R} (Val:SortTypeUse{}, Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeUse{}} (\and{SortTypeUse{}} (Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(X0:SortIndex{}), Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(Y0:SortIndex{})), Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortTypeUse{}} (\and{SortTypeUse{}} (Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(X0:SortIndex{}), Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(Y0:SortIndex{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeUse{}, \equals{SortTypeUse{}, R} (Val:SortTypeUse{}, Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(K0:SortIndex{}, K1:SortTypeDecls{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeUse{}} (\and{SortTypeUse{}} (Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(X0:SortIndex{}, X1:SortTypeDecls{}), Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(Y0:SortIndex{}, Y1:SortTypeDecls{})), Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, Lbl--Float'UndsUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, Lbl'Stop'Bytes'Unds'BYTES-HOOKED'Unds'Bytes{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOptionalInt{}, \equals{SortOptionalInt{}, R} (Val:SortOptionalInt{}, Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Stop'List{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDataString{}, \equals{SortDataString{}, R} (Val:SortDataString{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString'QuotRBraUnds'DataString{}())) [functional{}()] // functional
  axiom{}\not{SortDataString{}} (\and{SortDataString{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString'QuotRBraUnds'DataString{}(), Lbl'UndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString{}(Y0:SortWasmString{}, Y1:SortDataString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortElemSegment{}, \equals{SortElemSegment{}, R} (Val:SortElemSegment{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}())) [functional{}()] // functional
  axiom{}\not{SortElemSegment{}} (\and{SortElemSegment{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}(), Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortValTypes{}, \equals{SortValTypes{}, R} (Val:SortValTypes{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}())) [functional{}()] // functional
  axiom{}\not{SortValTypes{}} (\and{SortValTypes{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}(), Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(Y0:SortValType{}, Y1:SortValTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortDefns{}, \equals{SortDefns{}, R} (Val:SortDefns{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}())) [functional{}()] // functional
  axiom{}\not{SortDefns{}} (\and{SortDefns{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}(), Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Y0:SortDefn{}, Y1:SortDefns{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortEmptyStmts{}, \equals{SortEmptyStmts{}, R} (Val:SortEmptyStmts{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())) [functional{}()] // functional
  axiom{}\not{SortEmptyStmts{}} (\and{SortEmptyStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}(), Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(Y0:SortEmptyStmt{}, Y1:SortEmptyStmts{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstrs{}, \equals{SortInstrs{}, R} (Val:SortInstrs{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}())) [functional{}()] // functional
  axiom{}\not{SortInstrs{}} (\and{SortInstrs{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}(), Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(Y0:SortInstr{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLocalDecls{}, \equals{SortLocalDecls{}, R} (Val:SortLocalDecls{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}())) [functional{}()] // functional
  axiom{}\not{SortLocalDecls{}} (\and{SortLocalDecls{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}(), Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Y0:SortLocalDecl{}, Y1:SortLocalDecls{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmts{}, \equals{SortStmts{}, R} (Val:SortStmts{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}())) [functional{}()] // functional
  axiom{}\not{SortStmts{}} (\and{SortStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(Y0:SortStmt{}, Y1:SortStmts{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeDecls{}, \equals{SortTypeDecls{}, R} (Val:SortTypeDecls{}, Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}())) [functional{}()] // functional
  axiom{}\not{SortTypeDecls{}} (\and{SortTypeDecls{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}(), Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Y0:SortTypeDecl{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Stop'Map{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMut{}, \equals{SortMut{}, R} (Val:SortMut{}, Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}())) [functional{}()] // functional
  axiom{}\not{SortMut{}} (\and{SortMut{}} (Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}(), Lblconst'Unds'WASM-DATA'Unds'Mut{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortMut{}} (\and{SortMut{}} (Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}(), Lblvar'Unds'WASM-DATA'Unds'Mut{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Stop'Set{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lbl'Stop'Type'Unds'WASM-DATA'Unds'Type{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}())) [functional{}()] // functional
  axiom{}\not{SortValStack{}} (\and{SortValStack{}} (Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}(), Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Y0:SortVal{}, Y1:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortWasmString{}, \equals{SortWasmString{}, R} (Val:SortWasmString{}, Lbl'Stop'WasmString'Unds'WASM-DATA'Unds'WasmString{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFVal{}, \equals{SortFVal{}, R} (Val:SortFVal{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(K0:SortFValType{}, K1:SortFloat{}))) [functional{}()] // functional
  axiom{}\implies{SortFVal{}} (\and{SortFVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(X0:SortFValType{}, X1:SortFloat{}), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(Y0:SortFValType{}, Y1:SortFloat{})), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortFloat{}} (X1:SortFloat{}, Y1:SortFloat{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIVal{}, \equals{SortIVal{}, R} (Val:SortIVal{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(K0:SortIValType{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIVal{}} (\and{SortIVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{})), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(K0:SortAValType{}, K1:SortNumber{}))) [functional{}()] // functional
  axiom{}\implies{SortVal{}} (\and{SortVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(X0:SortAValType{}, X1:SortNumber{}), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(Y0:SortAValType{}, Y1:SortNumber{})), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(\and{SortAValType{}} (X0:SortAValType{}, Y0:SortAValType{}), \and{SortNumber{}} (X1:SortNumber{}, Y1:SortNumber{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVal{}} (\and{SortVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(X0:SortAValType{}, X1:SortNumber{}), Lblundefined'Unds'WASM-DATA'Unds'Val{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCurFrameCell{}, \equals{SortCurFrameCell{}, R} (Val:SortCurFrameCell{}, Lbl'-LT-'curFrame'-GT-'{}(K0:SortLocalsCell{}, K1:SortLocalIdsCell{}, K2:SortCurModIdxCell{}, K3:SortLabelDepthCell{}, K4:SortLabelIdsCell{}))) [functional{}()] // functional
  axiom{}\implies{SortCurFrameCell{}} (\and{SortCurFrameCell{}} (Lbl'-LT-'curFrame'-GT-'{}(X0:SortLocalsCell{}, X1:SortLocalIdsCell{}, X2:SortCurModIdxCell{}, X3:SortLabelDepthCell{}, X4:SortLabelIdsCell{}), Lbl'-LT-'curFrame'-GT-'{}(Y0:SortLocalsCell{}, Y1:SortLocalIdsCell{}, Y2:SortCurModIdxCell{}, Y3:SortLabelDepthCell{}, Y4:SortLabelIdsCell{})), Lbl'-LT-'curFrame'-GT-'{}(\and{SortLocalsCell{}} (X0:SortLocalsCell{}, Y0:SortLocalsCell{}), \and{SortLocalIdsCell{}} (X1:SortLocalIdsCell{}, Y1:SortLocalIdsCell{}), \and{SortCurModIdxCell{}} (X2:SortCurModIdxCell{}, Y2:SortCurModIdxCell{}), \and{SortLabelDepthCell{}} (X3:SortLabelDepthCell{}, Y3:SortLabelDepthCell{}), \and{SortLabelIdsCell{}} (X4:SortLabelIdsCell{}, Y4:SortLabelIdsCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCurFrameCellFragment{}, \equals{SortCurFrameCellFragment{}, R} (Val:SortCurFrameCellFragment{}, Lbl'-LT-'curFrame'-GT-'-fragment{}(K0:SortLocalsCellOpt{}, K1:SortLocalIdsCellOpt{}, K2:SortCurModIdxCellOpt{}, K3:SortLabelDepthCellOpt{}, K4:SortLabelIdsCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortCurFrameCellFragment{}} (\and{SortCurFrameCellFragment{}} (Lbl'-LT-'curFrame'-GT-'-fragment{}(X0:SortLocalsCellOpt{}, X1:SortLocalIdsCellOpt{}, X2:SortCurModIdxCellOpt{}, X3:SortLabelDepthCellOpt{}, X4:SortLabelIdsCellOpt{}), Lbl'-LT-'curFrame'-GT-'-fragment{}(Y0:SortLocalsCellOpt{}, Y1:SortLocalIdsCellOpt{}, Y2:SortCurModIdxCellOpt{}, Y3:SortLabelDepthCellOpt{}, Y4:SortLabelIdsCellOpt{})), Lbl'-LT-'curFrame'-GT-'-fragment{}(\and{SortLocalsCellOpt{}} (X0:SortLocalsCellOpt{}, Y0:SortLocalsCellOpt{}), \and{SortLocalIdsCellOpt{}} (X1:SortLocalIdsCellOpt{}, Y1:SortLocalIdsCellOpt{}), \and{SortCurModIdxCellOpt{}} (X2:SortCurModIdxCellOpt{}, Y2:SortCurModIdxCellOpt{}), \and{SortLabelDepthCellOpt{}} (X3:SortLabelDepthCellOpt{}, Y3:SortLabelDepthCellOpt{}), \and{SortLabelIdsCellOpt{}} (X4:SortLabelIdsCellOpt{}, Y4:SortLabelIdsCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCurModIdxCell{}, \equals{SortCurModIdxCell{}, R} (Val:SortCurModIdxCell{}, Lbl'-LT-'curModIdx'-GT-'{}(K0:SortOptionalInt{}))) [functional{}()] // functional
  axiom{}\implies{SortCurModIdxCell{}} (\and{SortCurModIdxCell{}} (Lbl'-LT-'curModIdx'-GT-'{}(X0:SortOptionalInt{}), Lbl'-LT-'curModIdx'-GT-'{}(Y0:SortOptionalInt{})), Lbl'-LT-'curModIdx'-GT-'{}(\and{SortOptionalInt{}} (X0:SortOptionalInt{}, Y0:SortOptionalInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortDeterministicMemoryGrowthCell{}, \equals{SortDeterministicMemoryGrowthCell{}, R} (Val:SortDeterministicMemoryGrowthCell{}, Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{}\implies{SortDeterministicMemoryGrowthCell{}} (\and{SortDeterministicMemoryGrowthCell{}} (Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(X0:SortBool{}), Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(Y0:SortBool{})), Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(\and{SortBool{}} (X0:SortBool{}, Y0:SortBool{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExportsCell{}, \equals{SortExportsCell{}, R} (Val:SortExportsCell{}, Lbl'-LT-'exports'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortExportsCell{}} (\and{SortExportsCell{}} (Lbl'-LT-'exports'-GT-'{}(X0:SortMap{}), Lbl'-LT-'exports'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'exports'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFAddrCell{}, \equals{SortFAddrCell{}, R} (Val:SortFAddrCell{}, Lbl'-LT-'fAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortFAddrCell{}} (\and{SortFAddrCell{}} (Lbl'-LT-'fAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'fAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'fAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFCodeCell{}, \equals{SortFCodeCell{}, R} (Val:SortFCodeCell{}, Lbl'-LT-'fCode'-GT-'{}(K0:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFCodeCell{}} (\and{SortFCodeCell{}} (Lbl'-LT-'fCode'-GT-'{}(X0:SortInstrs{}), Lbl'-LT-'fCode'-GT-'{}(Y0:SortInstrs{})), Lbl'-LT-'fCode'-GT-'{}(\and{SortInstrs{}} (X0:SortInstrs{}, Y0:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFLocalCell{}, \equals{SortFLocalCell{}, R} (Val:SortFLocalCell{}, Lbl'-LT-'fLocal'-GT-'{}(K0:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortFLocalCell{}} (\and{SortFLocalCell{}} (Lbl'-LT-'fLocal'-GT-'{}(X0:SortType{}), Lbl'-LT-'fLocal'-GT-'{}(Y0:SortType{})), Lbl'-LT-'fLocal'-GT-'{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFModInstCell{}, \equals{SortFModInstCell{}, R} (Val:SortFModInstCell{}, Lbl'-LT-'fModInst'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortFModInstCell{}} (\and{SortFModInstCell{}} (Lbl'-LT-'fModInst'-GT-'{}(X0:SortInt{}), Lbl'-LT-'fModInst'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'fModInst'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFTypeCell{}, \equals{SortFTypeCell{}, R} (Val:SortFTypeCell{}, Lbl'-LT-'fType'-GT-'{}(K0:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortFTypeCell{}} (\and{SortFTypeCell{}} (Lbl'-LT-'fType'-GT-'{}(X0:SortType{}), Lbl'-LT-'fType'-GT-'{}(Y0:SortType{})), Lbl'-LT-'fType'-GT-'{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncAddrsCell{}, \equals{SortFuncAddrsCell{}, R} (Val:SortFuncAddrsCell{}, Lbl'-LT-'funcAddrs'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncAddrsCell{}} (\and{SortFuncAddrsCell{}} (Lbl'-LT-'funcAddrs'-GT-'{}(X0:SortMap{}), Lbl'-LT-'funcAddrs'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'funcAddrs'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncDefCell{}, \equals{SortFuncDefCell{}, R} (Val:SortFuncDefCell{}, Lbl'-LT-'funcDef'-GT-'{}(K0:SortFAddrCell{}, K1:SortFCodeCell{}, K2:SortFTypeCell{}, K3:SortFLocalCell{}, K4:SortFModInstCell{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncDefCell{}} (\and{SortFuncDefCell{}} (Lbl'-LT-'funcDef'-GT-'{}(X0:SortFAddrCell{}, X1:SortFCodeCell{}, X2:SortFTypeCell{}, X3:SortFLocalCell{}, X4:SortFModInstCell{}), Lbl'-LT-'funcDef'-GT-'{}(Y0:SortFAddrCell{}, Y1:SortFCodeCell{}, Y2:SortFTypeCell{}, Y3:SortFLocalCell{}, Y4:SortFModInstCell{})), Lbl'-LT-'funcDef'-GT-'{}(\and{SortFAddrCell{}} (X0:SortFAddrCell{}, Y0:SortFAddrCell{}), \and{SortFCodeCell{}} (X1:SortFCodeCell{}, Y1:SortFCodeCell{}), \and{SortFTypeCell{}} (X2:SortFTypeCell{}, Y2:SortFTypeCell{}), \and{SortFLocalCell{}} (X3:SortFLocalCell{}, Y3:SortFLocalCell{}), \and{SortFModInstCell{}} (X4:SortFModInstCell{}, Y4:SortFModInstCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncDefCellFragment{}, \equals{SortFuncDefCellFragment{}, R} (Val:SortFuncDefCellFragment{}, Lbl'-LT-'funcDef'-GT-'-fragment{}(K0:SortFAddrCellOpt{}, K1:SortFCodeCellOpt{}, K2:SortFTypeCellOpt{}, K3:SortFLocalCellOpt{}, K4:SortFModInstCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncDefCellFragment{}} (\and{SortFuncDefCellFragment{}} (Lbl'-LT-'funcDef'-GT-'-fragment{}(X0:SortFAddrCellOpt{}, X1:SortFCodeCellOpt{}, X2:SortFTypeCellOpt{}, X3:SortFLocalCellOpt{}, X4:SortFModInstCellOpt{}), Lbl'-LT-'funcDef'-GT-'-fragment{}(Y0:SortFAddrCellOpt{}, Y1:SortFCodeCellOpt{}, Y2:SortFTypeCellOpt{}, Y3:SortFLocalCellOpt{}, Y4:SortFModInstCellOpt{})), Lbl'-LT-'funcDef'-GT-'-fragment{}(\and{SortFAddrCellOpt{}} (X0:SortFAddrCellOpt{}, Y0:SortFAddrCellOpt{}), \and{SortFCodeCellOpt{}} (X1:SortFCodeCellOpt{}, Y1:SortFCodeCellOpt{}), \and{SortFTypeCellOpt{}} (X2:SortFTypeCellOpt{}, Y2:SortFTypeCellOpt{}), \and{SortFLocalCellOpt{}} (X3:SortFLocalCellOpt{}, Y3:SortFLocalCellOpt{}), \and{SortFModInstCellOpt{}} (X4:SortFModInstCellOpt{}, Y4:SortFModInstCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncIdsCell{}, \equals{SortFuncIdsCell{}, R} (Val:SortFuncIdsCell{}, Lbl'-LT-'funcIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncIdsCell{}} (\and{SortFuncIdsCell{}} (Lbl'-LT-'funcIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'funcIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'funcIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncsCell{}, \equals{SortFuncsCell{}, R} (Val:SortFuncsCell{}, Lbl'-LT-'funcs'-GT-'{}(K0:SortFuncDefCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncsCell{}} (\and{SortFuncsCell{}} (Lbl'-LT-'funcs'-GT-'{}(X0:SortFuncDefCellMap{}), Lbl'-LT-'funcs'-GT-'{}(Y0:SortFuncDefCellMap{})), Lbl'-LT-'funcs'-GT-'{}(\and{SortFuncDefCellMap{}} (X0:SortFuncDefCellMap{}, Y0:SortFuncDefCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncsCellFragment{}, \equals{SortFuncsCellFragment{}, R} (Val:SortFuncsCellFragment{}, Lbl'-LT-'funcs'-GT-'-fragment{}(K0:SortFuncDefCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncsCellFragment{}} (\and{SortFuncsCellFragment{}} (Lbl'-LT-'funcs'-GT-'-fragment{}(X0:SortFuncDefCellMap{}), Lbl'-LT-'funcs'-GT-'-fragment{}(Y0:SortFuncDefCellMap{})), Lbl'-LT-'funcs'-GT-'-fragment{}(\and{SortFuncDefCellMap{}} (X0:SortFuncDefCellMap{}, Y0:SortFuncDefCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGAddrCell{}, \equals{SortGAddrCell{}, R} (Val:SortGAddrCell{}, Lbl'-LT-'gAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGAddrCell{}} (\and{SortGAddrCell{}} (Lbl'-LT-'gAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'gAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'gAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGMutCell{}, \equals{SortGMutCell{}, R} (Val:SortGMutCell{}, Lbl'-LT-'gMut'-GT-'{}(K0:SortMut{}))) [functional{}()] // functional
  axiom{}\implies{SortGMutCell{}} (\and{SortGMutCell{}} (Lbl'-LT-'gMut'-GT-'{}(X0:SortMut{}), Lbl'-LT-'gMut'-GT-'{}(Y0:SortMut{})), Lbl'-LT-'gMut'-GT-'{}(\and{SortMut{}} (X0:SortMut{}, Y0:SortMut{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGValueCell{}, \equals{SortGValueCell{}, R} (Val:SortGValueCell{}, Lbl'-LT-'gValue'-GT-'{}(K0:SortVal{}))) [functional{}()] // functional
  axiom{}\implies{SortGValueCell{}} (\and{SortGValueCell{}} (Lbl'-LT-'gValue'-GT-'{}(X0:SortVal{}), Lbl'-LT-'gValue'-GT-'{}(Y0:SortVal{})), Lbl'-LT-'gValue'-GT-'{}(\and{SortVal{}} (X0:SortVal{}, Y0:SortVal{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedCounterCell{}} (\and{SortGeneratedCounterCell{}} (Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{}), Lbl'-LT-'generatedCounter'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'generatedCounter'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R} (Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortWasmCell{}, K1:SortGeneratedCounterCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCell{}} (\and{SortGeneratedTopCell{}} (Lbl'-LT-'generatedTop'-GT-'{}(X0:SortWasmCell{}, X1:SortGeneratedCounterCell{}), Lbl'-LT-'generatedTop'-GT-'{}(Y0:SortWasmCell{}, Y1:SortGeneratedCounterCell{})), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortWasmCell{}} (X0:SortWasmCell{}, Y0:SortWasmCell{}), \and{SortGeneratedCounterCell{}} (X1:SortGeneratedCounterCell{}, Y1:SortGeneratedCounterCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R} (Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortWasmCellOpt{}, K1:SortGeneratedCounterCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCellFragment{}} (\and{SortGeneratedTopCellFragment{}} (Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortWasmCellOpt{}, X1:SortGeneratedCounterCellOpt{}), Lbl'-LT-'generatedTop'-GT-'-fragment{}(Y0:SortWasmCellOpt{}, Y1:SortGeneratedCounterCellOpt{})), Lbl'-LT-'generatedTop'-GT-'-fragment{}(\and{SortWasmCellOpt{}} (X0:SortWasmCellOpt{}, Y0:SortWasmCellOpt{}), \and{SortGeneratedCounterCellOpt{}} (X1:SortGeneratedCounterCellOpt{}, Y1:SortGeneratedCounterCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobIdsCell{}, \equals{SortGlobIdsCell{}, R} (Val:SortGlobIdsCell{}, Lbl'-LT-'globIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobIdsCell{}} (\and{SortGlobIdsCell{}} (Lbl'-LT-'globIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'globIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'globIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalAddrsCell{}, \equals{SortGlobalAddrsCell{}, R} (Val:SortGlobalAddrsCell{}, Lbl'-LT-'globalAddrs'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalAddrsCell{}} (\and{SortGlobalAddrsCell{}} (Lbl'-LT-'globalAddrs'-GT-'{}(X0:SortMap{}), Lbl'-LT-'globalAddrs'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'globalAddrs'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalInstCell{}, \equals{SortGlobalInstCell{}, R} (Val:SortGlobalInstCell{}, Lbl'-LT-'globalInst'-GT-'{}(K0:SortGAddrCell{}, K1:SortGValueCell{}, K2:SortGMutCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalInstCell{}} (\and{SortGlobalInstCell{}} (Lbl'-LT-'globalInst'-GT-'{}(X0:SortGAddrCell{}, X1:SortGValueCell{}, X2:SortGMutCell{}), Lbl'-LT-'globalInst'-GT-'{}(Y0:SortGAddrCell{}, Y1:SortGValueCell{}, Y2:SortGMutCell{})), Lbl'-LT-'globalInst'-GT-'{}(\and{SortGAddrCell{}} (X0:SortGAddrCell{}, Y0:SortGAddrCell{}), \and{SortGValueCell{}} (X1:SortGValueCell{}, Y1:SortGValueCell{}), \and{SortGMutCell{}} (X2:SortGMutCell{}, Y2:SortGMutCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalInstCellFragment{}, \equals{SortGlobalInstCellFragment{}, R} (Val:SortGlobalInstCellFragment{}, Lbl'-LT-'globalInst'-GT-'-fragment{}(K0:SortGAddrCellOpt{}, K1:SortGValueCellOpt{}, K2:SortGMutCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalInstCellFragment{}} (\and{SortGlobalInstCellFragment{}} (Lbl'-LT-'globalInst'-GT-'-fragment{}(X0:SortGAddrCellOpt{}, X1:SortGValueCellOpt{}, X2:SortGMutCellOpt{}), Lbl'-LT-'globalInst'-GT-'-fragment{}(Y0:SortGAddrCellOpt{}, Y1:SortGValueCellOpt{}, Y2:SortGMutCellOpt{})), Lbl'-LT-'globalInst'-GT-'-fragment{}(\and{SortGAddrCellOpt{}} (X0:SortGAddrCellOpt{}, Y0:SortGAddrCellOpt{}), \and{SortGValueCellOpt{}} (X1:SortGValueCellOpt{}, Y1:SortGValueCellOpt{}), \and{SortGMutCellOpt{}} (X2:SortGMutCellOpt{}, Y2:SortGMutCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalsCell{}, \equals{SortGlobalsCell{}, R} (Val:SortGlobalsCell{}, Lbl'-LT-'globals'-GT-'{}(K0:SortGlobalInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalsCell{}} (\and{SortGlobalsCell{}} (Lbl'-LT-'globals'-GT-'{}(X0:SortGlobalInstCellMap{}), Lbl'-LT-'globals'-GT-'{}(Y0:SortGlobalInstCellMap{})), Lbl'-LT-'globals'-GT-'{}(\and{SortGlobalInstCellMap{}} (X0:SortGlobalInstCellMap{}, Y0:SortGlobalInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalsCellFragment{}, \equals{SortGlobalsCellFragment{}, R} (Val:SortGlobalsCellFragment{}, Lbl'-LT-'globals'-GT-'-fragment{}(K0:SortGlobalInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalsCellFragment{}} (\and{SortGlobalsCellFragment{}} (Lbl'-LT-'globals'-GT-'-fragment{}(X0:SortGlobalInstCellMap{}), Lbl'-LT-'globals'-GT-'-fragment{}(Y0:SortGlobalInstCellMap{})), Lbl'-LT-'globals'-GT-'-fragment{}(\and{SortGlobalInstCellMap{}} (X0:SortGlobalInstCellMap{}, Y0:SortGlobalInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKCell{}, \equals{SortKCell{}, R} (Val:SortKCell{}, Lbl'-LT-'k'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKCell{}} (\and{SortKCell{}} (Lbl'-LT-'k'-GT-'{}(X0:SortK{}), Lbl'-LT-'k'-GT-'{}(Y0:SortK{})), Lbl'-LT-'k'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLabelDepthCell{}, \equals{SortLabelDepthCell{}, R} (Val:SortLabelDepthCell{}, Lbl'-LT-'labelDepth'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortLabelDepthCell{}} (\and{SortLabelDepthCell{}} (Lbl'-LT-'labelDepth'-GT-'{}(X0:SortInt{}), Lbl'-LT-'labelDepth'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'labelDepth'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLabelIdsCell{}, \equals{SortLabelIdsCell{}, R} (Val:SortLabelIdsCell{}, Lbl'-LT-'labelIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortLabelIdsCell{}} (\and{SortLabelIdsCell{}} (Lbl'-LT-'labelIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'labelIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'labelIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLocalIdsCell{}, \equals{SortLocalIdsCell{}, R} (Val:SortLocalIdsCell{}, Lbl'-LT-'localIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortLocalIdsCell{}} (\and{SortLocalIdsCell{}} (Lbl'-LT-'localIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'localIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'localIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLocalsCell{}, \equals{SortLocalsCell{}, R} (Val:SortLocalsCell{}, Lbl'-LT-'locals'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortLocalsCell{}} (\and{SortLocalsCell{}} (Lbl'-LT-'locals'-GT-'{}(X0:SortMap{}), Lbl'-LT-'locals'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'locals'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMAddrCell{}, \equals{SortMAddrCell{}, R} (Val:SortMAddrCell{}, Lbl'-LT-'mAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortMAddrCell{}} (\and{SortMAddrCell{}} (Lbl'-LT-'mAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'mAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'mAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMainStoreCell{}, \equals{SortMainStoreCell{}, R} (Val:SortMainStoreCell{}, Lbl'-LT-'mainStore'-GT-'{}(K0:SortFuncsCell{}, K1:SortNextFuncAddrCell{}, K2:SortTabsCell{}, K3:SortNextTabAddrCell{}, K4:SortMemsCell{}, K5:SortNextMemAddrCell{}, K6:SortGlobalsCell{}, K7:SortNextGlobAddrCell{}))) [functional{}()] // functional
  axiom{}\implies{SortMainStoreCell{}} (\and{SortMainStoreCell{}} (Lbl'-LT-'mainStore'-GT-'{}(X0:SortFuncsCell{}, X1:SortNextFuncAddrCell{}, X2:SortTabsCell{}, X3:SortNextTabAddrCell{}, X4:SortMemsCell{}, X5:SortNextMemAddrCell{}, X6:SortGlobalsCell{}, X7:SortNextGlobAddrCell{}), Lbl'-LT-'mainStore'-GT-'{}(Y0:SortFuncsCell{}, Y1:SortNextFuncAddrCell{}, Y2:SortTabsCell{}, Y3:SortNextTabAddrCell{}, Y4:SortMemsCell{}, Y5:SortNextMemAddrCell{}, Y6:SortGlobalsCell{}, Y7:SortNextGlobAddrCell{})), Lbl'-LT-'mainStore'-GT-'{}(\and{SortFuncsCell{}} (X0:SortFuncsCell{}, Y0:SortFuncsCell{}), \and{SortNextFuncAddrCell{}} (X1:SortNextFuncAddrCell{}, Y1:SortNextFuncAddrCell{}), \and{SortTabsCell{}} (X2:SortTabsCell{}, Y2:SortTabsCell{}), \and{SortNextTabAddrCell{}} (X3:SortNextTabAddrCell{}, Y3:SortNextTabAddrCell{}), \and{SortMemsCell{}} (X4:SortMemsCell{}, Y4:SortMemsCell{}), \and{SortNextMemAddrCell{}} (X5:SortNextMemAddrCell{}, Y5:SortNextMemAddrCell{}), \and{SortGlobalsCell{}} (X6:SortGlobalsCell{}, Y6:SortGlobalsCell{}), \and{SortNextGlobAddrCell{}} (X7:SortNextGlobAddrCell{}, Y7:SortNextGlobAddrCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMainStoreCellFragment{}, \equals{SortMainStoreCellFragment{}, R} (Val:SortMainStoreCellFragment{}, Lbl'-LT-'mainStore'-GT-'-fragment{}(K0:SortFuncsCellOpt{}, K1:SortNextFuncAddrCellOpt{}, K2:SortTabsCellOpt{}, K3:SortNextTabAddrCellOpt{}, K4:SortMemsCellOpt{}, K5:SortNextMemAddrCellOpt{}, K6:SortGlobalsCellOpt{}, K7:SortNextGlobAddrCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortMainStoreCellFragment{}} (\and{SortMainStoreCellFragment{}} (Lbl'-LT-'mainStore'-GT-'-fragment{}(X0:SortFuncsCellOpt{}, X1:SortNextFuncAddrCellOpt{}, X2:SortTabsCellOpt{}, X3:SortNextTabAddrCellOpt{}, X4:SortMemsCellOpt{}, X5:SortNextMemAddrCellOpt{}, X6:SortGlobalsCellOpt{}, X7:SortNextGlobAddrCellOpt{}), Lbl'-LT-'mainStore'-GT-'-fragment{}(Y0:SortFuncsCellOpt{}, Y1:SortNextFuncAddrCellOpt{}, Y2:SortTabsCellOpt{}, Y3:SortNextTabAddrCellOpt{}, Y4:SortMemsCellOpt{}, Y5:SortNextMemAddrCellOpt{}, Y6:SortGlobalsCellOpt{}, Y7:SortNextGlobAddrCellOpt{})), Lbl'-LT-'mainStore'-GT-'-fragment{}(\and{SortFuncsCellOpt{}} (X0:SortFuncsCellOpt{}, Y0:SortFuncsCellOpt{}), \and{SortNextFuncAddrCellOpt{}} (X1:SortNextFuncAddrCellOpt{}, Y1:SortNextFuncAddrCellOpt{}), \and{SortTabsCellOpt{}} (X2:SortTabsCellOpt{}, Y2:SortTabsCellOpt{}), \and{SortNextTabAddrCellOpt{}} (X3:SortNextTabAddrCellOpt{}, Y3:SortNextTabAddrCellOpt{}), \and{SortMemsCellOpt{}} (X4:SortMemsCellOpt{}, Y4:SortMemsCellOpt{}), \and{SortNextMemAddrCellOpt{}} (X5:SortNextMemAddrCellOpt{}, Y5:SortNextMemAddrCellOpt{}), \and{SortGlobalsCellOpt{}} (X6:SortGlobalsCellOpt{}, Y6:SortGlobalsCellOpt{}), \and{SortNextGlobAddrCellOpt{}} (X7:SortNextGlobAddrCellOpt{}, Y7:SortNextGlobAddrCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMdataCell{}, \equals{SortMdataCell{}, R} (Val:SortMdataCell{}, Lbl'-LT-'mdata'-GT-'{}(K0:SortByteMap{}))) [functional{}()] // functional
  axiom{}\implies{SortMdataCell{}} (\and{SortMdataCell{}} (Lbl'-LT-'mdata'-GT-'{}(X0:SortByteMap{}), Lbl'-LT-'mdata'-GT-'{}(Y0:SortByteMap{})), Lbl'-LT-'mdata'-GT-'{}(\and{SortByteMap{}} (X0:SortByteMap{}, Y0:SortByteMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemAddrsCell{}, \equals{SortMemAddrsCell{}, R} (Val:SortMemAddrsCell{}, Lbl'-LT-'memAddrs'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortMemAddrsCell{}} (\and{SortMemAddrsCell{}} (Lbl'-LT-'memAddrs'-GT-'{}(X0:SortMap{}), Lbl'-LT-'memAddrs'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'memAddrs'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemIdsCell{}, \equals{SortMemIdsCell{}, R} (Val:SortMemIdsCell{}, Lbl'-LT-'memIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortMemIdsCell{}} (\and{SortMemIdsCell{}} (Lbl'-LT-'memIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'memIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'memIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemInstCell{}, \equals{SortMemInstCell{}, R} (Val:SortMemInstCell{}, Lbl'-LT-'memInst'-GT-'{}(K0:SortMAddrCell{}, K1:SortMmaxCell{}, K2:SortMsizeCell{}, K3:SortMdataCell{}))) [functional{}()] // functional
  axiom{}\implies{SortMemInstCell{}} (\and{SortMemInstCell{}} (Lbl'-LT-'memInst'-GT-'{}(X0:SortMAddrCell{}, X1:SortMmaxCell{}, X2:SortMsizeCell{}, X3:SortMdataCell{}), Lbl'-LT-'memInst'-GT-'{}(Y0:SortMAddrCell{}, Y1:SortMmaxCell{}, Y2:SortMsizeCell{}, Y3:SortMdataCell{})), Lbl'-LT-'memInst'-GT-'{}(\and{SortMAddrCell{}} (X0:SortMAddrCell{}, Y0:SortMAddrCell{}), \and{SortMmaxCell{}} (X1:SortMmaxCell{}, Y1:SortMmaxCell{}), \and{SortMsizeCell{}} (X2:SortMsizeCell{}, Y2:SortMsizeCell{}), \and{SortMdataCell{}} (X3:SortMdataCell{}, Y3:SortMdataCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemInstCellFragment{}, \equals{SortMemInstCellFragment{}, R} (Val:SortMemInstCellFragment{}, Lbl'-LT-'memInst'-GT-'-fragment{}(K0:SortMAddrCellOpt{}, K1:SortMmaxCellOpt{}, K2:SortMsizeCellOpt{}, K3:SortMdataCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortMemInstCellFragment{}} (\and{SortMemInstCellFragment{}} (Lbl'-LT-'memInst'-GT-'-fragment{}(X0:SortMAddrCellOpt{}, X1:SortMmaxCellOpt{}, X2:SortMsizeCellOpt{}, X3:SortMdataCellOpt{}), Lbl'-LT-'memInst'-GT-'-fragment{}(Y0:SortMAddrCellOpt{}, Y1:SortMmaxCellOpt{}, Y2:SortMsizeCellOpt{}, Y3:SortMdataCellOpt{})), Lbl'-LT-'memInst'-GT-'-fragment{}(\and{SortMAddrCellOpt{}} (X0:SortMAddrCellOpt{}, Y0:SortMAddrCellOpt{}), \and{SortMmaxCellOpt{}} (X1:SortMmaxCellOpt{}, Y1:SortMmaxCellOpt{}), \and{SortMsizeCellOpt{}} (X2:SortMsizeCellOpt{}, Y2:SortMsizeCellOpt{}), \and{SortMdataCellOpt{}} (X3:SortMdataCellOpt{}, Y3:SortMdataCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemsCell{}, \equals{SortMemsCell{}, R} (Val:SortMemsCell{}, Lbl'-LT-'mems'-GT-'{}(K0:SortMemInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortMemsCell{}} (\and{SortMemsCell{}} (Lbl'-LT-'mems'-GT-'{}(X0:SortMemInstCellMap{}), Lbl'-LT-'mems'-GT-'{}(Y0:SortMemInstCellMap{})), Lbl'-LT-'mems'-GT-'{}(\and{SortMemInstCellMap{}} (X0:SortMemInstCellMap{}, Y0:SortMemInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemsCellFragment{}, \equals{SortMemsCellFragment{}, R} (Val:SortMemsCellFragment{}, Lbl'-LT-'mems'-GT-'-fragment{}(K0:SortMemInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortMemsCellFragment{}} (\and{SortMemsCellFragment{}} (Lbl'-LT-'mems'-GT-'-fragment{}(X0:SortMemInstCellMap{}), Lbl'-LT-'mems'-GT-'-fragment{}(Y0:SortMemInstCellMap{})), Lbl'-LT-'mems'-GT-'-fragment{}(\and{SortMemInstCellMap{}} (X0:SortMemInstCellMap{}, Y0:SortMemInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMmaxCell{}, \equals{SortMmaxCell{}, R} (Val:SortMmaxCell{}, Lbl'-LT-'mmax'-GT-'{}(K0:SortOptionalInt{}))) [functional{}()] // functional
  axiom{}\implies{SortMmaxCell{}} (\and{SortMmaxCell{}} (Lbl'-LT-'mmax'-GT-'{}(X0:SortOptionalInt{}), Lbl'-LT-'mmax'-GT-'{}(Y0:SortOptionalInt{})), Lbl'-LT-'mmax'-GT-'{}(\and{SortOptionalInt{}} (X0:SortOptionalInt{}, Y0:SortOptionalInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModIdxCell{}, \equals{SortModIdxCell{}, R} (Val:SortModIdxCell{}, Lbl'-LT-'modIdx'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortModIdxCell{}} (\and{SortModIdxCell{}} (Lbl'-LT-'modIdx'-GT-'{}(X0:SortInt{}), Lbl'-LT-'modIdx'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'modIdx'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleIdsCell{}, \equals{SortModuleIdsCell{}, R} (Val:SortModuleIdsCell{}, Lbl'-LT-'moduleIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleIdsCell{}} (\and{SortModuleIdsCell{}} (Lbl'-LT-'moduleIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'moduleIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'moduleIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleInstCell{}, \equals{SortModuleInstCell{}, R} (Val:SortModuleInstCell{}, Lbl'-LT-'moduleInst'-GT-'{}(K0:SortModIdxCell{}, K1:SortExportsCell{}, K2:SortTypeIdsCell{}, K3:SortTypesCell{}, K4:SortNextTypeIdxCell{}, K5:SortFuncIdsCell{}, K6:SortFuncAddrsCell{}, K7:SortNextFuncIdxCell{}, K8:SortTabIdsCell{}, K9:SortTabAddrsCell{}, K10:SortMemIdsCell{}, K11:SortMemAddrsCell{}, K12:SortGlobIdsCell{}, K13:SortGlobalAddrsCell{}, K14:SortNextGlobIdxCell{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleInstCell{}} (\and{SortModuleInstCell{}} (Lbl'-LT-'moduleInst'-GT-'{}(X0:SortModIdxCell{}, X1:SortExportsCell{}, X2:SortTypeIdsCell{}, X3:SortTypesCell{}, X4:SortNextTypeIdxCell{}, X5:SortFuncIdsCell{}, X6:SortFuncAddrsCell{}, X7:SortNextFuncIdxCell{}, X8:SortTabIdsCell{}, X9:SortTabAddrsCell{}, X10:SortMemIdsCell{}, X11:SortMemAddrsCell{}, X12:SortGlobIdsCell{}, X13:SortGlobalAddrsCell{}, X14:SortNextGlobIdxCell{}), Lbl'-LT-'moduleInst'-GT-'{}(Y0:SortModIdxCell{}, Y1:SortExportsCell{}, Y2:SortTypeIdsCell{}, Y3:SortTypesCell{}, Y4:SortNextTypeIdxCell{}, Y5:SortFuncIdsCell{}, Y6:SortFuncAddrsCell{}, Y7:SortNextFuncIdxCell{}, Y8:SortTabIdsCell{}, Y9:SortTabAddrsCell{}, Y10:SortMemIdsCell{}, Y11:SortMemAddrsCell{}, Y12:SortGlobIdsCell{}, Y13:SortGlobalAddrsCell{}, Y14:SortNextGlobIdxCell{})), Lbl'-LT-'moduleInst'-GT-'{}(\and{SortModIdxCell{}} (X0:SortModIdxCell{}, Y0:SortModIdxCell{}), \and{SortExportsCell{}} (X1:SortExportsCell{}, Y1:SortExportsCell{}), \and{SortTypeIdsCell{}} (X2:SortTypeIdsCell{}, Y2:SortTypeIdsCell{}), \and{SortTypesCell{}} (X3:SortTypesCell{}, Y3:SortTypesCell{}), \and{SortNextTypeIdxCell{}} (X4:SortNextTypeIdxCell{}, Y4:SortNextTypeIdxCell{}), \and{SortFuncIdsCell{}} (X5:SortFuncIdsCell{}, Y5:SortFuncIdsCell{}), \and{SortFuncAddrsCell{}} (X6:SortFuncAddrsCell{}, Y6:SortFuncAddrsCell{}), \and{SortNextFuncIdxCell{}} (X7:SortNextFuncIdxCell{}, Y7:SortNextFuncIdxCell{}), \and{SortTabIdsCell{}} (X8:SortTabIdsCell{}, Y8:SortTabIdsCell{}), \and{SortTabAddrsCell{}} (X9:SortTabAddrsCell{}, Y9:SortTabAddrsCell{}), \and{SortMemIdsCell{}} (X10:SortMemIdsCell{}, Y10:SortMemIdsCell{}), \and{SortMemAddrsCell{}} (X11:SortMemAddrsCell{}, Y11:SortMemAddrsCell{}), \and{SortGlobIdsCell{}} (X12:SortGlobIdsCell{}, Y12:SortGlobIdsCell{}), \and{SortGlobalAddrsCell{}} (X13:SortGlobalAddrsCell{}, Y13:SortGlobalAddrsCell{}), \and{SortNextGlobIdxCell{}} (X14:SortNextGlobIdxCell{}, Y14:SortNextGlobIdxCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleInstCellFragment{}, \equals{SortModuleInstCellFragment{}, R} (Val:SortModuleInstCellFragment{}, Lbl'-LT-'moduleInst'-GT-'-fragment{}(K0:SortModIdxCellOpt{}, K1:SortExportsCellOpt{}, K2:SortTypeIdsCellOpt{}, K3:SortTypesCellOpt{}, K4:SortNextTypeIdxCellOpt{}, K5:SortFuncIdsCellOpt{}, K6:SortFuncAddrsCellOpt{}, K7:SortNextFuncIdxCellOpt{}, K8:SortTabIdsCellOpt{}, K9:SortTabAddrsCellOpt{}, K10:SortMemIdsCellOpt{}, K11:SortMemAddrsCellOpt{}, K12:SortGlobIdsCellOpt{}, K13:SortGlobalAddrsCellOpt{}, K14:SortNextGlobIdxCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleInstCellFragment{}} (\and{SortModuleInstCellFragment{}} (Lbl'-LT-'moduleInst'-GT-'-fragment{}(X0:SortModIdxCellOpt{}, X1:SortExportsCellOpt{}, X2:SortTypeIdsCellOpt{}, X3:SortTypesCellOpt{}, X4:SortNextTypeIdxCellOpt{}, X5:SortFuncIdsCellOpt{}, X6:SortFuncAddrsCellOpt{}, X7:SortNextFuncIdxCellOpt{}, X8:SortTabIdsCellOpt{}, X9:SortTabAddrsCellOpt{}, X10:SortMemIdsCellOpt{}, X11:SortMemAddrsCellOpt{}, X12:SortGlobIdsCellOpt{}, X13:SortGlobalAddrsCellOpt{}, X14:SortNextGlobIdxCellOpt{}), Lbl'-LT-'moduleInst'-GT-'-fragment{}(Y0:SortModIdxCellOpt{}, Y1:SortExportsCellOpt{}, Y2:SortTypeIdsCellOpt{}, Y3:SortTypesCellOpt{}, Y4:SortNextTypeIdxCellOpt{}, Y5:SortFuncIdsCellOpt{}, Y6:SortFuncAddrsCellOpt{}, Y7:SortNextFuncIdxCellOpt{}, Y8:SortTabIdsCellOpt{}, Y9:SortTabAddrsCellOpt{}, Y10:SortMemIdsCellOpt{}, Y11:SortMemAddrsCellOpt{}, Y12:SortGlobIdsCellOpt{}, Y13:SortGlobalAddrsCellOpt{}, Y14:SortNextGlobIdxCellOpt{})), Lbl'-LT-'moduleInst'-GT-'-fragment{}(\and{SortModIdxCellOpt{}} (X0:SortModIdxCellOpt{}, Y0:SortModIdxCellOpt{}), \and{SortExportsCellOpt{}} (X1:SortExportsCellOpt{}, Y1:SortExportsCellOpt{}), \and{SortTypeIdsCellOpt{}} (X2:SortTypeIdsCellOpt{}, Y2:SortTypeIdsCellOpt{}), \and{SortTypesCellOpt{}} (X3:SortTypesCellOpt{}, Y3:SortTypesCellOpt{}), \and{SortNextTypeIdxCellOpt{}} (X4:SortNextTypeIdxCellOpt{}, Y4:SortNextTypeIdxCellOpt{}), \and{SortFuncIdsCellOpt{}} (X5:SortFuncIdsCellOpt{}, Y5:SortFuncIdsCellOpt{}), \and{SortFuncAddrsCellOpt{}} (X6:SortFuncAddrsCellOpt{}, Y6:SortFuncAddrsCellOpt{}), \and{SortNextFuncIdxCellOpt{}} (X7:SortNextFuncIdxCellOpt{}, Y7:SortNextFuncIdxCellOpt{}), \and{SortTabIdsCellOpt{}} (X8:SortTabIdsCellOpt{}, Y8:SortTabIdsCellOpt{}), \and{SortTabAddrsCellOpt{}} (X9:SortTabAddrsCellOpt{}, Y9:SortTabAddrsCellOpt{}), \and{SortMemIdsCellOpt{}} (X10:SortMemIdsCellOpt{}, Y10:SortMemIdsCellOpt{}), \and{SortMemAddrsCellOpt{}} (X11:SortMemAddrsCellOpt{}, Y11:SortMemAddrsCellOpt{}), \and{SortGlobIdsCellOpt{}} (X12:SortGlobIdsCellOpt{}, Y12:SortGlobIdsCellOpt{}), \and{SortGlobalAddrsCellOpt{}} (X13:SortGlobalAddrsCellOpt{}, Y13:SortGlobalAddrsCellOpt{}), \and{SortNextGlobIdxCellOpt{}} (X14:SortNextGlobIdxCellOpt{}, Y14:SortNextGlobIdxCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleInstancesCell{}, \equals{SortModuleInstancesCell{}, R} (Val:SortModuleInstancesCell{}, Lbl'-LT-'moduleInstances'-GT-'{}(K0:SortModuleInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleInstancesCell{}} (\and{SortModuleInstancesCell{}} (Lbl'-LT-'moduleInstances'-GT-'{}(X0:SortModuleInstCellMap{}), Lbl'-LT-'moduleInstances'-GT-'{}(Y0:SortModuleInstCellMap{})), Lbl'-LT-'moduleInstances'-GT-'{}(\and{SortModuleInstCellMap{}} (X0:SortModuleInstCellMap{}, Y0:SortModuleInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleInstancesCellFragment{}, \equals{SortModuleInstancesCellFragment{}, R} (Val:SortModuleInstancesCellFragment{}, Lbl'-LT-'moduleInstances'-GT-'-fragment{}(K0:SortModuleInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleInstancesCellFragment{}} (\and{SortModuleInstancesCellFragment{}} (Lbl'-LT-'moduleInstances'-GT-'-fragment{}(X0:SortModuleInstCellMap{}), Lbl'-LT-'moduleInstances'-GT-'-fragment{}(Y0:SortModuleInstCellMap{})), Lbl'-LT-'moduleInstances'-GT-'-fragment{}(\and{SortModuleInstCellMap{}} (X0:SortModuleInstCellMap{}, Y0:SortModuleInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModuleRegistryCell{}, \equals{SortModuleRegistryCell{}, R} (Val:SortModuleRegistryCell{}, Lbl'-LT-'moduleRegistry'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleRegistryCell{}} (\and{SortModuleRegistryCell{}} (Lbl'-LT-'moduleRegistry'-GT-'{}(X0:SortMap{}), Lbl'-LT-'moduleRegistry'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'moduleRegistry'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMsizeCell{}, \equals{SortMsizeCell{}, R} (Val:SortMsizeCell{}, Lbl'-LT-'msize'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortMsizeCell{}} (\and{SortMsizeCell{}} (Lbl'-LT-'msize'-GT-'{}(X0:SortInt{}), Lbl'-LT-'msize'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'msize'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextFreshIdCell{}, \equals{SortNextFreshIdCell{}, R} (Val:SortNextFreshIdCell{}, Lbl'-LT-'nextFreshId'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextFreshIdCell{}} (\and{SortNextFreshIdCell{}} (Lbl'-LT-'nextFreshId'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextFreshId'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextFreshId'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextFuncAddrCell{}, \equals{SortNextFuncAddrCell{}, R} (Val:SortNextFuncAddrCell{}, Lbl'-LT-'nextFuncAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextFuncAddrCell{}} (\and{SortNextFuncAddrCell{}} (Lbl'-LT-'nextFuncAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextFuncAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextFuncAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextFuncIdxCell{}, \equals{SortNextFuncIdxCell{}, R} (Val:SortNextFuncIdxCell{}, Lbl'-LT-'nextFuncIdx'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextFuncIdxCell{}} (\and{SortNextFuncIdxCell{}} (Lbl'-LT-'nextFuncIdx'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextFuncIdx'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextFuncIdx'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextGlobAddrCell{}, \equals{SortNextGlobAddrCell{}, R} (Val:SortNextGlobAddrCell{}, Lbl'-LT-'nextGlobAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextGlobAddrCell{}} (\and{SortNextGlobAddrCell{}} (Lbl'-LT-'nextGlobAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextGlobAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextGlobAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextGlobIdxCell{}, \equals{SortNextGlobIdxCell{}, R} (Val:SortNextGlobIdxCell{}, Lbl'-LT-'nextGlobIdx'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextGlobIdxCell{}} (\and{SortNextGlobIdxCell{}} (Lbl'-LT-'nextGlobIdx'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextGlobIdx'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextGlobIdx'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextMemAddrCell{}, \equals{SortNextMemAddrCell{}, R} (Val:SortNextMemAddrCell{}, Lbl'-LT-'nextMemAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextMemAddrCell{}} (\and{SortNextMemAddrCell{}} (Lbl'-LT-'nextMemAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextMemAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextMemAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextModuleIdxCell{}, \equals{SortNextModuleIdxCell{}, R} (Val:SortNextModuleIdxCell{}, Lbl'-LT-'nextModuleIdx'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextModuleIdxCell{}} (\and{SortNextModuleIdxCell{}} (Lbl'-LT-'nextModuleIdx'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextModuleIdx'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextModuleIdx'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextTabAddrCell{}, \equals{SortNextTabAddrCell{}, R} (Val:SortNextTabAddrCell{}, Lbl'-LT-'nextTabAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextTabAddrCell{}} (\and{SortNextTabAddrCell{}} (Lbl'-LT-'nextTabAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextTabAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextTabAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNextTypeIdxCell{}, \equals{SortNextTypeIdxCell{}, R} (Val:SortNextTypeIdxCell{}, Lbl'-LT-'nextTypeIdx'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortNextTypeIdxCell{}} (\and{SortNextTypeIdxCell{}} (Lbl'-LT-'nextTypeIdx'-GT-'{}(X0:SortInt{}), Lbl'-LT-'nextTypeIdx'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'nextTypeIdx'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTAddrCell{}, \equals{SortTAddrCell{}, R} (Val:SortTAddrCell{}, Lbl'-LT-'tAddr'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortTAddrCell{}} (\and{SortTAddrCell{}} (Lbl'-LT-'tAddr'-GT-'{}(X0:SortInt{}), Lbl'-LT-'tAddr'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'tAddr'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabAddrsCell{}, \equals{SortTabAddrsCell{}, R} (Val:SortTabAddrsCell{}, Lbl'-LT-'tabAddrs'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTabAddrsCell{}} (\and{SortTabAddrsCell{}} (Lbl'-LT-'tabAddrs'-GT-'{}(X0:SortMap{}), Lbl'-LT-'tabAddrs'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'tabAddrs'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabIdsCell{}, \equals{SortTabIdsCell{}, R} (Val:SortTabIdsCell{}, Lbl'-LT-'tabIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTabIdsCell{}} (\and{SortTabIdsCell{}} (Lbl'-LT-'tabIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'tabIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'tabIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabInstCell{}, \equals{SortTabInstCell{}, R} (Val:SortTabInstCell{}, Lbl'-LT-'tabInst'-GT-'{}(K0:SortTAddrCell{}, K1:SortTmaxCell{}, K2:SortTsizeCell{}, K3:SortTdataCell{}))) [functional{}()] // functional
  axiom{}\implies{SortTabInstCell{}} (\and{SortTabInstCell{}} (Lbl'-LT-'tabInst'-GT-'{}(X0:SortTAddrCell{}, X1:SortTmaxCell{}, X2:SortTsizeCell{}, X3:SortTdataCell{}), Lbl'-LT-'tabInst'-GT-'{}(Y0:SortTAddrCell{}, Y1:SortTmaxCell{}, Y2:SortTsizeCell{}, Y3:SortTdataCell{})), Lbl'-LT-'tabInst'-GT-'{}(\and{SortTAddrCell{}} (X0:SortTAddrCell{}, Y0:SortTAddrCell{}), \and{SortTmaxCell{}} (X1:SortTmaxCell{}, Y1:SortTmaxCell{}), \and{SortTsizeCell{}} (X2:SortTsizeCell{}, Y2:SortTsizeCell{}), \and{SortTdataCell{}} (X3:SortTdataCell{}, Y3:SortTdataCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabInstCellFragment{}, \equals{SortTabInstCellFragment{}, R} (Val:SortTabInstCellFragment{}, Lbl'-LT-'tabInst'-GT-'-fragment{}(K0:SortTAddrCellOpt{}, K1:SortTmaxCellOpt{}, K2:SortTsizeCellOpt{}, K3:SortTdataCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortTabInstCellFragment{}} (\and{SortTabInstCellFragment{}} (Lbl'-LT-'tabInst'-GT-'-fragment{}(X0:SortTAddrCellOpt{}, X1:SortTmaxCellOpt{}, X2:SortTsizeCellOpt{}, X3:SortTdataCellOpt{}), Lbl'-LT-'tabInst'-GT-'-fragment{}(Y0:SortTAddrCellOpt{}, Y1:SortTmaxCellOpt{}, Y2:SortTsizeCellOpt{}, Y3:SortTdataCellOpt{})), Lbl'-LT-'tabInst'-GT-'-fragment{}(\and{SortTAddrCellOpt{}} (X0:SortTAddrCellOpt{}, Y0:SortTAddrCellOpt{}), \and{SortTmaxCellOpt{}} (X1:SortTmaxCellOpt{}, Y1:SortTmaxCellOpt{}), \and{SortTsizeCellOpt{}} (X2:SortTsizeCellOpt{}, Y2:SortTsizeCellOpt{}), \and{SortTdataCellOpt{}} (X3:SortTdataCellOpt{}, Y3:SortTdataCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabsCell{}, \equals{SortTabsCell{}, R} (Val:SortTabsCell{}, Lbl'-LT-'tabs'-GT-'{}(K0:SortTabInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTabsCell{}} (\and{SortTabsCell{}} (Lbl'-LT-'tabs'-GT-'{}(X0:SortTabInstCellMap{}), Lbl'-LT-'tabs'-GT-'{}(Y0:SortTabInstCellMap{})), Lbl'-LT-'tabs'-GT-'{}(\and{SortTabInstCellMap{}} (X0:SortTabInstCellMap{}, Y0:SortTabInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTabsCellFragment{}, \equals{SortTabsCellFragment{}, R} (Val:SortTabsCellFragment{}, Lbl'-LT-'tabs'-GT-'-fragment{}(K0:SortTabInstCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTabsCellFragment{}} (\and{SortTabsCellFragment{}} (Lbl'-LT-'tabs'-GT-'-fragment{}(X0:SortTabInstCellMap{}), Lbl'-LT-'tabs'-GT-'-fragment{}(Y0:SortTabInstCellMap{})), Lbl'-LT-'tabs'-GT-'-fragment{}(\and{SortTabInstCellMap{}} (X0:SortTabInstCellMap{}, Y0:SortTabInstCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTdataCell{}, \equals{SortTdataCell{}, R} (Val:SortTdataCell{}, Lbl'-LT-'tdata'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTdataCell{}} (\and{SortTdataCell{}} (Lbl'-LT-'tdata'-GT-'{}(X0:SortMap{}), Lbl'-LT-'tdata'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'tdata'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTmaxCell{}, \equals{SortTmaxCell{}, R} (Val:SortTmaxCell{}, Lbl'-LT-'tmax'-GT-'{}(K0:SortOptionalInt{}))) [functional{}()] // functional
  axiom{}\implies{SortTmaxCell{}} (\and{SortTmaxCell{}} (Lbl'-LT-'tmax'-GT-'{}(X0:SortOptionalInt{}), Lbl'-LT-'tmax'-GT-'{}(Y0:SortOptionalInt{})), Lbl'-LT-'tmax'-GT-'{}(\and{SortOptionalInt{}} (X0:SortOptionalInt{}, Y0:SortOptionalInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTsizeCell{}, \equals{SortTsizeCell{}, R} (Val:SortTsizeCell{}, Lbl'-LT-'tsize'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortTsizeCell{}} (\and{SortTsizeCell{}} (Lbl'-LT-'tsize'-GT-'{}(X0:SortInt{}), Lbl'-LT-'tsize'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'tsize'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypeIdsCell{}, \equals{SortTypeIdsCell{}, R} (Val:SortTypeIdsCell{}, Lbl'-LT-'typeIds'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeIdsCell{}} (\and{SortTypeIdsCell{}} (Lbl'-LT-'typeIds'-GT-'{}(X0:SortMap{}), Lbl'-LT-'typeIds'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'typeIds'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypesCell{}, \equals{SortTypesCell{}, R} (Val:SortTypesCell{}, Lbl'-LT-'types'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTypesCell{}} (\and{SortTypesCell{}} (Lbl'-LT-'types'-GT-'{}(X0:SortMap{}), Lbl'-LT-'types'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'types'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortValstackCell{}, \equals{SortValstackCell{}, R} (Val:SortValstackCell{}, Lbl'-LT-'valstack'-GT-'{}(K0:SortValStack{}))) [functional{}()] // functional
  axiom{}\implies{SortValstackCell{}} (\and{SortValstackCell{}} (Lbl'-LT-'valstack'-GT-'{}(X0:SortValStack{}), Lbl'-LT-'valstack'-GT-'{}(Y0:SortValStack{})), Lbl'-LT-'valstack'-GT-'{}(\and{SortValStack{}} (X0:SortValStack{}, Y0:SortValStack{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortWasmCell{}, \equals{SortWasmCell{}, R} (Val:SortWasmCell{}, Lbl'-LT-'wasm'-GT-'{}(K0:SortKCell{}, K1:SortValstackCell{}, K2:SortCurFrameCell{}, K3:SortModuleRegistryCell{}, K4:SortModuleIdsCell{}, K5:SortModuleInstancesCell{}, K6:SortNextModuleIdxCell{}, K7:SortMainStoreCell{}, K8:SortDeterministicMemoryGrowthCell{}, K9:SortNextFreshIdCell{}))) [functional{}()] // functional
  axiom{}\implies{SortWasmCell{}} (\and{SortWasmCell{}} (Lbl'-LT-'wasm'-GT-'{}(X0:SortKCell{}, X1:SortValstackCell{}, X2:SortCurFrameCell{}, X3:SortModuleRegistryCell{}, X4:SortModuleIdsCell{}, X5:SortModuleInstancesCell{}, X6:SortNextModuleIdxCell{}, X7:SortMainStoreCell{}, X8:SortDeterministicMemoryGrowthCell{}, X9:SortNextFreshIdCell{}), Lbl'-LT-'wasm'-GT-'{}(Y0:SortKCell{}, Y1:SortValstackCell{}, Y2:SortCurFrameCell{}, Y3:SortModuleRegistryCell{}, Y4:SortModuleIdsCell{}, Y5:SortModuleInstancesCell{}, Y6:SortNextModuleIdxCell{}, Y7:SortMainStoreCell{}, Y8:SortDeterministicMemoryGrowthCell{}, Y9:SortNextFreshIdCell{})), Lbl'-LT-'wasm'-GT-'{}(\and{SortKCell{}} (X0:SortKCell{}, Y0:SortKCell{}), \and{SortValstackCell{}} (X1:SortValstackCell{}, Y1:SortValstackCell{}), \and{SortCurFrameCell{}} (X2:SortCurFrameCell{}, Y2:SortCurFrameCell{}), \and{SortModuleRegistryCell{}} (X3:SortModuleRegistryCell{}, Y3:SortModuleRegistryCell{}), \and{SortModuleIdsCell{}} (X4:SortModuleIdsCell{}, Y4:SortModuleIdsCell{}), \and{SortModuleInstancesCell{}} (X5:SortModuleInstancesCell{}, Y5:SortModuleInstancesCell{}), \and{SortNextModuleIdxCell{}} (X6:SortNextModuleIdxCell{}, Y6:SortNextModuleIdxCell{}), \and{SortMainStoreCell{}} (X7:SortMainStoreCell{}, Y7:SortMainStoreCell{}), \and{SortDeterministicMemoryGrowthCell{}} (X8:SortDeterministicMemoryGrowthCell{}, Y8:SortDeterministicMemoryGrowthCell{}), \and{SortNextFreshIdCell{}} (X9:SortNextFreshIdCell{}, Y9:SortNextFreshIdCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortWasmCellFragment{}, \equals{SortWasmCellFragment{}, R} (Val:SortWasmCellFragment{}, Lbl'-LT-'wasm'-GT-'-fragment{}(K0:SortKCellOpt{}, K1:SortValstackCellOpt{}, K2:SortCurFrameCellOpt{}, K3:SortModuleRegistryCellOpt{}, K4:SortModuleIdsCellOpt{}, K5:SortModuleInstancesCellOpt{}, K6:SortNextModuleIdxCellOpt{}, K7:SortMainStoreCellOpt{}, K8:SortDeterministicMemoryGrowthCellOpt{}, K9:SortNextFreshIdCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortWasmCellFragment{}} (\and{SortWasmCellFragment{}} (Lbl'-LT-'wasm'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortValstackCellOpt{}, X2:SortCurFrameCellOpt{}, X3:SortModuleRegistryCellOpt{}, X4:SortModuleIdsCellOpt{}, X5:SortModuleInstancesCellOpt{}, X6:SortNextModuleIdxCellOpt{}, X7:SortMainStoreCellOpt{}, X8:SortDeterministicMemoryGrowthCellOpt{}, X9:SortNextFreshIdCellOpt{}), Lbl'-LT-'wasm'-GT-'-fragment{}(Y0:SortKCellOpt{}, Y1:SortValstackCellOpt{}, Y2:SortCurFrameCellOpt{}, Y3:SortModuleRegistryCellOpt{}, Y4:SortModuleIdsCellOpt{}, Y5:SortModuleInstancesCellOpt{}, Y6:SortNextModuleIdxCellOpt{}, Y7:SortMainStoreCellOpt{}, Y8:SortDeterministicMemoryGrowthCellOpt{}, Y9:SortNextFreshIdCellOpt{})), Lbl'-LT-'wasm'-GT-'-fragment{}(\and{SortKCellOpt{}} (X0:SortKCellOpt{}, Y0:SortKCellOpt{}), \and{SortValstackCellOpt{}} (X1:SortValstackCellOpt{}, Y1:SortValstackCellOpt{}), \and{SortCurFrameCellOpt{}} (X2:SortCurFrameCellOpt{}, Y2:SortCurFrameCellOpt{}), \and{SortModuleRegistryCellOpt{}} (X3:SortModuleRegistryCellOpt{}, Y3:SortModuleRegistryCellOpt{}), \and{SortModuleIdsCellOpt{}} (X4:SortModuleIdsCellOpt{}, Y4:SortModuleIdsCellOpt{}), \and{SortModuleInstancesCellOpt{}} (X5:SortModuleInstancesCellOpt{}, Y5:SortModuleInstancesCellOpt{}), \and{SortNextModuleIdxCellOpt{}} (X6:SortNextModuleIdxCellOpt{}, Y6:SortNextModuleIdxCellOpt{}), \and{SortMainStoreCellOpt{}} (X7:SortMainStoreCellOpt{}, Y7:SortMainStoreCellOpt{}), \and{SortDeterministicMemoryGrowthCellOpt{}} (X8:SortDeterministicMemoryGrowthCellOpt{}, Y8:SortDeterministicMemoryGrowthCellOpt{}), \and{SortNextFreshIdCellOpt{}} (X9:SortNextFreshIdCellOpt{}, Y9:SortNextFreshIdCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortByteMap{}, \equals{SortByteMap{}, R} (Val:SortByteMap{}, LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortByteMap{}} (\and{SortByteMap{}} (LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(X0:SortMap{}), LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(Y0:SortMap{})), LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblBytes2Int'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes'Unds'Endianness'Unds'Signedness{}(K0:SortBytes{}, K1:SortEndianness{}, K2:SortSignedness{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblBytes2String'LParUndsRParUnds'BYTES-HOOKED'Unds'String'Unds'Bytes{}(K0:SortBytes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblFloat2String'LParUndsRParUnds'STRING'Unds'String'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(K0:SortInt{}, K1:SortEndianness{}, K2:SortSignedness{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(K0:SortInt{}, K1:SortInt{}, K2:SortEndianness{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblInt2String'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblListItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblMap'Coln'update{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSetItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, LblString2Bytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIdentifierToken{}, \equals{SortIdentifierToken{}, R} (Val:SortIdentifierToken{}, LblString2Identifier'LParUndsRParUnds'WASM-TEXT'Unds'IdentifierToken'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVecType{}, \equals{SortVecType{}, R} (Val:SortVecType{}, Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(K0:SortValTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortVecType{}} (\and{SortVecType{}} (Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(X0:SortValTypes{}), Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(Y0:SortValTypes{})), Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(\and{SortValTypes{}} (X0:SortValTypes{}, Y0:SortValTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsAnd-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTableSpec{}, \equals{SortTableSpec{}, R} (Val:SortTableSpec{}, Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(K0:SortTableElemType{}, K1:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(X0:SortTableElemType{}, X1:SortElemSegment{}), Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(Y0:SortTableElemType{}, Y1:SortElemSegment{})), Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(\and{SortTableElemType{}} (X0:SortTableElemType{}, Y0:SortTableElemType{}), \and{SortElemSegment{}} (X1:SortElemSegment{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(X0:SortTableElemType{}, X1:SortElemSegment{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(Y0:SortInlineExport{}, Y1:SortTableSpec{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(X0:SortTableElemType{}, X1:SortElemSegment{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(Y0:SortInlineImport{}, Y1:SortTableType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsStar'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDefns{}, \equals{SortDefns{}, R} (Val:SortDefns{}, Lbl'UndsPlusPlus'Defns'UndsUnds'WRC20'Unds'Defns'Unds'Defns'Unds'Defns{}(K0:SortDefns{}, K1:SortDefns{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, Lbl'UndsPlus'Bytes'UndsUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes'Unds'Bytes{}(K0:SortBytes{}, K1:SortBytes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncType{}, \equals{SortFuncType{}, R} (Val:SortFuncType{}, Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(K0:SortVecType{}, K1:SortVecType{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncType{}} (\and{SortFuncType{}} (Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(X0:SortVecType{}, X1:SortVecType{}), Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(Y0:SortVecType{}, Y1:SortVecType{})), Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(\and{SortVecType{}} (X0:SortVecType{}, Y0:SortVecType{}), \and{SortVecType{}} (X1:SortVecType{}, Y1:SortVecType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'-Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(K0:SortAValType{}, K1:SortCvtOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(Y0:SortAValType{}, Y1:SortCvtOp{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(\and{SortAValType{}} (X0:SortAValType{}, Y0:SortAValType{}), \and{SortCvtOp{}} (X1:SortCvtOp{}, Y1:SortCvtOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(Y0:SortFValType{}, Y1:SortFBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(Y0:SortFValType{}, Y1:SortFRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(Y0:SortFValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(Y0:SortFValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(K0:SortFValType{}, K1:SortFBinOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(Y0:SortFValType{}, Y1:SortFBinOp{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortFBinOp{}} (X1:SortFBinOp{}, Y1:SortFBinOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(Y0:SortFValType{}, Y1:SortFRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(Y0:SortFValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(Y0:SortFValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(K0:SortFValType{}, K1:SortFRelOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(Y0:SortFValType{}, Y1:SortFRelOp{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortFRelOp{}} (X1:SortFRelOp{}, Y1:SortFRelOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(Y0:SortFValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(Y0:SortFValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(K0:SortFValType{}, K1:SortFUnOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(Y0:SortFValType{}, Y1:SortFUnOp{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortFUnOp{}} (X1:SortFUnOp{}, Y1:SortFUnOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(Y0:SortFValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(Y0:SortFValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(K0:SortFValType{}, K1:SortLoadOpM{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(Y0:SortFValType{}, Y1:SortLoadOpM{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortLoadOpM{}} (X1:SortLoadOpM{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(Y0:SortFValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(K0:SortFValType{}, K1:SortStoreOpM{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(Y0:SortFValType{}, Y1:SortStoreOpM{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortStoreOpM{}} (X1:SortStoreOpM{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(K0:SortIValType{}, K1:SortIBinOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(Y0:SortIValType{}, Y1:SortIBinOp{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortIBinOp{}} (X1:SortIBinOp{}, Y1:SortIBinOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(K0:SortIValType{}, K1:SortIRelOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(Y0:SortIValType{}, Y1:SortIRelOp{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortIRelOp{}} (X1:SortIRelOp{}, Y1:SortIRelOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(K0:SortIValType{}, K1:SortIUnOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(Y0:SortIValType{}, Y1:SortIUnOp{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortIUnOp{}} (X1:SortIUnOp{}, Y1:SortIUnOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(K0:SortIValType{}, K1:SortLoadOpM{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Y0:SortIValType{}, Y1:SortLoadOpM{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortLoadOpM{}} (X1:SortLoadOpM{}, Y1:SortLoadOpM{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(K0:SortIValType{}, K1:SortStoreOpM{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Y0:SortIValType{}, Y1:SortStoreOpM{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortStoreOpM{}} (X1:SortStoreOpM{}, Y1:SortStoreOpM{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(K0:SortIValType{}, K1:SortTestOp{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(Y0:SortIValType{}, Y1:SortTestOp{})), Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortTestOp{}} (X1:SortTestOp{}, Y1:SortTestOp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(K0:SortIValType{}, K1:SortLoadOp{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(Y0:SortIValType{}, Y1:SortLoadOp{}, Y2:SortInt{})), Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortLoadOp{}} (X1:SortLoadOp{}, Y1:SortLoadOp{}), \and{SortInt{}} (X2:SortInt{}, Y2:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(K0:SortIValType{}, K1:SortStoreOp{}, K2:SortInt{}, K3:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Y0:SortIValType{}, Y1:SortStoreOp{}, Y2:SortInt{}, Y3:SortInt{})), Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortStoreOp{}} (X1:SortStoreOp{}, Y1:SortStoreOp{}), \and{SortInt{}} (X2:SortInt{}, Y2:SortInt{}), \and{SortInt{}} (X3:SortInt{}, Y3:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(Y0:SortVecType{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(Y0:SortValTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(K0:SortFValType{}, K1:SortNumber{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(Y0:SortFValType{}, Y1:SortNumber{})), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(\and{SortFValType{}} (X0:SortFValType{}, Y0:SortFValType{}), \and{SortNumber{}} (X1:SortNumber{}, Y1:SortNumber{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(K0:SortIValType{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Y0:SortIValType{}, Y1:SortInt{})), Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortValStack{}, \equals{SortValStack{}, R} (Val:SortValStack{}, Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(K0:SortVal{}, K1:SortValStack{}))) [functional{}()] // functional
  axiom{}\implies{SortValStack{}} (\and{SortValStack{}} (Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(X0:SortVal{}, X1:SortValStack{}), Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Y0:SortVal{}, Y1:SortValStack{})), Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(\and{SortVal{}} (X0:SortVal{}, Y0:SortVal{}), \and{SortValStack{}} (X1:SortValStack{}, Y1:SortValStack{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \equals{SortFuncDefCellMap{}, R} (Lbl'Unds'FuncDefCellMap'Unds'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(K1:SortFuncDefCellMap{},K2:SortFuncDefCellMap{}),K3:SortFuncDefCellMap{}),Lbl'Unds'FuncDefCellMap'Unds'{}(K1:SortFuncDefCellMap{},Lbl'Unds'FuncDefCellMap'Unds'{}(K2:SortFuncDefCellMap{},K3:SortFuncDefCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortFuncDefCellMap{}, R} (Lbl'Unds'FuncDefCellMap'Unds'{}(K1:SortFuncDefCellMap{},K2:SortFuncDefCellMap{}),Lbl'Unds'FuncDefCellMap'Unds'{}(K2:SortFuncDefCellMap{},K1:SortFuncDefCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortFuncDefCellMap{}, R} (Lbl'Unds'FuncDefCellMap'Unds'{}(K:SortFuncDefCellMap{},Lbl'Stop'FuncDefCellMap{}()),K:SortFuncDefCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortFuncDefCellMap{}, R} (Lbl'Unds'FuncDefCellMap'Unds'{}(Lbl'Stop'FuncDefCellMap{}(),K:SortFuncDefCellMap{}),K:SortFuncDefCellMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortGlobalInstCellMap{}, R} (Lbl'Unds'GlobalInstCellMap'Unds'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(K1:SortGlobalInstCellMap{},K2:SortGlobalInstCellMap{}),K3:SortGlobalInstCellMap{}),Lbl'Unds'GlobalInstCellMap'Unds'{}(K1:SortGlobalInstCellMap{},Lbl'Unds'GlobalInstCellMap'Unds'{}(K2:SortGlobalInstCellMap{},K3:SortGlobalInstCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortGlobalInstCellMap{}, R} (Lbl'Unds'GlobalInstCellMap'Unds'{}(K1:SortGlobalInstCellMap{},K2:SortGlobalInstCellMap{}),Lbl'Unds'GlobalInstCellMap'Unds'{}(K2:SortGlobalInstCellMap{},K1:SortGlobalInstCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortGlobalInstCellMap{}, R} (Lbl'Unds'GlobalInstCellMap'Unds'{}(K:SortGlobalInstCellMap{},Lbl'Stop'GlobalInstCellMap{}()),K:SortGlobalInstCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortGlobalInstCellMap{}, R} (Lbl'Unds'GlobalInstCellMap'Unds'{}(Lbl'Stop'GlobalInstCellMap{}(),K:SortGlobalInstCellMap{}),K:SortGlobalInstCellMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(K1:SortList{},K2:SortList{}),K3:SortList{}),Lbl'Unds'List'Unds'{}(K1:SortList{},Lbl'Unds'List'Unds'{}(K2:SortList{},K3:SortList{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(K:SortList{},Lbl'Stop'List{}()),K:SortList{}) [unit{}()] // right unit
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),K:SortList{}),K:SortList{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),K3:SortMap{}),Lbl'Unds'Map'Unds'{}(K1:SortMap{},Lbl'Unds'Map'Unds'{}(K2:SortMap{},K3:SortMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),Lbl'Unds'Map'Unds'{}(K2:SortMap{},K1:SortMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K:SortMap{},Lbl'Stop'Map{}()),K:SortMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),K:SortMap{}),K:SortMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortMemInstCellMap{}, R} (Lbl'Unds'MemInstCellMap'Unds'{}(Lbl'Unds'MemInstCellMap'Unds'{}(K1:SortMemInstCellMap{},K2:SortMemInstCellMap{}),K3:SortMemInstCellMap{}),Lbl'Unds'MemInstCellMap'Unds'{}(K1:SortMemInstCellMap{},Lbl'Unds'MemInstCellMap'Unds'{}(K2:SortMemInstCellMap{},K3:SortMemInstCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortMemInstCellMap{}, R} (Lbl'Unds'MemInstCellMap'Unds'{}(K1:SortMemInstCellMap{},K2:SortMemInstCellMap{}),Lbl'Unds'MemInstCellMap'Unds'{}(K2:SortMemInstCellMap{},K1:SortMemInstCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortMemInstCellMap{}, R} (Lbl'Unds'MemInstCellMap'Unds'{}(K:SortMemInstCellMap{},Lbl'Stop'MemInstCellMap{}()),K:SortMemInstCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMemInstCellMap{}, R} (Lbl'Unds'MemInstCellMap'Unds'{}(Lbl'Stop'MemInstCellMap{}(),K:SortMemInstCellMap{}),K:SortMemInstCellMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortModuleInstCellMap{}, R} (Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(K1:SortModuleInstCellMap{},K2:SortModuleInstCellMap{}),K3:SortModuleInstCellMap{}),Lbl'Unds'ModuleInstCellMap'Unds'{}(K1:SortModuleInstCellMap{},Lbl'Unds'ModuleInstCellMap'Unds'{}(K2:SortModuleInstCellMap{},K3:SortModuleInstCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortModuleInstCellMap{}, R} (Lbl'Unds'ModuleInstCellMap'Unds'{}(K1:SortModuleInstCellMap{},K2:SortModuleInstCellMap{}),Lbl'Unds'ModuleInstCellMap'Unds'{}(K2:SortModuleInstCellMap{},K1:SortModuleInstCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortModuleInstCellMap{}, R} (Lbl'Unds'ModuleInstCellMap'Unds'{}(K:SortModuleInstCellMap{},Lbl'Stop'ModuleInstCellMap{}()),K:SortModuleInstCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortModuleInstCellMap{}, R} (Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Stop'ModuleInstCellMap{}(),K:SortModuleInstCellMap{}),K:SortModuleInstCellMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),K3:SortSet{}),Lbl'Unds'Set'Unds'{}(K1:SortSet{},Lbl'Unds'Set'Unds'{}(K2:SortSet{},K3:SortSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),Lbl'Unds'Set'Unds'{}(K2:SortSet{},K1:SortSet{})) [comm{}()] // commutativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},K:SortSet{}),K:SortSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},Lbl'Stop'Set{}()),K:SortSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),K:SortSet{}),K:SortSet{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Unds'Set'Unds'{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \equals{SortTabInstCellMap{}, R} (Lbl'Unds'TabInstCellMap'Unds'{}(Lbl'Unds'TabInstCellMap'Unds'{}(K1:SortTabInstCellMap{},K2:SortTabInstCellMap{}),K3:SortTabInstCellMap{}),Lbl'Unds'TabInstCellMap'Unds'{}(K1:SortTabInstCellMap{},Lbl'Unds'TabInstCellMap'Unds'{}(K2:SortTabInstCellMap{},K3:SortTabInstCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortTabInstCellMap{}, R} (Lbl'Unds'TabInstCellMap'Unds'{}(K1:SortTabInstCellMap{},K2:SortTabInstCellMap{}),Lbl'Unds'TabInstCellMap'Unds'{}(K2:SortTabInstCellMap{},K1:SortTabInstCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortTabInstCellMap{}, R} (Lbl'Unds'TabInstCellMap'Unds'{}(K:SortTabInstCellMap{},Lbl'Stop'TabInstCellMap{}()),K:SortTabInstCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortTabInstCellMap{}, R} (Lbl'Unds'TabInstCellMap'Unds'{}(Lbl'Stop'TabInstCellMap{}(),K:SortTabInstCellMap{}),K:SortTabInstCellMap{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortOptionalId{}, \equals{SortOptionalId{}, R} (Val:SortOptionalId{}, Lbl'Unds'WASM-DATA'Unds'OptionalId{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDataString{}, \equals{SortDataString{}, R} (Val:SortDataString{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString{}(K0:SortWasmString{}, K1:SortDataString{}))) [functional{}()] // functional
  axiom{}\implies{SortDataString{}} (\and{SortDataString{}} (Lbl'UndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString{}(X0:SortWasmString{}, X1:SortDataString{}), Lbl'UndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString{}(Y0:SortWasmString{}, Y1:SortDataString{})), Lbl'UndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString{}(\and{SortWasmString{}} (X0:SortWasmString{}, Y0:SortWasmString{}), \and{SortDataString{}} (X1:SortDataString{}, Y1:SortDataString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortElemSegment{}, \equals{SortElemSegment{}, R} (Val:SortElemSegment{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(K0:SortIndex{}, K1:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortElemSegment{}} (\and{SortElemSegment{}} (Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortElemSegment{}), Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortElemSegment{})), Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}), \and{SortElemSegment{}} (X1:SortElemSegment{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExternval{}, \equals{SortExternval{}, R} (Val:SortExternval{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(K0:SortAllocatedKind{}, K1:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortExternval{}} (\and{SortExternval{}} (Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(X0:SortAllocatedKind{}, X1:SortIndex{}), Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Y0:SortAllocatedKind{}, Y1:SortIndex{})), Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(\and{SortAllocatedKind{}} (X0:SortAllocatedKind{}, Y0:SortAllocatedKind{}), \and{SortIndex{}} (X1:SortIndex{}, Y1:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLimits{}, \equals{SortLimits{}, R} (Val:SortLimits{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortLimits{}} (\and{SortLimits{}} (Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(X0:SortInt{}, X1:SortInt{}), Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(Y0:SortInt{}, Y1:SortInt{})), Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortValTypes{}, \equals{SortValTypes{}, R} (Val:SortValTypes{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(K0:SortValType{}, K1:SortValTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortValTypes{}} (\and{SortValTypes{}} (Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(X0:SortValType{}, X1:SortValTypes{}), Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(Y0:SortValType{}, Y1:SortValTypes{})), Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(\and{SortValType{}} (X0:SortValType{}, Y0:SortValType{}), \and{SortValTypes{}} (X1:SortValTypes{}, Y1:SortValTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncSpec{}, \equals{SortFuncSpec{}, R} (Val:SortFuncSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(K0:SortInlineExport{}, K1:SortFuncSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(X0:SortInlineExport{}, X1:SortFuncSpec{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(Y0:SortInlineExport{}, Y1:SortFuncSpec{})), Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(\and{SortInlineExport{}} (X0:SortInlineExport{}, Y0:SortInlineExport{}), \and{SortFuncSpec{}} (X1:SortFuncSpec{}, Y1:SortFuncSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(X0:SortInlineExport{}, X1:SortFuncSpec{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(Y0:SortInlineImport{}, Y1:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(X0:SortInlineExport{}, X1:SortFuncSpec{}), Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(Y0:SortTypeUse{}, Y1:SortLocalDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFuncSpec{}, \equals{SortFuncSpec{}, R} (Val:SortFuncSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(K0:SortInlineImport{}, K1:SortTypeUse{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(X0:SortInlineImport{}, X1:SortTypeUse{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(Y0:SortInlineImport{}, Y1:SortTypeUse{})), Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(\and{SortInlineImport{}} (X0:SortInlineImport{}, Y0:SortInlineImport{}), \and{SortTypeUse{}} (X1:SortTypeUse{}, Y1:SortTypeUse{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(X0:SortInlineImport{}, X1:SortTypeUse{}), Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(Y0:SortTypeUse{}, Y1:SortLocalDecls{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortGlobalSpec{}, \equals{SortGlobalSpec{}, R} (Val:SortGlobalSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(K0:SortInlineExport{}, K1:SortGlobalSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(X0:SortInlineExport{}, X1:SortGlobalSpec{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(Y0:SortInlineExport{}, Y1:SortGlobalSpec{})), Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(\and{SortInlineExport{}} (X0:SortInlineExport{}, Y0:SortInlineExport{}), \and{SortGlobalSpec{}} (X1:SortGlobalSpec{}, Y1:SortGlobalSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(X0:SortInlineExport{}, X1:SortGlobalSpec{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(Y0:SortInlineImport{}, Y1:SortTextFormatGlobalType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(X0:SortInlineExport{}, X1:SortGlobalSpec{}), Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(Y0:SortTextFormatGlobalType{}, Y1:SortInstr{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortGlobalSpec{}, \equals{SortGlobalSpec{}, R} (Val:SortGlobalSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(K0:SortInlineImport{}, K1:SortTextFormatGlobalType{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(X0:SortInlineImport{}, X1:SortTextFormatGlobalType{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(Y0:SortInlineImport{}, Y1:SortTextFormatGlobalType{})), Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(\and{SortInlineImport{}} (X0:SortInlineImport{}, Y0:SortInlineImport{}), \and{SortTextFormatGlobalType{}} (X1:SortTextFormatGlobalType{}, Y1:SortTextFormatGlobalType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(X0:SortInlineImport{}, X1:SortTextFormatGlobalType{}), Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(Y0:SortTextFormatGlobalType{}, Y1:SortInstr{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMemorySpec{}, \equals{SortMemorySpec{}, R} (Val:SortMemorySpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(K0:SortInlineExport{}, K1:SortMemorySpec{}))) [functional{}()] // functional
  axiom{}\implies{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(X0:SortInlineExport{}, X1:SortMemorySpec{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(Y0:SortInlineExport{}, Y1:SortMemorySpec{})), Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(\and{SortInlineExport{}} (X0:SortInlineExport{}, Y0:SortInlineExport{}), \and{SortMemorySpec{}} (X1:SortMemorySpec{}, Y1:SortMemorySpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(X0:SortInlineExport{}, X1:SortMemorySpec{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(Y0:SortInlineImport{}, Y1:SortMemType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMemorySpec{}, \equals{SortMemorySpec{}, R} (Val:SortMemorySpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(K0:SortInlineImport{}, K1:SortMemType{}))) [functional{}()] // functional
  axiom{}\implies{SortMemorySpec{}} (\and{SortMemorySpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(X0:SortInlineImport{}, X1:SortMemType{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(Y0:SortInlineImport{}, Y1:SortMemType{})), Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(\and{SortInlineImport{}} (X0:SortInlineImport{}, Y0:SortInlineImport{}), \and{SortMemType{}} (X1:SortMemType{}, Y1:SortMemType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTableSpec{}, \equals{SortTableSpec{}, R} (Val:SortTableSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(K0:SortInlineExport{}, K1:SortTableSpec{}))) [functional{}()] // functional
  axiom{}\implies{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(X0:SortInlineExport{}, X1:SortTableSpec{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(Y0:SortInlineExport{}, Y1:SortTableSpec{})), Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(\and{SortInlineExport{}} (X0:SortInlineExport{}, Y0:SortInlineExport{}), \and{SortTableSpec{}} (X1:SortTableSpec{}, Y1:SortTableSpec{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(X0:SortInlineExport{}, X1:SortTableSpec{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(Y0:SortInlineImport{}, Y1:SortTableType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTableSpec{}, \equals{SortTableSpec{}, R} (Val:SortTableSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(K0:SortInlineImport{}, K1:SortTableType{}))) [functional{}()] // functional
  axiom{}\implies{SortTableSpec{}} (\and{SortTableSpec{}} (Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(X0:SortInlineImport{}, X1:SortTableType{}), Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(Y0:SortInlineImport{}, Y1:SortTableType{})), Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(\and{SortInlineImport{}} (X0:SortInlineImport{}, Y0:SortInlineImport{}), \and{SortTableType{}} (X1:SortTableType{}, Y1:SortTableType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortDefns{}, \equals{SortDefns{}, R} (Val:SortDefns{}, Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(K0:SortDefn{}, K1:SortDefns{}))) [functional{}()] // functional
  axiom{}\implies{SortDefns{}} (\and{SortDefns{}} (Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(X0:SortDefn{}, X1:SortDefns{}), Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Y0:SortDefn{}, Y1:SortDefns{})), Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}} (X0:SortDefn{}, Y0:SortDefn{}), \and{SortDefns{}} (X1:SortDefns{}, Y1:SortDefns{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortEmptyStmts{}, \equals{SortEmptyStmts{}, R} (Val:SortEmptyStmts{}, Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(K0:SortEmptyStmt{}, K1:SortEmptyStmts{}))) [functional{}()] // functional
  axiom{}\implies{SortEmptyStmts{}} (\and{SortEmptyStmts{}} (Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(X0:SortEmptyStmt{}, X1:SortEmptyStmts{}), Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(Y0:SortEmptyStmt{}, Y1:SortEmptyStmts{})), Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(\and{SortEmptyStmt{}} (X0:SortEmptyStmt{}, Y0:SortEmptyStmt{}), \and{SortEmptyStmts{}} (X1:SortEmptyStmts{}, Y1:SortEmptyStmts{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalSpec{}, \equals{SortGlobalSpec{}, R} (Val:SortGlobalSpec{}, Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(K0:SortTextFormatGlobalType{}, K1:SortInstr{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalSpec{}} (\and{SortGlobalSpec{}} (Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(X0:SortTextFormatGlobalType{}, X1:SortInstr{}), Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(Y0:SortTextFormatGlobalType{}, Y1:SortInstr{})), Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(\and{SortTextFormatGlobalType{}} (X0:SortTextFormatGlobalType{}, Y0:SortTextFormatGlobalType{}), \and{SortInstr{}} (X1:SortInstr{}, Y1:SortInstr{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGlobalType{}, \equals{SortGlobalType{}, R} (Val:SortGlobalType{}, Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(K0:SortMut{}, K1:SortAValType{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalType{}} (\and{SortGlobalType{}} (Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(X0:SortMut{}, X1:SortAValType{}), Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(Y0:SortMut{}, Y1:SortAValType{})), Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(\and{SortMut{}} (X0:SortMut{}, Y0:SortMut{}), \and{SortAValType{}} (X1:SortAValType{}, Y1:SortAValType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInstrs{}, \equals{SortInstrs{}, R} (Val:SortInstrs{}, Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(K0:SortInstr{}, K1:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortInstrs{}} (\and{SortInstrs{}} (Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(X0:SortInstr{}, X1:SortInstrs{}), Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(Y0:SortInstr{}, Y1:SortInstrs{})), Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(\and{SortInstr{}} (X0:SortInstr{}, Y0:SortInstr{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLoadOpM{}, \equals{SortLoadOpM{}, R} (Val:SortLoadOpM{}, Lbl'UndsUndsUnds'WASM'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(K0:SortLoadOp{}, K1:SortMemArg{}))) [functional{}()] // functional
  axiom{}\implies{SortLoadOpM{}} (\and{SortLoadOpM{}} (Lbl'UndsUndsUnds'WASM'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(X0:SortLoadOp{}, X1:SortMemArg{}), Lbl'UndsUndsUnds'WASM'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(Y0:SortLoadOp{}, Y1:SortMemArg{})), Lbl'UndsUndsUnds'WASM'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(\and{SortLoadOp{}} (X0:SortLoadOp{}, Y0:SortLoadOp{}), \and{SortMemArg{}} (X1:SortMemArg{}, Y1:SortMemArg{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortLocalDecls{}, \equals{SortLocalDecls{}, R} (Val:SortLocalDecls{}, Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(K0:SortLocalDecl{}, K1:SortLocalDecls{}))) [functional{}()] // functional
  axiom{}\implies{SortLocalDecls{}} (\and{SortLocalDecls{}} (Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(X0:SortLocalDecl{}, X1:SortLocalDecls{}), Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Y0:SortLocalDecl{}, Y1:SortLocalDecls{})), Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(\and{SortLocalDecl{}} (X0:SortLocalDecl{}, Y0:SortLocalDecl{}), \and{SortLocalDecls{}} (X1:SortLocalDecls{}, Y1:SortLocalDecls{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMemArg{}, \equals{SortMemArg{}, R} (Val:SortMemArg{}, Lbl'UndsUndsUnds'WASM'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(K0:SortOffsetArg{}, K1:SortAlignArg{}))) [functional{}()] // functional
  axiom{}\implies{SortMemArg{}} (\and{SortMemArg{}} (Lbl'UndsUndsUnds'WASM'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(X0:SortOffsetArg{}, X1:SortAlignArg{}), Lbl'UndsUndsUnds'WASM'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(Y0:SortOffsetArg{}, Y1:SortAlignArg{})), Lbl'UndsUndsUnds'WASM'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(\and{SortOffsetArg{}} (X0:SortOffsetArg{}, Y0:SortOffsetArg{}), \and{SortAlignArg{}} (X1:SortAlignArg{}, Y1:SortAlignArg{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStmts{}, \equals{SortStmts{}, R} (Val:SortStmts{}, Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(K0:SortStmt{}, K1:SortStmts{}))) [functional{}()] // functional
  axiom{}\implies{SortStmts{}} (\and{SortStmts{}} (Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(X0:SortStmt{}, X1:SortStmts{}), Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(Y0:SortStmt{}, Y1:SortStmts{})), Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}), \and{SortStmts{}} (X1:SortStmts{}, Y1:SortStmts{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStoreOpM{}, \equals{SortStoreOpM{}, R} (Val:SortStoreOpM{}, Lbl'UndsUndsUnds'WASM'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(K0:SortStoreOp{}, K1:SortMemArg{}))) [functional{}()] // functional
  axiom{}\implies{SortStoreOpM{}} (\and{SortStoreOpM{}} (Lbl'UndsUndsUnds'WASM'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(X0:SortStoreOp{}, X1:SortMemArg{}), Lbl'UndsUndsUnds'WASM'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(Y0:SortStoreOp{}, Y1:SortMemArg{})), Lbl'UndsUndsUnds'WASM'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(\and{SortStoreOp{}} (X0:SortStoreOp{}, Y0:SortStoreOp{}), \and{SortMemArg{}} (X1:SortMemArg{}, Y1:SortMemArg{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTableType{}, \equals{SortTableType{}, R} (Val:SortTableType{}, Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(K0:SortLimits{}, K1:SortTableElemType{}))) [functional{}()] // functional
  axiom{}\implies{SortTableType{}} (\and{SortTableType{}} (Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(X0:SortLimits{}, X1:SortTableElemType{}), Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(Y0:SortLimits{}, Y1:SortTableElemType{})), Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(\and{SortLimits{}} (X0:SortLimits{}, Y0:SortLimits{}), \and{SortTableElemType{}} (X1:SortTableElemType{}, Y1:SortTableElemType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypeDecl{}, \equals{SortTypeDecl{}, R} (Val:SortTypeDecl{}, Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(K0:SortTypeKeyWord{}, K1:SortValTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeDecl{}} (\and{SortTypeDecl{}} (Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(X0:SortTypeKeyWord{}, X1:SortValTypes{}), Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(Y0:SortTypeKeyWord{}, Y1:SortValTypes{})), Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(\and{SortTypeKeyWord{}} (X0:SortTypeKeyWord{}, Y0:SortTypeKeyWord{}), \and{SortValTypes{}} (X1:SortValTypes{}, Y1:SortValTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortTypeDecl{}} (\and{SortTypeDecl{}} (Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(X0:SortTypeKeyWord{}, X1:SortValTypes{}), Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(Y0:SortIdentifier{}, Y1:SortAValType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeDecls{}, \equals{SortTypeDecls{}, R} (Val:SortTypeDecls{}, Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(K0:SortTypeDecl{}, K1:SortTypeDecls{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeDecls{}} (\and{SortTypeDecls{}} (Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(X0:SortTypeDecl{}, X1:SortTypeDecls{}), Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Y0:SortTypeDecl{}, Y1:SortTypeDecls{})), Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(\and{SortTypeDecl{}} (X0:SortTypeDecl{}, Y0:SortTypeDecl{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFuncSpec{}, \equals{SortFuncSpec{}, R} (Val:SortFuncSpec{}, Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(K0:SortTypeUse{}, K1:SortLocalDecls{}, K2:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortFuncSpec{}} (\and{SortFuncSpec{}} (Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(X0:SortTypeUse{}, X1:SortLocalDecls{}, X2:SortInstrs{}), Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(Y0:SortTypeUse{}, Y1:SortLocalDecls{}, Y2:SortInstrs{})), Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(\and{SortTypeUse{}} (X0:SortTypeUse{}, Y0:SortTypeUse{}), \and{SortLocalDecls{}} (X1:SortLocalDecls{}, Y1:SortLocalDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andThenBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'impliesBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orElseBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'xorBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'xorInt'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPipe'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblabsFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAlignArg{}, \equals{SortAlignArg{}, R} (Val:SortAlignArg{}, Lblalign'EqlsUndsUnds'WASM'Unds'AlignArg'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortAlignArg{}} (\and{SortAlignArg{}} (Lblalign'EqlsUndsUnds'WASM'Unds'AlignArg'Unds'Int{}(X0:SortInt{}), Lblalign'EqlsUndsUnds'WASM'Unds'AlignArg'Unds'Int{}(Y0:SortInt{})), Lblalign'EqlsUndsUnds'WASM'Unds'AlignArg'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblatanFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortEndianness{}, \equals{SortEndianness{}, R} (Val:SortEndianness{}, LblbigEndianBytes{}())) [functional{}()] // functional
  axiom{}\not{SortEndianness{}} (\and{SortEndianness{}} (LblbigEndianBytes{}(), LbllittleEndianBytes{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBlockInstr{}, \equals{SortBlockInstr{}, R} (Val:SortBlockInstr{}, Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(K0:SortIdentifier{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortIdentifier{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{})), Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortIdentifier{}} (X0:SortIdentifier{}, Y0:SortIdentifier{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortOptionalId{}} (X3:SortOptionalId{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(Y0:SortIdentifier{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}, Y4:SortInstrs{}, Y5:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortIdentifier{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(K0:SortTypeDecls{}, K1:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{})), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(\and{SortTypeDecls{}} (X0:SortTypeDecls{}, Y0:SortTypeDecls{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(Y0:SortVecType{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(Y0:SortValTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(K0:SortVecType{}, K1:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(Y0:SortVecType{}, Y1:SortInstrs{})), Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(\and{SortVecType{}} (X0:SortVecType{}, Y0:SortVecType{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(Y0:SortValTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(K0:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(Y0:SortElemSegment{})), Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(\and{SortElemSegment{}} (X0:SortElemSegment{}, Y0:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(K0:SortTypeUse{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(Y0:SortTypeUse{})), Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(\and{SortTypeUse{}} (X0:SortTypeUse{}, Y0:SortTypeUse{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblceilFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIUnOp{}, \equals{SortIUnOp{}, R} (Val:SortIUnOp{}, Lblclz'Unds'WASM-NUMERIC'Unds'IUnOp{}())) [functional{}()] // functional
  axiom{}\not{SortIUnOp{}} (\and{SortIUnOp{}} (Lblclz'Unds'WASM-NUMERIC'Unds'IUnOp{}(), Lblctz'Unds'WASM-NUMERIC'Unds'IUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIUnOp{}} (\and{SortIUnOp{}} (Lblclz'Unds'WASM-NUMERIC'Unds'IUnOp{}(), Lblpopcnt'Unds'WASM-NUMERIC'Unds'IUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMut{}, \equals{SortMut{}, R} (Val:SortMut{}, Lblconst'Unds'WASM-DATA'Unds'Mut{}())) [functional{}()] // functional
  axiom{}\not{SortMut{}} (\and{SortMut{}} (Lblconst'Unds'WASM-DATA'Unds'Mut{}(), Lblvar'Unds'WASM-DATA'Unds'Mut{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvti32Op{}, \equals{SortCvti32Op{}, R} (Val:SortCvti32Op{}, Lblconvert'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (Lblconvert'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), Lblconvert'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (Lblconvert'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), Lblextend'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (Lblconvert'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), Lblextend'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvti32Op{}, \equals{SortCvti32Op{}, R} (Val:SortCvti32Op{}, Lblconvert'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (Lblconvert'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), Lblextend'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (Lblconvert'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), Lblextend'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvti64Op{}, \equals{SortCvti64Op{}, R} (Val:SortCvti64Op{}, Lblconvert'Unds'i64'Unds's'Unds'WASM-NUMERIC'Unds'Cvti64Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvti64Op{}} (\and{SortCvti64Op{}} (Lblconvert'Unds'i64'Unds's'Unds'WASM-NUMERIC'Unds'Cvti64Op{}(), Lblconvert'Unds'i64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti64Op{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvti64Op{}} (\and{SortCvti64Op{}} (Lblconvert'Unds'i64'Unds's'Unds'WASM-NUMERIC'Unds'Cvti64Op{}(), Lblwrap'Unds'i64'Unds'WASM-NUMERIC'Unds'Cvti64Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvti64Op{}, \equals{SortCvti64Op{}, R} (Val:SortCvti64Op{}, Lblconvert'Unds'i64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti64Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvti64Op{}} (\and{SortCvti64Op{}} (Lblconvert'Unds'i64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti64Op{}(), Lblwrap'Unds'i64'Unds'WASM-NUMERIC'Unds'Cvti64Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(), Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(), LblfloatAdd{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(), LblfloatMul{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(), LblfloatSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(), Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(), Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblcosFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIUnOp{}, \equals{SortIUnOp{}, R} (Val:SortIUnOp{}, Lblctz'Unds'WASM-NUMERIC'Unds'IUnOp{}())) [functional{}()] // functional
  axiom{}\not{SortIUnOp{}} (\and{SortIUnOp{}} (Lblctz'Unds'WASM-NUMERIC'Unds'IUnOp{}(), Lblpopcnt'Unds'WASM-NUMERIC'Unds'IUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortDataDefn{}, \equals{SortDataDefn{}, R} (Val:SortDataDefn{}, Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(K0:SortIndex{}, K1:SortBytes{}))) [functional{}()] // functional
  axiom{}\implies{SortDataDefn{}} (\and{SortDataDefn{}} (Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(X0:SortIndex{}, X1:SortBytes{}), Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(Y0:SortIndex{}, Y1:SortBytes{})), Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}), \and{SortBytes{}} (X1:SortBytes{}, Y1:SortBytes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCvtf64Op{}, \equals{SortCvtf64Op{}, R} (Val:SortCvtf64Op{}, Lbldemote'Unds'f64'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvtf64Op{}} (\and{SortCvtf64Op{}} (Lbldemote'Unds'f64'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}(), Lbltrunc'Unds'f64'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvtf64Op{}} (\and{SortCvtf64Op{}} (Lbldemote'Unds'f64'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}(), Lbltrunc'Unds'f64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}(), LblfloatAdd{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}(), LblfloatMul{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}(), LblfloatSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}(), Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}(), Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbldrop'Unds'WASM'Unds'PlainInstr{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortElemDefn{}, \equals{SortElemDefn{}, R} (Val:SortElemDefn{}, Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(K0:SortIndex{}, K1:SortElemSegment{}))) [functional{}()] // functional
  axiom{}\implies{SortElemDefn{}} (\and{SortElemDefn{}} (Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortElemSegment{}), Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(Y0:SortIndex{}, Y1:SortElemSegment{})), Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}), \and{SortElemSegment{}} (X1:SortElemSegment{}, Y1:SortElemSegment{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTestOp{}, \equals{SortTestOp{}, R} (Val:SortTestOp{}, Lbleqz'Unds'WASM-NUMERIC'Unds'TestOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblexpFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblexponentBitsFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblexponentFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCvti32Op{}, \equals{SortCvti32Op{}, R} (Val:SortCvti32Op{}, Lblextend'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvti32Op{}} (\and{SortCvti32Op{}} (Lblextend'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), Lblextend'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvti32Op{}, \equals{SortCvti32Op{}, R} (Val:SortCvti32Op{}, Lblextend'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFValType{}, \equals{SortFValType{}, R} (Val:SortFValType{}, Lblf32'Unds'WASM-DATA'Unds'FValType{}())) [functional{}()] // functional
  axiom{}\not{SortFValType{}} (\and{SortFValType{}} (Lblf32'Unds'WASM-DATA'Unds'FValType{}(), Lblf64'Unds'WASM-DATA'Unds'FValType{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFValType{}, \equals{SortFValType{}, R} (Val:SortFValType{}, Lblf64'Unds'WASM-DATA'Unds'FValType{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, LblfloatAdd{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatAdd{}(), LblfloatMul{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatAdd{}(), LblfloatSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatAdd{}(), Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatAdd{}(), Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, LblfloatEq{}())) [functional{}()] // functional
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatEq{}(), LblfloatNe{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatEq{}(), Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatEq{}(), Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatEq{}(), Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatEq{}(), Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, LblfloatMul{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatMul{}(), LblfloatSub{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatMul{}(), Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatMul{}(), Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, LblfloatNe{}())) [functional{}()] // functional
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatNe{}(), Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatNe{}(), Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatNe{}(), Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (LblfloatNe{}(), Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, LblfloatSub{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatSub{}(), Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (LblfloatSub{}(), Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblfloorFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFrame{}, \equals{SortFrame{}, R} (Val:SortFrame{}, Lblframe'UndsUndsUndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map'Unds'Int'Unds'Map{}(K0:SortInt{}, K1:SortValTypes{}, K2:SortValStack{}, K3:SortMap{}, K4:SortInt{}, K5:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortFrame{}} (\and{SortFrame{}} (Lblframe'UndsUndsUndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map'Unds'Int'Unds'Map{}(X0:SortInt{}, X1:SortValTypes{}, X2:SortValStack{}, X3:SortMap{}, X4:SortInt{}, X5:SortMap{}), Lblframe'UndsUndsUndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map'Unds'Int'Unds'Map{}(Y0:SortInt{}, Y1:SortValTypes{}, Y2:SortValStack{}, Y3:SortMap{}, Y4:SortInt{}, Y5:SortMap{})), Lblframe'UndsUndsUndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map'Unds'Int'Unds'Map{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortValTypes{}} (X1:SortValTypes{}, Y1:SortValTypes{}), \and{SortValStack{}} (X2:SortValStack{}, Y2:SortValStack{}), \and{SortMap{}} (X3:SortMap{}, Y3:SortMap{}), \and{SortInt{}} (X4:SortInt{}, Y4:SortInt{}), \and{SortMap{}} (X5:SortMap{}, Y5:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAllocatedKind{}, \equals{SortAllocatedKind{}, R} (Val:SortAllocatedKind{}, Lblfunc'Unds'WASM-DATA'Unds'AllocatedKind{}())) [functional{}()] // functional
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblfunc'Unds'WASM-DATA'Unds'AllocatedKind{}(), Lblglobal'Unds'WASM-DATA'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblfunc'Unds'WASM-DATA'Unds'AllocatedKind{}(), Lblmemory'Unds'WASM-DATA'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblfunc'Unds'WASM-DATA'Unds'AllocatedKind{}(), Lbltable'Unds'WASM-DATA'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTableElemType{}, \equals{SortTableElemType{}, R} (Val:SortTableElemType{}, Lblfuncref'Unds'WASM'Unds'TableElemType{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}(), Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}(), Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}(), Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAllocatedKind{}, \equals{SortAllocatedKind{}, R} (Val:SortAllocatedKind{}, Lblglobal'Unds'WASM-DATA'Unds'AllocatedKind{}())) [functional{}()] // functional
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblglobal'Unds'WASM-DATA'Unds'AllocatedKind{}(), Lblmemory'Unds'WASM-DATA'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblglobal'Unds'WASM-DATA'Unds'AllocatedKind{}(), Lbltable'Unds'WASM-DATA'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortGlobalDefn{}, \equals{SortGlobalDefn{}, R} (Val:SortGlobalDefn{}, Lblglobal'UndsUndsUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalType{}(K0:SortOptionalId{}, K1:SortGlobalType{}))) [functional{}()] // functional
  axiom{}\implies{SortGlobalDefn{}} (\and{SortGlobalDefn{}} (Lblglobal'UndsUndsUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalType{}(X0:SortOptionalId{}, X1:SortGlobalType{}), Lblglobal'UndsUndsUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalType{}(Y0:SortOptionalId{}, Y1:SortGlobalType{})), Lblglobal'UndsUndsUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalType{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortGlobalType{}} (X1:SortGlobalType{}, Y1:SortGlobalType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(Y0:SortInt{})), Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(Y0:SortValTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}(), Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}(), Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIValType{}, \equals{SortIValType{}, R} (Val:SortIValType{}, Lbli32'Unds'WASM-DATA'Unds'IValType{}())) [functional{}()] // functional
  axiom{}\not{SortIValType{}} (\and{SortIValType{}} (Lbli32'Unds'WASM-DATA'Unds'IValType{}(), Lbli64'Unds'WASM-DATA'Unds'IValType{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIValType{}, \equals{SortIValType{}, R} (Val:SortIValType{}, Lbli64'Unds'WASM-DATA'Unds'IValType{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBlockInstr{}, \equals{SortBlockInstr{}, R} (Val:SortBlockInstr{}, Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(K0:SortIdentifier{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortOptionalId{}, K4:SortInstrs{}, K5:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}, X4:SortInstrs{}, X5:SortOptionalId{}), Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(Y0:SortIdentifier{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}, Y4:SortInstrs{}, Y5:SortOptionalId{})), Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(\and{SortIdentifier{}} (X0:SortIdentifier{}, Y0:SortIdentifier{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortOptionalId{}} (X3:SortOptionalId{}, Y3:SortOptionalId{}), \and{SortInstrs{}} (X4:SortInstrs{}, Y4:SortInstrs{}), \and{SortOptionalId{}} (X5:SortOptionalId{}, Y5:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}, X4:SortInstrs{}, X5:SortOptionalId{}), Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}, X4:SortInstrs{}, X5:SortOptionalId{}), Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortIdentifier{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBlockInstr{}, \equals{SortBlockInstr{}, R} (Val:SortBlockInstr{}, Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(K0:SortOptionalId{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortOptionalId{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{})), Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortOptionalId{}} (X3:SortOptionalId{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortIdentifier{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(K0:SortTypeDecls{}, K1:SortInstrs{}, K2:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{}), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}, Y2:SortInstrs{})), Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(\and{SortTypeDecls{}} (X0:SortTypeDecls{}, Y0:SortTypeDecls{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{}), Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(Y0:SortValTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(K0:SortInt{}, K1:SortVal{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(Y0:SortInt{}, Y1:SortVal{})), Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortVal{}} (X1:SortVal{}, Y1:SortVal{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(Y0:SortValTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(K0:SortValTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(X0:SortValTypes{}), Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(Y0:SortValTypes{})), Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(\and{SortValTypes{}} (X0:SortValTypes{}, Y0:SortValTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(X0:SortValTypes{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(X0:SortValTypes{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(X0:SortValTypes{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(X0:SortValTypes{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(X0:SortValTypes{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(K0:SortValStack{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{}), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Y0:SortValStack{})), Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(\and{SortValStack{}} (X0:SortValStack{}, Y0:SortValStack{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInfinite'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNaN'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLabel{}, \equals{SortLabel{}, R} (Val:SortLabel{}, Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(K0:SortVecType{}, K1:SortInstrs{}, K2:SortValStack{}))) [functional{}()] // functional
  axiom{}\implies{SortLabel{}} (\and{SortLabel{}} (Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortValStack{}), Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(Y0:SortVecType{}, Y1:SortInstrs{}, Y2:SortValStack{})), Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(\and{SortVecType{}} (X0:SortVecType{}, Y0:SortVecType{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}), \and{SortValStack{}} (X2:SortValStack{}, Y2:SortValStack{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortFRelOp{}} (\and{SortFRelOp{}} (Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}(), Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes{}(K0:SortBytes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortEndianness{}, \equals{SortEndianness{}, R} (Val:SortEndianness{}, LbllittleEndianBytes{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}(), Lblload'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}())) [functional{}()] // functional
  axiom{}\not{SortLoadOp{}} (\and{SortLoadOp{}} (Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}(), Lblload'Unds'WASM'Unds'LoadOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLoadOp{}, \equals{SortLoadOp{}, R} (Val:SortLoadOp{}, Lblload'Unds'WASM'Unds'LoadOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(K0:SortIValType{}, K1:SortInt{}, K2:SortInt{}, K3:SortSignedness{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Y0:SortIValType{}, Y1:SortInt{}, Y2:SortInt{}, Y3:SortSignedness{})), Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(\and{SortIValType{}} (X0:SortIValType{}, Y0:SortIValType{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortInt{}} (X2:SortInt{}, Y2:SortInt{}), \and{SortSignedness{}} (X3:SortSignedness{}, Y3:SortSignedness{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(K0:SortIndex{}))) [functional{}()] // functional
  axiom{}\implies{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Y0:SortIndex{})), Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(\and{SortIndex{}} (X0:SortIndex{}, Y0:SortIndex{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{}), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLocalDecl{}, \equals{SortLocalDecl{}, R} (Val:SortLocalDecl{}, Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(K0:SortValTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortLocalDecl{}} (\and{SortLocalDecl{}} (Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(X0:SortValTypes{}), Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(Y0:SortValTypes{})), Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(\and{SortValTypes{}} (X0:SortValTypes{}, Y0:SortValTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortLocalDecl{}} (\and{SortLocalDecl{}} (Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(X0:SortValTypes{}), Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(Y0:SortIdentifier{}, Y1:SortAValType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortLocalDecl{}, \equals{SortLocalDecl{}, R} (Val:SortLocalDecl{}, Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(K0:SortIdentifier{}, K1:SortAValType{}))) [functional{}()] // functional
  axiom{}\implies{SortLocalDecl{}} (\and{SortLocalDecl{}} (Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(X0:SortIdentifier{}, X1:SortAValType{}), Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(Y0:SortIdentifier{}, Y1:SortAValType{})), Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(\and{SortIdentifier{}} (X0:SortIdentifier{}, Y0:SortIdentifier{}), \and{SortAValType{}} (X1:SortAValType{}, Y1:SortAValType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBlockInstr{}, \equals{SortBlockInstr{}, R} (Val:SortBlockInstr{}, Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(K0:SortIdentifier{}, K1:SortTypeDecls{}, K2:SortInstrs{}, K3:SortOptionalId{}))) [functional{}()] // functional
  axiom{}\implies{SortBlockInstr{}} (\and{SortBlockInstr{}} (Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}), Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Y0:SortIdentifier{}, Y1:SortTypeDecls{}, Y2:SortInstrs{}, Y3:SortOptionalId{})), Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortIdentifier{}} (X0:SortIdentifier{}, Y0:SortIdentifier{}), \and{SortTypeDecls{}} (X1:SortTypeDecls{}, Y1:SortTypeDecls{}), \and{SortInstrs{}} (X2:SortInstrs{}, Y2:SortInstrs{}), \and{SortOptionalId{}} (X3:SortOptionalId{}, Y3:SortOptionalId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(K0:SortTypeDecls{}, K1:SortInstrs{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(Y0:SortTypeDecls{}, Y1:SortInstrs{})), Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(\and{SortTypeDecls{}} (X0:SortTypeDecls{}, Y0:SortTypeDecls{}), \and{SortInstrs{}} (X1:SortInstrs{}, Y1:SortInstrs{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFRelOp{}, \equals{SortFRelOp{}, R} (Val:SortFRelOp{}, Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{}\not{SortIRelOp{}} (\and{SortIRelOp{}} (Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortFBinOp{}} (\and{SortFBinOp{}} (Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}(), Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}(), Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}(), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}(), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}(), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}(), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}(), Lblnop'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}(), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}(), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}(), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAllocatedKind{}, \equals{SortAllocatedKind{}, R} (Val:SortAllocatedKind{}, Lblmemory'Unds'WASM-DATA'Unds'AllocatedKind{}())) [functional{}()] // functional
  axiom{}\not{SortAllocatedKind{}} (\and{SortAllocatedKind{}} (Lblmemory'Unds'WASM-DATA'Unds'AllocatedKind{}(), Lbltable'Unds'WASM-DATA'Unds'AllocatedKind{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMemoryDefn{}, \equals{SortMemoryDefn{}, R} (Val:SortMemoryDefn{}, Lblmemory'LBraUndsUndsUndsRBraUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(K0:SortOptionalId{}, K1:SortInt{}, K2:SortOptionalInt{}))) [functional{}()] // functional
  axiom{}\implies{SortMemoryDefn{}} (\and{SortMemoryDefn{}} (Lblmemory'LBraUndsUndsUndsRBraUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{}), Lblmemory'LBraUndsUndsUndsRBraUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{})), Lblmemory'LBraUndsUndsUndsRBraUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortOptionalInt{}} (X2:SortOptionalInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFBinOp{}, \equals{SortFBinOp{}, R} (Val:SortFBinOp{}, Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleDecl{}, \equals{SortModuleDecl{}, R} (Val:SortModuleDecl{}, Lblmodule'UndsUndsUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Map{}(K0:SortOptionalId{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleDecl{}} (\and{SortModuleDecl{}} (Lblmodule'UndsUndsUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Map{}(X0:SortOptionalId{}, X1:SortMap{}), Lblmodule'UndsUndsUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Map{}(Y0:SortOptionalId{}, Y1:SortMap{})), Lblmodule'UndsUndsUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Map{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortMap{}} (X1:SortMap{}, Y1:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortModuleDecl{}} (\and{SortModuleDecl{}} (Lblmodule'UndsUndsUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Map{}(X0:SortOptionalId{}, X1:SortMap{}), LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Y0:SortOptionalId{}, Y1:SortDefns{}, Y2:SortDefns{}, Y3:SortDefns{}, Y4:SortDefns{}, Y5:SortDefns{}, Y6:SortDefns{}, Y7:SortDefns{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIRelOp{}, \equals{SortIRelOp{}, R} (Val:SortIRelOp{}, Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCurFrameCellOpt{}, \equals{SortCurFrameCellOpt{}, R} (Val:SortCurFrameCellOpt{}, LblnoCurFrameCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCurModIdxCellOpt{}, \equals{SortCurModIdxCellOpt{}, R} (Val:SortCurModIdxCellOpt{}, LblnoCurModIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDeterministicMemoryGrowthCellOpt{}, \equals{SortDeterministicMemoryGrowthCellOpt{}, R} (Val:SortDeterministicMemoryGrowthCellOpt{}, LblnoDeterministicMemoryGrowthCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExportsCellOpt{}, \equals{SortExportsCellOpt{}, R} (Val:SortExportsCellOpt{}, LblnoExportsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFAddrCellOpt{}, \equals{SortFAddrCellOpt{}, R} (Val:SortFAddrCellOpt{}, LblnoFAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFCodeCellOpt{}, \equals{SortFCodeCellOpt{}, R} (Val:SortFCodeCellOpt{}, LblnoFCodeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFLocalCellOpt{}, \equals{SortFLocalCellOpt{}, R} (Val:SortFLocalCellOpt{}, LblnoFLocalCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFModInstCellOpt{}, \equals{SortFModInstCellOpt{}, R} (Val:SortFModInstCellOpt{}, LblnoFModInstCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFTypeCellOpt{}, \equals{SortFTypeCellOpt{}, R} (Val:SortFTypeCellOpt{}, LblnoFTypeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncAddrsCellOpt{}, \equals{SortFuncAddrsCellOpt{}, R} (Val:SortFuncAddrsCellOpt{}, LblnoFuncAddrsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncIdsCellOpt{}, \equals{SortFuncIdsCellOpt{}, R} (Val:SortFuncIdsCellOpt{}, LblnoFuncIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFuncsCellOpt{}, \equals{SortFuncsCellOpt{}, R} (Val:SortFuncsCellOpt{}, LblnoFuncsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGAddrCellOpt{}, \equals{SortGAddrCellOpt{}, R} (Val:SortGAddrCellOpt{}, LblnoGAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGMutCellOpt{}, \equals{SortGMutCellOpt{}, R} (Val:SortGMutCellOpt{}, LblnoGMutCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGValueCellOpt{}, \equals{SortGValueCellOpt{}, R} (Val:SortGValueCellOpt{}, LblnoGValueCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, LblnoGeneratedCounterCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGlobIdsCellOpt{}, \equals{SortGlobIdsCellOpt{}, R} (Val:SortGlobIdsCellOpt{}, LblnoGlobIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGlobalAddrsCellOpt{}, \equals{SortGlobalAddrsCellOpt{}, R} (Val:SortGlobalAddrsCellOpt{}, LblnoGlobalAddrsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGlobalsCellOpt{}, \equals{SortGlobalsCellOpt{}, R} (Val:SortGlobalsCellOpt{}, LblnoGlobalsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, LblnoKCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLabelDepthCellOpt{}, \equals{SortLabelDepthCellOpt{}, R} (Val:SortLabelDepthCellOpt{}, LblnoLabelDepthCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLabelIdsCellOpt{}, \equals{SortLabelIdsCellOpt{}, R} (Val:SortLabelIdsCellOpt{}, LblnoLabelIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLocalIdsCellOpt{}, \equals{SortLocalIdsCellOpt{}, R} (Val:SortLocalIdsCellOpt{}, LblnoLocalIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortLocalsCellOpt{}, \equals{SortLocalsCellOpt{}, R} (Val:SortLocalsCellOpt{}, LblnoLocalsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMAddrCellOpt{}, \equals{SortMAddrCellOpt{}, R} (Val:SortMAddrCellOpt{}, LblnoMAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMainStoreCellOpt{}, \equals{SortMainStoreCellOpt{}, R} (Val:SortMainStoreCellOpt{}, LblnoMainStoreCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMdataCellOpt{}, \equals{SortMdataCellOpt{}, R} (Val:SortMdataCellOpt{}, LblnoMdataCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMemAddrsCellOpt{}, \equals{SortMemAddrsCellOpt{}, R} (Val:SortMemAddrsCellOpt{}, LblnoMemAddrsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMemIdsCellOpt{}, \equals{SortMemIdsCellOpt{}, R} (Val:SortMemIdsCellOpt{}, LblnoMemIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMemsCellOpt{}, \equals{SortMemsCellOpt{}, R} (Val:SortMemsCellOpt{}, LblnoMemsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMmaxCellOpt{}, \equals{SortMmaxCellOpt{}, R} (Val:SortMmaxCellOpt{}, LblnoMmaxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModIdxCellOpt{}, \equals{SortModIdxCellOpt{}, R} (Val:SortModIdxCellOpt{}, LblnoModIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleIdsCellOpt{}, \equals{SortModuleIdsCellOpt{}, R} (Val:SortModuleIdsCellOpt{}, LblnoModuleIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleInstancesCellOpt{}, \equals{SortModuleInstancesCellOpt{}, R} (Val:SortModuleInstancesCellOpt{}, LblnoModuleInstancesCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleRegistryCellOpt{}, \equals{SortModuleRegistryCellOpt{}, R} (Val:SortModuleRegistryCellOpt{}, LblnoModuleRegistryCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMsizeCellOpt{}, \equals{SortMsizeCellOpt{}, R} (Val:SortMsizeCellOpt{}, LblnoMsizeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextFreshIdCellOpt{}, \equals{SortNextFreshIdCellOpt{}, R} (Val:SortNextFreshIdCellOpt{}, LblnoNextFreshIdCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextFuncAddrCellOpt{}, \equals{SortNextFuncAddrCellOpt{}, R} (Val:SortNextFuncAddrCellOpt{}, LblnoNextFuncAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextFuncIdxCellOpt{}, \equals{SortNextFuncIdxCellOpt{}, R} (Val:SortNextFuncIdxCellOpt{}, LblnoNextFuncIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextGlobAddrCellOpt{}, \equals{SortNextGlobAddrCellOpt{}, R} (Val:SortNextGlobAddrCellOpt{}, LblnoNextGlobAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextGlobIdxCellOpt{}, \equals{SortNextGlobIdxCellOpt{}, R} (Val:SortNextGlobIdxCellOpt{}, LblnoNextGlobIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextMemAddrCellOpt{}, \equals{SortNextMemAddrCellOpt{}, R} (Val:SortNextMemAddrCellOpt{}, LblnoNextMemAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextModuleIdxCellOpt{}, \equals{SortNextModuleIdxCellOpt{}, R} (Val:SortNextModuleIdxCellOpt{}, LblnoNextModuleIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextTabAddrCellOpt{}, \equals{SortNextTabAddrCellOpt{}, R} (Val:SortNextTabAddrCellOpt{}, LblnoNextTabAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNextTypeIdxCellOpt{}, \equals{SortNextTypeIdxCellOpt{}, R} (Val:SortNextTypeIdxCellOpt{}, LblnoNextTypeIdxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTAddrCellOpt{}, \equals{SortTAddrCellOpt{}, R} (Val:SortTAddrCellOpt{}, LblnoTAddrCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTabAddrsCellOpt{}, \equals{SortTabAddrsCellOpt{}, R} (Val:SortTabAddrsCellOpt{}, LblnoTabAddrsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTabIdsCellOpt{}, \equals{SortTabIdsCellOpt{}, R} (Val:SortTabIdsCellOpt{}, LblnoTabIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTabsCellOpt{}, \equals{SortTabsCellOpt{}, R} (Val:SortTabsCellOpt{}, LblnoTabsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTdataCellOpt{}, \equals{SortTdataCellOpt{}, R} (Val:SortTdataCellOpt{}, LblnoTdataCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTmaxCellOpt{}, \equals{SortTmaxCellOpt{}, R} (Val:SortTmaxCellOpt{}, LblnoTmaxCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTsizeCellOpt{}, \equals{SortTsizeCellOpt{}, R} (Val:SortTsizeCellOpt{}, LblnoTsizeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTypeIdsCellOpt{}, \equals{SortTypeIdsCellOpt{}, R} (Val:SortTypeIdsCellOpt{}, LblnoTypeIdsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTypesCellOpt{}, \equals{SortTypesCellOpt{}, R} (Val:SortTypesCellOpt{}, LblnoTypesCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortValstackCellOpt{}, \equals{SortValstackCellOpt{}, R} (Val:SortValstackCellOpt{}, LblnoValstackCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortWasmCellOpt{}, \equals{SortWasmCellOpt{}, R} (Val:SortWasmCellOpt{}, LblnoWasmCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblnop'Unds'WASM'Unds'PlainInstr{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblnop'Unds'WASM'Unds'PlainInstr{}(), Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblnop'Unds'WASM'Unds'PlainInstr{}(), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblnop'Unds'WASM'Unds'PlainInstr{}(), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOffsetArg{}, \equals{SortOffsetArg{}, R} (Val:SortOffsetArg{}, Lbloffset'EqlsUndsUnds'WASM'Unds'OffsetArg'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortOffsetArg{}} (\and{SortOffsetArg{}} (Lbloffset'EqlsUndsUnds'WASM'Unds'OffsetArg'Unds'Int{}(X0:SortInt{}), Lbloffset'EqlsUndsUnds'WASM'Unds'OffsetArg'Unds'Int{}(Y0:SortInt{})), Lbloffset'EqlsUndsUnds'WASM'Unds'OffsetArg'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeKeyWord{}, \equals{SortTypeKeyWord{}, R} (Val:SortTypeKeyWord{}, Lblparam'Unds'WASM'Unds'TypeKeyWord{}())) [functional{}()] // functional
  axiom{}\not{SortTypeKeyWord{}} (\and{SortTypeKeyWord{}} (Lblparam'Unds'WASM'Unds'TypeKeyWord{}(), Lblresult'Unds'WASM'Unds'TypeKeyWord{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypeDecl{}, \equals{SortTypeDecl{}, R} (Val:SortTypeDecl{}, Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(K0:SortIdentifier{}, K1:SortAValType{}))) [functional{}()] // functional
  axiom{}\implies{SortTypeDecl{}} (\and{SortTypeDecl{}} (Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(X0:SortIdentifier{}, X1:SortAValType{}), Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(Y0:SortIdentifier{}, Y1:SortAValType{})), Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(\and{SortIdentifier{}} (X0:SortIdentifier{}, Y0:SortIdentifier{}), \and{SortAValType{}} (X1:SortAValType{}, Y1:SortAValType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortIUnOp{}, \equals{SortIUnOp{}, R} (Val:SortIUnOp{}, Lblpopcnt'Unds'WASM-NUMERIC'Unds'IUnOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblprecisionFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCvtf32Op{}, \equals{SortCvtf32Op{}, R} (Val:SortCvtf32Op{}, Lblpromote'Unds'f32'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvtf32Op{}} (\and{SortCvtf32Op{}} (Lblpromote'Unds'f32'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}(), Lbltrunc'Unds'f32'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCvtf32Op{}} (\and{SortCvtf32Op{}} (Lblpromote'Unds'f32'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}(), Lbltrunc'Unds'f32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTypeKeyWord{}, \equals{SortTypeKeyWord{}, R} (Val:SortTypeKeyWord{}, Lblresult'Unds'WASM'Unds'TypeKeyWord{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblreturn'Unds'WASM'Unds'PlainInstr{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblreturn'Unds'WASM'Unds'PlainInstr{}(), Lblselect'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblreturn'Unds'WASM'Unds'PlainInstr{}(), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBytes{}, \equals{SortBytes{}, R} (Val:SortBytes{}, LblreverseBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Bytes{}(K0:SortBytes{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblselect'Unds'WASM'Unds'PlainInstr{}())) [functional{}()] // functional
  axiom{}\not{SortPlainInstr{}} (\and{SortPlainInstr{}} (Lblselect'Unds'WASM'Unds'PlainInstr{}(), Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSignedness{}, \equals{SortSignedness{}, R} (Val:SortSignedness{}, LblsignedBytes{}())) [functional{}()] // functional
  axiom{}\not{SortSignedness{}} (\and{SortSignedness{}} (LblsignedBytes{}(), LblunsignedBytes{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFloat{}, \equals{SortFloat{}, R} (Val:SortFloat{}, LblsinFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(K0:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModuleDecl{}, \equals{SortModuleDecl{}, R} (Val:SortModuleDecl{}, LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(K0:SortOptionalId{}, K1:SortDefns{}, K2:SortDefns{}, K3:SortDefns{}, K4:SortDefns{}, K5:SortDefns{}, K6:SortDefns{}, K7:SortDefns{}))) [functional{}()] // functional
  axiom{}\implies{SortModuleDecl{}} (\and{SortModuleDecl{}} (LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(X0:SortOptionalId{}, X1:SortDefns{}, X2:SortDefns{}, X3:SortDefns{}, X4:SortDefns{}, X5:SortDefns{}, X6:SortDefns{}, X7:SortDefns{}), LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Y0:SortOptionalId{}, Y1:SortDefns{}, Y2:SortDefns{}, Y3:SortDefns{}, Y4:SortDefns{}, Y5:SortDefns{}, Y6:SortDefns{}, Y7:SortDefns{})), LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortDefns{}} (X1:SortDefns{}, Y1:SortDefns{}), \and{SortDefns{}} (X2:SortDefns{}, Y2:SortDefns{}), \and{SortDefns{}} (X3:SortDefns{}, Y3:SortDefns{}), \and{SortDefns{}} (X4:SortDefns{}, Y4:SortDefns{}), \and{SortDefns{}} (X5:SortDefns{}, Y5:SortDefns{}), \and{SortDefns{}} (X6:SortDefns{}, Y6:SortDefns{}), \and{SortDefns{}} (X7:SortDefns{}, Y7:SortDefns{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [functional{}()] // functional
  axiom{}\not{SortFUnOp{}} (\and{SortFUnOp{}} (Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}(), Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStoreOp{}, \equals{SortStoreOp{}, R} (Val:SortStoreOp{}, Lblstore16'Unds'WASM'Unds'StoreOp{}())) [functional{}()] // functional
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (Lblstore16'Unds'WASM'Unds'StoreOp{}(), Lblstore32'Unds'WASM'Unds'StoreOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (Lblstore16'Unds'WASM'Unds'StoreOp{}(), Lblstore8'Unds'WASM'Unds'StoreOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (Lblstore16'Unds'WASM'Unds'StoreOp{}(), Lblstore'Unds'WASM'Unds'StoreOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStoreOp{}, \equals{SortStoreOp{}, R} (Val:SortStoreOp{}, Lblstore32'Unds'WASM'Unds'StoreOp{}())) [functional{}()] // functional
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (Lblstore32'Unds'WASM'Unds'StoreOp{}(), Lblstore8'Unds'WASM'Unds'StoreOp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (Lblstore32'Unds'WASM'Unds'StoreOp{}(), Lblstore'Unds'WASM'Unds'StoreOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStoreOp{}, \equals{SortStoreOp{}, R} (Val:SortStoreOp{}, Lblstore8'Unds'WASM'Unds'StoreOp{}())) [functional{}()] // functional
  axiom{}\not{SortStoreOp{}} (\and{SortStoreOp{}} (Lblstore8'Unds'WASM'Unds'StoreOp{}(), Lblstore'Unds'WASM'Unds'StoreOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStoreOp{}, \equals{SortStoreOp{}, R} (Val:SortStoreOp{}, Lblstore'Unds'WASM'Unds'StoreOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(K0:SortInt{}, K1:SortInt{}, K2:SortNumber{}))) [functional{}()] // functional
  axiom{}\implies{SortInstr{}} (\and{SortInstr{}} (Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(X0:SortInt{}, X1:SortInt{}, X2:SortNumber{}), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Y0:SortInt{}, Y1:SortInt{}, Y2:SortNumber{})), Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortNumber{}} (X2:SortNumber{}, Y2:SortNumber{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortInstr{}} (\and{SortInstr{}} (Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(X0:SortInt{}, X1:SortInt{}, X2:SortNumber{}), Lbltrap'Unds'WASM'Unds'Instr{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{}\not{SortIBinOp{}} (\and{SortIBinOp{}} (Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}(), Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(K0:SortString{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAllocatedKind{}, \equals{SortAllocatedKind{}, R} (Val:SortAllocatedKind{}, Lbltable'Unds'WASM-DATA'Unds'AllocatedKind{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTableDefn{}, \equals{SortTableDefn{}, R} (Val:SortTableDefn{}, Lbltable'LBraUndsUndsUndsRBraUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(K0:SortOptionalId{}, K1:SortInt{}, K2:SortOptionalInt{}))) [functional{}()] // functional
  axiom{}\implies{SortTableDefn{}} (\and{SortTableDefn{}} (Lbltable'LBraUndsUndsUndsRBraUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{}), Lbltable'LBraUndsUndsUndsRBraUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Y0:SortOptionalId{}, Y1:SortInt{}, Y2:SortOptionalInt{})), Lbltable'LBraUndsUndsUndsRBraUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(\and{SortOptionalId{}} (X0:SortOptionalId{}, Y0:SortOptionalId{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}), \and{SortOptionalInt{}} (X2:SortOptionalInt{}, Y2:SortOptionalInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInstr{}, \equals{SortInstr{}, R} (Val:SortInstr{}, Lbltrap'Unds'WASM'Unds'Instr{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortFUnOp{}, \equals{SortFUnOp{}, R} (Val:SortFUnOp{}, Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCvtf32Op{}, \equals{SortCvtf32Op{}, R} (Val:SortCvtf32Op{}, Lbltrunc'Unds'f32'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvtf32Op{}} (\and{SortCvtf32Op{}} (Lbltrunc'Unds'f32'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}(), Lbltrunc'Unds'f32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvtf32Op{}, \equals{SortCvtf32Op{}, R} (Val:SortCvtf32Op{}, Lbltrunc'Unds'f32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCvtf64Op{}, \equals{SortCvtf64Op{}, R} (Val:SortCvtf64Op{}, Lbltrunc'Unds'f64'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}())) [functional{}()] // functional
  axiom{}\not{SortCvtf64Op{}} (\and{SortCvtf64Op{}} (Lbltrunc'Unds'f64'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}(), Lbltrunc'Unds'f64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCvtf64Op{}, \equals{SortCvtf64Op{}, R} (Val:SortCvtf64Op{}, Lbltrunc'Unds'f64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVal{}, \equals{SortVal{}, R} (Val:SortVal{}, Lblundefined'Unds'WASM-DATA'Unds'Val{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPlainInstr{}, \equals{SortPlainInstr{}, R} (Val:SortPlainInstr{}, Lblunreachable'Unds'WASM'Unds'PlainInstr{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSignedness{}, \equals{SortSignedness{}, R} (Val:SortSignedness{}, LblunsignedBytes{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMut{}, \equals{SortMut{}, R} (Val:SortMut{}, Lblvar'Unds'WASM-DATA'Unds'Mut{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCvti64Op{}, \equals{SortCvti64Op{}, R} (Val:SortCvti64Op{}, Lblwrap'Unds'i64'Unds'WASM-NUMERIC'Unds'Cvti64Op{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIBinOp{}, \equals{SortIBinOp{}, R} (Val:SortIBinOp{}, Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNValType{}, \equals{SortNValType{}, R} (Val:SortNValType{}, Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(K0:SortIdentifier{}, K1:SortAValType{}))) [functional{}()] // functional
  axiom{}\implies{SortNValType{}} (\and{SortNValType{}} (Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(X0:SortIdentifier{}, X1:SortAValType{}), Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(Y0:SortIdentifier{}, Y1:SortAValType{})), Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(\and{SortIdentifier{}} (X0:SortIdentifier{}, Y0:SortIdentifier{}), \and{SortAValType{}} (X1:SortAValType{}, Y1:SortAValType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Tild'Int'Unds'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{} \or{SortLocalDecls{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}(), \or{SortLocalDecls{}} (\exists{SortLocalDecls{}} (X0:SortLocalDecl{}, \exists{SortLocalDecls{}} (X1:SortLocalDecls{}, Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(X0:SortLocalDecl{}, X1:SortLocalDecls{}))), \bottom{SortLocalDecls{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTabAddrsCellOpt{}} (LblnoTabAddrsCell{}(), \or{SortTabAddrsCellOpt{}} (\exists{SortTabAddrsCellOpt{}} (Val:SortTabAddrsCell{}, inj{SortTabAddrsCell{}, SortTabAddrsCellOpt{}} (Val:SortTabAddrsCell{})), \bottom{SortTabAddrsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortNValType{}} (\exists{SortNValType{}} (X0:SortIdentifier{}, \exists{SortNValType{}} (X1:SortAValType{}, Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(X0:SortIdentifier{}, X1:SortAValType{}))), \bottom{SortNValType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGAddrCell{}} (\exists{SortGAddrCell{}} (X0:SortInt{}, Lbl'-LT-'gAddr'-GT-'{}(X0:SortInt{})), \bottom{SortGAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortWasmCellOpt{}} (LblnoWasmCell{}(), \or{SortWasmCellOpt{}} (\exists{SortWasmCellOpt{}} (Val:SortWasmCell{}, inj{SortWasmCell{}, SortWasmCellOpt{}} (Val:SortWasmCell{})), \bottom{SortWasmCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMainStoreCell{}} (\exists{SortMainStoreCell{}} (X0:SortFuncsCell{}, \exists{SortMainStoreCell{}} (X1:SortNextFuncAddrCell{}, \exists{SortMainStoreCell{}} (X2:SortTabsCell{}, \exists{SortMainStoreCell{}} (X3:SortNextTabAddrCell{}, \exists{SortMainStoreCell{}} (X4:SortMemsCell{}, \exists{SortMainStoreCell{}} (X5:SortNextMemAddrCell{}, \exists{SortMainStoreCell{}} (X6:SortGlobalsCell{}, \exists{SortMainStoreCell{}} (X7:SortNextGlobAddrCell{}, Lbl'-LT-'mainStore'-GT-'{}(X0:SortFuncsCell{}, X1:SortNextFuncAddrCell{}, X2:SortTabsCell{}, X3:SortNextTabAddrCell{}, X4:SortMemsCell{}, X5:SortNextMemAddrCell{}, X6:SortGlobalsCell{}, X7:SortNextGlobAddrCell{}))))))))), \bottom{SortMainStoreCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStmts{}} (Lbl'Hash'wrc20'Unds'WRC20'Unds'Stmts{}(), \or{SortStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), \or{SortStmts{}} (\exists{SortStmts{}} (X0:SortStmt{}, \exists{SortStmts{}} (X1:SortStmts{}, Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(X0:SortStmt{}, X1:SortStmts{}))), \or{SortStmts{}} (\exists{SortStmts{}} (Val:SortDefns{}, inj{SortDefns{}, SortStmts{}} (Val:SortDefns{})), \or{SortStmts{}} (\exists{SortStmts{}} (Val:SortInstrs{}, inj{SortInstrs{}, SortStmts{}} (Val:SortInstrs{})), \or{SortStmts{}} (\exists{SortStmts{}} (Val:SortEmptyStmts{}, inj{SortEmptyStmts{}, SortStmts{}} (Val:SortEmptyStmts{})), \bottom{SortStmts{}}())))))) [constructor{}()] // no junk
  axiom{} \or{SortLabelIdsCell{}} (\exists{SortLabelIdsCell{}} (X0:SortMap{}, Lbl'-LT-'labelIds'-GT-'{}(X0:SortMap{})), \bottom{SortLabelIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortEmptyStmt{}}() [constructor{}()] // no junk
  axiom{} \or{SortIVal{}} (\exists{SortIVal{}} (X0:SortIValType{}, \exists{SortIVal{}} (X1:SortInt{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}))), \bottom{SortIVal{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTmaxCell{}} (\exists{SortTmaxCell{}} (X0:SortOptionalInt{}, Lbl'-LT-'tmax'-GT-'{}(X0:SortOptionalInt{})), \bottom{SortTmaxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLocalsCellOpt{}} (LblnoLocalsCell{}(), \or{SortLocalsCellOpt{}} (\exists{SortLocalsCellOpt{}} (Val:SortLocalsCell{}, inj{SortLocalsCell{}, SortLocalsCellOpt{}} (Val:SortLocalsCell{})), \bottom{SortLocalsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortString{}} (\top{SortString{}}(), \bottom{SortString{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \bottom{SortList{}}() [constructor{}()] // no junk
  axiom{} \or{SortFuncIdsCell{}} (\exists{SortFuncIdsCell{}} (X0:SortMap{}, Lbl'-LT-'funcIds'-GT-'{}(X0:SortMap{})), \bottom{SortFuncIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMemsCell{}} (\exists{SortMemsCell{}} (X0:SortMemInstCellMap{}, Lbl'-LT-'mems'-GT-'{}(X0:SortMemInstCellMap{})), \bottom{SortMemsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortDataDefn{}} (\exists{SortDataDefn{}} (X0:SortOffset{}, \exists{SortDataDefn{}} (X1:SortDataString{}, Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(X0:SortOffset{}, X1:SortDataString{}))), \or{SortDataDefn{}} (\exists{SortDataDefn{}} (X0:SortIndex{}, \exists{SortDataDefn{}} (X1:SortOffset{}, \exists{SortDataDefn{}} (X2:SortDataString{}, Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortDataString{})))), \or{SortDataDefn{}} (\exists{SortDataDefn{}} (X0:SortIndex{}, \exists{SortDataDefn{}} (X1:SortBytes{}, Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(X0:SortIndex{}, X1:SortBytes{}))), \bottom{SortDataDefn{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortNextModuleIdxCell{}} (\exists{SortNextModuleIdxCell{}} (X0:SortInt{}, Lbl'-LT-'nextModuleIdx'-GT-'{}(X0:SortInt{})), \bottom{SortNextModuleIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMsizeCell{}} (\exists{SortMsizeCell{}} (X0:SortInt{}, Lbl'-LT-'msize'-GT-'{}(X0:SortInt{})), \bottom{SortMsizeCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleRegistryCellOpt{}} (LblnoModuleRegistryCell{}(), \or{SortModuleRegistryCellOpt{}} (\exists{SortModuleRegistryCellOpt{}} (Val:SortModuleRegistryCell{}, inj{SortModuleRegistryCell{}, SortModuleRegistryCellOpt{}} (Val:SortModuleRegistryCell{})), \bottom{SortModuleRegistryCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobalInstCell{}} (\exists{SortGlobalInstCell{}} (X0:SortGAddrCell{}, \exists{SortGlobalInstCell{}} (X1:SortGValueCell{}, \exists{SortGlobalInstCell{}} (X2:SortGMutCell{}, Lbl'-LT-'globalInst'-GT-'{}(X0:SortGAddrCell{}, X1:SortGValueCell{}, X2:SortGMutCell{})))), \bottom{SortGlobalInstCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIdentifierToken{}} (\top{SortIdentifierToken{}}(), \bottom{SortIdentifierToken{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortGeneratedTopCellFragment{}} (\exists{SortGeneratedTopCellFragment{}} (X0:SortWasmCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X1:SortGeneratedCounterCellOpt{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortWasmCellOpt{}, X1:SortGeneratedCounterCellOpt{}))), \bottom{SortGeneratedTopCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCvti64Op{}} (Lblconvert'Unds'i64'Unds's'Unds'WASM-NUMERIC'Unds'Cvti64Op{}(), \or{SortCvti64Op{}} (Lblconvert'Unds'i64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti64Op{}(), \or{SortCvti64Op{}} (Lblwrap'Unds'i64'Unds'WASM-NUMERIC'Unds'Cvti64Op{}(), \bottom{SortCvti64Op{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortModuleInstCellMap{}} (\exists{SortModuleInstCellMap{}} (Val:SortModuleInstCell{}, inj{SortModuleInstCell{}, SortModuleInstCellMap{}} (Val:SortModuleInstCell{})), \bottom{SortModuleInstCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTableType{}} (\exists{SortTableType{}} (X0:SortLimits{}, \exists{SortTableType{}} (X1:SortTableElemType{}, Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(X0:SortLimits{}, X1:SortTableElemType{}))), \bottom{SortTableType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleInstCell{}} (\exists{SortModuleInstCell{}} (X0:SortModIdxCell{}, \exists{SortModuleInstCell{}} (X1:SortExportsCell{}, \exists{SortModuleInstCell{}} (X2:SortTypeIdsCell{}, \exists{SortModuleInstCell{}} (X3:SortTypesCell{}, \exists{SortModuleInstCell{}} (X4:SortNextTypeIdxCell{}, \exists{SortModuleInstCell{}} (X5:SortFuncIdsCell{}, \exists{SortModuleInstCell{}} (X6:SortFuncAddrsCell{}, \exists{SortModuleInstCell{}} (X7:SortNextFuncIdxCell{}, \exists{SortModuleInstCell{}} (X8:SortTabIdsCell{}, \exists{SortModuleInstCell{}} (X9:SortTabAddrsCell{}, \exists{SortModuleInstCell{}} (X10:SortMemIdsCell{}, \exists{SortModuleInstCell{}} (X11:SortMemAddrsCell{}, \exists{SortModuleInstCell{}} (X12:SortGlobIdsCell{}, \exists{SortModuleInstCell{}} (X13:SortGlobalAddrsCell{}, \exists{SortModuleInstCell{}} (X14:SortNextGlobIdxCell{}, Lbl'-LT-'moduleInst'-GT-'{}(X0:SortModIdxCell{}, X1:SortExportsCell{}, X2:SortTypeIdsCell{}, X3:SortTypesCell{}, X4:SortNextTypeIdxCell{}, X5:SortFuncIdsCell{}, X6:SortFuncAddrsCell{}, X7:SortNextFuncIdxCell{}, X8:SortTabIdsCell{}, X9:SortTabAddrsCell{}, X10:SortMemIdsCell{}, X11:SortMemAddrsCell{}, X12:SortGlobIdsCell{}, X13:SortGlobalAddrsCell{}, X14:SortNextGlobIdxCell{})))))))))))))))), \bottom{SortModuleInstCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncAddrsCellOpt{}} (LblnoFuncAddrsCell{}(), \or{SortFuncAddrsCellOpt{}} (\exists{SortFuncAddrsCellOpt{}} (Val:SortFuncAddrsCell{}, inj{SortFuncAddrsCell{}, SortFuncAddrsCellOpt{}} (Val:SortFuncAddrsCell{})), \bottom{SortFuncAddrsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemType{}} (\exists{SortMemType{}} (Val:SortWasmIntToken{}, inj{SortWasmIntToken{}, SortMemType{}} (Val:SortWasmIntToken{})), \or{SortMemType{}} (\exists{SortMemType{}} (Val:SortLimits{}, inj{SortLimits{}, SortMemType{}} (Val:SortLimits{})), \or{SortMemType{}} (\exists{SortMemType{}} (Val:SortInt{}, inj{SortInt{}, SortMemType{}} (Val:SortInt{})), \bottom{SortMemType{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortStartDefn{}} (\exists{SortStartDefn{}} (X0:SortIndex{}, Lbl'LPar'start'UndsRParUnds'WASM'Unds'StartDefn'Unds'Index{}(X0:SortIndex{})), \bottom{SortStartDefn{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextFuncAddrCell{}} (\exists{SortNextFuncAddrCell{}} (X0:SortInt{}, Lbl'-LT-'nextFuncAddr'-GT-'{}(X0:SortInt{})), \bottom{SortNextFuncAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMsizeCellOpt{}} (LblnoMsizeCell{}(), \or{SortMsizeCellOpt{}} (\exists{SortMsizeCellOpt{}} (Val:SortMsizeCell{}, inj{SortMsizeCell{}, SortMsizeCellOpt{}} (Val:SortMsizeCell{})), \bottom{SortMsizeCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortWasmCell{}} (\exists{SortWasmCell{}} (X0:SortKCell{}, \exists{SortWasmCell{}} (X1:SortValstackCell{}, \exists{SortWasmCell{}} (X2:SortCurFrameCell{}, \exists{SortWasmCell{}} (X3:SortModuleRegistryCell{}, \exists{SortWasmCell{}} (X4:SortModuleIdsCell{}, \exists{SortWasmCell{}} (X5:SortModuleInstancesCell{}, \exists{SortWasmCell{}} (X6:SortNextModuleIdxCell{}, \exists{SortWasmCell{}} (X7:SortMainStoreCell{}, \exists{SortWasmCell{}} (X8:SortDeterministicMemoryGrowthCell{}, \exists{SortWasmCell{}} (X9:SortNextFreshIdCell{}, Lbl'-LT-'wasm'-GT-'{}(X0:SortKCell{}, X1:SortValstackCell{}, X2:SortCurFrameCell{}, X3:SortModuleRegistryCell{}, X4:SortModuleIdsCell{}, X5:SortModuleInstancesCell{}, X6:SortNextModuleIdxCell{}, X7:SortMainStoreCell{}, X8:SortDeterministicMemoryGrowthCell{}, X9:SortNextFreshIdCell{}))))))))))), \bottom{SortWasmCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleRegistryCell{}} (\exists{SortModuleRegistryCell{}} (X0:SortMap{}, Lbl'-LT-'moduleRegistry'-GT-'{}(X0:SortMap{})), \bottom{SortModuleRegistryCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortWasmString{}} (Lbl'Stop'WasmString'Unds'WASM-DATA'Unds'WasmString{}(), \or{SortWasmString{}} (\exists{SortWasmString{}} (Val:SortWasmStringToken{}, inj{SortWasmStringToken{}, SortWasmString{}} (Val:SortWasmStringToken{})), \bottom{SortWasmString{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemInstCellMap{}} (\exists{SortMemInstCellMap{}} (Val:SortMemInstCell{}, inj{SortMemInstCell{}, SortMemInstCellMap{}} (Val:SortMemInstCell{})), \bottom{SortMemInstCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGlobalAddrsCellOpt{}} (LblnoGlobalAddrsCell{}(), \or{SortGlobalAddrsCellOpt{}} (\exists{SortGlobalAddrsCellOpt{}} (Val:SortGlobalAddrsCell{}, inj{SortGlobalAddrsCell{}, SortGlobalAddrsCellOpt{}} (Val:SortGlobalAddrsCell{})), \bottom{SortGlobalAddrsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModuleIdsCell{}} (\exists{SortModuleIdsCell{}} (X0:SortMap{}, Lbl'-LT-'moduleIds'-GT-'{}(X0:SortMap{})), \bottom{SortModuleIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLoadOpM{}} (\exists{SortLoadOpM{}} (X0:SortLoadOp{}, \exists{SortLoadOpM{}} (X1:SortMemArg{}, Lbl'UndsUndsUnds'WASM'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(X0:SortLoadOp{}, X1:SortMemArg{}))), \or{SortLoadOpM{}} (\exists{SortLoadOpM{}} (Val:SortLoadOp{}, inj{SortLoadOp{}, SortLoadOpM{}} (Val:SortLoadOp{})), \bottom{SortLoadOpM{}}())) [constructor{}()] // no junk
  axiom{} \or{SortIndex{}} (\exists{SortIndex{}} (Val:SortIdentifierToken{}, inj{SortIdentifierToken{}, SortIndex{}} (Val:SortIdentifierToken{})), \or{SortIndex{}} (\exists{SortIndex{}} (Val:SortWasmIntToken{}, inj{SortWasmIntToken{}, SortIndex{}} (Val:SortWasmIntToken{})), \or{SortIndex{}} (\exists{SortIndex{}} (Val:SortIdentifier{}, inj{SortIdentifier{}, SortIndex{}} (Val:SortIdentifier{})), \or{SortIndex{}} (\exists{SortIndex{}} (Val:SortInt{}, inj{SortInt{}, SortIndex{}} (Val:SortInt{})), \bottom{SortIndex{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortKCell{}} (\exists{SortKCell{}} (X0:SortK{}, Lbl'-LT-'k'-GT-'{}(X0:SortK{})), \bottom{SortKCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextTypeIdxCellOpt{}} (LblnoNextTypeIdxCell{}(), \or{SortNextTypeIdxCellOpt{}} (\exists{SortNextTypeIdxCellOpt{}} (Val:SortNextTypeIdxCell{}, inj{SortNextTypeIdxCell{}, SortNextTypeIdxCellOpt{}} (Val:SortNextTypeIdxCell{})), \bottom{SortNextTypeIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMdataCellOpt{}} (LblnoMdataCell{}(), \or{SortMdataCellOpt{}} (\exists{SortMdataCellOpt{}} (Val:SortMdataCell{}, inj{SortMdataCell{}, SortMdataCellOpt{}} (Val:SortMdataCell{})), \bottom{SortMdataCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortLabelDepthCell{}} (\exists{SortLabelDepthCell{}} (X0:SortInt{}, Lbl'-LT-'labelDepth'-GT-'{}(X0:SortInt{})), \bottom{SortLabelDepthCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFCodeCell{}} (\exists{SortFCodeCell{}} (X0:SortInstrs{}, Lbl'-LT-'fCode'-GT-'{}(X0:SortInstrs{})), \bottom{SortFCodeCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeUse{}} (\exists{SortTypeUse{}} (X0:SortIndex{}, Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(X0:SortIndex{})), \or{SortTypeUse{}} (\exists{SortTypeUse{}} (X0:SortIndex{}, \exists{SortTypeUse{}} (X1:SortTypeDecls{}, Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(X0:SortIndex{}, X1:SortTypeDecls{}))), \or{SortTypeUse{}} (\exists{SortTypeUse{}} (Val:SortTypeDecls{}, inj{SortTypeDecls{}, SortTypeUse{}} (Val:SortTypeDecls{})), \bottom{SortTypeUse{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortTypeUse{}, Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(X0:SortTypeUse{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, \exists{SortInstr{}} (X1:SortValTypes{}, Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(X0:SortInt{}, X1:SortValTypes{}))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, \exists{SortInstr{}} (X1:SortValStack{}, Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(X0:SortInt{}, X1:SortValStack{}))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortIValType{}, \exists{SortInstr{}} (X1:SortStoreOp{}, \exists{SortInstr{}} (X2:SortInt{}, \exists{SortInstr{}} (X3:SortInt{}, Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(X0:SortIValType{}, X1:SortStoreOp{}, X2:SortInt{}, X3:SortInt{}))))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortTypeDecls{}, \exists{SortInstr{}} (X1:SortInstrs{}, Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortVecType{}, \exists{SortInstr{}} (X1:SortInstrs{}, Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(X0:SortVecType{}, X1:SortInstrs{}))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(X0:SortInt{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortTypeDecls{}, \exists{SortInstr{}} (X1:SortInstrs{}, \exists{SortInstr{}} (X2:SortInstrs{}, Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}, X2:SortInstrs{})))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, \exists{SortInstr{}} (X1:SortVal{}, Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(X0:SortInt{}, X1:SortVal{}))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortValTypes{}, Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(X0:SortValTypes{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortValStack{}, Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(X0:SortValStack{})), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortIValType{}, \exists{SortInstr{}} (X1:SortInt{}, \exists{SortInstr{}} (X2:SortInt{}, \exists{SortInstr{}} (X3:SortSignedness{}, Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(X0:SortIValType{}, X1:SortInt{}, X2:SortInt{}, X3:SortSignedness{}))))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortTypeDecls{}, \exists{SortInstr{}} (X1:SortInstrs{}, Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(X0:SortTypeDecls{}, X1:SortInstrs{}))), \or{SortInstr{}} (\exists{SortInstr{}} (X0:SortInt{}, \exists{SortInstr{}} (X1:SortInt{}, \exists{SortInstr{}} (X2:SortNumber{}, Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(X0:SortInt{}, X1:SortInt{}, X2:SortNumber{})))), \or{SortInstr{}} (Lbltrap'Unds'WASM'Unds'Instr{}(), \or{SortInstr{}} (\exists{SortInstr{}} (Val:SortEmptyStmt{}, inj{SortEmptyStmt{}, SortInstr{}} (Val:SortEmptyStmt{})), \or{SortInstr{}} (\exists{SortInstr{}} (Val:SortPlainInstr{}, inj{SortPlainInstr{}, SortInstr{}} (Val:SortPlainInstr{})), \or{SortInstr{}} (\exists{SortInstr{}} (Val:SortFoldedInstr{}, inj{SortFoldedInstr{}, SortInstr{}} (Val:SortFoldedInstr{})), \or{SortInstr{}} (\exists{SortInstr{}} (Val:SortBlockInstr{}, inj{SortBlockInstr{}, SortInstr{}} (Val:SortBlockInstr{})), \bottom{SortInstr{}}())))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortAValType{}} (\exists{SortAValType{}} (Val:SortIValType{}, inj{SortIValType{}, SortAValType{}} (Val:SortIValType{})), \or{SortAValType{}} (\exists{SortAValType{}} (Val:SortFValType{}, inj{SortFValType{}, SortAValType{}} (Val:SortFValType{})), \bottom{SortAValType{}}())) [constructor{}()] // no junk
  axiom{} \or{SortDefns{}} (Lbl'Hash'wrc20Body'Unds'WRC20'Unds'Defns{}(), \or{SortDefns{}} (Lbl'Hash'wrc20Functions'Unds'WRC20'Unds'Defns{}(), \or{SortDefns{}} (Lbl'Hash'wrc20Imports'Unds'WRC20'Unds'Defns{}(), \or{SortDefns{}} (Lbl'Hash'wrc20ReverseBytes'Unds'WRC20'Unds'Defns{}(), \or{SortDefns{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}(), \or{SortDefns{}} (\exists{SortDefns{}} (X0:SortDefn{}, \exists{SortDefns{}} (X1:SortDefns{}, Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(X0:SortDefn{}, X1:SortDefns{}))), \or{SortDefns{}} (\exists{SortDefns{}} (Val:SortEmptyStmts{}, inj{SortEmptyStmts{}, SortDefns{}} (Val:SortEmptyStmts{})), \bottom{SortDefns{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortFloat{}} (\top{SortFloat{}}(), \bottom{SortFloat{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortGlobIdsCell{}} (\exists{SortGlobIdsCell{}} (X0:SortMap{}, Lbl'-LT-'globIds'-GT-'{}(X0:SortMap{})), \bottom{SortGlobIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIUnOp{}} (Lblclz'Unds'WASM-NUMERIC'Unds'IUnOp{}(), \or{SortIUnOp{}} (Lblctz'Unds'WASM-NUMERIC'Unds'IUnOp{}(), \or{SortIUnOp{}} (Lblpopcnt'Unds'WASM-NUMERIC'Unds'IUnOp{}(), \bottom{SortIUnOp{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortNextGlobAddrCellOpt{}} (LblnoNextGlobAddrCell{}(), \or{SortNextGlobAddrCellOpt{}} (\exists{SortNextGlobAddrCellOpt{}} (Val:SortNextGlobAddrCell{}, inj{SortNextGlobAddrCell{}, SortNextGlobAddrCellOpt{}} (Val:SortNextGlobAddrCell{})), \bottom{SortNextGlobAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFVal{}} (\exists{SortFVal{}} (X0:SortFValType{}, \exists{SortFVal{}} (X1:SortFloat{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(X0:SortFValType{}, X1:SortFloat{}))), \bottom{SortFVal{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncType{}} (\exists{SortFuncType{}} (X0:SortVecType{}, \exists{SortFuncType{}} (X1:SortVecType{}, Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(X0:SortVecType{}, X1:SortVecType{}))), \bottom{SortFuncType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTsizeCellOpt{}} (LblnoTsizeCell{}(), \or{SortTsizeCellOpt{}} (\exists{SortTsizeCellOpt{}} (Val:SortTsizeCell{}, inj{SortTsizeCell{}, SortTsizeCellOpt{}} (Val:SortTsizeCell{})), \bottom{SortTsizeCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMut{}} (Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}(), \or{SortMut{}} (Lblconst'Unds'WASM-DATA'Unds'Mut{}(), \or{SortMut{}} (Lblvar'Unds'WASM-DATA'Unds'Mut{}(), \bottom{SortMut{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortFrame{}} (\exists{SortFrame{}} (X0:SortInt{}, \exists{SortFrame{}} (X1:SortValTypes{}, \exists{SortFrame{}} (X2:SortValStack{}, \exists{SortFrame{}} (X3:SortMap{}, \exists{SortFrame{}} (X4:SortInt{}, \exists{SortFrame{}} (X5:SortMap{}, Lblframe'UndsUndsUndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map'Unds'Int'Unds'Map{}(X0:SortInt{}, X1:SortValTypes{}, X2:SortValStack{}, X3:SortMap{}, X4:SortInt{}, X5:SortMap{}))))))), \bottom{SortFrame{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMemsCellFragment{}} (\exists{SortMemsCellFragment{}} (X0:SortMemInstCellMap{}, Lbl'-LT-'mems'-GT-'-fragment{}(X0:SortMemInstCellMap{})), \bottom{SortMemsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortByteMap{}} (\exists{SortByteMap{}} (X0:SortMap{}, LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(X0:SortMap{})), \bottom{SortByteMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModIdxCell{}} (\exists{SortModIdxCell{}} (X0:SortInt{}, Lbl'-LT-'modIdx'-GT-'{}(X0:SortInt{})), \bottom{SortModIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleDecl{}} (\exists{SortModuleDecl{}} (X0:SortOptionalId{}, \exists{SortModuleDecl{}} (X1:SortDefns{}, Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(X0:SortOptionalId{}, X1:SortDefns{}))), \or{SortModuleDecl{}} (\exists{SortModuleDecl{}} (X0:SortOptionalId{}, \exists{SortModuleDecl{}} (X1:SortMap{}, Lblmodule'UndsUndsUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Map{}(X0:SortOptionalId{}, X1:SortMap{}))), \or{SortModuleDecl{}} (\exists{SortModuleDecl{}} (X0:SortOptionalId{}, \exists{SortModuleDecl{}} (X1:SortDefns{}, \exists{SortModuleDecl{}} (X2:SortDefns{}, \exists{SortModuleDecl{}} (X3:SortDefns{}, \exists{SortModuleDecl{}} (X4:SortDefns{}, \exists{SortModuleDecl{}} (X5:SortDefns{}, \exists{SortModuleDecl{}} (X6:SortDefns{}, \exists{SortModuleDecl{}} (X7:SortDefns{}, LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(X0:SortOptionalId{}, X1:SortDefns{}, X2:SortDefns{}, X3:SortDefns{}, X4:SortDefns{}, X5:SortDefns{}, X6:SortDefns{}, X7:SortDefns{}))))))))), \bottom{SortModuleDecl{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortMemoryDefn{}} (\exists{SortMemoryDefn{}} (X0:SortOptionalId{}, \exists{SortMemoryDefn{}} (X1:SortMemorySpec{}, Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(X0:SortOptionalId{}, X1:SortMemorySpec{}))), \or{SortMemoryDefn{}} (\exists{SortMemoryDefn{}} (X0:SortOptionalId{}, \exists{SortMemoryDefn{}} (X1:SortInt{}, \exists{SortMemoryDefn{}} (X2:SortOptionalInt{}, Lblmemory'LBraUndsUndsUndsRBraUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{})))), \bottom{SortMemoryDefn{}}())) [constructor{}()] // no junk
  axiom{} \or{SortInstrs{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}(), \or{SortInstrs{}} (\exists{SortInstrs{}} (X0:SortInstr{}, \exists{SortInstrs{}} (X1:SortInstrs{}, Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(X0:SortInstr{}, X1:SortInstrs{}))), \or{SortInstrs{}} (\exists{SortInstrs{}} (Val:SortEmptyStmts{}, inj{SortEmptyStmts{}, SortInstrs{}} (Val:SortEmptyStmts{})), \bottom{SortInstrs{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortElemSegment{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}(), \or{SortElemSegment{}} (\exists{SortElemSegment{}} (X0:SortIndex{}, \exists{SortElemSegment{}} (X1:SortElemSegment{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortElemSegment{}))), \bottom{SortElemSegment{}}())) [constructor{}()] // no junk
  axiom{} \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortAValType{}, \exists{SortPlainInstr{}} (X1:SortCvtOp{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(X0:SortAValType{}, X1:SortCvtOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortFBinOp{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(X0:SortFValType{}, X1:SortFBinOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortFRelOp{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(X0:SortFValType{}, X1:SortFRelOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortFUnOp{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(X0:SortFValType{}, X1:SortFUnOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortLoadOpM{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'LoadOpM{}(X0:SortFValType{}, X1:SortLoadOpM{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortStoreOpM{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'StoreOpM{}(X0:SortFValType{}, X1:SortStoreOpM{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortIBinOp{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(X0:SortIValType{}, X1:SortIBinOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortIRelOp{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(X0:SortIValType{}, X1:SortIRelOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortIUnOp{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(X0:SortIValType{}, X1:SortIUnOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortLoadOpM{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(X0:SortIValType{}, X1:SortLoadOpM{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortStoreOpM{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(X0:SortIValType{}, X1:SortStoreOpM{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortTestOp{}, Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(X0:SortIValType{}, X1:SortTestOp{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortLoadOp{}, \exists{SortPlainInstr{}} (X2:SortInt{}, Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(X0:SortIValType{}, X1:SortLoadOp{}, X2:SortInt{})))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortFValType{}, \exists{SortPlainInstr{}} (X1:SortNumber{}, Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(X0:SortFValType{}, X1:SortNumber{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIValType{}, \exists{SortPlainInstr{}} (X1:SortInt{}, Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(X0:SortIValType{}, X1:SortInt{}))), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortElemSegment{}, Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(X0:SortElemSegment{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortTypeUse{}, Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(X0:SortTypeUse{})), \or{SortPlainInstr{}} (Lbldrop'Unds'WASM'Unds'PlainInstr{}(), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (\exists{SortPlainInstr{}} (X0:SortIndex{}, Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(X0:SortIndex{})), \or{SortPlainInstr{}} (Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}(), \or{SortPlainInstr{}} (Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}(), \or{SortPlainInstr{}} (Lblnop'Unds'WASM'Unds'PlainInstr{}(), \or{SortPlainInstr{}} (Lblreturn'Unds'WASM'Unds'PlainInstr{}(), \or{SortPlainInstr{}} (Lblselect'Unds'WASM'Unds'PlainInstr{}(), \or{SortPlainInstr{}} (Lblunreachable'Unds'WASM'Unds'PlainInstr{}(), \bottom{SortPlainInstr{}}())))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortFTypeCellOpt{}} (LblnoFTypeCell{}(), \or{SortFTypeCellOpt{}} (\exists{SortFTypeCellOpt{}} (Val:SortFTypeCell{}, inj{SortFTypeCell{}, SortFTypeCellOpt{}} (Val:SortFTypeCell{})), \bottom{SortFTypeCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortBool{}} (\top{SortBool{}}(), \bottom{SortBool{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortCurFrameCellOpt{}} (LblnoCurFrameCell{}(), \or{SortCurFrameCellOpt{}} (\exists{SortCurFrameCellOpt{}} (Val:SortCurFrameCell{}, inj{SortCurFrameCell{}, SortCurFrameCellOpt{}} (Val:SortCurFrameCell{})), \bottom{SortCurFrameCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModuleInstancesCellFragment{}} (\exists{SortModuleInstancesCellFragment{}} (X0:SortModuleInstCellMap{}, Lbl'-LT-'moduleInstances'-GT-'-fragment{}(X0:SortModuleInstCellMap{})), \bottom{SortModuleInstancesCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextGlobAddrCell{}} (\exists{SortNextGlobAddrCell{}} (X0:SortInt{}, Lbl'-LT-'nextGlobAddr'-GT-'{}(X0:SortInt{})), \bottom{SortNextGlobAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortPlainInstr{}, Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(X0:SortPlainInstr{})), \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortPlainInstr{}, \exists{SortFoldedInstr{}} (X1:SortInstrs{}, Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(X0:SortPlainInstr{}, X1:SortInstrs{}))), \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortOptionalId{}, \exists{SortFoldedInstr{}} (X1:SortTypeDecls{}, \exists{SortFoldedInstr{}} (X2:SortInstrs{}, Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{})))), \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortOptionalId{}, \exists{SortFoldedInstr{}} (X1:SortTypeDecls{}, \exists{SortFoldedInstr{}} (X2:SortInstrs{}, \exists{SortFoldedInstr{}} (X3:SortInstrs{}, \exists{SortFoldedInstr{}} (X4:SortInstrs{}, Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}, X4:SortInstrs{})))))), \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortOptionalId{}, \exists{SortFoldedInstr{}} (X1:SortTypeDecls{}, \exists{SortFoldedInstr{}} (X2:SortInstrs{}, \exists{SortFoldedInstr{}} (X3:SortInstrs{}, Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortInstrs{}))))), \or{SortFoldedInstr{}} (\exists{SortFoldedInstr{}} (X0:SortOptionalId{}, \exists{SortFoldedInstr{}} (X1:SortTypeDecls{}, \exists{SortFoldedInstr{}} (X2:SortInstrs{}, Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{})))), \bottom{SortFoldedInstr{}}())))))) [constructor{}()] // no junk
  axiom{} \or{SortStoreOpM{}} (\exists{SortStoreOpM{}} (X0:SortStoreOp{}, \exists{SortStoreOpM{}} (X1:SortMemArg{}, Lbl'UndsUndsUnds'WASM'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(X0:SortStoreOp{}, X1:SortMemArg{}))), \or{SortStoreOpM{}} (\exists{SortStoreOpM{}} (Val:SortStoreOp{}, inj{SortStoreOp{}, SortStoreOpM{}} (Val:SortStoreOp{})), \bottom{SortStoreOpM{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFModInstCell{}} (\exists{SortFModInstCell{}} (X0:SortInt{}, Lbl'-LT-'fModInst'-GT-'{}(X0:SortInt{})), \bottom{SortFModInstCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortVal{}} (\exists{SortVal{}} (X0:SortAValType{}, \exists{SortVal{}} (X1:SortNumber{}, Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(X0:SortAValType{}, X1:SortNumber{}))), \or{SortVal{}} (Lblundefined'Unds'WASM-DATA'Unds'Val{}(), \or{SortVal{}} (\exists{SortVal{}} (Val:SortIVal{}, inj{SortIVal{}, SortVal{}} (Val:SortIVal{})), \or{SortVal{}} (\exists{SortVal{}} (Val:SortFVal{}, inj{SortFVal{}, SortVal{}} (Val:SortFVal{})), \bottom{SortVal{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortTdataCellOpt{}} (LblnoTdataCell{}(), \or{SortTdataCellOpt{}} (\exists{SortTdataCellOpt{}} (Val:SortTdataCell{}, inj{SortTdataCell{}, SortTdataCellOpt{}} (Val:SortTdataCell{})), \bottom{SortTdataCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortValstackCell{}} (\exists{SortValstackCell{}} (X0:SortValStack{}, Lbl'-LT-'valstack'-GT-'{}(X0:SortValStack{})), \bottom{SortValstackCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGValueCellOpt{}} (LblnoGValueCell{}(), \or{SortGValueCellOpt{}} (\exists{SortGValueCellOpt{}} (Val:SortGValueCell{}, inj{SortGValueCell{}, SortGValueCellOpt{}} (Val:SortGValueCell{})), \bottom{SortGValueCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemInstCellFragment{}} (\exists{SortMemInstCellFragment{}} (X0:SortMAddrCellOpt{}, \exists{SortMemInstCellFragment{}} (X1:SortMmaxCellOpt{}, \exists{SortMemInstCellFragment{}} (X2:SortMsizeCellOpt{}, \exists{SortMemInstCellFragment{}} (X3:SortMdataCellOpt{}, Lbl'-LT-'memInst'-GT-'-fragment{}(X0:SortMAddrCellOpt{}, X1:SortMmaxCellOpt{}, X2:SortMsizeCellOpt{}, X3:SortMdataCellOpt{}))))), \bottom{SortMemInstCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleInstCellFragment{}} (\exists{SortModuleInstCellFragment{}} (X0:SortModIdxCellOpt{}, \exists{SortModuleInstCellFragment{}} (X1:SortExportsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X2:SortTypeIdsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X3:SortTypesCellOpt{}, \exists{SortModuleInstCellFragment{}} (X4:SortNextTypeIdxCellOpt{}, \exists{SortModuleInstCellFragment{}} (X5:SortFuncIdsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X6:SortFuncAddrsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X7:SortNextFuncIdxCellOpt{}, \exists{SortModuleInstCellFragment{}} (X8:SortTabIdsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X9:SortTabAddrsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X10:SortMemIdsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X11:SortMemAddrsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X12:SortGlobIdsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X13:SortGlobalAddrsCellOpt{}, \exists{SortModuleInstCellFragment{}} (X14:SortNextGlobIdxCellOpt{}, Lbl'-LT-'moduleInst'-GT-'-fragment{}(X0:SortModIdxCellOpt{}, X1:SortExportsCellOpt{}, X2:SortTypeIdsCellOpt{}, X3:SortTypesCellOpt{}, X4:SortNextTypeIdxCellOpt{}, X5:SortFuncIdsCellOpt{}, X6:SortFuncAddrsCellOpt{}, X7:SortNextFuncIdxCellOpt{}, X8:SortTabIdsCellOpt{}, X9:SortTabAddrsCellOpt{}, X10:SortMemIdsCellOpt{}, X11:SortMemAddrsCellOpt{}, X12:SortGlobIdsCellOpt{}, X13:SortGlobalAddrsCellOpt{}, X14:SortNextGlobIdxCellOpt{})))))))))))))))), \bottom{SortModuleInstCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGlobalDefn{}} (\exists{SortGlobalDefn{}} (X0:SortOptionalId{}, \exists{SortGlobalDefn{}} (X1:SortGlobalSpec{}, Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(X0:SortOptionalId{}, X1:SortGlobalSpec{}))), \or{SortGlobalDefn{}} (\exists{SortGlobalDefn{}} (X0:SortOptionalId{}, \exists{SortGlobalDefn{}} (X1:SortGlobalType{}, Lblglobal'UndsUndsUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalType{}(X0:SortOptionalId{}, X1:SortGlobalType{}))), \bottom{SortGlobalDefn{}}())) [constructor{}()] // no junk
  axiom{} \or{SortDeterministicMemoryGrowthCell{}} (\exists{SortDeterministicMemoryGrowthCell{}} (X0:SortBool{}, Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(X0:SortBool{})), \bottom{SortDeterministicMemoryGrowthCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortValStack{}} (Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}(), \or{SortValStack{}} (\exists{SortValStack{}} (X0:SortVal{}, \exists{SortValStack{}} (X1:SortValStack{}, Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(X0:SortVal{}, X1:SortValStack{}))), \bottom{SortValStack{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFuncSpec{}} (\exists{SortFuncSpec{}} (X0:SortInlineExport{}, \exists{SortFuncSpec{}} (X1:SortFuncSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(X0:SortInlineExport{}, X1:SortFuncSpec{}))), \or{SortFuncSpec{}} (\exists{SortFuncSpec{}} (X0:SortInlineImport{}, \exists{SortFuncSpec{}} (X1:SortTypeUse{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(X0:SortInlineImport{}, X1:SortTypeUse{}))), \or{SortFuncSpec{}} (\exists{SortFuncSpec{}} (X0:SortTypeUse{}, \exists{SortFuncSpec{}} (X1:SortLocalDecls{}, \exists{SortFuncSpec{}} (X2:SortInstrs{}, Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(X0:SortTypeUse{}, X1:SortLocalDecls{}, X2:SortInstrs{})))), \bottom{SortFuncSpec{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortEndianness{}} (LblbigEndianBytes{}(), \or{SortEndianness{}} (LbllittleEndianBytes{}(), \bottom{SortEndianness{}}())) [constructor{}()] // no junk
  axiom{} \or{SortDeterministicMemoryGrowthCellOpt{}} (LblnoDeterministicMemoryGrowthCell{}(), \or{SortDeterministicMemoryGrowthCellOpt{}} (\exists{SortDeterministicMemoryGrowthCellOpt{}} (Val:SortDeterministicMemoryGrowthCell{}, inj{SortDeterministicMemoryGrowthCell{}, SortDeterministicMemoryGrowthCellOpt{}} (Val:SortDeterministicMemoryGrowthCell{})), \bottom{SortDeterministicMemoryGrowthCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFAddrCell{}} (\exists{SortFAddrCell{}} (X0:SortInt{}, Lbl'-LT-'fAddr'-GT-'{}(X0:SortInt{})), \bottom{SortFAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFLocalCell{}} (\exists{SortFLocalCell{}} (X0:SortType{}, Lbl'-LT-'fLocal'-GT-'{}(X0:SortType{})), \bottom{SortFLocalCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTabInstCell{}} (\exists{SortTabInstCell{}} (X0:SortTAddrCell{}, \exists{SortTabInstCell{}} (X1:SortTmaxCell{}, \exists{SortTabInstCell{}} (X2:SortTsizeCell{}, \exists{SortTabInstCell{}} (X3:SortTdataCell{}, Lbl'-LT-'tabInst'-GT-'{}(X0:SortTAddrCell{}, X1:SortTmaxCell{}, X2:SortTsizeCell{}, X3:SortTdataCell{}))))), \bottom{SortTabInstCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFAddrCellOpt{}} (LblnoFAddrCell{}(), \or{SortFAddrCellOpt{}} (\exists{SortFAddrCellOpt{}} (Val:SortFAddrCell{}, inj{SortFAddrCell{}, SortFAddrCellOpt{}} (Val:SortFAddrCell{})), \bottom{SortFAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMainStoreCellFragment{}} (\exists{SortMainStoreCellFragment{}} (X0:SortFuncsCellOpt{}, \exists{SortMainStoreCellFragment{}} (X1:SortNextFuncAddrCellOpt{}, \exists{SortMainStoreCellFragment{}} (X2:SortTabsCellOpt{}, \exists{SortMainStoreCellFragment{}} (X3:SortNextTabAddrCellOpt{}, \exists{SortMainStoreCellFragment{}} (X4:SortMemsCellOpt{}, \exists{SortMainStoreCellFragment{}} (X5:SortNextMemAddrCellOpt{}, \exists{SortMainStoreCellFragment{}} (X6:SortGlobalsCellOpt{}, \exists{SortMainStoreCellFragment{}} (X7:SortNextGlobAddrCellOpt{}, Lbl'-LT-'mainStore'-GT-'-fragment{}(X0:SortFuncsCellOpt{}, X1:SortNextFuncAddrCellOpt{}, X2:SortTabsCellOpt{}, X3:SortNextTabAddrCellOpt{}, X4:SortMemsCellOpt{}, X5:SortNextMemAddrCellOpt{}, X6:SortGlobalsCellOpt{}, X7:SortNextGlobAddrCellOpt{}))))))))), \bottom{SortMainStoreCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortEmptyStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}(), \or{SortEmptyStmts{}} (\exists{SortEmptyStmts{}} (X0:SortEmptyStmt{}, \exists{SortEmptyStmts{}} (X1:SortEmptyStmts{}, Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(X0:SortEmptyStmt{}, X1:SortEmptyStmts{}))), \bottom{SortEmptyStmts{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMdataCell{}} (\exists{SortMdataCell{}} (X0:SortByteMap{}, Lbl'-LT-'mdata'-GT-'{}(X0:SortByteMap{})), \bottom{SortMdataCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStoreOp{}} (Lblstore16'Unds'WASM'Unds'StoreOp{}(), \or{SortStoreOp{}} (Lblstore32'Unds'WASM'Unds'StoreOp{}(), \or{SortStoreOp{}} (Lblstore8'Unds'WASM'Unds'StoreOp{}(), \or{SortStoreOp{}} (Lblstore'Unds'WASM'Unds'StoreOp{}(), \bottom{SortStoreOp{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortTypeKeyWord{}} (Lblparam'Unds'WASM'Unds'TypeKeyWord{}(), \or{SortTypeKeyWord{}} (Lblresult'Unds'WASM'Unds'TypeKeyWord{}(), \bottom{SortTypeKeyWord{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFTypeCell{}} (\exists{SortFTypeCell{}} (X0:SortType{}, Lbl'-LT-'fType'-GT-'{}(X0:SortType{})), \bottom{SortFTypeCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTmaxCellOpt{}} (LblnoTmaxCell{}(), \or{SortTmaxCellOpt{}} (\exists{SortTmaxCellOpt{}} (Val:SortTmaxCell{}, inj{SortTmaxCell{}, SortTmaxCellOpt{}} (Val:SortTmaxCell{})), \bottom{SortTmaxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCurFrameCellFragment{}} (\exists{SortCurFrameCellFragment{}} (X0:SortLocalsCellOpt{}, \exists{SortCurFrameCellFragment{}} (X1:SortLocalIdsCellOpt{}, \exists{SortCurFrameCellFragment{}} (X2:SortCurModIdxCellOpt{}, \exists{SortCurFrameCellFragment{}} (X3:SortLabelDepthCellOpt{}, \exists{SortCurFrameCellFragment{}} (X4:SortLabelIdsCellOpt{}, Lbl'-LT-'curFrame'-GT-'-fragment{}(X0:SortLocalsCellOpt{}, X1:SortLocalIdsCellOpt{}, X2:SortCurModIdxCellOpt{}, X3:SortLabelDepthCellOpt{}, X4:SortLabelIdsCellOpt{})))))), \bottom{SortCurFrameCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncDefCell{}} (\exists{SortFuncDefCell{}} (X0:SortFAddrCell{}, \exists{SortFuncDefCell{}} (X1:SortFCodeCell{}, \exists{SortFuncDefCell{}} (X2:SortFTypeCell{}, \exists{SortFuncDefCell{}} (X3:SortFLocalCell{}, \exists{SortFuncDefCell{}} (X4:SortFModInstCell{}, Lbl'-LT-'funcDef'-GT-'{}(X0:SortFAddrCell{}, X1:SortFCodeCell{}, X2:SortFTypeCell{}, X3:SortFLocalCell{}, X4:SortFModInstCell{})))))), \bottom{SortFuncDefCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncsCellOpt{}} (LblnoFuncsCell{}(), \or{SortFuncsCellOpt{}} (\exists{SortFuncsCellOpt{}} (Val:SortFuncsCell{}, inj{SortFuncsCell{}, SortFuncsCellOpt{}} (Val:SortFuncsCell{})), \bottom{SortFuncsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (X0:SortDataString{}, Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(X0:SortDataString{})), \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (X0:SortInlineExport{}, \exists{SortMemorySpec{}} (X1:SortMemorySpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(X0:SortInlineExport{}, X1:SortMemorySpec{}))), \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (X0:SortInlineImport{}, \exists{SortMemorySpec{}} (X1:SortMemType{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(X0:SortInlineImport{}, X1:SortMemType{}))), \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (Val:SortMemType{}, inj{SortMemType{}, SortMemorySpec{}} (Val:SortMemType{})), \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (Val:SortWasmIntToken{}, inj{SortWasmIntToken{}, SortMemorySpec{}} (Val:SortWasmIntToken{})), \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (Val:SortLimits{}, inj{SortLimits{}, SortMemorySpec{}} (Val:SortLimits{})), \or{SortMemorySpec{}} (\exists{SortMemorySpec{}} (Val:SortInt{}, inj{SortInt{}, SortMemorySpec{}} (Val:SortInt{})), \bottom{SortMemorySpec{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortWasmIntToken{}} (\top{SortWasmIntToken{}}(), \bottom{SortWasmIntToken{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKCellOpt{}} (LblnoKCell{}(), \or{SortKCellOpt{}} (\exists{SortKCellOpt{}} (Val:SortKCell{}, inj{SortKCell{}, SortKCellOpt{}} (Val:SortKCell{})), \bottom{SortKCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemAddrsCellOpt{}} (LblnoMemAddrsCell{}(), \or{SortMemAddrsCellOpt{}} (\exists{SortMemAddrsCellOpt{}} (Val:SortMemAddrsCell{}, inj{SortMemAddrsCell{}, SortMemAddrsCellOpt{}} (Val:SortMemAddrsCell{})), \bottom{SortMemAddrsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortLocalDecl{}} (\exists{SortLocalDecl{}} (X0:SortValTypes{}, Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(X0:SortValTypes{})), \or{SortLocalDecl{}} (\exists{SortLocalDecl{}} (X0:SortIdentifier{}, \exists{SortLocalDecl{}} (X1:SortAValType{}, Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(X0:SortIdentifier{}, X1:SortAValType{}))), \bottom{SortLocalDecl{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMemIdsCell{}} (\exists{SortMemIdsCell{}} (X0:SortMap{}, Lbl'-LT-'memIds'-GT-'{}(X0:SortMap{})), \bottom{SortMemIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGlobalType{}} (\exists{SortGlobalType{}} (X0:SortMut{}, \exists{SortGlobalType{}} (X1:SortAValType{}, Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(X0:SortMut{}, X1:SortAValType{}))), \bottom{SortGlobalType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeDecl{}} (\exists{SortTypeDecl{}} (X0:SortTypeKeyWord{}, \exists{SortTypeDecl{}} (X1:SortValTypes{}, Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(X0:SortTypeKeyWord{}, X1:SortValTypes{}))), \or{SortTypeDecl{}} (\exists{SortTypeDecl{}} (X0:SortIdentifier{}, \exists{SortTypeDecl{}} (X1:SortAValType{}, Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(X0:SortIdentifier{}, X1:SortAValType{}))), \bottom{SortTypeDecl{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTabsCellOpt{}} (LblnoTabsCell{}(), \or{SortTabsCellOpt{}} (\exists{SortTabsCellOpt{}} (Val:SortTabsCell{}, inj{SortTabsCell{}, SortTabsCellOpt{}} (Val:SortTabsCell{})), \bottom{SortTabsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobalInstCellFragment{}} (\exists{SortGlobalInstCellFragment{}} (X0:SortGAddrCellOpt{}, \exists{SortGlobalInstCellFragment{}} (X1:SortGValueCellOpt{}, \exists{SortGlobalInstCellFragment{}} (X2:SortGMutCellOpt{}, Lbl'-LT-'globalInst'-GT-'-fragment{}(X0:SortGAddrCellOpt{}, X1:SortGValueCellOpt{}, X2:SortGMutCellOpt{})))), \bottom{SortGlobalInstCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGMutCell{}} (\exists{SortGMutCell{}} (X0:SortMut{}, Lbl'-LT-'gMut'-GT-'{}(X0:SortMut{})), \bottom{SortGMutCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncDefCellFragment{}} (\exists{SortFuncDefCellFragment{}} (X0:SortFAddrCellOpt{}, \exists{SortFuncDefCellFragment{}} (X1:SortFCodeCellOpt{}, \exists{SortFuncDefCellFragment{}} (X2:SortFTypeCellOpt{}, \exists{SortFuncDefCellFragment{}} (X3:SortFLocalCellOpt{}, \exists{SortFuncDefCellFragment{}} (X4:SortFModInstCellOpt{}, Lbl'-LT-'funcDef'-GT-'-fragment{}(X0:SortFAddrCellOpt{}, X1:SortFCodeCellOpt{}, X2:SortFTypeCellOpt{}, X3:SortFLocalCellOpt{}, X4:SortFModInstCellOpt{})))))), \bottom{SortFuncDefCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModuleInstancesCell{}} (\exists{SortModuleInstancesCell{}} (X0:SortModuleInstCellMap{}, Lbl'-LT-'moduleInstances'-GT-'{}(X0:SortModuleInstCellMap{})), \bottom{SortModuleInstancesCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBytes{}} (\top{SortBytes{}}(), \bottom{SortBytes{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortLocalIdsCellOpt{}} (LblnoLocalIdsCell{}(), \or{SortLocalIdsCellOpt{}} (\exists{SortLocalIdsCellOpt{}} (Val:SortLocalIdsCell{}, inj{SortLocalIdsCell{}, SortLocalIdsCellOpt{}} (Val:SortLocalIdsCell{})), \bottom{SortLocalIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortDataString{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString'QuotRBraUnds'DataString{}(), \or{SortDataString{}} (\exists{SortDataString{}} (X0:SortWasmString{}, \exists{SortDataString{}} (X1:SortDataString{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString{}(X0:SortWasmString{}, X1:SortDataString{}))), \bottom{SortDataString{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTabsCell{}} (\exists{SortTabsCell{}} (X0:SortTabInstCellMap{}, Lbl'-LT-'tabs'-GT-'{}(X0:SortTabInstCellMap{})), \bottom{SortTabsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTabInstCellMap{}} (\exists{SortTabInstCellMap{}} (Val:SortTabInstCell{}, inj{SortTabInstCell{}, SortTabInstCellMap{}} (Val:SortTabInstCell{})), \bottom{SortTabInstCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCell{}} (\exists{SortGeneratedTopCell{}} (X0:SortWasmCell{}, \exists{SortGeneratedTopCell{}} (X1:SortGeneratedCounterCell{}, Lbl'-LT-'generatedTop'-GT-'{}(X0:SortWasmCell{}, X1:SortGeneratedCounterCell{}))), \bottom{SortGeneratedTopCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOffsetArg{}} (\exists{SortOffsetArg{}} (X0:SortInt{}, Lbloffset'EqlsUndsUnds'WASM'Unds'OffsetArg'Unds'Int{}(X0:SortInt{})), \bottom{SortOffsetArg{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGlobalInstCellMap{}} (\exists{SortGlobalInstCellMap{}} (Val:SortGlobalInstCell{}, inj{SortGlobalInstCell{}, SortGlobalInstCellMap{}} (Val:SortGlobalInstCell{})), \bottom{SortGlobalInstCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortAlignArg{}} (\exists{SortAlignArg{}} (X0:SortInt{}, Lblalign'EqlsUndsUnds'WASM'Unds'AlignArg'Unds'Int{}(X0:SortInt{})), \bottom{SortAlignArg{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCvti32Op{}} (Lblconvert'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), \or{SortCvti32Op{}} (Lblconvert'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), \or{SortCvti32Op{}} (Lblextend'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), \or{SortCvti32Op{}} (Lblextend'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}(), \bottom{SortCvti32Op{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortFuncsCell{}} (\exists{SortFuncsCell{}} (X0:SortFuncDefCellMap{}, Lbl'-LT-'funcs'-GT-'{}(X0:SortFuncDefCellMap{})), \bottom{SortFuncsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCurFrameCell{}} (\exists{SortCurFrameCell{}} (X0:SortLocalsCell{}, \exists{SortCurFrameCell{}} (X1:SortLocalIdsCell{}, \exists{SortCurFrameCell{}} (X2:SortCurModIdxCell{}, \exists{SortCurFrameCell{}} (X3:SortLabelDepthCell{}, \exists{SortCurFrameCell{}} (X4:SortLabelIdsCell{}, Lbl'-LT-'curFrame'-GT-'{}(X0:SortLocalsCell{}, X1:SortLocalIdsCell{}, X2:SortCurModIdxCell{}, X3:SortLabelDepthCell{}, X4:SortLabelIdsCell{})))))), \bottom{SortCurFrameCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFuncAddrsCell{}} (\exists{SortFuncAddrsCell{}} (X0:SortMap{}, Lbl'-LT-'funcAddrs'-GT-'{}(X0:SortMap{})), \bottom{SortFuncAddrsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCvtf64Op{}} (Lbldemote'Unds'f64'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}(), \or{SortCvtf64Op{}} (Lbltrunc'Unds'f64'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}(), \or{SortCvtf64Op{}} (Lbltrunc'Unds'f64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}(), \bottom{SortCvtf64Op{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortNextModuleIdxCellOpt{}} (LblnoNextModuleIdxCell{}(), \or{SortNextModuleIdxCellOpt{}} (\exists{SortNextModuleIdxCellOpt{}} (Val:SortNextModuleIdxCell{}, inj{SortNextModuleIdxCell{}, SortNextModuleIdxCellOpt{}} (Val:SortNextModuleIdxCell{})), \bottom{SortNextModuleIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCvtOp{}} (\exists{SortCvtOp{}} (Val:SortCvti64Op{}, inj{SortCvti64Op{}, SortCvtOp{}} (Val:SortCvti64Op{})), \or{SortCvtOp{}} (\exists{SortCvtOp{}} (Val:SortCvti32Op{}, inj{SortCvti32Op{}, SortCvtOp{}} (Val:SortCvti32Op{})), \or{SortCvtOp{}} (\exists{SortCvtOp{}} (Val:SortCvtf64Op{}, inj{SortCvtf64Op{}, SortCvtOp{}} (Val:SortCvtf64Op{})), \or{SortCvtOp{}} (\exists{SortCvtOp{}} (Val:SortCvtf32Op{}, inj{SortCvtf32Op{}, SortCvtOp{}} (Val:SortCvtf32Op{})), \bottom{SortCvtOp{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortTypeDefn{}} (\exists{SortTypeDefn{}} (X0:SortOptionalId{}, \exists{SortTypeDefn{}} (X1:SortTypeDecls{}, Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(X0:SortOptionalId{}, X1:SortTypeDecls{}))), \bottom{SortTypeDefn{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModIdxCellOpt{}} (LblnoModIdxCell{}(), \or{SortModIdxCellOpt{}} (\exists{SortModIdxCellOpt{}} (Val:SortModIdxCell{}, inj{SortModIdxCell{}, SortModIdxCellOpt{}} (Val:SortModIdxCell{})), \bottom{SortModIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortNextGlobIdxCell{}} (\exists{SortNextGlobIdxCell{}} (X0:SortInt{}, Lbl'-LT-'nextGlobIdx'-GT-'{}(X0:SortInt{})), \bottom{SortNextGlobIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExportsCellOpt{}} (LblnoExportsCell{}(), \or{SortExportsCellOpt{}} (\exists{SortExportsCellOpt{}} (Val:SortExportsCell{}, inj{SortExportsCell{}, SortExportsCellOpt{}} (Val:SortExportsCell{})), \bottom{SortExportsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortOptionalInt{}} (Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}(), \or{SortOptionalInt{}} (\exists{SortOptionalInt{}} (Val:SortWasmIntToken{}, inj{SortWasmIntToken{}, SortOptionalInt{}} (Val:SortWasmIntToken{})), \or{SortOptionalInt{}} (\exists{SortOptionalInt{}} (Val:SortInt{}, inj{SortInt{}, SortOptionalInt{}} (Val:SortInt{})), \bottom{SortOptionalInt{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortElemDefn{}} (\exists{SortElemDefn{}} (X0:SortOffset{}, \exists{SortElemDefn{}} (X1:SortElemSegment{}, Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(X0:SortOffset{}, X1:SortElemSegment{}))), \or{SortElemDefn{}} (\exists{SortElemDefn{}} (X0:SortIndex{}, \exists{SortElemDefn{}} (X1:SortOffset{}, \exists{SortElemDefn{}} (X2:SortElemSegment{}, Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortOffset{}, X2:SortElemSegment{})))), \or{SortElemDefn{}} (\exists{SortElemDefn{}} (X0:SortIndex{}, \exists{SortElemDefn{}} (X1:SortElemSegment{}, Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(X0:SortIndex{}, X1:SortElemSegment{}))), \bottom{SortElemDefn{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortTypeDecls{}} (Lbl'Hash'wrc20ReverseBytesTypeDecls'Unds'WRC20'Unds'TypeDecls{}(), \or{SortTypeDecls{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}(), \or{SortTypeDecls{}} (\exists{SortTypeDecls{}} (X0:SortTypeDecl{}, \exists{SortTypeDecls{}} (X1:SortTypeDecls{}, Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(X0:SortTypeDecl{}, X1:SortTypeDecls{}))), \bottom{SortTypeDecls{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortLimits{}} (\exists{SortLimits{}} (X0:SortInt{}, \exists{SortLimits{}} (X1:SortInt{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(X0:SortInt{}, X1:SortInt{}))), \or{SortLimits{}} (\exists{SortLimits{}} (Val:SortWasmIntToken{}, inj{SortWasmIntToken{}, SortLimits{}} (Val:SortWasmIntToken{})), \or{SortLimits{}} (\exists{SortLimits{}} (Val:SortInt{}, inj{SortInt{}, SortLimits{}} (Val:SortInt{})), \bottom{SortLimits{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortOptionalId{}} (Lbl'Unds'WASM-DATA'Unds'OptionalId{}(), \or{SortOptionalId{}} (\exists{SortOptionalId{}} (Val:SortIdentifierToken{}, inj{SortIdentifierToken{}, SortOptionalId{}} (Val:SortIdentifierToken{})), \or{SortOptionalId{}} (\exists{SortOptionalId{}} (Val:SortIdentifier{}, inj{SortIdentifier{}, SortOptionalId{}} (Val:SortIdentifier{})), \bottom{SortOptionalId{}}()))) [constructor{}()] // no junk
  axiom{} \or{Sort'Hash'Layout{}} (\top{Sort'Hash'Layout{}}(), \bottom{Sort'Hash'Layout{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortFuncDefCellMap{}} (\exists{SortFuncDefCellMap{}} (Val:SortFuncDefCell{}, inj{SortFuncDefCell{}, SortFuncDefCellMap{}} (Val:SortFuncDefCell{})), \bottom{SortFuncDefCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInlineExport{}} (\exists{SortInlineExport{}} (X0:SortWasmString{}, Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(X0:SortWasmString{})), \bottom{SortInlineExport{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMemAddrsCell{}} (\exists{SortMemAddrsCell{}} (X0:SortMap{}, Lbl'-LT-'memAddrs'-GT-'{}(X0:SortMap{})), \bottom{SortMemAddrsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIdentifier{}} (\exists{SortIdentifier{}} (X0:SortInt{}, Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(X0:SortInt{})), \or{SortIdentifier{}} (\exists{SortIdentifier{}} (Val:SortIdentifierToken{}, inj{SortIdentifierToken{}, SortIdentifier{}} (Val:SortIdentifierToken{})), \bottom{SortIdentifier{}}())) [constructor{}()] // no junk
  axiom{} \or{SortLocalIdsCell{}} (\exists{SortLocalIdsCell{}} (X0:SortMap{}, Lbl'-LT-'localIds'-GT-'{}(X0:SortMap{})), \bottom{SortLocalIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFCodeCellOpt{}} (LblnoFCodeCell{}(), \or{SortFCodeCellOpt{}} (\exists{SortFCodeCellOpt{}} (Val:SortFCodeCell{}, inj{SortFCodeCell{}, SortFCodeCellOpt{}} (Val:SortFCodeCell{})), \bottom{SortFCodeCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTabIdsCellOpt{}} (LblnoTabIdsCell{}(), \or{SortTabIdsCellOpt{}} (\exists{SortTabIdsCellOpt{}} (Val:SortTabIdsCell{}, inj{SortTabIdsCell{}, SortTabIdsCellOpt{}} (Val:SortTabIdsCell{})), \bottom{SortTabIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortKConfigVar{}} (\top{SortKConfigVar{}}(), \bottom{SortKConfigVar{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortExternval{}} (\exists{SortExternval{}} (X0:SortAllocatedKind{}, \exists{SortExternval{}} (X1:SortIndex{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(X0:SortAllocatedKind{}, X1:SortIndex{}))), \bottom{SortExternval{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFUnOp{}} (Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}(), \or{SortFUnOp{}} (Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}(), \or{SortFUnOp{}} (Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}(), \or{SortFUnOp{}} (Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}(), \or{SortFUnOp{}} (Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}(), \or{SortFUnOp{}} (Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}(), \or{SortFUnOp{}} (Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}(), \bottom{SortFUnOp{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortTAddrCell{}} (\exists{SortTAddrCell{}} (X0:SortInt{}, Lbl'-LT-'tAddr'-GT-'{}(X0:SortInt{})), \bottom{SortTAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIRelOp{}} (Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \or{SortIRelOp{}} (Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}(), \bottom{SortIRelOp{}}())))))))))) [constructor{}()] // no junk
  axiom{} \or{SortNextMemAddrCellOpt{}} (LblnoNextMemAddrCell{}(), \or{SortNextMemAddrCellOpt{}} (\exists{SortNextMemAddrCellOpt{}} (Val:SortNextMemAddrCell{}, inj{SortNextMemAddrCell{}, SortNextMemAddrCellOpt{}} (Val:SortNextMemAddrCell{})), \bottom{SortNextMemAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortWasmStringToken{}} (\top{SortWasmStringToken{}}(), \bottom{SortWasmStringToken{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \bottom{SortSet{}}() [constructor{}()] // no junk
  axiom{} \or{SortTsizeCell{}} (\exists{SortTsizeCell{}} (X0:SortInt{}, Lbl'-LT-'tsize'-GT-'{}(X0:SortInt{})), \bottom{SortTsizeCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMainStoreCellOpt{}} (LblnoMainStoreCell{}(), \or{SortMainStoreCellOpt{}} (\exists{SortMainStoreCellOpt{}} (Val:SortMainStoreCell{}, inj{SortMainStoreCell{}, SortMainStoreCellOpt{}} (Val:SortMainStoreCell{})), \bottom{SortMainStoreCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortWasmCellFragment{}} (\exists{SortWasmCellFragment{}} (X0:SortKCellOpt{}, \exists{SortWasmCellFragment{}} (X1:SortValstackCellOpt{}, \exists{SortWasmCellFragment{}} (X2:SortCurFrameCellOpt{}, \exists{SortWasmCellFragment{}} (X3:SortModuleRegistryCellOpt{}, \exists{SortWasmCellFragment{}} (X4:SortModuleIdsCellOpt{}, \exists{SortWasmCellFragment{}} (X5:SortModuleInstancesCellOpt{}, \exists{SortWasmCellFragment{}} (X6:SortNextModuleIdxCellOpt{}, \exists{SortWasmCellFragment{}} (X7:SortMainStoreCellOpt{}, \exists{SortWasmCellFragment{}} (X8:SortDeterministicMemoryGrowthCellOpt{}, \exists{SortWasmCellFragment{}} (X9:SortNextFreshIdCellOpt{}, Lbl'-LT-'wasm'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortValstackCellOpt{}, X2:SortCurFrameCellOpt{}, X3:SortModuleRegistryCellOpt{}, X4:SortModuleIdsCellOpt{}, X5:SortModuleInstancesCellOpt{}, X6:SortNextModuleIdxCellOpt{}, X7:SortMainStoreCellOpt{}, X8:SortDeterministicMemoryGrowthCellOpt{}, X9:SortNextFreshIdCellOpt{}))))))))))), \bottom{SortWasmCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortSignedness{}} (LblsignedBytes{}(), \or{SortSignedness{}} (LblunsignedBytes{}(), \bottom{SortSignedness{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobalsCellFragment{}} (\exists{SortGlobalsCellFragment{}} (X0:SortGlobalInstCellMap{}, Lbl'-LT-'globals'-GT-'-fragment{}(X0:SortGlobalInstCellMap{})), \bottom{SortGlobalsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFBinOp{}} (Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(), \or{SortFBinOp{}} (Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}(), \or{SortFBinOp{}} (LblfloatAdd{}(), \or{SortFBinOp{}} (LblfloatMul{}(), \or{SortFBinOp{}} (LblfloatSub{}(), \or{SortFBinOp{}} (Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}(), \or{SortFBinOp{}} (Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}(), \bottom{SortFBinOp{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortNextTabAddrCell{}} (\exists{SortNextTabAddrCell{}} (X0:SortInt{}, Lbl'-LT-'nextTabAddr'-GT-'{}(X0:SortInt{})), \bottom{SortNextTabAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMmaxCell{}} (\exists{SortMmaxCell{}} (X0:SortOptionalInt{}, Lbl'-LT-'mmax'-GT-'{}(X0:SortOptionalInt{})), \bottom{SortMmaxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortValstackCellOpt{}} (LblnoValstackCell{}(), \or{SortValstackCellOpt{}} (\exists{SortValstackCellOpt{}} (Val:SortValstackCell{}, inj{SortValstackCell{}, SortValstackCellOpt{}} (Val:SortValstackCell{})), \bottom{SortValstackCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobIdsCellOpt{}} (LblnoGlobIdsCell{}(), \or{SortGlobIdsCellOpt{}} (\exists{SortGlobIdsCellOpt{}} (Val:SortGlobIdsCell{}, inj{SortGlobIdsCell{}, SortGlobIdsCellOpt{}} (Val:SortGlobIdsCell{})), \bottom{SortGlobIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGlobalsCellOpt{}} (LblnoGlobalsCell{}(), \or{SortGlobalsCellOpt{}} (\exists{SortGlobalsCellOpt{}} (Val:SortGlobalsCell{}, inj{SortGlobalsCell{}, SortGlobalsCellOpt{}} (Val:SortGlobalsCell{})), \bottom{SortGlobalsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFuncsCellFragment{}} (\exists{SortFuncsCellFragment{}} (X0:SortFuncDefCellMap{}, Lbl'-LT-'funcs'-GT-'-fragment{}(X0:SortFuncDefCellMap{})), \bottom{SortFuncsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMemInstCell{}} (\exists{SortMemInstCell{}} (X0:SortMAddrCell{}, \exists{SortMemInstCell{}} (X1:SortMmaxCell{}, \exists{SortMemInstCell{}} (X2:SortMsizeCell{}, \exists{SortMemInstCell{}} (X3:SortMdataCell{}, Lbl'-LT-'memInst'-GT-'{}(X0:SortMAddrCell{}, X1:SortMmaxCell{}, X2:SortMsizeCell{}, X3:SortMdataCell{}))))), \bottom{SortMemInstCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextTypeIdxCell{}} (\exists{SortNextTypeIdxCell{}} (X0:SortInt{}, Lbl'-LT-'nextTypeIdx'-GT-'{}(X0:SortInt{})), \bottom{SortNextTypeIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTableSpec{}} (\exists{SortTableSpec{}} (X0:SortTableElemType{}, \exists{SortTableSpec{}} (X1:SortElemSegment{}, Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(X0:SortTableElemType{}, X1:SortElemSegment{}))), \or{SortTableSpec{}} (\exists{SortTableSpec{}} (X0:SortInlineExport{}, \exists{SortTableSpec{}} (X1:SortTableSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(X0:SortInlineExport{}, X1:SortTableSpec{}))), \or{SortTableSpec{}} (\exists{SortTableSpec{}} (X0:SortInlineImport{}, \exists{SortTableSpec{}} (X1:SortTableType{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(X0:SortInlineImport{}, X1:SortTableType{}))), \or{SortTableSpec{}} (\exists{SortTableSpec{}} (Val:SortTableType{}, inj{SortTableType{}, SortTableSpec{}} (Val:SortTableType{})), \bottom{SortTableSpec{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortIBinOp{}} (Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \or{SortIBinOp{}} (Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}(), \bottom{SortIBinOp{}}()))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortGlobalSpec{}} (\exists{SortGlobalSpec{}} (X0:SortInlineExport{}, \exists{SortGlobalSpec{}} (X1:SortGlobalSpec{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(X0:SortInlineExport{}, X1:SortGlobalSpec{}))), \or{SortGlobalSpec{}} (\exists{SortGlobalSpec{}} (X0:SortInlineImport{}, \exists{SortGlobalSpec{}} (X1:SortTextFormatGlobalType{}, Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(X0:SortInlineImport{}, X1:SortTextFormatGlobalType{}))), \or{SortGlobalSpec{}} (\exists{SortGlobalSpec{}} (X0:SortTextFormatGlobalType{}, \exists{SortGlobalSpec{}} (X1:SortInstr{}, Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(X0:SortTextFormatGlobalType{}, X1:SortInstr{}))), \bottom{SortGlobalSpec{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortNextFuncAddrCellOpt{}} (LblnoNextFuncAddrCell{}(), \or{SortNextFuncAddrCellOpt{}} (\exists{SortNextFuncAddrCellOpt{}} (Val:SortNextFuncAddrCell{}, inj{SortNextFuncAddrCell{}, SortNextFuncAddrCellOpt{}} (Val:SortNextFuncAddrCell{})), \bottom{SortNextFuncAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGAddrCellOpt{}} (LblnoGAddrCell{}(), \or{SortGAddrCellOpt{}} (\exists{SortGAddrCellOpt{}} (Val:SortGAddrCell{}, inj{SortGAddrCell{}, SortGAddrCellOpt{}} (Val:SortGAddrCell{})), \bottom{SortGAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFuncIdsCellOpt{}} (LblnoFuncIdsCell{}(), \or{SortFuncIdsCellOpt{}} (\exists{SortFuncIdsCellOpt{}} (Val:SortFuncIdsCell{}, inj{SortFuncIdsCell{}, SortFuncIdsCellOpt{}} (Val:SortFuncIdsCell{})), \bottom{SortFuncIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortNextFreshIdCell{}} (\exists{SortNextFreshIdCell{}} (X0:SortInt{}, Lbl'-LT-'nextFreshId'-GT-'{}(X0:SortInt{})), \bottom{SortNextFreshIdCell{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortMap{}}() [constructor{}()] // no junk
  axiom{} \or{SortMemArg{}} (\exists{SortMemArg{}} (X0:SortOffsetArg{}, \exists{SortMemArg{}} (X1:SortAlignArg{}, Lbl'UndsUndsUnds'WASM'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(X0:SortOffsetArg{}, X1:SortAlignArg{}))), \or{SortMemArg{}} (\exists{SortMemArg{}} (Val:SortOffsetArg{}, inj{SortOffsetArg{}, SortMemArg{}} (Val:SortOffsetArg{})), \or{SortMemArg{}} (\exists{SortMemArg{}} (Val:SortAlignArg{}, inj{SortAlignArg{}, SortMemArg{}} (Val:SortAlignArg{})), \bottom{SortMemArg{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortTypesCell{}} (\exists{SortTypesCell{}} (X0:SortMap{}, Lbl'-LT-'types'-GT-'{}(X0:SortMap{})), \bottom{SortTypesCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMemsCellOpt{}} (LblnoMemsCell{}(), \or{SortMemsCellOpt{}} (\exists{SortMemsCellOpt{}} (Val:SortMemsCell{}, inj{SortMemsCell{}, SortMemsCellOpt{}} (Val:SortMemsCell{})), \bottom{SortMemsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCellOpt{}} (LblnoGeneratedCounterCell{}(), \or{SortGeneratedCounterCellOpt{}} (\exists{SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{})), \bottom{SortGeneratedCounterCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTableDefn{}} (\exists{SortTableDefn{}} (X0:SortOptionalId{}, \exists{SortTableDefn{}} (X1:SortTableSpec{}, Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(X0:SortOptionalId{}, X1:SortTableSpec{}))), \or{SortTableDefn{}} (\exists{SortTableDefn{}} (X0:SortOptionalId{}, \exists{SortTableDefn{}} (X1:SortInt{}, \exists{SortTableDefn{}} (X2:SortOptionalInt{}, Lbltable'LBraUndsUndsUndsRBraUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(X0:SortOptionalId{}, X1:SortInt{}, X2:SortOptionalInt{})))), \bottom{SortTableDefn{}}())) [constructor{}()] // no junk
  axiom{} \or{SortAllocatedKind{}} (Lblfunc'Unds'WASM-DATA'Unds'AllocatedKind{}(), \or{SortAllocatedKind{}} (Lblglobal'Unds'WASM-DATA'Unds'AllocatedKind{}(), \or{SortAllocatedKind{}} (Lblmemory'Unds'WASM-DATA'Unds'AllocatedKind{}(), \or{SortAllocatedKind{}} (Lbltable'Unds'WASM-DATA'Unds'AllocatedKind{}(), \bottom{SortAllocatedKind{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortModuleInstancesCellOpt{}} (LblnoModuleInstancesCell{}(), \or{SortModuleInstancesCellOpt{}} (\exists{SortModuleInstancesCellOpt{}} (Val:SortModuleInstancesCell{}, inj{SortModuleInstancesCell{}, SortModuleInstancesCellOpt{}} (Val:SortModuleInstancesCell{})), \bottom{SortModuleInstancesCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortEmptyStmt{}, inj{SortEmptyStmt{}, SortDefn{}} (Val:SortEmptyStmt{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortDataDefn{}, inj{SortDataDefn{}, SortDefn{}} (Val:SortDataDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortStartDefn{}, inj{SortStartDefn{}, SortDefn{}} (Val:SortStartDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortMemoryDefn{}, inj{SortMemoryDefn{}, SortDefn{}} (Val:SortMemoryDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortGlobalDefn{}, inj{SortGlobalDefn{}, SortDefn{}} (Val:SortGlobalDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortTypeDefn{}, inj{SortTypeDefn{}, SortDefn{}} (Val:SortTypeDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortElemDefn{}, inj{SortElemDefn{}, SortDefn{}} (Val:SortElemDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortTableDefn{}, inj{SortTableDefn{}, SortDefn{}} (Val:SortTableDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortImportDefn{}, inj{SortImportDefn{}, SortDefn{}} (Val:SortImportDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortFuncDefn{}, inj{SortFuncDefn{}, SortDefn{}} (Val:SortFuncDefn{})), \or{SortDefn{}} (\exists{SortDefn{}} (Val:SortExportDefn{}, inj{SortExportDefn{}, SortDefn{}} (Val:SortExportDefn{})), \bottom{SortDefn{}}()))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortNextMemAddrCell{}} (\exists{SortNextMemAddrCell{}} (X0:SortInt{}, Lbl'-LT-'nextMemAddr'-GT-'{}(X0:SortInt{})), \bottom{SortNextMemAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOffset{}} (\exists{SortOffset{}} (X0:SortInstrs{}, Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(X0:SortInstrs{})), \or{SortOffset{}} (\exists{SortOffset{}} (Val:SortInstrs{}, inj{SortInstrs{}, SortOffset{}} (Val:SortInstrs{})), \or{SortOffset{}} (\exists{SortOffset{}} (Val:SortEmptyStmts{}, inj{SortEmptyStmts{}, SortOffset{}} (Val:SortEmptyStmts{})), \bottom{SortOffset{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortCell{}} (\exists{SortCell{}} (Val:SortGAddrCell{}, inj{SortGAddrCell{}, SortCell{}} (Val:SortGAddrCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMainStoreCell{}, inj{SortMainStoreCell{}, SortCell{}} (Val:SortMainStoreCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortLabelIdsCell{}, inj{SortLabelIdsCell{}, SortCell{}} (Val:SortLabelIdsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTmaxCell{}, inj{SortTmaxCell{}, SortCell{}} (Val:SortTmaxCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFuncIdsCell{}, inj{SortFuncIdsCell{}, SortCell{}} (Val:SortFuncIdsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMemsCell{}, inj{SortMemsCell{}, SortCell{}} (Val:SortMemsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextModuleIdxCell{}, inj{SortNextModuleIdxCell{}, SortCell{}} (Val:SortNextModuleIdxCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMsizeCell{}, inj{SortMsizeCell{}, SortCell{}} (Val:SortMsizeCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortGlobalInstCell{}, inj{SortGlobalInstCell{}, SortCell{}} (Val:SortGlobalInstCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortModuleInstCell{}, inj{SortModuleInstCell{}, SortCell{}} (Val:SortModuleInstCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextFuncAddrCell{}, inj{SortNextFuncAddrCell{}, SortCell{}} (Val:SortNextFuncAddrCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortWasmCell{}, inj{SortWasmCell{}, SortCell{}} (Val:SortWasmCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortModuleRegistryCell{}, inj{SortModuleRegistryCell{}, SortCell{}} (Val:SortModuleRegistryCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortModuleIdsCell{}, inj{SortModuleIdsCell{}, SortCell{}} (Val:SortModuleIdsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortKCell{}, inj{SortKCell{}, SortCell{}} (Val:SortKCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortLabelDepthCell{}, inj{SortLabelDepthCell{}, SortCell{}} (Val:SortLabelDepthCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFCodeCell{}, inj{SortFCodeCell{}, SortCell{}} (Val:SortFCodeCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortGlobIdsCell{}, inj{SortGlobIdsCell{}, SortCell{}} (Val:SortGlobIdsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortModIdxCell{}, inj{SortModIdxCell{}, SortCell{}} (Val:SortModIdxCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextGlobAddrCell{}, inj{SortNextGlobAddrCell{}, SortCell{}} (Val:SortNextGlobAddrCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFModInstCell{}, inj{SortFModInstCell{}, SortCell{}} (Val:SortFModInstCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortValstackCell{}, inj{SortValstackCell{}, SortCell{}} (Val:SortValstackCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortDeterministicMemoryGrowthCell{}, inj{SortDeterministicMemoryGrowthCell{}, SortCell{}} (Val:SortDeterministicMemoryGrowthCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFAddrCell{}, inj{SortFAddrCell{}, SortCell{}} (Val:SortFAddrCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFLocalCell{}, inj{SortFLocalCell{}, SortCell{}} (Val:SortFLocalCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTabInstCell{}, inj{SortTabInstCell{}, SortCell{}} (Val:SortTabInstCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMdataCell{}, inj{SortMdataCell{}, SortCell{}} (Val:SortMdataCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFTypeCell{}, inj{SortFTypeCell{}, SortCell{}} (Val:SortFTypeCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFuncDefCell{}, inj{SortFuncDefCell{}, SortCell{}} (Val:SortFuncDefCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMemIdsCell{}, inj{SortMemIdsCell{}, SortCell{}} (Val:SortMemIdsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortGMutCell{}, inj{SortGMutCell{}, SortCell{}} (Val:SortGMutCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortModuleInstancesCell{}, inj{SortModuleInstancesCell{}, SortCell{}} (Val:SortModuleInstancesCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTabsCell{}, inj{SortTabsCell{}, SortCell{}} (Val:SortTabsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFuncsCell{}, inj{SortFuncsCell{}, SortCell{}} (Val:SortFuncsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortCurFrameCell{}, inj{SortCurFrameCell{}, SortCell{}} (Val:SortCurFrameCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortFuncAddrsCell{}, inj{SortFuncAddrsCell{}, SortCell{}} (Val:SortFuncAddrsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextGlobIdxCell{}, inj{SortNextGlobIdxCell{}, SortCell{}} (Val:SortNextGlobIdxCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMemAddrsCell{}, inj{SortMemAddrsCell{}, SortCell{}} (Val:SortMemAddrsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortLocalIdsCell{}, inj{SortLocalIdsCell{}, SortCell{}} (Val:SortLocalIdsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTAddrCell{}, inj{SortTAddrCell{}, SortCell{}} (Val:SortTAddrCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTsizeCell{}, inj{SortTsizeCell{}, SortCell{}} (Val:SortTsizeCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextTabAddrCell{}, inj{SortNextTabAddrCell{}, SortCell{}} (Val:SortNextTabAddrCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMmaxCell{}, inj{SortMmaxCell{}, SortCell{}} (Val:SortMmaxCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMemInstCell{}, inj{SortMemInstCell{}, SortCell{}} (Val:SortMemInstCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextTypeIdxCell{}, inj{SortNextTypeIdxCell{}, SortCell{}} (Val:SortNextTypeIdxCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextFreshIdCell{}, inj{SortNextFreshIdCell{}, SortCell{}} (Val:SortNextFreshIdCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTypesCell{}, inj{SortTypesCell{}, SortCell{}} (Val:SortTypesCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextMemAddrCell{}, inj{SortNextMemAddrCell{}, SortCell{}} (Val:SortNextMemAddrCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTabIdsCell{}, inj{SortTabIdsCell{}, SortCell{}} (Val:SortTabIdsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNextFuncIdxCell{}, inj{SortNextFuncIdxCell{}, SortCell{}} (Val:SortNextFuncIdxCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortGlobalAddrsCell{}, inj{SortGlobalAddrsCell{}, SortCell{}} (Val:SortGlobalAddrsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortMAddrCell{}, inj{SortMAddrCell{}, SortCell{}} (Val:SortMAddrCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTdataCell{}, inj{SortTdataCell{}, SortCell{}} (Val:SortTdataCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortLocalsCell{}, inj{SortLocalsCell{}, SortCell{}} (Val:SortLocalsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortGlobalsCell{}, inj{SortGlobalsCell{}, SortCell{}} (Val:SortGlobalsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTypeIdsCell{}, inj{SortTypeIdsCell{}, SortCell{}} (Val:SortTypeIdsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortCurModIdxCell{}, inj{SortCurModIdxCell{}, SortCell{}} (Val:SortCurModIdxCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortExportsCell{}, inj{SortExportsCell{}, SortCell{}} (Val:SortExportsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTabAddrsCell{}, inj{SortTabAddrsCell{}, SortCell{}} (Val:SortTabAddrsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortGValueCell{}, inj{SortGValueCell{}, SortCell{}} (Val:SortGValueCell{})), \bottom{SortCell{}}())))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortTabIdsCell{}} (\exists{SortTabIdsCell{}} (X0:SortMap{}, Lbl'-LT-'tabIds'-GT-'{}(X0:SortMap{})), \bottom{SortTabIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInlineImport{}} (\exists{SortInlineImport{}} (X0:SortWasmString{}, \exists{SortInlineImport{}} (X1:SortWasmString{}, Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(X0:SortWasmString{}, X1:SortWasmString{}))), \bottom{SortInlineImport{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLoadOp{}} (Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}(), \or{SortLoadOp{}} (Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}(), \or{SortLoadOp{}} (Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}(), \or{SortLoadOp{}} (Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}(), \or{SortLoadOp{}} (Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}(), \or{SortLoadOp{}} (Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}(), \or{SortLoadOp{}} (Lblload'Unds'WASM'Unds'LoadOp{}(), \bottom{SortLoadOp{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortMmaxCellOpt{}} (LblnoMmaxCell{}(), \or{SortMmaxCellOpt{}} (\exists{SortMmaxCellOpt{}} (Val:SortMmaxCell{}, inj{SortMmaxCell{}, SortMmaxCellOpt{}} (Val:SortMmaxCell{})), \bottom{SortMmaxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFModInstCellOpt{}} (LblnoFModInstCell{}(), \or{SortFModInstCellOpt{}} (\exists{SortFModInstCellOpt{}} (Val:SortFModInstCell{}, inj{SortFModInstCell{}, SortFModInstCellOpt{}} (Val:SortFModInstCell{})), \bottom{SortFModInstCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModuleIdsCellOpt{}} (LblnoModuleIdsCell{}(), \or{SortModuleIdsCellOpt{}} (\exists{SortModuleIdsCellOpt{}} (Val:SortModuleIdsCell{}, inj{SortModuleIdsCell{}, SortModuleIdsCellOpt{}} (Val:SortModuleIdsCell{})), \bottom{SortModuleIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortLabelDepthCellOpt{}} (LblnoLabelDepthCell{}(), \or{SortLabelDepthCellOpt{}} (\exists{SortLabelDepthCellOpt{}} (Val:SortLabelDepthCell{}, inj{SortLabelDepthCell{}, SortLabelDepthCellOpt{}} (Val:SortLabelDepthCell{})), \bottom{SortLabelDepthCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTextFormatGlobalType{}} (\exists{SortTextFormatGlobalType{}} (X0:SortAValType{}, Lbl'LPar'mut'UndsRParUnds'WASM'Unds'TextFormatGlobalType'Unds'AValType{}(X0:SortAValType{})), \or{SortTextFormatGlobalType{}} (\exists{SortTextFormatGlobalType{}} (Val:SortAValType{}, inj{SortAValType{}, SortTextFormatGlobalType{}} (Val:SortAValType{})), \or{SortTextFormatGlobalType{}} (\exists{SortTextFormatGlobalType{}} (Val:SortIValType{}, inj{SortIValType{}, SortTextFormatGlobalType{}} (Val:SortIValType{})), \or{SortTextFormatGlobalType{}} (\exists{SortTextFormatGlobalType{}} (Val:SortFValType{}, inj{SortFValType{}, SortTextFormatGlobalType{}} (Val:SortFValType{})), \bottom{SortTextFormatGlobalType{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortIValType{}} (Lbli32'Unds'WASM-DATA'Unds'IValType{}(), \or{SortIValType{}} (Lbli64'Unds'WASM-DATA'Unds'IValType{}(), \bottom{SortIValType{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGMutCellOpt{}} (LblnoGMutCell{}(), \or{SortGMutCellOpt{}} (\exists{SortGMutCellOpt{}} (Val:SortGMutCell{}, inj{SortGMutCell{}, SortGMutCellOpt{}} (Val:SortGMutCell{})), \bottom{SortGMutCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFRelOp{}} (LblfloatEq{}(), \or{SortFRelOp{}} (LblfloatNe{}(), \or{SortFRelOp{}} (Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}(), \or{SortFRelOp{}} (Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}(), \or{SortFRelOp{}} (Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}(), \or{SortFRelOp{}} (Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}(), \bottom{SortFRelOp{}}())))))) [constructor{}()] // no junk
  axiom{} \or{SortNextFuncIdxCell{}} (\exists{SortNextFuncIdxCell{}} (X0:SortInt{}, Lbl'-LT-'nextFuncIdx'-GT-'{}(X0:SortInt{})), \bottom{SortNextFuncIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGlobalAddrsCell{}} (\exists{SortGlobalAddrsCell{}} (X0:SortMap{}, Lbl'-LT-'globalAddrs'-GT-'{}(X0:SortMap{})), \bottom{SortGlobalAddrsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLabel{}} (\exists{SortLabel{}} (X0:SortVecType{}, \exists{SortLabel{}} (X1:SortInstrs{}, \exists{SortLabel{}} (X2:SortValStack{}, Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(X0:SortVecType{}, X1:SortInstrs{}, X2:SortValStack{})))), \bottom{SortLabel{}}()) [constructor{}()] // no junk
  axiom{} \or{SortValTypes{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}(), \or{SortValTypes{}} (\exists{SortValTypes{}} (X0:SortValType{}, \exists{SortValTypes{}} (X1:SortValTypes{}, Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(X0:SortValType{}, X1:SortValTypes{}))), \bottom{SortValTypes{}}())) [constructor{}()] // no junk
  axiom{} \or{SortNumber{}} (\exists{SortNumber{}} (Val:SortFloat{}, inj{SortFloat{}, SortNumber{}} (Val:SortFloat{})), \or{SortNumber{}} (\exists{SortNumber{}} (Val:SortWasmIntToken{}, inj{SortWasmIntToken{}, SortNumber{}} (Val:SortWasmIntToken{})), \or{SortNumber{}} (\exists{SortNumber{}} (Val:SortInt{}, inj{SortInt{}, SortNumber{}} (Val:SortInt{})), \bottom{SortNumber{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortMemIdsCellOpt{}} (LblnoMemIdsCell{}(), \or{SortMemIdsCellOpt{}} (\exists{SortMemIdsCellOpt{}} (Val:SortMemIdsCell{}, inj{SortMemIdsCell{}, SortMemIdsCellOpt{}} (Val:SortMemIdsCell{})), \bottom{SortMemIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalDecls{}, inj{SortLocalDecls{}, SortKItem{}} (Val:SortLocalDecls{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabAddrsCellOpt{}, inj{SortTabAddrsCellOpt{}, SortKItem{}} (Val:SortTabAddrsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNValType{}, inj{SortNValType{}, SortKItem{}} (Val:SortNValType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGAddrCell{}, inj{SortGAddrCell{}, SortKItem{}} (Val:SortGAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMainStoreCell{}, inj{SortMainStoreCell{}, SortKItem{}} (Val:SortMainStoreCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStmts{}, inj{SortStmts{}, SortKItem{}} (Val:SortStmts{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLabelIdsCell{}, inj{SortLabelIdsCell{}, SortKItem{}} (Val:SortLabelIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEmptyStmt{}, inj{SortEmptyStmt{}, SortKItem{}} (Val:SortEmptyStmt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIVal{}, inj{SortIVal{}, SortKItem{}} (Val:SortIVal{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTmaxCell{}, inj{SortTmaxCell{}, SortKItem{}} (Val:SortTmaxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalsCellOpt{}, inj{SortLocalsCellOpt{}, SortKItem{}} (Val:SortLocalsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortString{}, inj{SortString{}, SortKItem{}} (Val:SortString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortList{}, inj{SortList{}, SortKItem{}} (Val:SortList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncIdsCell{}, inj{SortFuncIdsCell{}, SortKItem{}} (Val:SortFuncIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemsCell{}, inj{SortMemsCell{}, SortKItem{}} (Val:SortMemsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDataDefn{}, inj{SortDataDefn{}, SortKItem{}} (Val:SortDataDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextModuleIdxCell{}, inj{SortNextModuleIdxCell{}, SortKItem{}} (Val:SortNextModuleIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMsizeCell{}, inj{SortMsizeCell{}, SortKItem{}} (Val:SortMsizeCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleRegistryCellOpt{}, inj{SortModuleRegistryCellOpt{}, SortKItem{}} (Val:SortModuleRegistryCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalInstCell{}, inj{SortGlobalInstCell{}, SortKItem{}} (Val:SortGlobalInstCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIdentifierToken{}, inj{SortIdentifierToken{}, SortKItem{}} (Val:SortIdentifierToken{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCvti64Op{}, inj{SortCvti64Op{}, SortKItem{}} (Val:SortCvti64Op{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstCellMap{}, inj{SortModuleInstCellMap{}, SortKItem{}} (Val:SortModuleInstCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTableType{}, inj{SortTableType{}, SortKItem{}} (Val:SortTableType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstCell{}, inj{SortModuleInstCell{}, SortKItem{}} (Val:SortModuleInstCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncAddrsCellOpt{}, inj{SortFuncAddrsCellOpt{}, SortKItem{}} (Val:SortFuncAddrsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemType{}, inj{SortMemType{}, SortKItem{}} (Val:SortMemType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStartDefn{}, inj{SortStartDefn{}, SortKItem{}} (Val:SortStartDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextFuncAddrCell{}, inj{SortNextFuncAddrCell{}, SortKItem{}} (Val:SortNextFuncAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMsizeCellOpt{}, inj{SortMsizeCellOpt{}, SortKItem{}} (Val:SortMsizeCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmCell{}, inj{SortWasmCell{}, SortKItem{}} (Val:SortWasmCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleRegistryCell{}, inj{SortModuleRegistryCell{}, SortKItem{}} (Val:SortModuleRegistryCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmString{}, inj{SortWasmString{}, SortKItem{}} (Val:SortWasmString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemInstCellMap{}, inj{SortMemInstCellMap{}, SortKItem{}} (Val:SortMemInstCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalAddrsCellOpt{}, inj{SortGlobalAddrsCellOpt{}, SortKItem{}} (Val:SortGlobalAddrsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleIdsCell{}, inj{SortModuleIdsCell{}, SortKItem{}} (Val:SortModuleIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLoadOpM{}, inj{SortLoadOpM{}, SortKItem{}} (Val:SortLoadOpM{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIndex{}, inj{SortIndex{}, SortKItem{}} (Val:SortIndex{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCell{}, inj{SortKCell{}, SortKItem{}} (Val:SortKCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextTypeIdxCellOpt{}, inj{SortNextTypeIdxCellOpt{}, SortKItem{}} (Val:SortNextTypeIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMdataCellOpt{}, inj{SortMdataCellOpt{}, SortKItem{}} (Val:SortMdataCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLabelDepthCell{}, inj{SortLabelDepthCell{}, SortKItem{}} (Val:SortLabelDepthCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFCodeCell{}, inj{SortFCodeCell{}, SortKItem{}} (Val:SortFCodeCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeUse{}, inj{SortTypeUse{}, SortKItem{}} (Val:SortTypeUse{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInstr{}, inj{SortInstr{}, SortKItem{}} (Val:SortInstr{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAValType{}, inj{SortAValType{}, SortKItem{}} (Val:SortAValType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDefns{}, inj{SortDefns{}, SortKItem{}} (Val:SortDefns{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFloat{}, inj{SortFloat{}, SortKItem{}} (Val:SortFloat{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobIdsCell{}, inj{SortGlobIdsCell{}, SortKItem{}} (Val:SortGlobIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIUnOp{}, inj{SortIUnOp{}, SortKItem{}} (Val:SortIUnOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextGlobAddrCellOpt{}, inj{SortNextGlobAddrCellOpt{}, SortKItem{}} (Val:SortNextGlobAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFVal{}, inj{SortFVal{}, SortKItem{}} (Val:SortFVal{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncType{}, inj{SortFuncType{}, SortKItem{}} (Val:SortFuncType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTsizeCellOpt{}, inj{SortTsizeCellOpt{}, SortKItem{}} (Val:SortTsizeCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMut{}, inj{SortMut{}, SortKItem{}} (Val:SortMut{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFrame{}, inj{SortFrame{}, SortKItem{}} (Val:SortFrame{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemsCellFragment{}, inj{SortMemsCellFragment{}, SortKItem{}} (Val:SortMemsCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortByteMap{}, inj{SortByteMap{}, SortKItem{}} (Val:SortByteMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModIdxCell{}, inj{SortModIdxCell{}, SortKItem{}} (Val:SortModIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleDecl{}, inj{SortModuleDecl{}, SortKItem{}} (Val:SortModuleDecl{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemoryDefn{}, inj{SortMemoryDefn{}, SortKItem{}} (Val:SortMemoryDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInstrs{}, inj{SortInstrs{}, SortKItem{}} (Val:SortInstrs{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortElemSegment{}, inj{SortElemSegment{}, SortKItem{}} (Val:SortElemSegment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortPlainInstr{}, inj{SortPlainInstr{}, SortKItem{}} (Val:SortPlainInstr{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFTypeCellOpt{}, inj{SortFTypeCellOpt{}, SortKItem{}} (Val:SortFTypeCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBool{}, inj{SortBool{}, SortKItem{}} (Val:SortBool{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCurFrameCellOpt{}, inj{SortCurFrameCellOpt{}, SortKItem{}} (Val:SortCurFrameCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstancesCellFragment{}, inj{SortModuleInstancesCellFragment{}, SortKItem{}} (Val:SortModuleInstancesCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextGlobAddrCell{}, inj{SortNextGlobAddrCell{}, SortKItem{}} (Val:SortNextGlobAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFoldedInstr{}, inj{SortFoldedInstr{}, SortKItem{}} (Val:SortFoldedInstr{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStoreOpM{}, inj{SortStoreOpM{}, SortKItem{}} (Val:SortStoreOpM{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFModInstCell{}, inj{SortFModInstCell{}, SortKItem{}} (Val:SortFModInstCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortVal{}, inj{SortVal{}, SortKItem{}} (Val:SortVal{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTdataCellOpt{}, inj{SortTdataCellOpt{}, SortKItem{}} (Val:SortTdataCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortValstackCell{}, inj{SortValstackCell{}, SortKItem{}} (Val:SortValstackCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGValueCellOpt{}, inj{SortGValueCellOpt{}, SortKItem{}} (Val:SortGValueCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemInstCellFragment{}, inj{SortMemInstCellFragment{}, SortKItem{}} (Val:SortMemInstCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstCellFragment{}, inj{SortModuleInstCellFragment{}, SortKItem{}} (Val:SortModuleInstCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalDefn{}, inj{SortGlobalDefn{}, SortKItem{}} (Val:SortGlobalDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDeterministicMemoryGrowthCell{}, inj{SortDeterministicMemoryGrowthCell{}, SortKItem{}} (Val:SortDeterministicMemoryGrowthCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortValStack{}, inj{SortValStack{}, SortKItem{}} (Val:SortValStack{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncSpec{}, inj{SortFuncSpec{}, SortKItem{}} (Val:SortFuncSpec{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEndianness{}, inj{SortEndianness{}, SortKItem{}} (Val:SortEndianness{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDeterministicMemoryGrowthCellOpt{}, inj{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}} (Val:SortDeterministicMemoryGrowthCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFAddrCell{}, inj{SortFAddrCell{}, SortKItem{}} (Val:SortFAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFLocalCell{}, inj{SortFLocalCell{}, SortKItem{}} (Val:SortFLocalCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabInstCell{}, inj{SortTabInstCell{}, SortKItem{}} (Val:SortTabInstCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFAddrCellOpt{}, inj{SortFAddrCellOpt{}, SortKItem{}} (Val:SortFAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMainStoreCellFragment{}, inj{SortMainStoreCellFragment{}, SortKItem{}} (Val:SortMainStoreCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEmptyStmts{}, inj{SortEmptyStmts{}, SortKItem{}} (Val:SortEmptyStmts{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMdataCell{}, inj{SortMdataCell{}, SortKItem{}} (Val:SortMdataCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStoreOp{}, inj{SortStoreOp{}, SortKItem{}} (Val:SortStoreOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeKeyWord{}, inj{SortTypeKeyWord{}, SortKItem{}} (Val:SortTypeKeyWord{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFTypeCell{}, inj{SortFTypeCell{}, SortKItem{}} (Val:SortFTypeCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTmaxCellOpt{}, inj{SortTmaxCellOpt{}, SortKItem{}} (Val:SortTmaxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCurFrameCellFragment{}, inj{SortCurFrameCellFragment{}, SortKItem{}} (Val:SortCurFrameCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncDefCell{}, inj{SortFuncDefCell{}, SortKItem{}} (Val:SortFuncDefCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncsCellOpt{}, inj{SortFuncsCellOpt{}, SortKItem{}} (Val:SortFuncsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemorySpec{}, inj{SortMemorySpec{}, SortKItem{}} (Val:SortMemorySpec{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmIntToken{}, inj{SortWasmIntToken{}, SortKItem{}} (Val:SortWasmIntToken{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCellOpt{}, inj{SortKCellOpt{}, SortKItem{}} (Val:SortKCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemAddrsCellOpt{}, inj{SortMemAddrsCellOpt{}, SortKItem{}} (Val:SortMemAddrsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalDecl{}, inj{SortLocalDecl{}, SortKItem{}} (Val:SortLocalDecl{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemIdsCell{}, inj{SortMemIdsCell{}, SortKItem{}} (Val:SortMemIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalType{}, inj{SortGlobalType{}, SortKItem{}} (Val:SortGlobalType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeDecl{}, inj{SortTypeDecl{}, SortKItem{}} (Val:SortTypeDecl{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabsCellOpt{}, inj{SortTabsCellOpt{}, SortKItem{}} (Val:SortTabsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalInstCellFragment{}, inj{SortGlobalInstCellFragment{}, SortKItem{}} (Val:SortGlobalInstCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGMutCell{}, inj{SortGMutCell{}, SortKItem{}} (Val:SortGMutCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncDefCellFragment{}, inj{SortFuncDefCellFragment{}, SortKItem{}} (Val:SortFuncDefCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstancesCell{}, inj{SortModuleInstancesCell{}, SortKItem{}} (Val:SortModuleInstancesCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBytes{}, inj{SortBytes{}, SortKItem{}} (Val:SortBytes{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalIdsCellOpt{}, inj{SortLocalIdsCellOpt{}, SortKItem{}} (Val:SortLocalIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDataString{}, inj{SortDataString{}, SortKItem{}} (Val:SortDataString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabsCell{}, inj{SortTabsCell{}, SortKItem{}} (Val:SortTabsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabInstCellMap{}, inj{SortTabInstCellMap{}, SortKItem{}} (Val:SortTabInstCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOffsetArg{}, inj{SortOffsetArg{}, SortKItem{}} (Val:SortOffsetArg{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalInstCellMap{}, inj{SortGlobalInstCellMap{}, SortKItem{}} (Val:SortGlobalInstCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAlignArg{}, inj{SortAlignArg{}, SortKItem{}} (Val:SortAlignArg{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCvti32Op{}, inj{SortCvti32Op{}, SortKItem{}} (Val:SortCvti32Op{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncsCell{}, inj{SortFuncsCell{}, SortKItem{}} (Val:SortFuncsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCurFrameCell{}, inj{SortCurFrameCell{}, SortKItem{}} (Val:SortCurFrameCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncAddrsCell{}, inj{SortFuncAddrsCell{}, SortKItem{}} (Val:SortFuncAddrsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCvtf64Op{}, inj{SortCvtf64Op{}, SortKItem{}} (Val:SortCvtf64Op{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextModuleIdxCellOpt{}, inj{SortNextModuleIdxCellOpt{}, SortKItem{}} (Val:SortNextModuleIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCvtOp{}, inj{SortCvtOp{}, SortKItem{}} (Val:SortCvtOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeDefn{}, inj{SortTypeDefn{}, SortKItem{}} (Val:SortTypeDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModIdxCellOpt{}, inj{SortModIdxCellOpt{}, SortKItem{}} (Val:SortModIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextGlobIdxCell{}, inj{SortNextGlobIdxCell{}, SortKItem{}} (Val:SortNextGlobIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExportsCellOpt{}, inj{SortExportsCellOpt{}, SortKItem{}} (Val:SortExportsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOptionalInt{}, inj{SortOptionalInt{}, SortKItem{}} (Val:SortOptionalInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortElemDefn{}, inj{SortElemDefn{}, SortKItem{}} (Val:SortElemDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeDecls{}, inj{SortTypeDecls{}, SortKItem{}} (Val:SortTypeDecls{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLimits{}, inj{SortLimits{}, SortKItem{}} (Val:SortLimits{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOptionalId{}, inj{SortOptionalId{}, SortKItem{}} (Val:SortOptionalId{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncDefCellMap{}, inj{SortFuncDefCellMap{}, SortKItem{}} (Val:SortFuncDefCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInlineExport{}, inj{SortInlineExport{}, SortKItem{}} (Val:SortInlineExport{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemAddrsCell{}, inj{SortMemAddrsCell{}, SortKItem{}} (Val:SortMemAddrsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIdentifier{}, inj{SortIdentifier{}, SortKItem{}} (Val:SortIdentifier{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalIdsCell{}, inj{SortLocalIdsCell{}, SortKItem{}} (Val:SortLocalIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFCodeCellOpt{}, inj{SortFCodeCellOpt{}, SortKItem{}} (Val:SortFCodeCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabIdsCellOpt{}, inj{SortTabIdsCellOpt{}, SortKItem{}} (Val:SortTabIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExternval{}, inj{SortExternval{}, SortKItem{}} (Val:SortExternval{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFUnOp{}, inj{SortFUnOp{}, SortKItem{}} (Val:SortFUnOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTAddrCell{}, inj{SortTAddrCell{}, SortKItem{}} (Val:SortTAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIRelOp{}, inj{SortIRelOp{}, SortKItem{}} (Val:SortIRelOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextMemAddrCellOpt{}, inj{SortNextMemAddrCellOpt{}, SortKItem{}} (Val:SortNextMemAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmStringToken{}, inj{SortWasmStringToken{}, SortKItem{}} (Val:SortWasmStringToken{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSet{}, inj{SortSet{}, SortKItem{}} (Val:SortSet{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTsizeCell{}, inj{SortTsizeCell{}, SortKItem{}} (Val:SortTsizeCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMainStoreCellOpt{}, inj{SortMainStoreCellOpt{}, SortKItem{}} (Val:SortMainStoreCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortWasmCellFragment{}, inj{SortWasmCellFragment{}, SortKItem{}} (Val:SortWasmCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSignedness{}, inj{SortSignedness{}, SortKItem{}} (Val:SortSignedness{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalsCellFragment{}, inj{SortGlobalsCellFragment{}, SortKItem{}} (Val:SortGlobalsCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFBinOp{}, inj{SortFBinOp{}, SortKItem{}} (Val:SortFBinOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextTabAddrCell{}, inj{SortNextTabAddrCell{}, SortKItem{}} (Val:SortNextTabAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMmaxCell{}, inj{SortMmaxCell{}, SortKItem{}} (Val:SortMmaxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortValstackCellOpt{}, inj{SortValstackCellOpt{}, SortKItem{}} (Val:SortValstackCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobIdsCellOpt{}, inj{SortGlobIdsCellOpt{}, SortKItem{}} (Val:SortGlobIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalsCellOpt{}, inj{SortGlobalsCellOpt{}, SortKItem{}} (Val:SortGlobalsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncsCellFragment{}, inj{SortFuncsCellFragment{}, SortKItem{}} (Val:SortFuncsCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemInstCell{}, inj{SortMemInstCell{}, SortKItem{}} (Val:SortMemInstCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextTypeIdxCell{}, inj{SortNextTypeIdxCell{}, SortKItem{}} (Val:SortNextTypeIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTableSpec{}, inj{SortTableSpec{}, SortKItem{}} (Val:SortTableSpec{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIBinOp{}, inj{SortIBinOp{}, SortKItem{}} (Val:SortIBinOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalSpec{}, inj{SortGlobalSpec{}, SortKItem{}} (Val:SortGlobalSpec{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextFuncAddrCellOpt{}, inj{SortNextFuncAddrCellOpt{}, SortKItem{}} (Val:SortNextFuncAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGAddrCellOpt{}, inj{SortGAddrCellOpt{}, SortKItem{}} (Val:SortGAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncIdsCellOpt{}, inj{SortFuncIdsCellOpt{}, SortKItem{}} (Val:SortFuncIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextFreshIdCell{}, inj{SortNextFreshIdCell{}, SortKItem{}} (Val:SortNextFreshIdCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMap{}, inj{SortMap{}, SortKItem{}} (Val:SortMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemArg{}, inj{SortMemArg{}, SortKItem{}} (Val:SortMemArg{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypesCell{}, inj{SortTypesCell{}, SortKItem{}} (Val:SortTypesCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemsCellOpt{}, inj{SortMemsCellOpt{}, SortKItem{}} (Val:SortMemsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTableDefn{}, inj{SortTableDefn{}, SortKItem{}} (Val:SortTableDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAllocatedKind{}, inj{SortAllocatedKind{}, SortKItem{}} (Val:SortAllocatedKind{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleInstancesCellOpt{}, inj{SortModuleInstancesCellOpt{}, SortKItem{}} (Val:SortModuleInstancesCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDefn{}, inj{SortDefn{}, SortKItem{}} (Val:SortDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextMemAddrCell{}, inj{SortNextMemAddrCell{}, SortKItem{}} (Val:SortNextMemAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOffset{}, inj{SortOffset{}, SortKItem{}} (Val:SortOffset{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCell{}, inj{SortCell{}, SortKItem{}} (Val:SortCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabIdsCell{}, inj{SortTabIdsCell{}, SortKItem{}} (Val:SortTabIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInlineImport{}, inj{SortInlineImport{}, SortKItem{}} (Val:SortInlineImport{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLoadOp{}, inj{SortLoadOp{}, SortKItem{}} (Val:SortLoadOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMmaxCellOpt{}, inj{SortMmaxCellOpt{}, SortKItem{}} (Val:SortMmaxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFModInstCellOpt{}, inj{SortFModInstCellOpt{}, SortKItem{}} (Val:SortFModInstCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleIdsCellOpt{}, inj{SortModuleIdsCellOpt{}, SortKItem{}} (Val:SortModuleIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLabelDepthCellOpt{}, inj{SortLabelDepthCellOpt{}, SortKItem{}} (Val:SortLabelDepthCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTextFormatGlobalType{}, inj{SortTextFormatGlobalType{}, SortKItem{}} (Val:SortTextFormatGlobalType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIValType{}, inj{SortIValType{}, SortKItem{}} (Val:SortIValType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGMutCellOpt{}, inj{SortGMutCellOpt{}, SortKItem{}} (Val:SortGMutCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFRelOp{}, inj{SortFRelOp{}, SortKItem{}} (Val:SortFRelOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextFuncIdxCell{}, inj{SortNextFuncIdxCell{}, SortKItem{}} (Val:SortNextFuncIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalAddrsCell{}, inj{SortGlobalAddrsCell{}, SortKItem{}} (Val:SortGlobalAddrsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLabel{}, inj{SortLabel{}, SortKItem{}} (Val:SortLabel{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortValTypes{}, inj{SortValTypes{}, SortKItem{}} (Val:SortValTypes{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNumber{}, inj{SortNumber{}, SortKItem{}} (Val:SortNumber{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMemIdsCellOpt{}, inj{SortMemIdsCellOpt{}, SortKItem{}} (Val:SortMemIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortImportDefn{}, inj{SortImportDefn{}, SortKItem{}} (Val:SortImportDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCvtf32Op{}, inj{SortCvtf32Op{}, SortKItem{}} (Val:SortCvtf32Op{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMAddrCell{}, inj{SortMAddrCell{}, SortKItem{}} (Val:SortMAddrCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabInstCellFragment{}, inj{SortTabInstCellFragment{}, SortKItem{}} (Val:SortTabInstCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortVecType{}, inj{SortVecType{}, SortKItem{}} (Val:SortVecType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTdataCell{}, inj{SortTdataCell{}, SortKItem{}} (Val:SortTdataCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextTabAddrCellOpt{}, inj{SortNextTabAddrCellOpt{}, SortKItem{}} (Val:SortNextTabAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStmt{}, inj{SortStmt{}, SortKItem{}} (Val:SortStmt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInt{}, inj{SortInt{}, SortKItem{}} (Val:SortInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMInt{}, inj{SortMInt{}, SortKItem{}} (Val:SortMInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFuncDefn{}, inj{SortFuncDefn{}, SortKItem{}} (Val:SortFuncDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortType{}, inj{SortType{}, SortKItem{}} (Val:SortType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTableElemType{}, inj{SortTableElemType{}, SortKItem{}} (Val:SortTableElemType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFValType{}, inj{SortFValType{}, SortKItem{}} (Val:SortFValType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMAddrCellOpt{}, inj{SortMAddrCellOpt{}, SortKItem{}} (Val:SortMAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextFreshIdCellOpt{}, inj{SortNextFreshIdCellOpt{}, SortKItem{}} (Val:SortNextFreshIdCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortImportDesc{}, inj{SortImportDesc{}, SortKItem{}} (Val:SortImportDesc{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortValType{}, inj{SortValType{}, SortKItem{}} (Val:SortValType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLocalsCell{}, inj{SortLocalsCell{}, SortKItem{}} (Val:SortLocalsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypesCellOpt{}, inj{SortTypesCellOpt{}, SortKItem{}} (Val:SortTypesCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFLocalCellOpt{}, inj{SortFLocalCellOpt{}, SortKItem{}} (Val:SortFLocalCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCurModIdxCellOpt{}, inj{SortCurModIdxCellOpt{}, SortKItem{}} (Val:SortCurModIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGlobalsCell{}, inj{SortGlobalsCell{}, SortKItem{}} (Val:SortGlobalsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeIdsCellOpt{}, inj{SortTypeIdsCellOpt{}, SortKItem{}} (Val:SortTypeIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypeIdsCell{}, inj{SortTypeIdsCell{}, SortKItem{}} (Val:SortTypeIdsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCurModIdxCell{}, inj{SortCurModIdxCell{}, SortKItem{}} (Val:SortCurModIdxCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextGlobIdxCellOpt{}, inj{SortNextGlobIdxCellOpt{}, SortKItem{}} (Val:SortNextGlobIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBlockInstr{}, inj{SortBlockInstr{}, SortKItem{}} (Val:SortBlockInstr{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExportDefn{}, inj{SortExportDefn{}, SortKItem{}} (Val:SortExportDefn{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExportsCell{}, inj{SortExportsCell{}, SortKItem{}} (Val:SortExportsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTestOp{}, inj{SortTestOp{}, SortKItem{}} (Val:SortTestOp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNextFuncIdxCellOpt{}, inj{SortNextFuncIdxCellOpt{}, SortKItem{}} (Val:SortNextFuncIdxCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTAddrCellOpt{}, inj{SortTAddrCellOpt{}, SortKItem{}} (Val:SortTAddrCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabAddrsCell{}, inj{SortTabAddrsCell{}, SortKItem{}} (Val:SortTabAddrsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTabsCellFragment{}, inj{SortTabsCellFragment{}, SortKItem{}} (Val:SortTabsCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLabelIdsCellOpt{}, inj{SortLabelIdsCellOpt{}, SortKItem{}} (Val:SortLabelIdsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGValueCell{}, inj{SortGValueCell{}, SortKItem{}} (Val:SortGValueCell{})), \bottom{SortKItem{}}()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortImportDefn{}} (\exists{SortImportDefn{}} (X0:SortWasmString{}, \exists{SortImportDefn{}} (X1:SortWasmString{}, \exists{SortImportDefn{}} (X2:SortImportDesc{}, Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(X0:SortWasmString{}, X1:SortWasmString{}, X2:SortImportDesc{})))), \bottom{SortImportDefn{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCvtf32Op{}} (Lblpromote'Unds'f32'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}(), \or{SortCvtf32Op{}} (Lbltrunc'Unds'f32'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}(), \or{SortCvtf32Op{}} (Lbltrunc'Unds'f32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}(), \bottom{SortCvtf32Op{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortMAddrCell{}} (\exists{SortMAddrCell{}} (X0:SortInt{}, Lbl'-LT-'mAddr'-GT-'{}(X0:SortInt{})), \bottom{SortMAddrCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTabInstCellFragment{}} (\exists{SortTabInstCellFragment{}} (X0:SortTAddrCellOpt{}, \exists{SortTabInstCellFragment{}} (X1:SortTmaxCellOpt{}, \exists{SortTabInstCellFragment{}} (X2:SortTsizeCellOpt{}, \exists{SortTabInstCellFragment{}} (X3:SortTdataCellOpt{}, Lbl'-LT-'tabInst'-GT-'-fragment{}(X0:SortTAddrCellOpt{}, X1:SortTmaxCellOpt{}, X2:SortTsizeCellOpt{}, X3:SortTdataCellOpt{}))))), \bottom{SortTabInstCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortVecType{}} (\exists{SortVecType{}} (X0:SortValTypes{}, Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(X0:SortValTypes{})), \bottom{SortVecType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTdataCell{}} (\exists{SortTdataCell{}} (X0:SortMap{}, Lbl'-LT-'tdata'-GT-'{}(X0:SortMap{})), \bottom{SortTdataCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextTabAddrCellOpt{}} (LblnoNextTabAddrCell{}(), \or{SortNextTabAddrCellOpt{}} (\exists{SortNextTabAddrCellOpt{}} (Val:SortNextTabAddrCell{}, inj{SortNextTabAddrCell{}, SortNextTabAddrCellOpt{}} (Val:SortNextTabAddrCell{})), \bottom{SortNextTabAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortInt{}, \exists{SortStmt{}} (X1:SortInt{}, \exists{SortStmt{}} (X2:SortMap{}, \exists{SortStmt{}} (X3:SortMap{}, \exists{SortStmt{}} (X4:SortElemSegment{}, Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(X0:SortInt{}, X1:SortInt{}, X2:SortMap{}, X3:SortMap{}, X4:SortElemSegment{})))))), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortEmptyStmt{}, inj{SortEmptyStmt{}, SortStmt{}} (Val:SortEmptyStmt{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortDataDefn{}, inj{SortDataDefn{}, SortStmt{}} (Val:SortDataDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortStartDefn{}, inj{SortStartDefn{}, SortStmt{}} (Val:SortStartDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortInstr{}, inj{SortInstr{}, SortStmt{}} (Val:SortInstr{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortModuleDecl{}, inj{SortModuleDecl{}, SortStmt{}} (Val:SortModuleDecl{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortMemoryDefn{}, inj{SortMemoryDefn{}, SortStmt{}} (Val:SortMemoryDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortPlainInstr{}, inj{SortPlainInstr{}, SortStmt{}} (Val:SortPlainInstr{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortFoldedInstr{}, inj{SortFoldedInstr{}, SortStmt{}} (Val:SortFoldedInstr{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortGlobalDefn{}, inj{SortGlobalDefn{}, SortStmt{}} (Val:SortGlobalDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortTypeDefn{}, inj{SortTypeDefn{}, SortStmt{}} (Val:SortTypeDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortElemDefn{}, inj{SortElemDefn{}, SortStmt{}} (Val:SortElemDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortTableDefn{}, inj{SortTableDefn{}, SortStmt{}} (Val:SortTableDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortDefn{}, inj{SortDefn{}, SortStmt{}} (Val:SortDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortImportDefn{}, inj{SortImportDefn{}, SortStmt{}} (Val:SortImportDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortFuncDefn{}, inj{SortFuncDefn{}, SortStmt{}} (Val:SortFuncDefn{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortBlockInstr{}, inj{SortBlockInstr{}, SortStmt{}} (Val:SortBlockInstr{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortExportDefn{}, inj{SortExportDefn{}, SortStmt{}} (Val:SortExportDefn{})), \bottom{SortStmt{}}())))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortInt{}} (\top{SortInt{}}(), \or{SortInt{}} (\exists{SortInt{}} (Val:SortWasmIntToken{}, inj{SortWasmIntToken{}, SortInt{}} (Val:SortWasmIntToken{})), \bottom{SortInt{}}())) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \bottom{SortMInt{}}() [constructor{}()] // no junk
  axiom{} \or{SortFuncDefn{}} (\exists{SortFuncDefn{}} (X0:SortOptionalId{}, \exists{SortFuncDefn{}} (X1:SortFuncSpec{}, Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(X0:SortOptionalId{}, X1:SortFuncSpec{}))), \bottom{SortFuncDefn{}}()) [constructor{}()] // no junk
  axiom{} \or{SortType{}} (Lbl'Stop'Type'Unds'WASM-DATA'Unds'Type{}(), \or{SortType{}} (\exists{SortType{}} (Val:SortNValType{}, inj{SortNValType{}, SortType{}} (Val:SortNValType{})), \or{SortType{}} (\exists{SortType{}} (Val:SortAValType{}, inj{SortAValType{}, SortType{}} (Val:SortAValType{})), \or{SortType{}} (\exists{SortType{}} (Val:SortFuncType{}, inj{SortFuncType{}, SortType{}} (Val:SortFuncType{})), \or{SortType{}} (\exists{SortType{}} (Val:SortIValType{}, inj{SortIValType{}, SortType{}} (Val:SortIValType{})), \or{SortType{}} (\exists{SortType{}} (Val:SortVecType{}, inj{SortVecType{}, SortType{}} (Val:SortVecType{})), \or{SortType{}} (\exists{SortType{}} (Val:SortFValType{}, inj{SortFValType{}, SortType{}} (Val:SortFValType{})), \or{SortType{}} (\exists{SortType{}} (Val:SortValType{}, inj{SortValType{}, SortType{}} (Val:SortValType{})), \bottom{SortType{}}())))))))) [constructor{}()] // no junk
  axiom{} \or{SortTableElemType{}} (Lblfuncref'Unds'WASM'Unds'TableElemType{}(), \bottom{SortTableElemType{}}()) [constructor{}()] // no junk
  axiom{} \or{SortFValType{}} (Lblf32'Unds'WASM-DATA'Unds'FValType{}(), \or{SortFValType{}} (Lblf64'Unds'WASM-DATA'Unds'FValType{}(), \bottom{SortFValType{}}())) [constructor{}()] // no junk
  axiom{} \or{SortMAddrCellOpt{}} (LblnoMAddrCell{}(), \or{SortMAddrCellOpt{}} (\exists{SortMAddrCellOpt{}} (Val:SortMAddrCell{}, inj{SortMAddrCell{}, SortMAddrCellOpt{}} (Val:SortMAddrCell{})), \bottom{SortMAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortNextFreshIdCellOpt{}} (LblnoNextFreshIdCell{}(), \or{SortNextFreshIdCellOpt{}} (\exists{SortNextFreshIdCellOpt{}} (Val:SortNextFreshIdCell{}, inj{SortNextFreshIdCell{}, SortNextFreshIdCellOpt{}} (Val:SortNextFreshIdCell{})), \bottom{SortNextFreshIdCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortImportDesc{}} (\exists{SortImportDesc{}} (X0:SortOptionalId{}, \exists{SortImportDesc{}} (X1:SortTypeUse{}, Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(X0:SortOptionalId{}, X1:SortTypeUse{}))), \or{SortImportDesc{}} (\exists{SortImportDesc{}} (X0:SortOptionalId{}, \exists{SortImportDesc{}} (X1:SortTextFormatGlobalType{}, Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(X0:SortOptionalId{}, X1:SortTextFormatGlobalType{}))), \or{SortImportDesc{}} (\exists{SortImportDesc{}} (X0:SortOptionalId{}, \exists{SortImportDesc{}} (X1:SortMemType{}, Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(X0:SortOptionalId{}, X1:SortMemType{}))), \or{SortImportDesc{}} (\exists{SortImportDesc{}} (X0:SortOptionalId{}, \exists{SortImportDesc{}} (X1:SortTableType{}, Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(X0:SortOptionalId{}, X1:SortTableType{}))), \bottom{SortImportDesc{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortValType{}} (\exists{SortValType{}} (Val:SortNValType{}, inj{SortNValType{}, SortValType{}} (Val:SortNValType{})), \or{SortValType{}} (\exists{SortValType{}} (Val:SortAValType{}, inj{SortAValType{}, SortValType{}} (Val:SortAValType{})), \or{SortValType{}} (\exists{SortValType{}} (Val:SortIValType{}, inj{SortIValType{}, SortValType{}} (Val:SortIValType{})), \or{SortValType{}} (\exists{SortValType{}} (Val:SortFValType{}, inj{SortFValType{}, SortValType{}} (Val:SortFValType{})), \bottom{SortValType{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortLocalsCell{}} (\exists{SortLocalsCell{}} (X0:SortMap{}, Lbl'-LT-'locals'-GT-'{}(X0:SortMap{})), \bottom{SortLocalsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypesCellOpt{}} (LblnoTypesCell{}(), \or{SortTypesCellOpt{}} (\exists{SortTypesCellOpt{}} (Val:SortTypesCell{}, inj{SortTypesCell{}, SortTypesCellOpt{}} (Val:SortTypesCell{})), \bottom{SortTypesCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortFLocalCellOpt{}} (LblnoFLocalCell{}(), \or{SortFLocalCellOpt{}} (\exists{SortFLocalCellOpt{}} (Val:SortFLocalCell{}, inj{SortFLocalCell{}, SortFLocalCellOpt{}} (Val:SortFLocalCell{})), \bottom{SortFLocalCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCurModIdxCellOpt{}} (LblnoCurModIdxCell{}(), \or{SortCurModIdxCellOpt{}} (\exists{SortCurModIdxCellOpt{}} (Val:SortCurModIdxCell{}, inj{SortCurModIdxCell{}, SortCurModIdxCellOpt{}} (Val:SortCurModIdxCell{})), \bottom{SortCurModIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCell{}} (\exists{SortGeneratedCounterCell{}} (X0:SortInt{}, Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{})), \bottom{SortGeneratedCounterCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGlobalsCell{}} (\exists{SortGlobalsCell{}} (X0:SortGlobalInstCellMap{}, Lbl'-LT-'globals'-GT-'{}(X0:SortGlobalInstCellMap{})), \bottom{SortGlobalsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypeIdsCellOpt{}} (LblnoTypeIdsCell{}(), \or{SortTypeIdsCellOpt{}} (\exists{SortTypeIdsCellOpt{}} (Val:SortTypeIdsCell{}, inj{SortTypeIdsCell{}, SortTypeIdsCellOpt{}} (Val:SortTypeIdsCell{})), \bottom{SortTypeIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTypeIdsCell{}} (\exists{SortTypeIdsCell{}} (X0:SortMap{}, Lbl'-LT-'typeIds'-GT-'{}(X0:SortMap{})), \bottom{SortTypeIdsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCurModIdxCell{}} (\exists{SortCurModIdxCell{}} (X0:SortOptionalInt{}, Lbl'-LT-'curModIdx'-GT-'{}(X0:SortOptionalInt{})), \bottom{SortCurModIdxCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNextGlobIdxCellOpt{}} (LblnoNextGlobIdxCell{}(), \or{SortNextGlobIdxCellOpt{}} (\exists{SortNextGlobIdxCellOpt{}} (Val:SortNextGlobIdxCell{}, inj{SortNextGlobIdxCell{}, SortNextGlobIdxCellOpt{}} (Val:SortNextGlobIdxCell{})), \bottom{SortNextGlobIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortBlockInstr{}} (\exists{SortBlockInstr{}} (X0:SortIdentifier{}, \exists{SortBlockInstr{}} (X1:SortTypeDecls{}, \exists{SortBlockInstr{}} (X2:SortInstrs{}, \exists{SortBlockInstr{}} (X3:SortOptionalId{}, Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}))))), \or{SortBlockInstr{}} (\exists{SortBlockInstr{}} (X0:SortIdentifier{}, \exists{SortBlockInstr{}} (X1:SortTypeDecls{}, \exists{SortBlockInstr{}} (X2:SortInstrs{}, \exists{SortBlockInstr{}} (X3:SortOptionalId{}, \exists{SortBlockInstr{}} (X4:SortInstrs{}, \exists{SortBlockInstr{}} (X5:SortOptionalId{}, Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}, X4:SortInstrs{}, X5:SortOptionalId{}))))))), \or{SortBlockInstr{}} (\exists{SortBlockInstr{}} (X0:SortOptionalId{}, \exists{SortBlockInstr{}} (X1:SortTypeDecls{}, \exists{SortBlockInstr{}} (X2:SortInstrs{}, \exists{SortBlockInstr{}} (X3:SortOptionalId{}, Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortOptionalId{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}))))), \or{SortBlockInstr{}} (\exists{SortBlockInstr{}} (X0:SortIdentifier{}, \exists{SortBlockInstr{}} (X1:SortTypeDecls{}, \exists{SortBlockInstr{}} (X2:SortInstrs{}, \exists{SortBlockInstr{}} (X3:SortOptionalId{}, Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(X0:SortIdentifier{}, X1:SortTypeDecls{}, X2:SortInstrs{}, X3:SortOptionalId{}))))), \bottom{SortBlockInstr{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortExportDefn{}} (\exists{SortExportDefn{}} (X0:SortWasmString{}, \exists{SortExportDefn{}} (X1:SortExternval{}, Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(X0:SortWasmString{}, X1:SortExternval{}))), \bottom{SortExportDefn{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExportsCell{}} (\exists{SortExportsCell{}} (X0:SortMap{}, Lbl'-LT-'exports'-GT-'{}(X0:SortMap{})), \bottom{SortExportsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTestOp{}} (Lbleqz'Unds'WASM-NUMERIC'Unds'TestOp{}(), \bottom{SortTestOp{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortK{}}() [constructor{}()] // no junk
  axiom{} \or{SortNextFuncIdxCellOpt{}} (LblnoNextFuncIdxCell{}(), \or{SortNextFuncIdxCellOpt{}} (\exists{SortNextFuncIdxCellOpt{}} (Val:SortNextFuncIdxCell{}, inj{SortNextFuncIdxCell{}, SortNextFuncIdxCellOpt{}} (Val:SortNextFuncIdxCell{})), \bottom{SortNextFuncIdxCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTAddrCellOpt{}} (LblnoTAddrCell{}(), \or{SortTAddrCellOpt{}} (\exists{SortTAddrCellOpt{}} (Val:SortTAddrCell{}, inj{SortTAddrCell{}, SortTAddrCellOpt{}} (Val:SortTAddrCell{})), \bottom{SortTAddrCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTabAddrsCell{}} (\exists{SortTabAddrsCell{}} (X0:SortMap{}, Lbl'-LT-'tabAddrs'-GT-'{}(X0:SortMap{})), \bottom{SortTabAddrsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTabsCellFragment{}} (\exists{SortTabsCellFragment{}} (X0:SortTabInstCellMap{}, Lbl'-LT-'tabs'-GT-'-fragment{}(X0:SortTabInstCellMap{})), \bottom{SortTabsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLabelIdsCellOpt{}} (LblnoLabelIdsCell{}(), \or{SortLabelIdsCellOpt{}} (\exists{SortLabelIdsCellOpt{}} (Val:SortLabelIdsCell{}, inj{SortLabelIdsCell{}, SortLabelIdsCellOpt{}} (Val:SortLabelIdsCell{})), \bottom{SortLabelIdsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGValueCell{}} (\exists{SortGValueCell{}} (X0:SortVal{}, Lbl'-LT-'gValue'-GT-'{}(X0:SortVal{})), \bottom{SortGValueCell{}}()) [constructor{}()] // no junk
  axiom{R} \equals{SortVal{}, R} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortFValType{}, SortAValType{}} (K0:SortFValType{}),inj{SortFloat{}, SortNumber{}} (K1:SortFloat{})), inj{SortFVal{}, SortVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(K0:SortFValType{},K1:SortFloat{}))) [overload{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(inj{SortEmptyStmt{}, SortStmt{}} (K0:SortEmptyStmt{}),inj{SortEmptyStmts{}, SortStmts{}} (K1:SortEmptyStmts{})), inj{SortEmptyStmts{}, SortStmts{}} (Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(K0:SortEmptyStmt{},K1:SortEmptyStmts{}))) [overload{}(Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(), Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}())] // overloaded production
  axiom{R} \equals{SortDefns{}, R} (Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(inj{SortEmptyStmt{}, SortDefn{}} (K0:SortEmptyStmt{}),inj{SortEmptyStmts{}, SortDefns{}} (K1:SortEmptyStmts{})), inj{SortEmptyStmts{}, SortDefns{}} (Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(K0:SortEmptyStmt{},K1:SortEmptyStmts{}))) [overload{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(), Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}())] // overloaded production
  axiom{R} \equals{SortInstrs{}, R} (Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortEmptyStmt{}, SortInstr{}} (K0:SortEmptyStmt{}),inj{SortEmptyStmts{}, SortInstrs{}} (K1:SortEmptyStmts{})), inj{SortEmptyStmts{}, SortInstrs{}} (Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}(K0:SortEmptyStmt{},K1:SortEmptyStmts{}))) [overload{}(Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(), Lbl'UndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(inj{SortDefn{}, SortStmt{}} (K0:SortDefn{}),inj{SortDefns{}, SortStmts{}} (K1:SortDefns{})), inj{SortDefns{}, SortStmts{}} (Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(K0:SortDefn{},K1:SortDefns{}))) [overload{}(Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(), Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), inj{SortInstrs{}, SortStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}())] // overloaded production
  axiom{R} \equals{SortVal{}, R} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortIValType{}, SortAValType{}} (K0:SortIValType{}),inj{SortInt{}, SortNumber{}} (K1:SortInt{})), inj{SortIVal{}, SortVal{}} (Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(K0:SortIValType{},K1:SortInt{}))) [overload{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(), Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), inj{SortEmptyStmts{}, SortStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())] // overloaded production
  axiom{R} \equals{SortInstrs{}, R} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}(), inj{SortEmptyStmts{}, SortInstrs{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs'QuotRBraUnds'Instrs{}(), Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())] // overloaded production
  axiom{R} \equals{SortDefns{}, R} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}(), inj{SortEmptyStmts{}, SortDefns{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}(), Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(inj{SortInstr{}, SortStmt{}} (K0:SortInstr{}),inj{SortInstrs{}, SortStmts{}} (K1:SortInstrs{})), inj{SortInstrs{}, SortStmts{}} (Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(K0:SortInstr{},K1:SortInstrs{}))) [overload{}(Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(), Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}())] // overloaded production
  axiom{R} \equals{SortStmts{}, R} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), inj{SortDefns{}, SortStmts{}} (Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}())) [overload{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts'QuotRBraUnds'Stmts{}(), Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns'QuotRBraUnds'Defns{}())] // overloaded production

// rules
// rule #Ceil{Int,#SortParam}(`_%Int_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_=/=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dcda755f7621d3cbf6def16ff90a79d975e875fdf7aab624773c04aea203ff2c) anywhere() contentStartColumn(5) contentStartLine(434) org.kframework.attributes.Location(Location(434,5,436,66)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) sortParams([Q0])]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortInt{}, Q0}(Lbl'UndsPerc'Int'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
        \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), anywhere{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), sortParams{}("[Q0]"), contentStartLine{}("434"), contentStartColumn{}("5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(434,5,436,66)"), simplification{}(), UNIQUE'Unds'ID{}("dcda755f7621d3cbf6def16ff90a79d975e875fdf7aab624773c04aea203ff2c")]

// rule #Ceil{Int,#SortParam}(`_/Int_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_=/=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0a964c4dfe78d9b352cfe2ede43754dba264948f03b7e99658ae1a54d77fb812) anywhere() contentStartColumn(5) contentStartLine(428) org.kframework.attributes.Location(Location(428,5,430,66)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) sortParams([Q0])]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortInt{}, Q0}(Lbl'UndsSlsh'Int'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
        \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), anywhere{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), sortParams{}("[Q0]"), contentStartLine{}("428"), contentStartColumn{}("5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(428,5,430,66)"), simplification{}(), UNIQUE'Unds'ID{}("0a964c4dfe78d9b352cfe2ede43754dba264948f03b7e99658ae1a54d77fb812")]

// rule #Ceil{Int,#SortParam}(`_<<Int_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_>=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(21655bc57478509c755de1e4870520024527838c1c6f4c4c1ff839ef5b4c056e) anywhere() contentStartColumn(5) contentStartLine(452) org.kframework.attributes.Location(Location(452,5,454,65)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) sortParams([Q0])]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortInt{}, Q0}(Lbl'Unds-LT--LT-'Int'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
        \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'Unds-GT-Eqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), anywhere{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), sortParams{}("[Q0]"), contentStartLine{}("452"), contentStartColumn{}("5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(452,5,454,65)"), simplification{}(), UNIQUE'Unds'ID{}("21655bc57478509c755de1e4870520024527838c1c6f4c4c1ff839ef5b4c056e")]

// rule #Ceil{Int,#SortParam}(`_>>Int_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_>=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4586be95876e5408961eb2439b14d1d87ecaa8fde5caa0e8ff536eda60d808a2) anywhere() contentStartColumn(5) contentStartLine(446) org.kframework.attributes.Location(Location(446,5,448,65)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) sortParams([Q0])]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortInt{}, Q0}(Lbl'Unds-GT--GT-'Int'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
        \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'Unds-GT-Eqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), anywhere{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), sortParams{}("[Q0]"), contentStartLine{}("446"), contentStartColumn{}("5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(446,5,448,65)"), simplification{}(), UNIQUE'Unds'ID{}("4586be95876e5408961eb2439b14d1d87ecaa8fde5caa0e8ff536eda60d808a2")]

// rule #Ceil{Int,#SortParam}(`_modInt_`(@I1,@I2))=>#And{#SortParam}(#And{#SortParam}(#Equals{Bool,#SortParam}(`_=/=Int_`(@I2,#token("0","Int")),#token("true","Bool")),#Ceil{Int,#SortParam}(@I1)),#Ceil{Int,#SortParam}(@I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(05ecc3061ca55cad0d9e0c9f74e869a997390e37897421284f591aee70ac0b81) anywhere() contentStartColumn(5) contentStartLine(440) org.kframework.attributes.Location(Location(440,5,442,66)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) sortParams([Q0])]
  axiom{R,Q0} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{Q0,R} (
        \ceil{SortInt{}, Q0}(Lbl'Unds'modInt'Unds'{}(@VarI1:SortInt{},@VarI2:SortInt{})),
        \and{Q0}(\and{Q0}(\equals{SortBool{}, Q0}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(@VarI2:SortInt{},\dv{SortInt{}}("0")),\dv{SortBool{}}("true")),\ceil{SortInt{}, Q0}(@VarI1:SortInt{})),\ceil{SortInt{}, Q0}(@VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), anywhere{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), sortParams{}("[Q0]"), contentStartLine{}("440"), contentStartColumn{}("5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(440,5,442,66)"), simplification{}(), UNIQUE'Unds'ID{}("05ecc3061ca55cad0d9e0c9f74e869a997390e37897421284f591aee70ac0b81")]

// rule `#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,inj{Int,Index}(I))=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1c86bdc6221ec7499f398293899402171dd38c7c2169572db5a26b8b506bf2d2) contentStartColumn(10) contentStartLine(75) org.kframework.attributes.Location(Location(75,10,75,45)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},inj{SortInt{}, SortIndex{}}(VarI:SortInt{})),
        VarI:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("75"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(75,10,75,45)"), UNIQUE'Unds'ID{}("1c86bdc6221ec7499f398293899402171dd38c7c2169572db5a26b8b506bf2d2")]

// rule `#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,inj{Identifier,Index}(ID))=>`project:Int`(`Map:lookup`(IDS,inj{Identifier,KItem}(ID))) requires `_in_keys(_)_MAP_Bool_KItem_Map`(inj{Identifier,KItem}(ID),IDS) ensures #token("true","Bool") [UNIQUE_ID(15d2a271d506fdcf970b723b3bae5b7cd58a13159e01834ae5d827c0b23fca95) contentStartColumn(10) contentStartLine(144) org.kframework.attributes.Location(Location(144,10,145,31)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),VarIDS:SortMap{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})),
        Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{})),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("144"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(144,10,145,31)"), UNIQUE'Unds'ID{}("15d2a271d506fdcf970b723b3bae5b7cd58a13159e01834ae5d827c0b23fca95")]

// rule `#DS2Bytes(_)_WASM-DATA_Bytes_DataString`(DS)=>`String2Bytes(_)_BYTES-HOOKED_Bytes_String`(`#concatDS(_)_WASM-DATA_String_DataString`(DS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f638f0c91842ff1b43310c4a514931f4e049d888b87f0eb58c27cdd996b46549) contentStartColumn(10) contentStartLine(485) org.kframework.attributes.Location(Location(485,10,485,54)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'DS2Bytes'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'DataString{}(VarDS:SortDataString{}),
        LblString2Bytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'String{}(Lbl'Hash'concatDS'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString{}(VarDS:SortDataString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("485"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(485,10,485,54)"), UNIQUE'Unds'ID{}("f638f0c91842ff1b43310c4a514931f4e049d888b87f0eb58c27cdd996b46549")]

// rule `#asLocalType(_,_)_WASM_VecType_LocalDecls_ValTypes`(`.List{"___WASM_LocalDecls_LocalDecl_LocalDecls"}_LocalDecls`(.KList),VTYPES)=>`[_]_WASM-DATA_VecType_ValTypes`(VTYPES) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5f85ee55490ef5101d961df1cefa16e155e4a1429e46655d544136faf0fd7668) contentStartColumn(10) contentStartLine(636) org.kframework.attributes.Location(Location(636,10,636,101)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'asLocalType'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls'QuotRBraUnds'LocalDecls{}(),VarVTYPES:SortValTypes{}),
        Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarVTYPES:SortValTypes{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("636"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(636,10,636,101)"), UNIQUE'Unds'ID{}("5f85ee55490ef5101d961df1cefa16e155e4a1429e46655d544136faf0fd7668")]

// rule `#asLocalType(_,_)_WASM_VecType_LocalDecls_ValTypes`(`___WASM_LocalDecls_LocalDecl_LocalDecls`(`local__WASM_LocalDecl_ValTypes`(VTYPES'),LDECLS),VTYPES)=>`#asLocalType(_,_)_WASM_VecType_LocalDecls_ValTypes`(LDECLS,`_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(VTYPES,VTYPES')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ead5f5e3eac349ea3d6ccd436cb891a171fc8b46db41a646cd2797ce1c3ba605) contentStartColumn(10) contentStartLine(637) org.kframework.attributes.Location(Location(637,10,637,130)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'asLocalType'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Lbllocal'UndsUnds'WASM'Unds'LocalDecl'Unds'ValTypes{}(VarVTYPES'Apos':SortValTypes{}),VarLDECLS:SortLocalDecls{}),VarVTYPES:SortValTypes{}),
        Lbl'Hash'asLocalType'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(VarLDECLS:SortLocalDecls{},Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarVTYPES:SortValTypes{},VarVTYPES'Apos':SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("637"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(637,10,637,130)"), UNIQUE'Unds'ID{}("ead5f5e3eac349ea3d6ccd436cb891a171fc8b46db41a646cd2797ce1c3ba605")]

// rule `#asLocalType(_,_)_WASM_VecType_LocalDecls_ValTypes`(`___WASM_LocalDecls_LocalDecl_LocalDecls`(`local___WASM_LocalDecl_Identifier_AValType`(ID,VTYPE),LDECLS),VTYPES)=>`#asLocalType(_,_)_WASM_VecType_LocalDecls_ValTypes`(LDECLS,`_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(VTYPES,`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{NValType,ValType}(`{__}_WASM-DATA_NValType_Identifier_AValType`(ID,VTYPE)),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cc4cc606672abad036deadf29011fcc87e1b57b357800eb9678abf28855356bf) contentStartColumn(10) contentStartLine(638) org.kframework.attributes.Location(Location(638,10,638,145)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'asLocalType'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM'Unds'LocalDecls'Unds'LocalDecl'Unds'LocalDecls{}(Lbllocal'UndsUndsUnds'WASM'Unds'LocalDecl'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},VarVTYPE:SortAValType{}),VarLDECLS:SortLocalDecls{}),VarVTYPES:SortValTypes{}),
        Lbl'Hash'asLocalType'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(VarLDECLS:SortLocalDecls{},Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarVTYPES:SortValTypes{},Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortNValType{}, SortValType{}}(Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},VarVTYPE:SortAValType{})),Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("638"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(638,10,638,145)"), UNIQUE'Unds'ID{}("cc4cc606672abad036deadf29011fcc87e1b57b357800eb9678abf28855356bf")]

// rule `#bool(_)_WASM-DATA_Int_Bool`(B)=>#token("0","Int") requires `notBool_`(B) ensures #token("true","Bool") [UNIQUE_ID(389619d2779c0cab412de83d2c8108af3950e364147c4c08ad30f9077a00408a) contentStartColumn(10) contentStartLine(328) org.kframework.attributes.Location(Location(328,10,328,49)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarB:SortBool{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(VarB:SortBool{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("328"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(328,10,328,49)"), UNIQUE'Unds'ID{}("389619d2779c0cab412de83d2c8108af3950e364147c4c08ad30f9077a00408a")]

// rule `#bool(_)_WASM-DATA_Int_Bool`(B)=>#token("1","Int") requires B ensures #token("true","Bool") [UNIQUE_ID(bd24f019fe3a5b1096f8cafdbf54d8c886579e9357493cc53e9b7db78301dfa0) contentStartColumn(10) contentStartLine(327) org.kframework.attributes.Location(Location(327,10,327,41)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        VarB:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(VarB:SortBool{}),
        \dv{SortInt{}}("1")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("327"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(327,10,327,41)"), UNIQUE'Unds'ID{}("bd24f019fe3a5b1096f8cafdbf54d8c886579e9357493cc53e9b7db78301dfa0")]

// rule `#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,N))=>`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_modInt_`(N,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d1084c7b76da7fa541b1593ff7b9bd1e95cc0c5fc55d300a1a57d2ba9c537c1b) contentStartColumn(10) contentStartLine(275) org.kframework.attributes.Location(Location(275,10,275,64)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIVal{},R} (
        Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarN:SortInt{})),
        Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds'modInt'Unds'{}(VarN:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("275"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(275,10,275,64)"), UNIQUE'Unds'ID{}("d1084c7b76da7fa541b1593ff7b9bd1e95cc0c5fc55d300a1a57d2ba9c537c1b")]

// rule `#concatDS(_)_WASM-DATA_String_DataString`(DS)=>`#concatDS(_,_)_WASM-DATA_String_DataString_String`(DS,#token("\"\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0da430ae05c85fa8bd55d3285f5b028a55d77685259c2b72b174a06264a201a3) contentStartColumn(10) contentStartLine(475) org.kframework.attributes.Location(Location(475,10,475,50)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lbl'Hash'concatDS'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString{}(VarDS:SortDataString{}),
        Lbl'Hash'concatDS'LParUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString'Unds'String{}(VarDS:SortDataString{},\dv{SortString{}}(""))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("475"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(475,10,475,50)"), UNIQUE'Unds'ID{}("0da430ae05c85fa8bd55d3285f5b028a55d77685259c2b72b174a06264a201a3")]

// rule `#concatDS(_,_)_WASM-DATA_String_DataString_String`(`.List{"___WASM-DATA_DataString_WasmString_DataString"}_DataString`(.KList),S)=>S requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(79d74845326c0d8ed694452a87e25500f534a74281033acc5e1c17c4c72b58ab) contentStartColumn(10) contentStartLine(476) org.kframework.attributes.Location(Location(476,10,476,55)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lbl'Hash'concatDS'LParUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString'Unds'String{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString'QuotRBraUnds'DataString{}(),VarS:SortString{}),
        VarS:SortString{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("476"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(476,10,476,55)"), UNIQUE'Unds'ID{}("79d74845326c0d8ed694452a87e25500f534a74281033acc5e1c17c4c72b58ab")]

// rule `#concatDS(_,_)_WASM-DATA_String_DataString_String`(`___WASM-DATA_DataString_WasmString_DataString`(inj{WasmStringToken,WasmString}(WS),DS),S)=>`#concatDS(_,_)_WASM-DATA_String_DataString_String`(DS,`_+String__STRING_String_String_String`(S,`unescape(_)_WASM-DATA_String_String`(`#parseWasmString(_)_WASM-DATA_String_WasmStringToken`(WS)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8392e0c110c6bcb7cbf088cc05f386f55065602d1511ffc5045600ce41f428ca) contentStartColumn(10) contentStartLine(477) org.kframework.attributes.Location(Location(477,10,477,113)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lbl'Hash'concatDS'LParUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString'Unds'String{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'DataString'Unds'WasmString'Unds'DataString{}(inj{SortWasmStringToken{}, SortWasmString{}}(VarWS:SortWasmStringToken{}),VarDS:SortDataString{}),VarS:SortString{}),
        Lbl'Hash'concatDS'LParUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'DataString'Unds'String{}(VarDS:SortDataString{},Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarS:SortString{},Lblunescape'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'String{}(Lbl'Hash'parseWasmString'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'WasmStringToken{}(VarWS:SortWasmStringToken{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("477"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(477,10,477,113)"), UNIQUE'Unds'ID{}("8392e0c110c6bcb7cbf088cc05f386f55065602d1511ffc5045600ce41f428ca")]

// rule `#ctz(_)_WASM-NUMERIC_Int_Int`(#token("0","Int") #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(84e132c2a46cd86f4ab739c3ba14eebcb6b185432413e2c04fc684e76ef1717f) contentStartColumn(10) contentStartLine(50) org.kframework.attributes.Location(Location(50,10,50,22)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'ctz'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(\and{SortInt{}}(\dv{SortInt{}}("0"),Var'Unds'1:SortInt{})),
        Var'Unds'1:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("50"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,10,50,22)"), UNIQUE'Unds'ID{}("84e132c2a46cd86f4ab739c3ba14eebcb6b185432413e2c04fc684e76ef1717f")]

// rule `#ctz(_)_WASM-NUMERIC_Int_Int`(N)=>`#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`_modInt_`(N,#token("2","Int")),#token("1","Int")),#token("0","Int"),`_+Int_`(#token("1","Int"),`#ctz(_)_WASM-NUMERIC_Int_Int`(`_>>Int_`(N,#token("1","Int"))))) requires `_=/=Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(7bd4facb38cbdc709cc977c783219d5e34137a4d4bece1478fc27a5051b7f6db) contentStartColumn(10) contentStartLine(51) org.kframework.attributes.Location(Location(51,10,51,105)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'ctz'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(VarN:SortInt{}),
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("2")),\dv{SortInt{}}("1")),\dv{SortInt{}}("0"),Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Hash'ctz'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("51"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,10,51,105)"), UNIQUE'Unds'ID{}("7bd4facb38cbdc709cc977c783219d5e34137a4d4bece1478fc27a5051b7f6db")]

// rule `#drop(_,_)_WASM-DATA_ValStack_ValTypes_ValStack`(`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList),VALSTACK)=>VALSTACK requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0b0468baa7af39732628fa9b1f8f9f4939edcaae98c58e01c3e46c0eaaa829ef) contentStartColumn(10) contentStartLine(364) org.kframework.attributes.Location(Location(364,10,364,72)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes'Unds'ValStack{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}(),VarVALSTACK:SortValStack{}),
        VarVALSTACK:SortValStack{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("364"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(364,10,364,72)"), UNIQUE'Unds'ID{}("0b0468baa7af39732628fa9b1f8f9f4939edcaae98c58e01c3e46c0eaaa829ef")]

// rule `#drop(_,_)_WASM-DATA_ValStack_ValTypes_ValStack`(`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{AValType,ValType}(TYPE),VTYPES),`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(TYPE,VAL),VALSTACK))=>`#drop(_,_)_WASM-DATA_ValStack_ValTypes_ValStack`(VTYPES,VALSTACK) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(51eb414ad2bad173386cd76d167a62927cb01f4987021d1c1d234feb736d8e52) contentStartColumn(10) contentStartLine(365) org.kframework.attributes.Location(Location(365,10,365,96)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes'Unds'ValStack{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortAValType{}, SortValType{}}(VarTYPE:SortAValType{}),VarVTYPES:SortValTypes{}),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYPE:SortAValType{},VarVAL:SortNumber{}),VarVALSTACK:SortValStack{})),
        Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes'Unds'ValStack{}(VarVTYPES:SortValTypes{},VarVALSTACK:SortValStack{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("365"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(365,10,365,96)"), UNIQUE'Unds'ID{}("51eb414ad2bad173386cd76d167a62927cb01f4987021d1c1d234feb736d8e52")]

// rule `#encodeUTF8(_,_)_WASM-DATA_Bytes_Int_Endianness`(I,E)=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(I,bigEndianBytes(.KList),unsignedBytes(.KList)) requires `_<=Int_`(I,#token("127","Int")) ensures #token("true","Bool") [UNIQUE_ID(1575a2182ee06f8ab635b4b2213094c9e8f59425a2a18a8bd1d14005a6921ea2) contentStartColumn(10) contentStartLine(439) org.kframework.attributes.Location(Location(439,10,439,79)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("127")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'encodeUTF8'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int'Unds'Endianness{}(VarI:SortInt{},VarE:SortEndianness{}),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(VarI:SortInt{},LblbigEndianBytes{}(),LblunsignedBytes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("439"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(439,10,439,79)"), UNIQUE'Unds'ID{}("1575a2182ee06f8ab635b4b2213094c9e8f59425a2a18a8bd1d14005a6921ea2")]

// rule `#encodeUTF8(_,_)_WASM-DATA_Bytes_Int_Endianness`(I,E)=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(`_+Int_`(`_+Int_`(`_+Int_`(`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("1835008","Int")),#token("18","Int")),#token("240","Int")),#token("24","Int")),`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("258048","Int")),#token("12","Int")),#token("128","Int")),#token("16","Int"))),`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("4032","Int")),#token("6","Int")),#token("128","Int")),#token("8","Int"))),`_+Int_`(`_&Int_`(I,#token("63","Int")),#token("128","Int"))),bigEndianBytes(.KList),unsignedBytes(.KList)) requires `_andBool_`(`_>=Int_`(I,#token("65536","Int")),`_<=Int_`(I,#token("1114111","Int"))) ensures #token("true","Bool") [UNIQUE_ID(3bbc6a6787c91cc2e45bd2400ab971b03dc13f341ac82d3fdee5d7f09dec1040) contentStartColumn(10) contentStartLine(444) org.kframework.attributes.Location(Location(444,10,445,53)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("65536")),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1114111"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'encodeUTF8'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int'Unds'Endianness{}(VarI:SortInt{},VarE:SortEndianness{}),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1835008")),\dv{SortInt{}}("18")),\dv{SortInt{}}("240")),\dv{SortInt{}}("24")),Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("258048")),\dv{SortInt{}}("12")),\dv{SortInt{}}("128")),\dv{SortInt{}}("16"))),Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("4032")),\dv{SortInt{}}("6")),\dv{SortInt{}}("128")),\dv{SortInt{}}("8"))),Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("63")),\dv{SortInt{}}("128"))),LblbigEndianBytes{}(),LblunsignedBytes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("444"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(444,10,445,53)"), UNIQUE'Unds'ID{}("3bbc6a6787c91cc2e45bd2400ab971b03dc13f341ac82d3fdee5d7f09dec1040")]

// rule `#encodeUTF8(_,_)_WASM-DATA_Bytes_Int_Endianness`(I,E)=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(`_+Int_`(`_+Int_`(`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("61440","Int")),#token("12","Int")),#token("224","Int")),#token("16","Int")),`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("4032","Int")),#token("6","Int")),#token("128","Int")),#token("8","Int"))),`_+Int_`(`_&Int_`(I,#token("63","Int")),#token("128","Int"))),bigEndianBytes(.KList),unsignedBytes(.KList)) requires `_andBool_`(`_>=Int_`(I,#token("2048","Int")),`_<=Int_`(I,#token("65535","Int"))) ensures #token("true","Bool") [UNIQUE_ID(be73b88ada00406e164b459d8e2688b5239896a10c60dae064fe914307542e89) contentStartColumn(10) contentStartLine(442) org.kframework.attributes.Location(Location(442,10,443,51)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("2048")),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("65535"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'encodeUTF8'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int'Unds'Endianness{}(VarI:SortInt{},VarE:SortEndianness{}),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("61440")),\dv{SortInt{}}("12")),\dv{SortInt{}}("224")),\dv{SortInt{}}("16")),Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("4032")),\dv{SortInt{}}("6")),\dv{SortInt{}}("128")),\dv{SortInt{}}("8"))),Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("63")),\dv{SortInt{}}("128"))),LblbigEndianBytes{}(),LblunsignedBytes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("442"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(442,10,443,51)"), UNIQUE'Unds'ID{}("be73b88ada00406e164b459d8e2688b5239896a10c60dae064fe914307542e89")]

// rule `#encodeUTF8(_,_)_WASM-DATA_Bytes_Int_Endianness`(I,E)=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(`_+Int_`(`_<<Int_`(`_+Int_`(`_>>Int_`(`_&Int_`(I,#token("1984","Int")),#token("6","Int")),#token("192","Int")),#token("8","Int")),`_+Int_`(`_&Int_`(I,#token("63","Int")),#token("128","Int"))),bigEndianBytes(.KList),unsignedBytes(.KList)) requires `_andBool_`(`_>=Int_`(I,#token("128","Int")),`_<=Int_`(I,#token("2047","Int"))) ensures #token("true","Bool") [UNIQUE_ID(7ceffff59d91bfa535bdb52873d8e5cf3c548425df4481766c15e3d12fdbb8b0) contentStartColumn(10) contentStartLine(440) org.kframework.attributes.Location(Location(440,10,441,50)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("128")),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("2047"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Hash'encodeUTF8'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int'Unds'Endianness{}(VarI:SortInt{},VarE:SortEndianness{}),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1984")),\dv{SortInt{}}("6")),\dv{SortInt{}}("192")),\dv{SortInt{}}("8")),Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsAnd-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("63")),\dv{SortInt{}}("128"))),LblbigEndianBytes{}(),LblunsignedBytes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("440"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(440,10,441,50)"), UNIQUE'Unds'ID{}("7ceffff59d91bfa535bdb52873d8e5cf3c548425df4481766c15e3d12fdbb8b0")]

// rule `#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(`param_WASM_TypeKeyWord`(.KList) #as _1,`___WASM_TypeDecls_TypeDecl_TypeDecls`(`param___WASM_TypeDecl_Identifier_AValType`(ID,VTYPE),TDECLS),TYPES)=>`#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(_1,TDECLS,`_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(TYPES,`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{NValType,ValType}(`{__}_WASM-DATA_NValType_Identifier_AValType`(ID,VTYPE)),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e7fc723c77ab6d4ba45096d1465cfa8fa1b9cc192faf93362b8e6639a8720cce) contentStartColumn(10) contentStartLine(573) org.kframework.attributes.Location(Location(573,10,573,158)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(\and{SortTypeKeyWord{}}(Lblparam'Unds'WASM'Unds'TypeKeyWord{}(),Var'Unds'1:SortTypeKeyWord{}),Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},VarVTYPE:SortAValType{}),VarTDECLS:SortTypeDecls{}),VarTYPES:SortValTypes{}),
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(Var'Unds'1:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{},Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarTYPES:SortValTypes{},Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortNValType{}, SortValType{}}(Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},VarVTYPE:SortAValType{})),Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("573"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(573,10,573,158)"), UNIQUE'Unds'ID{}("e7fc723c77ab6d4ba45096d1465cfa8fa1b9cc192faf93362b8e6639a8720cce")]

// rule `#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(`result_WASM_TypeKeyWord`(.KList) #as _2,`___WASM_TypeDecls_TypeDecl_TypeDecls`(`param___WASM_TypeDecl_Identifier_AValType`(ID,_0),TDECLS),TYPES)=>`#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(_2,TDECLS,TYPES) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d8dcae6cbb978f30f480fdfd6b68280eebe5c15ed7f857fb2624bdc5914199d8) contentStartColumn(10) contentStartLine(572) org.kframework.attributes.Location(Location(572,10,572,133)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(\and{SortTypeKeyWord{}}(Lblresult'Unds'WASM'Unds'TypeKeyWord{}(),Var'Unds'2:SortTypeKeyWord{}),Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lblparam'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},Var'Unds'0:SortAValType{}),VarTDECLS:SortTypeDecls{}),VarTYPES:SortValTypes{}),
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(Var'Unds'2:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{},VarTYPES:SortValTypes{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("572"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(572,10,572,133)"), UNIQUE'Unds'ID{}("d8dcae6cbb978f30f480fdfd6b68280eebe5c15ed7f857fb2624bdc5914199d8")]

// rule `#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(TKW,`___WASM_TypeDecls_TypeDecl_TypeDecls`(`___WASM_TypeDecl_TypeKeyWord_ValTypes`(TKW,TYPES'),TDECLS),TYPES)=>`#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(TKW,TDECLS,`_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(TYPES,TYPES')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(853e52c60180da104ea4270b41f33cf8170a8763d1db358938c825d51b2cf17a) contentStartColumn(10) contentStartLine(570) org.kframework.attributes.Location(Location(570,10,571,91)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(VarTKW:SortTypeKeyWord{},Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(VarTKW:SortTypeKeyWord{},VarTYPES'Apos':SortValTypes{}),VarTDECLS:SortTypeDecls{}),VarTYPES:SortValTypes{}),
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(VarTKW:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{},Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarTYPES:SortValTypes{},VarTYPES'Apos':SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("570"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(570,10,571,91)"), UNIQUE'Unds'ID{}("853e52c60180da104ea4270b41f33cf8170a8763d1db358938c825d51b2cf17a")]

// rule `#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(TKW,`___WASM_TypeDecls_TypeDecl_TypeDecls`(`___WASM_TypeDecl_TypeKeyWord_ValTypes`(TKW',_0),TDECLS),TYPES)=>`#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(TKW,TDECLS,TYPES) requires `_=/=K_`(inj{TypeKeyWord,KItem}(TKW),inj{TypeKeyWord,KItem}(TKW')) ensures #token("true","Bool") [UNIQUE_ID(7e27cae0803ce13f3cb0f07a3a65ee1a767cd6b6c3f32f1a849d8b10c2459a24) contentStartColumn(10) contentStartLine(569) org.kframework.attributes.Location(Location(569,10,569,141)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortTypeKeyWord{}, SortKItem{}}(VarTKW:SortTypeKeyWord{}),dotk{}()),kseq{}(inj{SortTypeKeyWord{}, SortKItem{}}(VarTKW'Apos':SortTypeKeyWord{}),dotk{}())),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(VarTKW:SortTypeKeyWord{},Lbl'UndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls{}(Lbl'UndsUndsUnds'WASM'Unds'TypeDecl'Unds'TypeKeyWord'Unds'ValTypes{}(VarTKW'Apos':SortTypeKeyWord{},Var'Unds'0:SortValTypes{}),VarTDECLS:SortTypeDecls{}),VarTYPES:SortValTypes{}),
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(VarTKW:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{},VarTYPES:SortValTypes{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("569"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(569,10,569,141)"), UNIQUE'Unds'ID{}("7e27cae0803ce13f3cb0f07a3a65ee1a767cd6b6c3f32f1a849d8b10c2459a24")]

// rule `#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(_0,`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList),TYPES)=>`[_]_WASM-DATA_VecType_ValTypes`(TYPES) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c8b33c8d7c2587491a564a9b2647f54ca394e4a0c0dca900990165723e232ecb) contentStartColumn(10) contentStartLine(568) org.kframework.attributes.Location(Location(568,10,568,95)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(Var'Unds'0:SortTypeKeyWord{},Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'TypeDecls'Unds'TypeDecl'Unds'TypeDecls'QuotRBraUnds'TypeDecls{}(),VarTYPES:SortValTypes{}),
        Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarTYPES:SortValTypes{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("568"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(568,10,568,95)"), UNIQUE'Unds'ID{}("c8b33c8d7c2587491a564a9b2647f54ca394e4a0c0dca900990165723e232ecb")]

// rule `#get(_,_)_WASM-DATA_Int_ByteMap_Int`(`#set(_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int`(BMAP,IDX',VAL),IDX)=>VAL requires `_==Int_`(IDX,IDX') ensures #token("true","Bool") [UNIQUE_ID(3b0d40dbae20f90a2d036af1ffc070118f8724dded00af97420c341546309799) contentStartColumn(10) contentStartLine(287) org.kframework.attributes.Location(Location(287,10,287,93)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarIDX:SortInt{},VarIDX'Apos':SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(Lbl'Hash'set'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBMAP:SortByteMap{},VarIDX'Apos':SortInt{},VarVAL:SortInt{}),VarIDX:SortInt{}),
        VarVAL:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("287"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(287,10,287,93)"), simplification{}(), UNIQUE'Unds'ID{}("3b0d40dbae20f90a2d036af1ffc070118f8724dded00af97420c341546309799")]

// rule `#get(_,_)_WASM-DATA_Int_ByteMap_Int`(`#set(_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int`(BMAP,IDX',VAL),IDX)=>`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BMAP,IDX) requires `notBool_`(`_==Int_`(IDX,IDX')) ensures #token("true","Bool") [UNIQUE_ID(997a07487807aa0ed70fee1b206d846cc5a0f5ee97d72d717a0833b370a8eefc) contentStartColumn(10) contentStartLine(288) org.kframework.attributes.Location(Location(288,10,288,93)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarIDX:SortInt{},VarIDX'Apos':SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(Lbl'Hash'set'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBMAP:SortByteMap{},VarIDX'Apos':SortInt{},VarVAL:SortInt{}),VarIDX:SortInt{}),
        Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBMAP:SortByteMap{},VarIDX:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("288"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(288,10,288,93)"), simplification{}(), UNIQUE'Unds'ID{}("997a07487807aa0ed70fee1b206d846cc5a0f5ee97d72d717a0833b370a8eefc")]

// rule `#get(_,_)_WASM-DATA_Int_ByteMap_Int`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(M),KEY)=>`project:Int`(`Map:lookup`(M,inj{Int,KItem}(KEY))) requires `_in_keys(_)_MAP_Bool_KItem_Map`(inj{Int,KItem}(KEY),M) ensures #token("true","Bool") [UNIQUE_ID(7a1135ba5c66765ec798da7b6f0b364c4a5630d41d187a0b64e8069a88377709) concrete() contentStartColumn(10) contentStartLine(532) org.kframework.attributes.Location(Location(532,10,532,88)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortInt{}, SortKItem{}}(VarKEY:SortInt{}),VarM:SortMap{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(VarM:SortMap{}),VarKEY:SortInt{}),
        Lblproject'Coln'Int{}(kseq{}(LblMap'Coln'lookup{}(VarM:SortMap{},inj{SortInt{}, SortKItem{}}(VarKEY:SortInt{})),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), concrete{}(), contentStartLine{}("532"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(532,10,532,88)"), UNIQUE'Unds'ID{}("7a1135ba5c66765ec798da7b6f0b364c4a5630d41d187a0b64e8069a88377709")]

// rule `#get(_,_)_WASM-DATA_Int_ByteMap_Int`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(M),KEY)=>#token("0","Int") requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(inj{Int,KItem}(KEY),M)) ensures #token("true","Bool") [UNIQUE_ID(bf82dadd590bc910eebda768226526b9ee6efd1c3047a52e2a34fcf6a5b0d4ab) contentStartColumn(10) contentStartLine(533) org.kframework.attributes.Location(Location(533,10,533,88)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortInt{}, SortKItem{}}(VarKEY:SortInt{}),VarM:SortMap{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(VarM:SortMap{}),VarKEY:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("533"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(533,10,533,88)"), UNIQUE'Unds'ID{}("bf82dadd590bc910eebda768226526b9ee6efd1c3047a52e2a34fcf6a5b0d4ab")]

// rule `#getElemSegment(_,_)_WASM-DATA_Index_ElemSegment_Int`(`___WASM-DATA_ElemSegment_Index_ElemSegment`(E,ES),I)=>`#getElemSegment(_,_)_WASM-DATA_Index_ElemSegment_Int`(ES,`_-Int_`(I,#token("1","Int"))) requires `_>Int_`(I,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(e4603346a5c493f51dce2e9d6aa96ab88ea5accefc296c994aff1a4cc946b1fd) contentStartColumn(10) contentStartLine(94) org.kframework.attributes.Location(Location(94,10,94,85)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortIndex{},R} (
        Lbl'Hash'getElemSegment'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Index'Unds'ElemSegment'Unds'Int{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(VarE:SortIndex{},VarES:SortElemSegment{}),VarI:SortInt{}),
        Lbl'Hash'getElemSegment'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Index'Unds'ElemSegment'Unds'Int{}(VarES:SortElemSegment{},Lbl'Unds'-Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("94"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(94,10,94,85)"), UNIQUE'Unds'ID{}("e4603346a5c493f51dce2e9d6aa96ab88ea5accefc296c994aff1a4cc946b1fd")]

// rule `#getElemSegment(_,_)_WASM-DATA_Index_ElemSegment_Int`(`___WASM-DATA_ElemSegment_Index_ElemSegment`(E,ES),#token("0","Int"))=>E requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(40c3a23b6cc6becd0f63b1ceeb13149ade06dad31bcb05f022cffab810a2b08d) contentStartColumn(10) contentStartLine(93) org.kframework.attributes.Location(Location(93,10,93,39)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIndex{},R} (
        Lbl'Hash'getElemSegment'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Index'Unds'ElemSegment'Unds'Int{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(VarE:SortIndex{},VarES:SortElemSegment{}),\dv{SortInt{}}("0")),
        VarE:SortIndex{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("93"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(93,10,93,39)"), UNIQUE'Unds'ID{}("40c3a23b6cc6becd0f63b1ceeb13149ade06dad31bcb05f022cffab810a2b08d")]

// rule `#getOffset(_)_WASM_Int_MemArg`(`___WASM_MemArg_OffsetArg_AlignArg`(`offset=__WASM_OffsetArg_Int`(OS),_0))=>OS requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0b1a7fc7071b61ea4778d202b07ae5b886c56dc606a16003612719703ee9e60f) contentStartColumn(10) contentStartLine(1105) org.kframework.attributes.Location(Location(1105,10,1105,49)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getOffset'LParUndsRParUnds'WASM'Unds'Int'Unds'MemArg{}(Lbl'UndsUndsUnds'WASM'Unds'MemArg'Unds'OffsetArg'Unds'AlignArg{}(Lbloffset'EqlsUndsUnds'WASM'Unds'OffsetArg'Unds'Int{}(VarOS:SortInt{}),Var'Unds'0:SortAlignArg{})),
        VarOS:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1105"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1105,10,1105,49)"), UNIQUE'Unds'ID{}("0b1a7fc7071b61ea4778d202b07ae5b886c56dc606a16003612719703ee9e60f")]

// rule `#getOffset(_)_WASM_Int_MemArg`(inj{AlignArg,MemArg}(_0))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d47df6fca462b7a293c8daca0f943253fd9b3df66bf61de874dd07a2f5456989) contentStartColumn(10) contentStartLine(1103) org.kframework.attributes.Location(Location(1103,10,1103,48)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getOffset'LParUndsRParUnds'WASM'Unds'Int'Unds'MemArg{}(inj{SortAlignArg{}, SortMemArg{}}(Var'Unds'0:SortAlignArg{})),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1103"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1103,10,1103,48)"), UNIQUE'Unds'ID{}("d47df6fca462b7a293c8daca0f943253fd9b3df66bf61de874dd07a2f5456989")]

// rule `#getOffset(_)_WASM_Int_MemArg`(inj{OffsetArg,MemArg}(`offset=__WASM_OffsetArg_Int`(OS)))=>OS requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c457743be6578f702d99ade0925a476fbe3db3e54d5d2082895fe2e8c7567463) contentStartColumn(10) contentStartLine(1104) org.kframework.attributes.Location(Location(1104,10,1104,49)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getOffset'LParUndsRParUnds'WASM'Unds'Int'Unds'MemArg{}(inj{SortOffsetArg{}, SortMemArg{}}(Lbloffset'EqlsUndsUnds'WASM'Unds'OffsetArg'Unds'Int{}(VarOS:SortInt{}))),
        VarOS:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1104"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1104,10,1104,49)"), UNIQUE'Unds'ID{}("c457743be6578f702d99ade0925a476fbe3db3e54d5d2082895fe2e8c7567463")]

// rule `#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,ADDR,WIDTH)=>`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BM,ADDR) requires `_==Int_`(WIDTH,#token("1","Int")) ensures `_andBool_`(`_<=Int_`(#token("0","Int"),`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BM,ADDR)),`_<Int_`(`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BM,ADDR),#token("256","Int"))) [UNIQUE_ID(03bd0f3930739b2c0989926cd6e49f386a1c235d15419cc9070c4ed888455279) contentStartColumn(10) contentStartLine(304) org.kframework.attributes.Location(Location(304,10,307,39)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K "ensures" K [klabel(#ruleRequiresEnsures) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("1")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},VarWIDTH:SortInt{}),
        Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{})),
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{})),Lbl'Unds-LT-'Int'Unds'{}(Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{}),\dv{SortInt{}}("256"))),
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K \"ensures\" K [klabel(#ruleRequiresEnsures) symbol()]"), contentStartLine{}("304"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(304,10,307,39)"), simplification{}(), UNIQUE'Unds'ID{}("03bd0f3930739b2c0989926cd6e49f386a1c235d15419cc9070c4ed888455279")]

// rule `#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,START,WIDTH)=>`_+Int_`(`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BM,START),`_*Int_`(`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,`_+Int_`(START,#token("1","Int")),`_-Int_`(WIDTH,#token("1","Int"))),#token("256","Int"))) requires `_>Int_`(WIDTH,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(d41b425111bc357239c229aca0196fd1690364fa756c817dce19c9a83a7aa274) concrete() contentStartColumn(10) contentStartLine(521) org.kframework.attributes.Location(Location(521,10,522,37)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarSTART:SortInt{},VarWIDTH:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBM:SortByteMap{},VarSTART:SortInt{}),Lbl'UndsStar'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},Lbl'UndsPlus'Int'Unds'{}(VarSTART:SortInt{},\dv{SortInt{}}("1")),Lbl'Unds'-Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("1"))),\dv{SortInt{}}("256")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), concrete{}(), contentStartLine{}("521"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(521,10,522,37)"), UNIQUE'Unds'ID{}("d41b425111bc357239c229aca0196fd1690364fa756c817dce19c9a83a7aa274")]

// rule `#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,START,WIDTH)=>#token("0","Int") requires `notBool_`(`_>Int_`(WIDTH,#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(9821d56981f97f3160e642e79efeb50fb864919c2f87b86682b2236fa148e14a) concrete() contentStartColumn(10) contentStartLine(519) org.kframework.attributes.Location(Location(519,10,520,38)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarSTART:SortInt{},VarWIDTH:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), concrete{}(), contentStartLine{}("519"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(519,10,520,38)"), UNIQUE'Unds'ID{}("9821d56981f97f3160e642e79efeb50fb864919c2f87b86682b2236fa148e14a")]

// rule `#growthAllowed(_,_)_WASM_Bool_Int_OptionalInt`(SIZE,`.Int_WASM-DATA_OptionalInt`(.KList))=>`_<=Int_`(SIZE,`#maxMemorySize()_WASM_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ebc03e0ac55d05e60f698d21da16bc6354d52d789d19ed7645a5d9ca45c9c37) contentStartColumn(10) contentStartLine(1176) org.kframework.attributes.Location(Location(1176,10,1176,68)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(VarSIZE:SortInt{},Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}()),
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1176"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1176,10,1176,68)"), UNIQUE'Unds'ID{}("7ebc03e0ac55d05e60f698d21da16bc6354d52d789d19ed7645a5d9ca45c9c37")]

// rule `#growthAllowed(_,_)_WASM_Bool_Int_OptionalInt`(SIZE,inj{Int,OptionalInt}(I))=>`_andBool_`(`#growthAllowed(_,_)_WASM_Bool_Int_OptionalInt`(SIZE,`.Int_WASM-DATA_OptionalInt`(.KList)),`_<=Int_`(SIZE,I)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(80e97511058058f256a154c6b7d4a77500e21650053ba791610b9f61facccbda) contentStartColumn(10) contentStartLine(1177) org.kframework.attributes.Location(Location(1177,10,1177,88)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(VarSIZE:SortInt{},inj{SortInt{}, SortOptionalInt{}}(VarI:SortInt{})),
        Lbl'Unds'andBool'Unds'{}(Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(VarSIZE:SortInt{},Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}()),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarSIZE:SortInt{},VarI:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1177"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1177,10,1177,88)"), UNIQUE'Unds'ID{}("80e97511058058f256a154c6b7d4a77500e21650053ba791610b9f61facccbda")]

// rule `#idxCloseBracket(_,_)_WASM-DATA_Int_String_Int`(S,I)=>I requires `_==String__STRING_Bool_String_String`(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,I,`_+Int_`(I,#token("1","Int"))),#token("\"}\"","String")) ensures #token("true","Bool") [UNIQUE_ID(d9baa749b07c809bc219c02f1c66d5fbf68524900ff5f89831f04959673c4f86) contentStartColumn(10) contentStartLine(434) org.kframework.attributes.Location(Location(434,10,434,123)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarI:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1"))),\dv{SortString{}}("}")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(VarS:SortString{},VarI:SortInt{}),
        VarI:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("434"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(434,10,434,123)"), UNIQUE'Unds'ID{}("d9baa749b07c809bc219c02f1c66d5fbf68524900ff5f89831f04959673c4f86")]

// rule `#idxCloseBracket(_,_)_WASM-DATA_Int_String_Int`(S,I)=>`#idxCloseBracket(_,_)_WASM-DATA_Int_String_Int`(S,`_+Int_`(I,#token("1","Int"))) requires `_=/=String__STRING_Bool_String_String`(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,I,`_+Int_`(I,#token("1","Int"))),#token("\"}\"","String")) ensures #token("true","Bool") [UNIQUE_ID(68407df153043dc6efd02318a3005d122b4f3206c7e54134c811afa0491c41af) contentStartColumn(10) contentStartLine(435) org.kframework.attributes.Location(Location(435,10,435,123)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarI:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1"))),\dv{SortString{}}("}")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(VarS:SortString{},VarI:SortInt{}),
        Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("435"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(435,10,435,123)"), UNIQUE'Unds'ID{}("68407df153043dc6efd02318a3005d122b4f3206c7e54134c811afa0491c41af")]

// rule `#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`{K}(C,B1,_0)=>B1 requires C ensures #token("true","Bool") [UNIQUE_ID(b40db17b830ee9bc7ad48d91713b0acfd528a4caa7b9f56b2654645f58b2f21f) contentStartColumn(8) contentStartLine(869) org.kframework.attributes.Location(Location(869,8,869,59)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        VarC:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortK{},R} (
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(VarC:SortBool{},VarB1:SortK{},Var'Unds'0:SortK{}),
        VarB1:SortK{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("869"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(869,8,869,59)"), UNIQUE'Unds'ID{}("b40db17b830ee9bc7ad48d91713b0acfd528a4caa7b9f56b2654645f58b2f21f")]

// rule `#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`{K}(C,_0,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [UNIQUE_ID(c58758cb7cd533229481b46197a7bcc89c827d31024156fac406fb13a31d73b2) contentStartColumn(8) contentStartLine(870) org.kframework.attributes.Location(Location(870,8,870,67)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarC:SortBool{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortK{},R} (
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(VarC:SortBool{},Var'Unds'0:SortK{},VarB2:SortK{}),
        VarB2:SortK{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("870"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(870,8,870,67)"), UNIQUE'Unds'ID{}("c58758cb7cd533229481b46197a7bcc89c827d31024156fac406fb13a31d73b2")]

// rule `#inSignedRange(_,_)_KWASM-LEMMAS_Bool_IValType_Int`(ITYPE,I)=>`_andBool_`(`_<=Int_`(`#minSigned(_)_KWASM-LEMMAS_Int_IValType`(ITYPE),I),`_<Int_`(I,`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d3d8db29a9b3053009d04935c04c3816ea4972c5a16d723665edbbd95c23fdd) contentStartColumn(10) contentStartLine(228) org.kframework.attributes.Location(Location(228,10,228,94)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'inSignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI:SortInt{}),
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'Hash'minSigned'LParUndsRParUnds'KWASM-LEMMAS'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),VarI:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarI:SortInt{},Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("228"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(228,10,228,94)"), UNIQUE'Unds'ID{}("2d3d8db29a9b3053009d04935c04c3816ea4972c5a16d723665edbbd95c23fdd")]

// rule `#inUnsignedRange(_,_)_KWASM-LEMMAS_Bool_IValType_Int`(ITYPE,I)=>`_andBool_`(`_<=Int_`(#token("0","Int"),I),`_<Int_`(I,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6184ff630d8fa8ee7e6b8356ea588cf893c4810ba4d06fac016d8ee006a1bf07) contentStartColumn(10) contentStartLine(227) org.kframework.attributes.Location(Location(227,10,227,94)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'inUnsignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI:SortInt{}),
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarI:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarI:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("227"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(227,10,227,94)"), UNIQUE'Unds'ID{}("6184ff630d8fa8ee7e6b8356ea588cf893c4810ba4d06fac016d8ee006a1bf07")]

// rule `#isByte(_)_KWASM-LEMMAS_Bool_KItem`(I)=>#token("false","Bool") requires `notBool_`(isInt(I)) ensures #token("true","Bool") [UNIQUE_ID(9214188fcea2c1c1c5dbedc42e57e6cbd264511a077f53925b0325586ad3a8c8) contentStartColumn(10) contentStartLine(263) org.kframework.attributes.Location(Location(263,10,264,32)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblisInt{}(kseq{}(VarI:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isByte'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'KItem{}(VarI:SortKItem{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("263"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(263,10,264,32)"), UNIQUE'Unds'ID{}("9214188fcea2c1c1c5dbedc42e57e6cbd264511a077f53925b0325586ad3a8c8")]

// rule `#isByte(_)_KWASM-LEMMAS_Bool_KItem`(inj{Int,KItem}(I))=>#token("false","Bool") requires `notBool_`(`_andBool_`(`_<=Int_`(#token("0","Int"),I),`_<=Int_`(I,#token("255","Int")))) ensures #token("true","Bool") [UNIQUE_ID(e213ce4cbbb46dccc4a48988fac8a99650b94ada9fea240804496e5c0341aac6) contentStartColumn(10) contentStartLine(260) org.kframework.attributes.Location(Location(260,10,262,45)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarI:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("255")))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isByte'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'KItem{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{})),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("260"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(260,10,262,45)"), UNIQUE'Unds'ID{}("e213ce4cbbb46dccc4a48988fac8a99650b94ada9fea240804496e5c0341aac6")]

// rule `#isByte(_)_KWASM-LEMMAS_Bool_KItem`(inj{Int,KItem}(I))=>#token("true","Bool") requires `_andBool_`(`_<=Int_`(#token("0","Int"),I),`_<=Int_`(I,#token("255","Int"))) ensures #token("true","Bool") [UNIQUE_ID(1ff1e663751504e2a03a2d504c706c27c8d1cc24c3e872db95af32a024b89b3f) contentStartColumn(10) contentStartLine(257) org.kframework.attributes.Location(Location(257,10,259,27)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarI:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("255"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isByte'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'KItem{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("257"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,10,259,27)"), UNIQUE'Unds'ID{}("1ff1e663751504e2a03a2d504c706c27c8d1cc24c3e872db95af32a024b89b3f")]

// rule `#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(`.Map`(.KList)))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4b07632408a3d27936aa3f542214e1a6dc4fd849287109686190036ebc15b860) contentStartColumn(10) contentStartLine(253) org.kframework.attributes.Location(Location(253,10,253,56)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(Lbl'Stop'Map{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("253"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(253,10,253,56)"), UNIQUE'Unds'ID{}("4b07632408a3d27936aa3f542214e1a6dc4fd849287109686190036ebc15b860")]

// rule `#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(`Map:update`(M,_0,V)))=>`_andBool_`(`#isByte(_)_KWASM-LEMMAS_Bool_KItem`(V),`#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(M))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aa11362c63299d8fc6921c816e7da38512512c5acde5c22cbbd9aab22bcb2937) contentStartColumn(10) contentStartLine(255) org.kframework.attributes.Location(Location(255,10,255,98)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(LblMap'Coln'update{}(VarM:SortMap{},Var'Unds'0:SortKItem{},VarV:SortKItem{}))),
        Lbl'Unds'andBool'Unds'{}(Lbl'Hash'isByte'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'KItem{}(VarV:SortKItem{}),Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(VarM:SortMap{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("255"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(255,10,255,98)"), simplification{}(), UNIQUE'Unds'ID{}("aa11362c63299d8fc6921c816e7da38512512c5acde5c22cbbd9aab22bcb2937")]

// rule `#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(`_Map_`(`_|->_`(_0,V),M)))=>`_andBool_`(`#isByte(_)_KWASM-LEMMAS_Bool_KItem`(V),`#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(M))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9006b953c06dcf70da259058f1fe5834193e322b1221142304a23ac45b419fc9) contentStartColumn(10) contentStartLine(254) org.kframework.attributes.Location(Location(254,10,254,98)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(Var'Unds'0:SortKItem{},VarV:SortKItem{}),VarM:SortMap{}))),
        Lbl'Unds'andBool'Unds'{}(Lbl'Hash'isByte'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'KItem{}(VarV:SortKItem{}),Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(VarM:SortMap{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("254"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(254,10,254,98)"), UNIQUE'Unds'ID{}("9006b953c06dcf70da259058f1fe5834193e322b1221142304a23ac45b419fc9")]

// rule `#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F)=>`_orBool__BOOL_Bool_Bool_Bool`(`isNaN(_)_FLOAT_Bool_Float`(F),`isInfinite(_)_FLOAT_Bool_Float`(F)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(673cbe291303baa83ed9129fd12818f40963c52d3c3f018404f2003937f01838) contentStartColumn(10) contentStartLine(65) org.kframework.attributes.Location(Location(65,10,65,67)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(LblisNaN'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),LblisInfinite'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("65"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(65,10,65,67)"), UNIQUE'Unds'ID{}("673cbe291303baa83ed9129fd12818f40963c52d3c3f018404f2003937f01838")]

// rule `#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(`.List{"___WASM-DATA_ElemSegment_Index_ElemSegment"}_ElemSegment`(.KList))=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(289ec009ffdb5c744c152795e46f83338ae4e2b7308fae58391844a2a2b69014) contentStartColumn(10) contentStartLine(90) org.kframework.attributes.Location(Location(90,10,90,44)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}()),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("90"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(90,10,90,44)"), UNIQUE'Unds'ID{}("289ec009ffdb5c744c152795e46f83338ae4e2b7308fae58391844a2a2b69014")]

// rule `#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(`___WASM-DATA_ElemSegment_Index_ElemSegment`(TFIDX,ES))=>`_+Int_`(#token("1","Int"),`#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(ES)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(28321dedd4203180231ce976852ea3e576fa18d0c36ac9ea291e613f09b95994) contentStartColumn(10) contentStartLine(91) org.kframework.attributes.Location(Location(91,10,91,69)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(VarTFIDX:SortIndex{},VarES:SortElemSegment{})),
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(VarES:SortElemSegment{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("91"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(91,10,91,69)"), UNIQUE'Unds'ID{}("28321dedd4203180231ce976852ea3e576fa18d0c36ac9ea291e613f09b95994")]

// rule `#lengthDataPages(_)_WASM_Int_DataString`(DS)=>`_up/Int__WASM_Int_Int_Int`(`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(`#DS2Bytes(_)_WASM-DATA_Bytes_DataString`(DS)),`#pageSize()_WASM_Int`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a7ab1914f53de4889e19eb262cceafc23099ade1a701d92ce175e05aed169ccf) contentStartColumn(10) contentStartLine(1283) org.kframework.attributes.Location(Location(1283,10,1283,90)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'lengthDataPages'LParUndsRParUnds'WASM'Unds'Int'Unds'DataString{}(VarDS:SortDataString{}),
        Lbl'Unds'up'Slsh'Int'UndsUnds'WASM'Unds'Int'Unds'Int'Unds'Int{}(LbllengthBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes{}(Lbl'Hash'DS2Bytes'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'DataString{}(VarDS:SortDataString{})),Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1283"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1283,10,1283,90)"), UNIQUE'Unds'ID{}("a7ab1914f53de4889e19eb262cceafc23099ade1a701d92ce175e05aed169ccf")]

// rule `#limitsMatchImport(_,_,_)_WASM_Bool_Int_OptionalInt_Limits`(L1,_0,inj{Int,Limits}(L2))=>`_>=Int_`(L1,L2) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6dcee4f3e575a33b557698f9a65b1e2549ab84e28bf53257754ee19fbc75f948) contentStartColumn(10) contentStartLine(1448) org.kframework.attributes.Location(Location(1448,10,1448,66)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(VarL1:SortInt{},Var'Unds'0:SortOptionalInt{},inj{SortInt{}, SortLimits{}}(VarL2:SortInt{})),
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarL1:SortInt{},VarL2:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1448"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1448,10,1448,66)"), UNIQUE'Unds'ID{}("6dcee4f3e575a33b557698f9a65b1e2549ab84e28bf53257754ee19fbc75f948")]

// rule `#limitsMatchImport(_,_,_)_WASM_Bool_Int_OptionalInt_Limits`(L1,inj{Int,OptionalInt}(U1),`___WASM-DATA_Limits_Int_Int`(L2,U2))=>`_andBool_`(`_>=Int_`(L1,L2),`_<=Int_`(U1,U2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c18faab411aadee496ea0912a1417528eb316bbd386835eb4471f4691b83363a) contentStartColumn(10) contentStartLine(1450) org.kframework.attributes.Location(Location(1450,10,1450,86)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(VarL1:SortInt{},inj{SortInt{}, SortOptionalInt{}}(VarU1:SortInt{}),Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(VarL2:SortInt{},VarU2:SortInt{})),
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarL1:SortInt{},VarL2:SortInt{}),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarU1:SortInt{},VarU2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1450"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1450,10,1450,86)"), UNIQUE'Unds'ID{}("c18faab411aadee496ea0912a1417528eb316bbd386835eb4471f4691b83363a")]

// rule `#limitsMatchImport(_,_,_)_WASM_Bool_Int_OptionalInt_Limits`(_0,`.Int_WASM-DATA_OptionalInt`(.KList),`___WASM-DATA_Limits_Int_Int`(_1,_2))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9fa4beec4378f89497cd6dbfa4e1d6677c92c63e0b152a32a323cf5682881c3b) contentStartColumn(10) contentStartLine(1449) org.kframework.attributes.Location(Location(1449,10,1449,60)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(Var'Unds'0:SortInt{},Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}(),Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(Var'Unds'1:SortInt{},Var'Unds'2:SortInt{})),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1449"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1449,10,1449,60)"), UNIQUE'Unds'ID{}("9fa4beec4378f89497cd6dbfa4e1d6677c92c63e0b152a32a323cf5682881c3b")]

// rule `#maxMemorySize()_WASM_Int`(.KList)=>#token("65536","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6d79e907301e8dc3c7d634ae0249133fa89800bdfe506ea43a2e7c1fe647a98b) contentStartColumn(10) contentStartLine(1190) org.kframework.attributes.Location(Location(1190,10,1190,35)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}(),
        \dv{SortInt{}}("65536")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1190"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1190,10,1190,35)"), UNIQUE'Unds'ID{}("6d79e907301e8dc3c7d634ae0249133fa89800bdfe506ea43a2e7c1fe647a98b")]

// rule `#maxTableSize()_WASM_Int`(.KList)=>#token("4294967296","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e3f841f080760e2003d056541d85a2765f7c85c9c78c6892f19ab5e33ecee255) contentStartColumn(10) contentStartLine(1191) org.kframework.attributes.Location(Location(1191,10,1191,40)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'maxTableSize'LParRParUnds'WASM'Unds'Int{}(),
        \dv{SortInt{}}("4294967296")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1191"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1191,10,1191,40)"), UNIQUE'Unds'ID{}("e3f841f080760e2003d056541d85a2765f7c85c9c78c6892f19ab5e33ecee255")]

// rule `#minSigned(_)_KWASM-LEMMAS_Int_IValType`(ITYPE)=>`_-Int_`(#token("0","Int"),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b765876645c94732cae9bd0ff8967d7dceb84550cc21dfe84ef4663064309a62) contentStartColumn(10) contentStartLine(232) org.kframework.attributes.Location(Location(232,10,232,50)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'minSigned'LParUndsRParUnds'KWASM-LEMMAS'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),
        Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("232"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(232,10,232,50)"), UNIQUE'Unds'ID{}("b765876645c94732cae9bd0ff8967d7dceb84550cc21dfe84ef4663064309a62")]

// rule `#minWidth(_)_WASM-NUMERIC_Int_Int`(#token("0","Int") #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(494871c1846706db833ff42d200bd5efe46273c61cf40f61a027ff4d8917d406) contentStartColumn(10) contentStartLine(47) org.kframework.attributes.Location(Location(47,10,47,27)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'minWidth'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(\and{SortInt{}}(\dv{SortInt{}}("0"),Var'Unds'1:SortInt{})),
        Var'Unds'1:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("47"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(47,10,47,27)"), UNIQUE'Unds'ID{}("494871c1846706db833ff42d200bd5efe46273c61cf40f61a027ff4d8917d406")]

// rule `#minWidth(_)_WASM-NUMERIC_Int_Int`(N)=>`_+Int_`(#token("1","Int"),`#minWidth(_)_WASM-NUMERIC_Int_Int`(`_>>Int_`(N,#token("1","Int")))) requires `_=/=Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(2bbc85ad66ac5ec02b57408a4049e0f41a80d78a1c60899891cfa90a2d820f17) contentStartColumn(10) contentStartLine(48) org.kframework.attributes.Location(Location(48,10,48,105)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'minWidth'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(VarN:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Hash'minWidth'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("48"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(48,10,48,105)"), UNIQUE'Unds'ID{}("2bbc85ad66ac5ec02b57408a4049e0f41a80d78a1c60899891cfa90a2d820f17")]

// rule `#numBytes(_)_WASM-DATA_Int_IValType`(ITYPE)=>`_/Int_`(`#width(_)_WASM-DATA_Int_IValType`(ITYPE),#token("8","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2201f03dab9474cc5165048e484144c1182ab2a5443623fcda0ac30ef1a8bf9f) concrete() contentStartColumn(10) contentStartLine(194) org.kframework.attributes.Location(Location(194,10,194,50)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),
        Lbl'UndsSlsh'Int'Unds'{}(Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),\dv{SortInt{}}("8"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), concrete{}(), contentStartLine{}("194"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(194,10,194,50)"), UNIQUE'Unds'ID{}("2201f03dab9474cc5165048e484144c1182ab2a5443623fcda0ac30ef1a8bf9f")]

// rule `#pageSize()_WASM_Int`(.KList)=>#token("65536","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d69fae1385ebfd86ce7f7ead0c140126b98a3cdf19c69265d07a288dec0671d6) contentStartColumn(10) contentStartLine(1189) org.kframework.attributes.Location(Location(1189,10,1189,35)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}(),
        \dv{SortInt{}}("65536")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1189"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1189,10,1189,35)"), UNIQUE'Unds'ID{}("d69fae1385ebfd86ce7f7ead0c140126b98a3cdf19c69265d07a288dec0671d6")]

// rule `#parseWasmInt(_)_WASM-DATA_Int_String`(S)=>`String2Base(_,_)_STRING_Int_String_Int`(S,#token("10","Int")) requires `_==Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(S,#token("\"0x\"","String"),#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [UNIQUE_ID(bc09002604b032aef30e7406d17fc2c829f374a5e7094d8064e010d0612e9dfd) contentStartColumn(10) contentStartLine(218) org.kframework.attributes.Location(Location(218,10,218,115)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},\dv{SortString{}}("0x"),\dv{SortInt{}}("0")),\dv{SortInt{}}("-1")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'parseWasmInt'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'String{}(VarS:SortString{}),
        LblString2Base'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'Int{}(VarS:SortString{},\dv{SortInt{}}("10"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("218"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(218,10,218,115)"), UNIQUE'Unds'ID{}("bc09002604b032aef30e7406d17fc2c829f374a5e7094d8064e010d0612e9dfd")]

// rule `#parseWasmInt(_)_WASM-DATA_Int_String`(S)=>`String2Base(_,_)_STRING_Int_String_Int`(`replaceFirst(_,_,_)_STRING_String_String_String_String`(S,#token("\"0x\"","String"),#token("\"\"","String")),#token("16","Int")) requires `_=/=Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(S,#token("\"0x\"","String"),#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [UNIQUE_ID(ee1ffd57d0dd3b1cc715b057ff23cdb4129b92ac169cd0fae5184b7d074bc6d5) contentStartColumn(10) contentStartLine(217) org.kframework.attributes.Location(Location(217,10,217,115)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS:SortString{},\dv{SortString{}}("0x"),\dv{SortInt{}}("0")),\dv{SortInt{}}("-1")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'parseWasmInt'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'String{}(VarS:SortString{}),
        LblString2Base'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'Int{}(LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(VarS:SortString{},\dv{SortString{}}("0x"),\dv{SortString{}}("")),\dv{SortInt{}}("16"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("217"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(217,10,217,115)"), UNIQUE'Unds'ID{}("ee1ffd57d0dd3b1cc715b057ff23cdb4129b92ac169cd0fae5184b7d074bc6d5")]

// rule `#popcnt(_)_WASM-NUMERIC_Int_Int`(#token("0","Int") #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3158e2ee5ab90e7df8563e7ba7838f4e883326a329dc1471fba8494c4ad2999f) contentStartColumn(10) contentStartLine(53) org.kframework.attributes.Location(Location(53,10,53,25)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'popcnt'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(\and{SortInt{}}(\dv{SortInt{}}("0"),Var'Unds'1:SortInt{})),
        Var'Unds'1:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("53"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,10,53,25)"), UNIQUE'Unds'ID{}("3158e2ee5ab90e7df8563e7ba7838f4e883326a329dc1471fba8494c4ad2999f")]

// rule `#popcnt(_)_WASM-NUMERIC_Int_Int`(N)=>`_+Int_`(`#bool(_)_WASM-DATA_Int_Bool`(`_==Int_`(`_modInt_`(N,#token("2","Int")),#token("1","Int"))),`#popcnt(_)_WASM-NUMERIC_Int_Int`(`_>>Int_`(N,#token("1","Int")))) requires `_=/=Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(be3a1335bf319343c8e9bce653627b3c9eff12348d2bb7b5f1dbda98add4ee26) contentStartColumn(10) contentStartLine(54) org.kframework.attributes.Location(Location(54,10,54,105)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'popcnt'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(VarN:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("2")),\dv{SortInt{}}("1"))),Lbl'Hash'popcnt'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("54"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(54,10,54,105)"), UNIQUE'Unds'ID{}("be3a1335bf319343c8e9bce653627b3c9eff12348d2bb7b5f1dbda98add4ee26")]

// rule `#pow(_)_WASM-DATA_Int_IValType`(`i32_WASM-DATA_IValType`(.KList))=>#token("4294967296","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bdce6a1c10f474af895c0d174db37988535d532cb01f2411fd22d2ab6cab7918) contentStartColumn(10) contentStartLine(204) org.kframework.attributes.Location(Location(204,10,204,34)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}()),
        \dv{SortInt{}}("4294967296")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("204"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(204,10,204,34)"), UNIQUE'Unds'ID{}("bdce6a1c10f474af895c0d174db37988535d532cb01f2411fd22d2ab6cab7918")]

// rule `#pow(_)_WASM-DATA_Int_IValType`(`i64_WASM-DATA_IValType`(.KList))=>#token("18446744073709551616","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0c3d545eb87003036c600a52b6ecc9d6f311fecfba1ca7c7911fe731254b75f2) contentStartColumn(10) contentStartLine(206) org.kframework.attributes.Location(Location(206,10,206,44)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(Lbli64'Unds'WASM-DATA'Unds'IValType{}()),
        \dv{SortInt{}}("18446744073709551616")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("206"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(206,10,206,44)"), UNIQUE'Unds'ID{}("0c3d545eb87003036c600a52b6ecc9d6f311fecfba1ca7c7911fe731254b75f2")]

// rule `#pow1(_)_WASM-DATA_Int_IValType`(`i32_WASM-DATA_IValType`(.KList))=>#token("2147483648","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4175ef880f52b4024939d881dd98df913436816eda148cec39db98b4d2fe70b5) contentStartColumn(10) contentStartLine(203) org.kframework.attributes.Location(Location(203,10,203,34)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}()),
        \dv{SortInt{}}("2147483648")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("203"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(203,10,203,34)"), UNIQUE'Unds'ID{}("4175ef880f52b4024939d881dd98df913436816eda148cec39db98b4d2fe70b5")]

// rule `#pow1(_)_WASM-DATA_Int_IValType`(`i64_WASM-DATA_IValType`(.KList))=>#token("9223372036854775808","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(63a2bbb71d4e64d7f9ac8d28d66c4aa52e6267139cd62a05540cc15b545fade3) contentStartColumn(10) contentStartLine(205) org.kframework.attributes.Location(Location(205,10,205,43)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(Lbli64'Unds'WASM-DATA'Unds'IValType{}()),
        \dv{SortInt{}}("9223372036854775808")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("205"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(205,10,205,43)"), UNIQUE'Unds'ID{}("63a2bbb71d4e64d7f9ac8d28d66c4aa52e6267139cd62a05540cc15b545fade3")]

// rule `#reverse(_,_)_WASM_Defns_Defns_Defns`(`___WASM_Defns_Defn_Defns`(D,DS),ACC)=>`#reverse(_,_)_WASM_Defns_Defns_Defns`(DS,`___WASM_Defns_Defn_Defns`(D,ACC)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a499c75b8c09c692d71c31769534eca7cc41de5196c5a35d292581802e11584a) contentStartColumn(10) contentStartLine(1501) org.kframework.attributes.Location(Location(1501,10,1501,63)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'reverse'LParUndsCommUndsRParUnds'WASM'Unds'Defns'Unds'Defns'Unds'Defns{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(VarD:SortDefn{},VarDS:SortDefns{}),VarACC:SortDefns{}),
        Lbl'Hash'reverse'LParUndsCommUndsRParUnds'WASM'Unds'Defns'Unds'Defns'Unds'Defns{}(VarDS:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(VarD:SortDefn{},VarACC:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1501"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1501,10,1501,63)"), UNIQUE'Unds'ID{}("a499c75b8c09c692d71c31769534eca7cc41de5196c5a35d292581802e11584a")]

// rule `#reverse(_,_)_WASM_Defns_Defns_Defns`(inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),ACC)=>ACC requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(39829d09cd22015bffcb353d92ce785ded60dbfe21b3a7dbb09e351f675bea32) contentStartColumn(10) contentStartLine(1500) org.kframework.attributes.Location(Location(1500,10,1500,47)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'Hash'reverse'LParUndsCommUndsRParUnds'WASM'Unds'Defns'Unds'Defns'Unds'Defns{}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),VarACC:SortDefns{}),
        VarACC:SortDefns{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1500"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1500,10,1500,47)"), UNIQUE'Unds'ID{}("39829d09cd22015bffcb353d92ce785ded60dbfe21b3a7dbb09e351f675bea32")]

// rule `#revs(_)_WASM-DATA_ValStack_ValStack`(VS)=>`#revs(_,_)_WASM-DATA_ValStack_ValStack_ValStack`(VS,`.ValStack_WASM-DATA_ValStack`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(df22dfd51cbcb136063f2fd7d892df22d06f49a6aede812d24b2fd927604b09e) contentStartColumn(10) contentStartLine(367) org.kframework.attributes.Location(Location(367,10,367,43)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'revs'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack{}(VarVS:SortValStack{}),
        Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(VarVS:SortValStack{},Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("367"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(367,10,367,43)"), UNIQUE'Unds'ID{}("df22dfd51cbcb136063f2fd7d892df22d06f49a6aede812d24b2fd927604b09e")]

// rule `#revs(_,_)_WASM-DATA_ValStack_ValStack_ValStack`(`.ValStack_WASM-DATA_ValStack`(.KList),VS')=>VS' requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6c91f7bb1a0e986f49d0d463f2c940f03cbf9f9469e268500272b0e62e57cc2f) contentStartColumn(10) contentStartLine(369) org.kframework.attributes.Location(Location(369,10,369,38)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}(),VarVS'Apos':SortValStack{}),
        VarVS'Apos':SortValStack{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("369"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(369,10,369,38)"), UNIQUE'Unds'ID{}("6c91f7bb1a0e986f49d0d463f2c940f03cbf9f9469e268500272b0e62e57cc2f")]

// rule `#revs(_,_)_WASM-DATA_ValStack_ValStack_ValStack`(`_:__WASM-DATA_ValStack_Val_ValStack`(V,VS),VS')=>`#revs(_,_)_WASM-DATA_ValStack_ValStack_ValStack`(VS,`_:__WASM-DATA_ValStack_Val_ValStack`(V,VS')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7816dbf6828e1569fcfd979d102460f83d5d382449a9e0f01dd8e19b1fa57576) contentStartColumn(10) contentStartLine(370) org.kframework.attributes.Location(Location(370,10,370,53)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarV:SortVal{},VarVS:SortValStack{}),VarVS'Apos':SortValStack{}),
        Lbl'Hash'revs'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(VarVS:SortValStack{},Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarV:SortVal{},VarVS'Apos':SortValStack{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("370"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(370,10,370,53)"), UNIQUE'Unds'ID{}("7816dbf6828e1569fcfd979d102460f83d5d382449a9e0f01dd8e19b1fa57576")]

// rule `#revt(_)_WASM-DATA_ValTypes_ValTypes`(VT)=>`#revt(_,_)_WASM-DATA_ValTypes_ValTypes_ValTypes`(VT,`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b499efe38eded0ca7ea6e8e5af6de15a71220f1b0f7049ee97d694185bf07dd7) contentStartColumn(10) contentStartLine(177) org.kframework.attributes.Location(Location(177,10,177,43)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lbl'Hash'revt'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(VarVT:SortValTypes{}),
        Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarVT:SortValTypes{},Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("177"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(177,10,177,43)"), UNIQUE'Unds'ID{}("b499efe38eded0ca7ea6e8e5af6de15a71220f1b0f7049ee97d694185bf07dd7")]

// rule `#revt(_,_)_WASM-DATA_ValTypes_ValTypes_ValTypes`(`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList),VT')=>VT' requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5f787523727089903421592a31742b8064249ad4a105c1cec4f9f5c5a45620b1) contentStartColumn(10) contentStartLine(179) org.kframework.attributes.Location(Location(179,10,179,38)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}(),VarVT'Apos':SortValTypes{}),
        VarVT'Apos':SortValTypes{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("179"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,10,179,38)"), UNIQUE'Unds'ID{}("5f787523727089903421592a31742b8064249ad4a105c1cec4f9f5c5a45620b1")]

// rule `#revt(_,_)_WASM-DATA_ValTypes_ValTypes_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(V,VT),VT')=>`#revt(_,_)_WASM-DATA_ValTypes_ValTypes_ValTypes`(VT,`___WASM-DATA_ValTypes_ValType_ValTypes`(V,VT')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(842009c3604d8028182a79165b68f8246b9c84dcd4917a97e4684e391e3a1f88) contentStartColumn(10) contentStartLine(180) org.kframework.attributes.Location(Location(180,10,180,51)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(VarV:SortValType{},VarVT:SortValTypes{}),VarVT'Apos':SortValTypes{}),
        Lbl'Hash'revt'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarVT:SortValTypes{},Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(VarV:SortValType{},VarVT'Apos':SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("180"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(180,10,180,51)"), UNIQUE'Unds'ID{}("842009c3604d8028182a79165b68f8246b9c84dcd4917a97e4684e391e3a1f88")]

// rule `#round(_,_)_WASM-DATA_FVal_FValType_Number`(`f32_WASM-DATA_FValType`(.KList) #as _1,inj{Int,Number}(N))=>`<_>__WASM-DATA_FVal_FValType_Float`(_1,`Int2Float(_,_,_)_FLOAT_Float_Int_Int_Int`(N,#token("24","Int"),#token("8","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ff5c8873d1370544959b1c627dc299b2ff8698fa0add5060fffe81c6aee6d6ba) concrete() contentStartColumn(10) contentStartLine(293) org.kframework.attributes.Location(Location(293,10,293,64)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFVal{},R} (
        Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(\and{SortFValType{}}(Lblf32'Unds'WASM-DATA'Unds'FValType{}(),Var'Unds'1:SortFValType{}),inj{SortInt{}, SortNumber{}}(VarN:SortInt{})),
        Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(Var'Unds'1:SortFValType{},LblInt2Float'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},\dv{SortInt{}}("24"),\dv{SortInt{}}("8")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), concrete{}(), contentStartLine{}("293"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(293,10,293,64)"), UNIQUE'Unds'ID{}("ff5c8873d1370544959b1c627dc299b2ff8698fa0add5060fffe81c6aee6d6ba")]

// rule `#round(_,_)_WASM-DATA_FVal_FValType_Number`(`f32_WASM-DATA_FValType`(.KList) #as _1,inj{Float,Number}(N))=>`<_>__WASM-DATA_FVal_FValType_Float`(_1,`roundFloat(_,_,_)_FLOAT_Float_Float_Int_Int`(N,#token("24","Int"),#token("8","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(633131a700de148f5119804f746da0f30b39a9e1314bb16e5f95934a31d7865b) concrete() contentStartColumn(10) contentStartLine(291) org.kframework.attributes.Location(Location(291,10,291,64)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFVal{},R} (
        Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(\and{SortFValType{}}(Lblf32'Unds'WASM-DATA'Unds'FValType{}(),Var'Unds'1:SortFValType{}),inj{SortFloat{}, SortNumber{}}(VarN:SortFloat{})),
        Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(Var'Unds'1:SortFValType{},LblroundFloat'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Int'Unds'Int{}(VarN:SortFloat{},\dv{SortInt{}}("24"),\dv{SortInt{}}("8")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), concrete{}(), contentStartLine{}("291"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(291,10,291,64)"), UNIQUE'Unds'ID{}("633131a700de148f5119804f746da0f30b39a9e1314bb16e5f95934a31d7865b")]

// rule `#round(_,_)_WASM-DATA_FVal_FValType_Number`(`f64_WASM-DATA_FValType`(.KList) #as _1,inj{Int,Number}(N))=>`<_>__WASM-DATA_FVal_FValType_Float`(_1,`Int2Float(_,_,_)_FLOAT_Float_Int_Int_Int`(N,#token("53","Int"),#token("11","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(42b9cf64113d6d96469c0afe4d0e1456e70af3c7963581d9596c548b2a100753) concrete() contentStartColumn(10) contentStartLine(292) org.kframework.attributes.Location(Location(292,10,292,65)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFVal{},R} (
        Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(\and{SortFValType{}}(Lblf64'Unds'WASM-DATA'Unds'FValType{}(),Var'Unds'1:SortFValType{}),inj{SortInt{}, SortNumber{}}(VarN:SortInt{})),
        Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(Var'Unds'1:SortFValType{},LblInt2Float'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int'Unds'Int{}(VarN:SortInt{},\dv{SortInt{}}("53"),\dv{SortInt{}}("11")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), concrete{}(), contentStartLine{}("292"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(292,10,292,65)"), UNIQUE'Unds'ID{}("42b9cf64113d6d96469c0afe4d0e1456e70af3c7963581d9596c548b2a100753")]

// rule `#round(_,_)_WASM-DATA_FVal_FValType_Number`(`f64_WASM-DATA_FValType`(.KList) #as _1,inj{Float,Number}(N))=>`<_>__WASM-DATA_FVal_FValType_Float`(_1,`roundFloat(_,_,_)_FLOAT_Float_Float_Int_Int`(N,#token("53","Int"),#token("11","Int"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(30e19229b81a11c828672135573ec1e0b1bf39d24a316b77f4a91d16545e4a5a) concrete() contentStartColumn(10) contentStartLine(290) org.kframework.attributes.Location(Location(290,10,290,65)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFVal{},R} (
        Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(\and{SortFValType{}}(Lblf64'Unds'WASM-DATA'Unds'FValType{}(),Var'Unds'1:SortFValType{}),inj{SortFloat{}, SortNumber{}}(VarN:SortFloat{})),
        Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(Var'Unds'1:SortFValType{},LblroundFloat'LParUndsCommUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Int'Unds'Int{}(VarN:SortFloat{},\dv{SortInt{}}("53"),\dv{SortInt{}}("11")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), concrete{}(), contentStartLine{}("290"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(290,10,290,65)"), UNIQUE'Unds'ID{}("30e19229b81a11c828672135573ec1e0b1bf39d24a316b77f4a91d16545e4a5a")]

// rule `#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(MAP,ID,_0)=>MAP requires `notBool_`(isIdentifier(inj{OptionalId,KItem}(ID))) ensures #token("true","Bool") [UNIQUE_ID(6488162a3fb5f1b8c6f3909044828cfdd5aa552a84956e5609faa68242958907) contentStartColumn(10) contentStartLine(50) org.kframework.attributes.Location(Location(50,10,50,96)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblisIdentifier{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarID:SortOptionalId{}),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarMAP:SortMap{},VarID:SortOptionalId{},Var'Unds'0:SortInt{}),
        VarMAP:SortMap{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("50"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,10,50,96)"), UNIQUE'Unds'ID{}("6488162a3fb5f1b8c6f3909044828cfdd5aa552a84956e5609faa68242958907")]

// rule `#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(MAP,inj{Identifier,OptionalId}(ID),IDX)=>`Map:update`(MAP,inj{Identifier,KItem}(ID),inj{Int,KItem}(IDX)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d2c850eb9a868713d42a0f23e507afbe09293094325194523a9bfae99e9009ff) contentStartColumn(10) contentStartLine(51) org.kframework.attributes.Location(Location(51,10,51,62)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMap{},R} (
        Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarMAP:SortMap{},inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),VarIDX:SortInt{}),
        LblMap'Coln'update{}(VarMAP:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarIDX:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("51"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,10,51,62)"), UNIQUE'Unds'ID{}("d2c850eb9a868713d42a0f23e507afbe09293094325194523a9bfae99e9009ff")]

// rule `#set(_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int`(BMAP,IDX,`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BMAP,IDX))=>BMAP requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a1134b088116f9a26e3f635f3a817efeb4f140092cb5a7335c062b17c01ecbbb) contentStartColumn(10) contentStartLine(285) org.kframework.attributes.Location(Location(285,10,285,50)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) smt-lemma()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortByteMap{},R} (
        Lbl'Hash'set'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBMAP:SortByteMap{},VarIDX:SortInt{},Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBMAP:SortByteMap{},VarIDX:SortInt{})),
        VarBMAP:SortByteMap{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("285"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(285,10,285,50)"), simplification{}(), UNIQUE'Unds'ID{}("a1134b088116f9a26e3f635f3a817efeb4f140092cb5a7335c062b17c01ecbbb"), smt-lemma{}()]

// rule `#set(_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(M),KEY,VAL)=>`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(`Map:update`(M,inj{Int,KItem}(KEY),inj{Int,KItem}(VAL))) requires `notBool_`(`_==Int_`(VAL,#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(a34b3f129e3019dc054b47d88a4c699416b2a72fd6285ad1eb8365ff18c7d0da) concrete() contentStartColumn(10) contentStartLine(536) org.kframework.attributes.Location(Location(536,10,536,108)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortByteMap{},R} (
        Lbl'Hash'set'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(VarM:SortMap{}),VarKEY:SortInt{},VarVAL:SortInt{}),
        LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(LblMap'Coln'update{}(VarM:SortMap{},inj{SortInt{}, SortKItem{}}(VarKEY:SortInt{}),inj{SortInt{}, SortKItem{}}(VarVAL:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), concrete{}(), contentStartLine{}("536"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(536,10,536,108)"), UNIQUE'Unds'ID{}("a34b3f129e3019dc054b47d88a4c699416b2a72fd6285ad1eb8365ff18c7d0da")]

// rule `#set(_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(M),KEY,VAL)=>`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(`_[_<-undef]`(M,inj{Int,KItem}(KEY))) requires `_==Int_`(VAL,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(b15bfaba6e166aa70524c789b68025ba6a60229b500891d73cba13b73ef8177f) contentStartColumn(10) contentStartLine(535) org.kframework.attributes.Location(Location(535,10,535,107)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortByteMap{},R} (
        Lbl'Hash'set'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(VarM:SortMap{}),VarKEY:SortInt{},VarVAL:SortInt{}),
        LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(VarM:SortMap{},inj{SortInt{}, SortKItem{}}(VarKEY:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("535"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(535,10,535,107)"), UNIQUE'Unds'ID{}("b15bfaba6e166aa70524c789b68025ba6a60229b500891d73cba13b73ef8177f")]

// rule `#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(BM,EA,`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,EA,WIDTH),WIDTH)=>BM requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(813a346f7ba6315c8b2f77f0a69e31da39e4d815fa7bd35b78bc2e71b8fe1ecf) contentStartColumn(10) contentStartLine(295) org.kframework.attributes.Location(Location(295,10,295,66)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortByteMap{},R} (
        Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarEA:SortInt{},Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarEA:SortInt{},VarWIDTH:SortInt{}),VarWIDTH:SortInt{}),
        VarBM:SortByteMap{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("295"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(295,10,295,66)"), simplification{}(), UNIQUE'Unds'ID{}("813a346f7ba6315c8b2f77f0a69e31da39e4d815fa7bd35b78bc2e71b8fe1ecf")]

// rule `#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(BM,IDX,VAL,WIDTH)=>`#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(`#set(_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int`(BM,IDX,`_modInt_`(VAL,#token("256","Int"))),`_+Int_`(IDX,#token("1","Int")),`_/Int_`(VAL,#token("256","Int")),`_-Int_`(WIDTH,#token("1","Int"))) requires `_>Int_`(WIDTH,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(f159000959fc300905842a7446091603ec94aa4dd6a2d5bd6c26c40ad4c2d352) contentStartColumn(10) contentStartLine(509) org.kframework.attributes.Location(Location(509,10,510,37)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortByteMap{},R} (
        Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarIDX:SortInt{},VarVAL:SortInt{},VarWIDTH:SortInt{}),
        Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(Lbl'Hash'set'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarIDX:SortInt{},Lbl'Unds'modInt'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("256"))),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsSlsh'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("256")),Lbl'Unds'-Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("1")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("509"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(509,10,510,37)"), UNIQUE'Unds'ID{}("f159000959fc300905842a7446091603ec94aa4dd6a2d5bd6c26c40ad4c2d352")]

// rule `#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(BM,IDX,_0,WIDTH)=>BM requires `notBool_`(`_>Int_`(WIDTH,#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(3b1066f2978fc1d157443ac0ea79c94e0ec0509fd7dfcf10cd8547fd34640de4) contentStartColumn(10) contentStartLine(507) org.kframework.attributes.Location(Location(507,10,508,38)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortByteMap{},R} (
        Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarIDX:SortInt{},Var'Unds'0:SortInt{},VarWIDTH:SortInt{}),
        VarBM:SortByteMap{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("507"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(507,10,508,38)"), UNIQUE'Unds'ID{}("3b1066f2978fc1d157443ac0ea79c94e0ec0509fd7dfcf10cd8547fd34640de4")]

// rule `#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,N)=>N requires `_andBool_`(`_<=Int_`(#token("0","Int"),N),`_<Int_`(N,`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(acfae91a1f5976b45e58f323f8beb3d299c628da62f2533c1ecbb24c0930e71b) contentStartColumn(10) contentStartLine(307) org.kframework.attributes.Location(Location(307,10,307,107)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarN:SortInt{}),
        VarN:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("307"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(307,10,307,107)"), UNIQUE'Unds'ID{}("acfae91a1f5976b45e58f323f8beb3d299c628da62f2533c1ecbb24c0930e71b")]

// rule `#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,N)=>`_-Int_`(N,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE)) requires `_andBool_`(`_<=Int_`(`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE),N),`_<Int_`(N,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(9493d81758d8b8e3597e2ab108f57032e93ed0312c18d768ab0f80b9e952eadf) contentStartColumn(10) contentStartLine(308) org.kframework.attributes.Location(Location(308,10,308,107)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarN:SortInt{}),
        Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("308"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(308,10,308,107)"), UNIQUE'Unds'ID{}("9493d81758d8b8e3597e2ab108f57032e93ed0312c18d768ab0f80b9e952eadf")]

// rule `#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(#token("1","Int"),N)=>N requires `_andBool_`(`_<=Int_`(#token("0","Int"),N),`_<Int_`(N,#token("128","Int"))) ensures #token("true","Bool") [UNIQUE_ID(1bf84628d258d398f0dd03bd615632023d7830ffd8b561ab68d39c796ef47e33) contentStartColumn(10) contentStartLine(313) org.kframework.attributes.Location(Location(313,10,313,86)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("128"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("1"),VarN:SortInt{}),
        VarN:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("313"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(313,10,313,86)"), UNIQUE'Unds'ID{}("1bf84628d258d398f0dd03bd615632023d7830ffd8b561ab68d39c796ef47e33")]

// rule `#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(#token("1","Int"),N)=>`_-Int_`(N,#token("256","Int")) requires `_andBool_`(`_<=Int_`(#token("128","Int"),N),`_<Int_`(N,#token("256","Int"))) ensures #token("true","Bool") [UNIQUE_ID(1b6ac2df22d7353d9a27eea4550599901ef233b94c42dee402b786c0460da95c) contentStartColumn(10) contentStartLine(314) org.kframework.attributes.Location(Location(314,10,314,86)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("128"),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("256"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("1"),VarN:SortInt{}),
        Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("256"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("314"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(314,10,314,86)"), UNIQUE'Unds'ID{}("1b6ac2df22d7353d9a27eea4550599901ef233b94c42dee402b786c0460da95c")]

// rule `#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(#token("2","Int"),N)=>N requires `_andBool_`(`_<=Int_`(#token("0","Int"),N),`_<Int_`(N,#token("32768","Int"))) ensures #token("true","Bool") [UNIQUE_ID(047cdc6ded13a422120cf094359d0c6153201c2f35158a7b008307cdeb16b331) contentStartColumn(10) contentStartLine(315) org.kframework.attributes.Location(Location(315,10,315,88)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("32768"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("2"),VarN:SortInt{}),
        VarN:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("315"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(315,10,315,88)"), UNIQUE'Unds'ID{}("047cdc6ded13a422120cf094359d0c6153201c2f35158a7b008307cdeb16b331")]

// rule `#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(#token("2","Int"),N)=>`_-Int_`(N,#token("65536","Int")) requires `_andBool_`(`_<=Int_`(#token("32768","Int"),N),`_<Int_`(N,#token("65536","Int"))) ensures #token("true","Bool") [UNIQUE_ID(d1b88a11427d905f4b39afb061b3595de5a06fc920e0a8ecd7cba68e56c18ef7) contentStartColumn(10) contentStartLine(316) org.kframework.attributes.Location(Location(316,10,316,88)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("32768"),VarN:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("65536"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("2"),VarN:SortInt{}),
        Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("65536"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("316"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(316,10,316,88)"), UNIQUE'Unds'ID{}("d1b88a11427d905f4b39afb061b3595de5a06fc920e0a8ecd7cba68e56c18ef7")]

// rule `#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(#token("4","Int"),N)=>`#signed(_,_)_WASM-DATA_Int_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),N) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f0b468ecc2e052da1254c75fc685ed50d0bfa5c41e34b3c301865140a77c3ae8) contentStartColumn(10) contentStartLine(317) org.kframework.attributes.Location(Location(317,10,317,47)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("4"),VarN:SortInt{}),
        Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("317"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(317,10,317,47)"), UNIQUE'Unds'ID{}("f0b468ecc2e052da1254c75fc685ed50d0bfa5c41e34b3c301865140a77c3ae8")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{MemoryDefn,Defn}(A) #as _9,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,AS,_4,_5,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,`___WASM_Defns_Defn_Defns`(_9,AS),_4,_5,_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7e9a1b900dd0c948a96551bbde0d8f7482ad66568f7230563d06d054a629e99c) contentStartColumn(10) contentStartLine(1489) org.kframework.attributes.Location(Location(1489,10,1489,92)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortMemoryDefn{}, SortDefn{}}(VarA:SortMemoryDefn{}),Var'Unds'9:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},VarAS:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'9:SortDefn{},VarAS:SortDefns{}),Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1489"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1489,10,1489,92)"), UNIQUE'Unds'ID{}("7e9a1b900dd0c948a96551bbde0d8f7482ad66568f7230563d06d054a629e99c")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{TableDefn,Defn}(A) #as _9,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,AS,_4,_5,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,`___WASM_Defns_Defn_Defns`(_9,AS),_4,_5,_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0426798a0beaf5d7c100e7381de6721f1951c726ea6cdf6ffc3159b2c8cbe487) contentStartColumn(10) contentStartLine(1488) org.kframework.attributes.Location(Location(1488,10,1488,92)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortTableDefn{}, SortDefn{}}(VarA:SortTableDefn{}),Var'Unds'9:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},VarAS:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'9:SortDefn{},VarAS:SortDefns{}),Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1488"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1488,10,1488,92)"), UNIQUE'Unds'ID{}("0426798a0beaf5d7c100e7381de6721f1951c726ea6cdf6ffc3159b2c8cbe487")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{ExportDefn,Defn}(E) #as _9,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,_4,ES,_5,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,_4,`___WASM_Defns_Defn_Defns`(_9,ES),_5,_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c01db9204a404110a86d807a7adecea9bc0541990be1da348211e43448f136ff) contentStartColumn(10) contentStartLine(1491) org.kframework.attributes.Location(Location(1491,10,1491,93)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortExportDefn{}, SortDefn{}}(VarE:SortExportDefn{}),Var'Unds'9:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},VarES:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'9:SortDefn{},VarES:SortDefns{}),Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1491"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1491,10,1491,93)"), UNIQUE'Unds'ID{}("c01db9204a404110a86d807a7adecea9bc0541990be1da348211e43448f136ff")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{ImportDefn,Defn}(I) #as _9,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,IS,_2,_3,_4,_5,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,`___WASM_Defns_Defn_Defns`(_9,IS),_2,_3,_4,_5,_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9f2a78bb09b14202e2a3302850ba4e750e60691225904f1e4f03d9017c2aa883) contentStartColumn(10) contentStartLine(1483) org.kframework.attributes.Location(Location(1483,10,1483,97)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortImportDefn{}, SortDefn{}}(VarI:SortImportDefn{}),Var'Unds'9:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},VarIS:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'9:SortDefn{},VarIS:SortDefns{}),Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1483"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1483,10,1483,97)"), UNIQUE'Unds'ID{}("9f2a78bb09b14202e2a3302850ba4e750e60691225904f1e4f03d9017c2aa883")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{DataDefn,Defn}(I) #as _9,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,_4,_5,IS,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,_4,_5,`___WASM_Defns_Defn_Defns`(_9,IS),_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d8186dc92636423aa18fd97cfe7346b62e1e44c2c2bdd423b3301c0c2bedb2dd) contentStartColumn(10) contentStartLine(1493) org.kframework.attributes.Location(Location(1493,10,1493,91)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortDataDefn{}, SortDefn{}}(VarI:SortDataDefn{}),Var'Unds'9:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},VarIS:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'9:SortDefn{},VarIS:SortDefns{}),Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1493"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1493,10,1493,91)"), UNIQUE'Unds'ID{}("d8186dc92636423aa18fd97cfe7346b62e1e44c2c2bdd423b3301c0c2bedb2dd")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{ElemDefn,Defn}(I) #as _9,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,_4,_5,IS,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,_4,_5,`___WASM_Defns_Defn_Defns`(_9,IS),_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(34990a3ad875f4809f5134ad5e41d2897e144ca9d50a698999f06b65ed4646fb) contentStartColumn(10) contentStartLine(1494) org.kframework.attributes.Location(Location(1494,10,1494,91)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortElemDefn{}, SortDefn{}}(VarI:SortElemDefn{}),Var'Unds'9:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},VarIS:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'9:SortDefn{},VarIS:SortDefns{}),Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1494"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1494,10,1494,91)"), UNIQUE'Unds'ID{}("34990a3ad875f4809f5134ad5e41d2897e144ca9d50a698999f06b65ed4646fb")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{StartDefn,Defn}(S) #as _10,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,_4,_5,_6,_7))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,_3,_4,_5,_6,`___WASM_Defns_Defn_Defns`(_10,inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7279337d1269e9902d4df9bd257de15eb1b6792d1a6a2c5577860b8303610314) contentStartColumn(10) contentStartLine(1496) org.kframework.attributes.Location(Location(1496,10,1496,94)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortStartDefn{}, SortDefn{}}(VarS:SortStartDefn{}),Var'Unds'10:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{},Var'Unds'7:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'10:SortDefn{},inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1496"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1496,10,1496,94)"), UNIQUE'Unds'ID{}("7279337d1269e9902d4df9bd257de15eb1b6792d1a6a2c5577860b8303610314")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{TypeDefn,Defn}(T) #as _9,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,TS,_1,_2,_3,_4,_5,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,`___WASM_Defns_Defn_Defns`(_9,TS),_1,_2,_3,_4,_5,_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf8046e4b235a86340e47c718350cd374a922ec72a68a8bf6f235293ea31477f) contentStartColumn(10) contentStartLine(1481) org.kframework.attributes.Location(Location(1481,10,1481,91)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortTypeDefn{}, SortDefn{}}(VarT:SortTypeDefn{}),Var'Unds'9:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},VarTS:SortDefns{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'9:SortDefn{},VarTS:SortDefns{}),Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1481"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1481,10,1481,91)"), UNIQUE'Unds'ID{}("cf8046e4b235a86340e47c718350cd374a922ec72a68a8bf6f235293ea31477f")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{FuncDefn,Defn}(X) #as _9,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,FGS,_3,_4,_5,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,`___WASM_Defns_Defn_Defns`(_9,FGS),_3,_4,_5,_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(29b63d761e6ca2721467dd4c8e4f4a1dc1a1b0ecd7affcb64b039a0bc0d8897c) contentStartColumn(10) contentStartLine(1485) org.kframework.attributes.Location(Location(1485,10,1485,100)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortFuncDefn{}, SortDefn{}}(VarX:SortFuncDefn{}),Var'Unds'9:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},VarFGS:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'9:SortDefn{},VarFGS:SortDefns{}),Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1485"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1485,10,1485,100)"), UNIQUE'Unds'ID{}("29b63d761e6ca2721467dd4c8e4f4a1dc1a1b0ecd7affcb64b039a0bc0d8897c")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`___WASM_Defns_Defn_Defns`(inj{GlobalDefn,Defn}(X) #as _9,DS),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,FGS,_3,_4,_5,_6))=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(DS,`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(_0,_1,_2,`___WASM_Defns_Defn_Defns`(_9,FGS),_3,_4,_5,_6)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0c41c16dc31d568ac0af0524ac44e4d8ed8cd48eb63fe5234667b09b3494845a) contentStartColumn(10) contentStartLine(1486) org.kframework.attributes.Location(Location(1486,10,1486,100)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(\and{SortDefn{}}(inj{SortGlobalDefn{}, SortDefn{}}(VarX:SortGlobalDefn{}),Var'Unds'9:SortDefn{}),VarDS:SortDefns{}),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},VarFGS:SortDefns{},Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{})),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(VarDS:SortDefns{},LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortDefns{},Var'Unds'2:SortDefns{},Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(Var'Unds'9:SortDefn{},VarFGS:SortDefns{}),Var'Unds'3:SortDefns{},Var'Unds'4:SortDefns{},Var'Unds'5:SortDefns{},Var'Unds'6:SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1486"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1486,10,1486,100)"), UNIQUE'Unds'ID{}("0c41c16dc31d568ac0af0524ac44e4d8ed8cd48eb63fe5234667b09b3494845a")]

// rule `#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),SORTED_MODULE)=>SORTED_MODULE requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cc33c91fb6874dc54f39bdb1a4b40253f3d5535ec3311d181c21acf43eefa83d) contentStartColumn(10) contentStartLine(1479) org.kframework.attributes.Location(Location(1479,10,1479,61)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),VarSORTED'Unds'MODULE:SortModuleDecl{}),
        VarSORTED'Unds'MODULE:SortModuleDecl{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1479"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1479,10,1479,61)"), UNIQUE'Unds'ID{}("cc33c91fb6874dc54f39bdb1a4b40253f3d5535ec3311d181c21acf43eefa83d")]

// rule `#take(_,_)_WASM-DATA_ValStack_ValTypes_ValStack`(`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList),_0)=>`.ValStack_WASM-DATA_ValStack`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(01697fa65e24f8cf00b6478eda4729766fb26642b2f55a56ac454577628571ee) contentStartColumn(10) contentStartLine(361) org.kframework.attributes.Location(Location(361,10,361,73)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes'Unds'ValStack{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}(),Var'Unds'0:SortValStack{}),
        Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("361"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(361,10,361,73)"), UNIQUE'Unds'ID{}("01697fa65e24f8cf00b6478eda4729766fb26642b2f55a56ac454577628571ee")]

// rule `#take(_,_)_WASM-DATA_ValStack_ValTypes_ValStack`(`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{AValType,ValType}(TYPE),VTYPES),`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(TYPE,VAL) #as _4,VALSTACK))=>`_:__WASM-DATA_ValStack_Val_ValStack`(_4,`#take(_,_)_WASM-DATA_ValStack_ValTypes_ValStack`(VTYPES,VALSTACK)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c64af83a62ff52760d3c21f2eb86fb3c7243dac65650fc721612c1d78ebc22e3) contentStartColumn(10) contentStartLine(362) org.kframework.attributes.Location(Location(362,10,362,111)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes'Unds'ValStack{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortAValType{}, SortValType{}}(VarTYPE:SortAValType{}),VarVTYPES:SortValTypes{}),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(\and{SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYPE:SortAValType{},VarVAL:SortNumber{}),Var'Unds'4:SortVal{}),VarVALSTACK:SortValStack{})),
        Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Var'Unds'4:SortVal{},Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes'Unds'ValStack{}(VarVTYPES:SortValTypes{},VarVALSTACK:SortValStack{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("362"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(362,10,362,111)"), UNIQUE'Unds'ID{}("c64af83a62ff52760d3c21f2eb86fb3c7243dac65650fc721612c1d78ebc22e3")]

// rule `#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,N)=>N requires `_<=Int_`(#token("0","Int"),N) ensures #token("true","Bool") [UNIQUE_ID(8bb51b5ca15cb3864bdcde80421a74b12fe235367e4fb1e56e45928a7c96920f) contentStartColumn(10) contentStartLine(311) org.kframework.attributes.Location(Location(311,10,311,70)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarN:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarN:SortInt{}),
        VarN:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("311"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(311,10,311,70)"), UNIQUE'Unds'ID{}("8bb51b5ca15cb3864bdcde80421a74b12fe235367e4fb1e56e45928a7c96920f")]

// rule `#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,N)=>`_+Int_`(N,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE)) requires `_<Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(ee89f8f44f267d86ac68531c0f62833864dcd84b032d4a124b778c7cc992d2b5) contentStartColumn(10) contentStartLine(310) org.kframework.attributes.Location(Location(310,10,310,70)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarN:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("310"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(310,10,310,70)"), UNIQUE'Unds'ID{}("ee89f8f44f267d86ac68531c0f62833864dcd84b032d4a124b778c7cc992d2b5")]

// rule `#width(_)_WASM-DATA_Int_IValType`(`i32_WASM-DATA_IValType`(.KList))=>#token("32","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6434a6a6d34a5cdff508694a07efcf40a97322ce95a1d4193228ad77ed4a48d9) contentStartColumn(10) contentStartLine(191) org.kframework.attributes.Location(Location(191,10,191,27)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}()),
        \dv{SortInt{}}("32")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("191"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(191,10,191,27)"), UNIQUE'Unds'ID{}("6434a6a6d34a5cdff508694a07efcf40a97322ce95a1d4193228ad77ed4a48d9")]

// rule `#width(_)_WASM-DATA_Int_IValType`(`i64_WASM-DATA_IValType`(.KList))=>#token("64","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(def10deca1b098569f411fd800e9aac1ef74bce297229e4d7786fe2f0e7919cf) contentStartColumn(10) contentStartLine(192) org.kframework.attributes.Location(Location(192,10,192,27)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(Lbli64'Unds'WASM-DATA'Unds'IValType{}()),
        \dv{SortInt{}}("64")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("192"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(192,10,192,27)"), UNIQUE'Unds'ID{}("def10deca1b098569f411fd800e9aac1ef74bce297229e4d7786fe2f0e7919cf")]

// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(WIDTH,N)=>`_modInt_`(N,`_<<Int_`(#token("1","Int"),WIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6d57d1630536a63c52b5f308b4d7cff6ec1c947a9d707e31a8f1f4a76a79eb4e) concrete() contentStartColumn(10) contentStartLine(279) org.kframework.attributes.Location(Location(279,10,279,53)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarWIDTH:SortInt{},VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarN:SortInt{},Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarWIDTH:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), concrete{}(), contentStartLine{}("279"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(279,10,279,53)"), UNIQUE'Unds'ID{}("6d57d1630536a63c52b5f308b4d7cff6ec1c947a9d707e31a8f1f4a76a79eb4e")]

// rule `#wrc20Body_WRC20_Defns`(.KList)=>`_++Defns__WRC20_Defns_Defns_Defns`(`#wrc20Imports_WRC20_Defns`(.KList),`#wrc20Functions_WRC20_Defns`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(18040d0cd22e8a24b64b638e067eb9d76ca3705356f5722b4e7f353d861478c3) contentStartColumn(10) contentStartLine(415) macro() org.kframework.attributes.Location(Location(415,10,415,61)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
// rule `#wrc20Functions_WRC20_Defns`(.KList)=>`___WASM_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(`_WASM-DATA_OptionalId`(.KList),`___WASM-TEXT_FuncSpec_InlineExport_FuncSpec`(`(export_)_WASM-TEXT_InlineExport_WasmString`(inj{WasmStringToken,WasmString}(`#unparseWasmString(_)_WASM-DATA_WasmStringToken_String`(#token("\"\\\"main\\\"\"","String")))),`____WASM_FuncSpec_TypeUse_LocalDecls_Instrs`(inj{TypeDecls,TypeUse}(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)),`.List{"___WASM_LocalDecls_LocalDecl_LocalDecls"}_LocalDecls`(.KList),`___WASM_Instrs_Instr_Instrs`(`block__end_WASM_Instr_TypeDecls_Instrs`(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList),`___WASM_Instrs_Instr_Instrs`(`block__end_WASM_Instr_TypeDecls_Instrs`(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$getCallDataSize\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("4","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IRelOp`(`i32_WASM-DATA_IValType`(.KList),`ge_u_WASM-NUMERIC_IRelOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br_if__WASM_PlainInstr_Index`(inj{Int,Index}(#token("0","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$revert\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))))))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("4","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$callDataCopy\"","String"))))),`___WASM_Instrs_Instr_Instrs`(`block__end_WASM_Instr_TypeDecls_Instrs`(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_LoadOpM`(`i32_WASM-DATA_IValType`(.KList),inj{LoadOp,LoadOpM}(`load_WASM_LoadOp`(.KList)))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("436376473","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IRelOp`(`i32_WASM-DATA_IValType`(.KList),`eq_WASM-NUMERIC_IRelOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_TestOp`(`i32_WASM-DATA_IValType`(.KList),`eqz_WASM-NUMERIC_TestOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br_if__WASM_PlainInstr_Index`(inj{Int,Index}(#token("0","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$do_balance\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))))))))),`___WASM_Instrs_Instr_Instrs`(`block__end_WASM_Instr_TypeDecls_Instrs`(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_LoadOpM`(`i32_WASM-DATA_IValType`(.KList),inj{LoadOp,LoadOpM}(`load_WASM_LoadOp`(.KList)))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("3181327709","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IRelOp`(`i32_WASM-DATA_IValType`(.KList),`eq_WASM-NUMERIC_IRelOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_TestOp`(`i32_WASM-DATA_IValType`(.KList),`eqz_WASM-NUMERIC_TestOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br_if__WASM_PlainInstr_Index`(inj{Int,Index}(#token("0","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$do_transfer\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))))))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$revert\"","String"))))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))))))))))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))))),`___WASM_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(inj{IdentifierToken,OptionalId}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$do_balance\"","String"))),`____WASM_FuncSpec_TypeUse_LocalDecls_Instrs`(inj{TypeDecls,TypeUse}(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)),`.List{"___WASM_LocalDecls_LocalDecl_LocalDecls"}_LocalDecls`(.KList),`___WASM_Instrs_Instr_Instrs`(`block__end_WASM_Instr_TypeDecls_Instrs`(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList),`___WASM_Instrs_Instr_Instrs`(`block__end_WASM_Instr_TypeDecls_Instrs`(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$getCallDataSize\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("24","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IRelOp`(`i32_WASM-DATA_IValType`(.KList),`eq_WASM-NUMERIC_IRelOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br_if__WASM_PlainInstr_Index`(inj{Int,Index}(#token("0","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$revert\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))))))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("4","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("20","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$callDataCopy\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("32","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$storageLoad\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("32","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("32","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_LoadOpM`(`i64_WASM-DATA_IValType`(.KList),inj{LoadOp,LoadOpM}(`load_WASM_LoadOp`(.KList)))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$i64.reverse_bytes\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_StoreOpM`(`i64_WASM-DATA_IValType`(.KList),inj{StoreOp,StoreOpM}(`store_WASM_StoreOp`(.KList)))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("32","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("8","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$finish\"","String"))))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))))))))))))))))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)))))),`___WASM_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(inj{IdentifierToken,OptionalId}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$do_transfer\"","String"))),`____WASM_FuncSpec_TypeUse_LocalDecls_Instrs`(inj{TypeDecls,TypeUse}(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)),`___WASM_LocalDecls_LocalDecl_LocalDecls`(`local__WASM_LocalDecl_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i64_WASM-DATA_IValType`(.KList)),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i64_WASM-DATA_IValType`(.KList)),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i64_WASM-DATA_IValType`(.KList)),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList))))),`.List{"___WASM_LocalDecls_LocalDecl_LocalDecls"}_LocalDecls`(.KList)),`___WASM_Instrs_Instr_Instrs`(`block__end_WASM_Instr_TypeDecls_Instrs`(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList),`___WASM_Instrs_Instr_Instrs`(`block__end_WASM_Instr_TypeDecls_Instrs`(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$getCallDataSize\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("32","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IRelOp`(`i32_WASM-DATA_IValType`(.KList),`eq_WASM-NUMERIC_IRelOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br_if__WASM_PlainInstr_Index`(inj{Int,Index}(#token("0","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$revert\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))))))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$getCaller\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("32","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("4","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("20","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$callDataCopy\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("64","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("24","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("8","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$callDataCopy\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("64","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_LoadOpM`(`i64_WASM-DATA_IValType`(.KList),inj{LoadOp,LoadOpM}(`load_WASM_LoadOp`(.KList)))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$i64.reverse_bytes\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.set__WASM_PlainInstr_Index`(inj{Int,Index}(#token("0","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("64","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$storageLoad\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("64","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_LoadOpM`(`i64_WASM-DATA_IValType`(.KList),inj{LoadOp,LoadOpM}(`load_WASM_LoadOp`(.KList)))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.set__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("32","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("64","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$storageLoad\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("64","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_LoadOpM`(`i64_WASM-DATA_IValType`(.KList),inj{LoadOp,LoadOpM}(`load_WASM_LoadOp`(.KList)))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.set__WASM_PlainInstr_Index`(inj{Int,Index}(#token("2","Int")))),`___WASM_Instrs_Instr_Instrs`(`block__end_WASM_Instr_TypeDecls_Instrs`(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(#token("0","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IRelOp`(`i64_WASM-DATA_IValType`(.KList),`le_u_WASM-NUMERIC_IRelOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br_if__WASM_PlainInstr_Index`(inj{Int,Index}(#token("0","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$revert\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))))))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(#token("0","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IBinOp`(`i64_WASM-DATA_IValType`(.KList),`sub_WASM-NUMERIC_IBinOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.set__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(#token("2","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(#token("0","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IBinOp`(`i64_WASM-DATA_IValType`(.KList),`add_WASM-NUMERIC_IBinOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.set__WASM_PlainInstr_Index`(inj{Int,Index}(#token("2","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("64","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_StoreOpM`(`i64_WASM-DATA_IValType`(.KList),inj{StoreOp,StoreOpM}(`store_WASM_StoreOp`(.KList)))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("64","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$storageStore\"","String"))))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("64","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(#token("2","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_StoreOpM`(`i64_WASM-DATA_IValType`(.KList),inj{StoreOp,StoreOpM}(`store_WASM_StoreOp`(.KList)))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("32","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("64","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`call__WASM_PlainInstr_Index`(inj{IdentifierToken,Index}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$storageStore\"","String"))))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))))))))))))))))))))))))))))))))))))))))))))))))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)))))),`#wrc20ReverseBytes_WRC20_Defns`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ed39e8fb38b647f46f96e890dd6d92164509bd4364ed4545696655e4b3dde0ec) contentStartColumn(10) contentStartLine(429) macro() org.kframework.attributes.Location(Location(429,10,583,25)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
// rule `#wrc20Imports_WRC20_Defns`(.KList)=>`___WASM_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(inj{IdentifierToken,OptionalId}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$revert\"","String"))),`___WASM-TEXT_FuncSpec_InlineImport_TypeUse`(`(import__)_WASM-TEXT_InlineImport_WasmString_WasmString`(inj{WasmStringToken,WasmString}(`#unparseWasmString(_)_WASM-DATA_WasmStringToken_String`(#token("\"\\\"ethereum\\\"\"","String"))),inj{WasmStringToken,WasmString}(`#unparseWasmString(_)_WASM-DATA_WasmStringToken_String`(#token("\"\\\"revert\\\"\"","String")))),inj{TypeDecls,TypeUse}(`___WASM_TypeDecls_TypeDecl_TypeDecls`(`___WASM_TypeDecl_TypeKeyWord_ValTypes`(`param_WASM_TypeKeyWord`(.KList),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i32_WASM-DATA_IValType`(.KList)),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i32_WASM-DATA_IValType`(.KList)),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList)))),`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)))))),`___WASM_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(inj{IdentifierToken,OptionalId}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$finish\"","String"))),`___WASM-TEXT_FuncSpec_InlineImport_TypeUse`(`(import__)_WASM-TEXT_InlineImport_WasmString_WasmString`(inj{WasmStringToken,WasmString}(`#unparseWasmString(_)_WASM-DATA_WasmStringToken_String`(#token("\"\\\"ethereum\\\"\"","String"))),inj{WasmStringToken,WasmString}(`#unparseWasmString(_)_WASM-DATA_WasmStringToken_String`(#token("\"\\\"finish\\\"\"","String")))),inj{TypeDecls,TypeUse}(`___WASM_TypeDecls_TypeDecl_TypeDecls`(`___WASM_TypeDecl_TypeKeyWord_ValTypes`(`param_WASM_TypeKeyWord`(.KList),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i32_WASM-DATA_IValType`(.KList)),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i32_WASM-DATA_IValType`(.KList)),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList)))),`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)))))),`___WASM_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(inj{IdentifierToken,OptionalId}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$getCallDataSize\"","String"))),`___WASM-TEXT_FuncSpec_InlineImport_TypeUse`(`(import__)_WASM-TEXT_InlineImport_WasmString_WasmString`(inj{WasmStringToken,WasmString}(`#unparseWasmString(_)_WASM-DATA_WasmStringToken_String`(#token("\"\\\"ethereum\\\"\"","String"))),inj{WasmStringToken,WasmString}(`#unparseWasmString(_)_WASM-DATA_WasmStringToken_String`(#token("\"\\\"getCallDataSize\\\"\"","String")))),inj{TypeDecls,TypeUse}(`___WASM_TypeDecls_TypeDecl_TypeDecls`(`___WASM_TypeDecl_TypeKeyWord_ValTypes`(`result_WASM_TypeKeyWord`(.KList),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i32_WASM-DATA_IValType`(.KList)),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList))),`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)))))),`___WASM_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(inj{IdentifierToken,OptionalId}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$callDataCopy\"","String"))),`___WASM-TEXT_FuncSpec_InlineImport_TypeUse`(`(import__)_WASM-TEXT_InlineImport_WasmString_WasmString`(inj{WasmStringToken,WasmString}(`#unparseWasmString(_)_WASM-DATA_WasmStringToken_String`(#token("\"\\\"ethereum\\\"\"","String"))),inj{WasmStringToken,WasmString}(`#unparseWasmString(_)_WASM-DATA_WasmStringToken_String`(#token("\"\\\"callDataCopy\\\"\"","String")))),inj{TypeDecls,TypeUse}(`___WASM_TypeDecls_TypeDecl_TypeDecls`(`___WASM_TypeDecl_TypeKeyWord_ValTypes`(`param_WASM_TypeKeyWord`(.KList),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i32_WASM-DATA_IValType`(.KList)),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i32_WASM-DATA_IValType`(.KList)),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i32_WASM-DATA_IValType`(.KList)),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList))))),`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)))))),`___WASM_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(inj{IdentifierToken,OptionalId}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$storageLoad\"","String"))),`___WASM-TEXT_FuncSpec_InlineImport_TypeUse`(`(import__)_WASM-TEXT_InlineImport_WasmString_WasmString`(inj{WasmStringToken,WasmString}(`#unparseWasmString(_)_WASM-DATA_WasmStringToken_String`(#token("\"\\\"ethereum\\\"\"","String"))),inj{WasmStringToken,WasmString}(`#unparseWasmString(_)_WASM-DATA_WasmStringToken_String`(#token("\"\\\"storageLoad\\\"\"","String")))),inj{TypeDecls,TypeUse}(`___WASM_TypeDecls_TypeDecl_TypeDecls`(`___WASM_TypeDecl_TypeKeyWord_ValTypes`(`param_WASM_TypeKeyWord`(.KList),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i32_WASM-DATA_IValType`(.KList)),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i32_WASM-DATA_IValType`(.KList)),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList)))),`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)))))),`___WASM_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(inj{IdentifierToken,OptionalId}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$storageStore\"","String"))),`___WASM-TEXT_FuncSpec_InlineImport_TypeUse`(`(import__)_WASM-TEXT_InlineImport_WasmString_WasmString`(inj{WasmStringToken,WasmString}(`#unparseWasmString(_)_WASM-DATA_WasmStringToken_String`(#token("\"\\\"ethereum\\\"\"","String"))),inj{WasmStringToken,WasmString}(`#unparseWasmString(_)_WASM-DATA_WasmStringToken_String`(#token("\"\\\"storageStore\\\"\"","String")))),inj{TypeDecls,TypeUse}(`___WASM_TypeDecls_TypeDecl_TypeDecls`(`___WASM_TypeDecl_TypeKeyWord_ValTypes`(`param_WASM_TypeKeyWord`(.KList),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i32_WASM-DATA_IValType`(.KList)),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i32_WASM-DATA_IValType`(.KList)),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList)))),`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)))))),`___WASM_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(inj{IdentifierToken,OptionalId}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$getCaller\"","String"))),`___WASM-TEXT_FuncSpec_InlineImport_TypeUse`(`(import__)_WASM-TEXT_InlineImport_WasmString_WasmString`(inj{WasmStringToken,WasmString}(`#unparseWasmString(_)_WASM-DATA_WasmStringToken_String`(#token("\"\\\"ethereum\\\"\"","String"))),inj{WasmStringToken,WasmString}(`#unparseWasmString(_)_WASM-DATA_WasmStringToken_String`(#token("\"\\\"getCaller\\\"\"","String")))),inj{TypeDecls,TypeUse}(`___WASM_TypeDecls_TypeDecl_TypeDecls`(`___WASM_TypeDecl_TypeKeyWord_ValTypes`(`param_WASM_TypeKeyWord`(.KList),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i32_WASM-DATA_IValType`(.KList)),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList))),`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList)))))),`___WASM_Defns_Defn_Defns`(inj{MemoryDefn,Defn}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(`_WASM-DATA_OptionalId`(.KList),`___WASM-TEXT_MemorySpec_InlineExport_MemorySpec`(`(export_)_WASM-TEXT_InlineExport_WasmString`(inj{WasmStringToken,WasmString}(`#unparseWasmString(_)_WASM-DATA_WasmStringToken_String`(#token("\"\\\"memory\\\"\"","String")))),inj{Int,MemorySpec}(#token("1","Int"))))),inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)))))))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(68e6a61f15cf9b82d518165449f270e0de4e279d1222e0e04d06a031a6c33d34) contentStartColumn(10) contentStartLine(417) macro() org.kframework.attributes.Location(Location(417,10,426,13)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
// rule `#wrc20ReverseBytesTypeDecls_WRC20_TypeDecls`(.KList)=>`___WASM_TypeDecls_TypeDecl_TypeDecls`(`___WASM_TypeDecl_TypeKeyWord_ValTypes`(`param_WASM_TypeKeyWord`(.KList),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i64_WASM-DATA_IValType`(.KList)),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList))),`___WASM_TypeDecls_TypeDecl_TypeDecls`(`___WASM_TypeDecl_TypeKeyWord_ValTypes`(`result_WASM_TypeKeyWord`(.KList),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i64_WASM-DATA_IValType`(.KList)),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList))),`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(075e0c9ae50924d7cbac44e4d682173f33d1de4dbc1bb0095114eca4dc1fd193) contentStartColumn(10) contentStartLine(586) macro() org.kframework.attributes.Location(Location(586,10,586,92)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
// rule `#wrc20ReverseBytes_WRC20_Defns`(.KList)=>`___WASM_Defns_Defn_Defns`(inj{FuncDefn,Defn}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(inj{IdentifierToken,OptionalId}(`String2Identifier(_)_WASM-TEXT_IdentifierToken_String`(#token("\"$i64.reverse_bytes\"","String"))),`____WASM_FuncSpec_TypeUse_LocalDecls_Instrs`(inj{TypeDecls,TypeUse}(`#wrc20ReverseBytesTypeDecls_WRC20_TypeDecls`(.KList)),`___WASM_LocalDecls_LocalDecl_LocalDecls`(`local__WASM_LocalDecl_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i64_WASM-DATA_IValType`(.KList)),`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(`i64_WASM-DATA_IValType`(.KList)),`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList)))),`.List{"___WASM_LocalDecls_LocalDecl_LocalDecls"}_LocalDecls`(.KList)),`___WASM_Instrs_Instr_Instrs`(`block__end_WASM_Instr_TypeDecls_Instrs`(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList),`___WASM_Instrs_Instr_Instrs`(`loop__end_WASM_Instr_TypeDecls_Instrs`(`.List{"___WASM_TypeDecls_TypeDecl_TypeDecls"}_TypeDecls`(.KList),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i64_WASM-DATA_IValType`(.KList),#token("8","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IRelOp`(`i64_WASM-DATA_IValType`(.KList),`ge_u_WASM-NUMERIC_IRelOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br_if__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(#token("0","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i64_WASM-DATA_IValType`(.KList),#token("56","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i64_WASM-DATA_IValType`(.KList),#token("8","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IBinOp`(`i64_WASM-DATA_IValType`(.KList),`mul_WASM-NUMERIC_IBinOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IBinOp`(`i64_WASM-DATA_IValType`(.KList),`sub_WASM-NUMERIC_IBinOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IBinOp`(`i64_WASM-DATA_IValType`(.KList),`shl_WASM-NUMERIC_IBinOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i64_WASM-DATA_IValType`(.KList),#token("56","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IBinOp`(`i64_WASM-DATA_IValType`(.KList),`shr_u_WASM-NUMERIC_IBinOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i64_WASM-DATA_IValType`(.KList),#token("56","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i64_WASM-DATA_IValType`(.KList),#token("8","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IBinOp`(`i64_WASM-DATA_IValType`(.KList),`mul_WASM-NUMERIC_IBinOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IBinOp`(`i64_WASM-DATA_IValType`(.KList),`sub_WASM-NUMERIC_IBinOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IBinOp`(`i64_WASM-DATA_IValType`(.KList),`shl_WASM-NUMERIC_IBinOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(#token("2","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IBinOp`(`i64_WASM-DATA_IValType`(.KList),`add_WASM-NUMERIC_IBinOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.set__WASM_PlainInstr_Index`(inj{Int,Index}(#token("2","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.const__WASM_PlainInstr_IValType_Int`(`i64_WASM-DATA_IValType`(.KList),#token("1","Int"))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`_.__WASM_PlainInstr_IValType_IBinOp`(`i64_WASM-DATA_IValType`(.KList),`add_WASM-NUMERIC_IBinOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.set__WASM_PlainInstr_Index`(inj{Int,Index}(#token("1","Int")))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`br__WASM_PlainInstr_Index`(inj{Int,Index}(#token("0","Int")))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)))))))))))))))))))))))))))))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)))),`___WASM_Instrs_Instr_Instrs`(inj{PlainInstr,Instr}(`local.get__WASM_PlainInstr_Index`(inj{Int,Index}(#token("2","Int")))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))))),inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b1602dc03ac9d8b18cea8723a1b1b7a2dbb2d502985fa23a03bd407c01afacef) contentStartColumn(10) contentStartLine(588) macro() org.kframework.attributes.Location(Location(588,10,626,13)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
// rule `#wrc20_WRC20_Stmts`(.KList)=>`___WASM_Stmts_Stmt_Stmts`(inj{ModuleDecl,Stmt}(`(module__)_WASM_ModuleDecl_OptionalId_Defns`(`_WASM-DATA_OptionalId`(.KList),`#wrc20Body_WRC20_Defns`(.KList))),inj{EmptyStmts,Stmts}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(514deae898c1096fedf0a6ef4c307e18e189636d57fb1076dd1d2d3373d5bede) contentStartColumn(10) contentStartLine(413) macro() org.kframework.attributes.Location(Location(413,10,413,53)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
// rule `#zero(_)_WASM-DATA_ValStack_ValTypes`(`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList))=>`.ValStack_WASM-DATA_ValStack`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bd5a03a9fa10470da2cec110d65324bc984a4ce8346838199d4ccd593edd4897) contentStartColumn(10) contentStartLine(358) org.kframework.attributes.Location(Location(358,10,358,51)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}()),
        Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("358"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(358,10,358,51)"), UNIQUE'Unds'ID{}("bd5a03a9fa10470da2cec110d65324bc984a4ce8346838199d4ccd593edd4897")]

// rule `#zero(_)_WASM-DATA_ValStack_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{IValType,ValType}(ITYPE),VTYPES))=>`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,#token("0","Int"))),`#zero(_)_WASM-DATA_ValStack_ValTypes`(VTYPES)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f7687e17c0d91f6898d0ac6e8433d9fe6300b9e02a5aace2c4989c865dcca300) contentStartColumn(10) contentStartLine(359) org.kframework.attributes.Location(Location(359,10,359,69)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortIValType{}, SortValType{}}(VarITYPE:SortIValType{}),VarVTYPES:SortValTypes{})),
        Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},\dv{SortInt{}}("0"))),Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(VarVTYPES:SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("359"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(359,10,359,69)"), UNIQUE'Unds'ID{}("f7687e17c0d91f6898d0ac6e8433d9fe6300b9e02a5aace2c4989c865dcca300")]

// rule `.Bytes_BYTES-HOOKED_Bytes`(.KList)=>`String2Bytes(_)_BYTES-HOOKED_Bytes_String`(#token("\"\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(570abd7c4fc876339bb4f6ac9456fc64f59cdf5674fa58908bcc9a86d9cbf7e4) contentStartColumn(8) contentStartLine(710) org.kframework.attributes.Location(Location(710,8,710,34)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBytes{},R} (
        Lbl'Stop'Bytes'Unds'BYTES-HOOKED'Unds'Bytes{}(),
        LblString2Bytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'String{}(\dv{SortString{}}(""))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("710"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(710,8,710,34)"), UNIQUE'Unds'ID{}("570abd7c4fc876339bb4f6ac9456fc64f59cdf5674fa58908bcc9a86d9cbf7e4")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Defn,KItem}(D) #as _16``~>DotVar2),_4,`<curFrame>`(_0,_1,`<curModIdx>`(`.Int_WASM-DATA_OptionalInt`(.KList)),_2,_3) #as _17,_5,_6,_7,_8,_9,_10,_11),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ModuleDecl,KItem}(`(module__)_WASM_ModuleDecl_OptionalId_Defns`(`_WASM-DATA_OptionalId`(.KList),inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))~>_16~>DotVar2),_4,_17,_5,_6,_7,_8,_9,_10,_11),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a33658a8f362b5e36b305d527cb0d140d54298a5d0bbba846b6763d59d3621e4) contentStartColumn(10) contentStartLine(1535) org.kframework.attributes.Location(Location(1535,10,1536,39)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortDefn{}, SortKItem{}}(VarD:SortDefn{}),Var'Unds'16:SortKItem{}),VarDotVar2:SortK{})),Var'Unds'4:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}()),Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'17:SortCurFrameCell{}),Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortModuleIdsCell{},Var'Unds'7:SortModuleInstancesCell{},Var'Unds'8:SortNextModuleIdxCell{},Var'Unds'9:SortMainStoreCell{},Var'Unds'10:SortDeterministicMemoryGrowthCell{},Var'Unds'11:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortModuleDecl{}, SortKItem{}}(Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()))),kseq{}(Var'Unds'16:SortKItem{},VarDotVar2:SortK{}))),Var'Unds'4:SortValstackCell{},Var'Unds'17:SortCurFrameCell{},Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortModuleIdsCell{},Var'Unds'7:SortModuleInstancesCell{},Var'Unds'8:SortNextModuleIdxCell{},Var'Unds'9:SortMainStoreCell{},Var'Unds'10:SortDeterministicMemoryGrowthCell{},Var'Unds'11:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1535"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1535,10,1536,39)"), UNIQUE'Unds'ID{}("a33658a8f362b5e36b305d527cb0d140d54298a5d0bbba846b6763d59d3621e4")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Val,KItem}(V) #as _12``~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(V,VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires `_=/=K_`(_12,inj{Val,KItem}(`undefined_WASM-DATA_Val`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(e9ec53b0d0d08b3579e685f0d162fd2aa4e01e98e15550af554127828e7e203a) contentStartColumn(10) contentStartLine(181) org.kframework.attributes.Location(Location(181,10,183,32)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(Var'Unds'12:SortKItem{},dotk{}()),kseq{}(inj{SortVal{}, SortKItem{}}(Lblundefined'Unds'WASM-DATA'Unds'Val{}()),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortVal{}, SortKItem{}}(VarV:SortVal{}),Var'Unds'12:SortKItem{}),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarV:SortVal{},VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("181"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(181,10,183,32)"), UNIQUE'Unds'ID{}("e9ec53b0d0d08b3579e685f0d162fd2aa4e01e98e15550af554127828e7e203a")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(IDX)) #as _13``~>inj{Instr,KItem}(I)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_13~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(37d15f2cd930549204b308703a4169c2ba712d6adf2a63d845be6199c512d28e) contentStartColumn(10) contentStartLine(354) org.kframework.attributes.Location(Location(354,10,354,50)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarIDX:SortIndex{})),Var'Unds'13:SortKItem{}),kseq{}(inj{SortInstr{}, SortKItem{}}(VarI:SortInstr{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'13:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("354"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(354,10,354,50)"), UNIQUE'Unds'ID{}("37d15f2cd930549204b308703a4169c2ba712d6adf2a63d845be6199c512d28e")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(IDX)) #as _13``~>inj{Stmts,KItem}(SS)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_13~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(45f4a5dc708d7568638c02b7461b87dcf3b5ec126e5d0d6d1c8c6c6fd6108e37) contentStartColumn(10) contentStartLine(353) org.kframework.attributes.Location(Location(353,10,353,50)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarIDX:SortIndex{})),Var'Unds'13:SortKItem{}),kseq{}(inj{SortStmts{}, SortKItem{}}(VarSS:SortStmts{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'13:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("353"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(353,10,353,50)"), UNIQUE'Unds'ID{}("45f4a5dc708d7568638c02b7461b87dcf3b5ec126e5d0d6d1c8c6c6fd6108e37")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{PlainInstr,KItem}(`return_WASM_PlainInstr`(.KList)) #as _13``~>inj{Instr,KItem}(I)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_13~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(522bb993b1cac7af4ee0a0e60571d798a67f57735b9d2a8855e46eac9a48f59b) contentStartColumn(10) contentStartLine(757) org.kframework.attributes.Location(Location(757,10,757,51)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortPlainInstr{}, SortKItem{}}(Lblreturn'Unds'WASM'Unds'PlainInstr{}()),Var'Unds'13:SortKItem{}),kseq{}(inj{SortInstr{}, SortKItem{}}(VarI:SortInstr{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'13:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("757"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(757,10,757,51)"), UNIQUE'Unds'ID{}("522bb993b1cac7af4ee0a0e60571d798a67f57735b9d2a8855e46eac9a48f59b")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{PlainInstr,KItem}(`return_WASM_PlainInstr`(.KList)) #as _13``~>inj{Label,KItem}(L)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_13~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(45cd7ea60a5912c6626a2244f3fc4c61e70760e46ecc7dd33ada746b466781a9) contentStartColumn(10) contentStartLine(759) org.kframework.attributes.Location(Location(759,10,759,51)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortPlainInstr{}, SortKItem{}}(Lblreturn'Unds'WASM'Unds'PlainInstr{}()),Var'Unds'13:SortKItem{}),kseq{}(inj{SortLabel{}, SortKItem{}}(VarL:SortLabel{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'13:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("759"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(759,10,759,51)"), UNIQUE'Unds'ID{}("45cd7ea60a5912c6626a2244f3fc4c61e70760e46ecc7dd33ada746b466781a9")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{PlainInstr,KItem}(`return_WASM_PlainInstr`(.KList)) #as _13``~>inj{Stmts,KItem}(SS)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_13~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(964a127ae19ca7678eadd025cd2424bc2a2beec33803e7a6ad6a85ad5e9b8039) contentStartColumn(10) contentStartLine(758) org.kframework.attributes.Location(Location(758,10,758,51)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortPlainInstr{}, SortKItem{}}(Lblreturn'Unds'WASM'Unds'PlainInstr{}()),Var'Unds'13:SortKItem{}),kseq{}(inj{SortStmts{}, SortKItem{}}(VarSS:SortStmts{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'13:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("758"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(758,10,758,51)"), UNIQUE'Unds'ID{}("964a127ae19ca7678eadd025cd2424bc2a2beec33803e7a6ad6a85ad5e9b8039")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _13``~>inj{Defn,KItem}(D)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_13~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(838b4dd17ffce836b0348bdab03d97479db000e840c52032d779de38ed581a99) contentStartColumn(10) contentStartLine(170) org.kframework.attributes.Location(Location(170,10,170,47)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'13:SortKItem{}),kseq{}(inj{SortDefn{}, SortKItem{}}(VarD:SortDefn{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'13:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("170"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(170,10,170,47)"), UNIQUE'Unds'ID{}("838b4dd17ffce836b0348bdab03d97479db000e840c52032d779de38ed581a99")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _13``~>inj{Defns,KItem}(DS)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_13~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a7423c2751591df336af95c08a9e1e285d9262b12620dda8a05837cc93417848) contentStartColumn(10) contentStartLine(171) org.kframework.attributes.Location(Location(171,10,171,47)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'13:SortKItem{}),kseq{}(inj{SortDefns{}, SortKItem{}}(VarDS:SortDefns{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'13:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("171"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(171,10,171,47)"), UNIQUE'Unds'ID{}("a7423c2751591df336af95c08a9e1e285d9262b12620dda8a05837cc93417848")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _13``~>inj{Frame,KItem}(F)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_13~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(63c96ed57eb87ee6fe6838424665acfb19af2094781836f52f4617dffa08d7cf) contentStartColumn(10) contentStartLine(167) org.kframework.attributes.Location(Location(167,10,167,47)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'13:SortKItem{}),kseq{}(inj{SortFrame{}, SortKItem{}}(VarF:SortFrame{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'13:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("167"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(167,10,167,47)"), UNIQUE'Unds'ID{}("63c96ed57eb87ee6fe6838424665acfb19af2094781836f52f4617dffa08d7cf")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _13``~>inj{Instr,KItem}(I)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_13~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d33203688983dc8db6dc9428fa838527cffa10812a2b3bd26727e0cfd4502d69) contentStartColumn(10) contentStartLine(168) org.kframework.attributes.Location(Location(168,10,168,47)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'13:SortKItem{}),kseq{}(inj{SortInstr{}, SortKItem{}}(VarI:SortInstr{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'13:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("168"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,10,168,47)"), UNIQUE'Unds'ID{}("d33203688983dc8db6dc9428fa838527cffa10812a2b3bd26727e0cfd4502d69")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _13``~>inj{Instrs,KItem}(IS)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_13~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(909f9d33c3f3d0801b7235b610b64dc9c6aa174678f7762cd756d56368410cd5) contentStartColumn(10) contentStartLine(169) org.kframework.attributes.Location(Location(169,10,169,47)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'13:SortKItem{}),kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'13:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("169"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(169,10,169,47)"), UNIQUE'Unds'ID{}("909f9d33c3f3d0801b7235b610b64dc9c6aa174678f7762cd756d56368410cd5")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _13``~>inj{Label,KItem}(L)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_13~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7fbf2f7bca04d4247e4f5657053e41cf7abb0b932c591d303cdd689bc0e4244c) contentStartColumn(10) contentStartLine(166) org.kframework.attributes.Location(Location(166,10,166,47)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'13:SortKItem{}),kseq{}(inj{SortLabel{}, SortKItem{}}(VarL:SortLabel{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'13:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("166"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(166,10,166,47)"), UNIQUE'Unds'ID{}("7fbf2f7bca04d4247e4f5657053e41cf7abb0b932c591d303cdd689bc0e4244c")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(``inj{Instr,KItem}(`trap_WASM_Instr`(.KList)) #as _13``~>inj{Stmts,KItem}(`___WASM_Stmts_Stmt_Stmts`(S,SS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_13~>inj{Stmt,KItem}(S)~>inj{Stmts,KItem}(SS)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bed02bfa5890d94df699743101d97dd735b57a04b525b0136c381f2a190ec7c9) contentStartColumn(10) contentStartLine(173) org.kframework.attributes.Location(Location(173,10,173,59)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),Var'Unds'13:SortKItem{}),kseq{}(inj{SortStmts{}, SortKItem{}}(Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(VarS:SortStmt{},VarSS:SortStmts{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'13:SortKItem{},kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),kseq{}(inj{SortStmts{}, SortKItem{}}(VarSS:SortStmts{}),VarDotVar2:SortK{})))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("173"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(173,10,173,59)"), UNIQUE'Unds'ID{}("bed02bfa5890d94df699743101d97dd735b57a04b525b0136c381f2a190ec7c9")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`loop__end_WASM_Instr_TypeDecls_Instrs`(TDECLS,IS) #as _16)~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(_0,_1,_2,`<labelDepth>`(DEPTH),_3),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`result_WASM_TypeKeyWord`(.KList),TDECLS),`___WASM_Instrs_Instr_Instrs`(_16,inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))),VALSTACK))~>DotVar2),`<valstack>`(`.ValStack_WASM-DATA_ValStack`(.KList)),`<curFrame>`(_0,_1,_2,`<labelDepth>`(`_+Int_`(DEPTH,#token("1","Int"))),_3),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d6644b3ad5896be7282cd12bfe4cd9d57c6cf3e30b736ddf722fadb3e9659052) contentStartColumn(10) contentStartLine(394) org.kframework.attributes.Location(Location(394,10,396,58)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(\and{SortInstr{}}(Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{}),Var'Unds'16:SortInstr{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblresult'Unds'WASM'Unds'TypeKeyWord{}(),VarTDECLS:SortTypeDecls{}),Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(Var'Unds'16:SortInstr{},inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())),VarVALSTACK:SortValStack{})),VarDotVar2:SortK{}))),Lbl'-LT-'valstack'-GT-'{}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("394"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(394,10,396,58)"), UNIQUE'Unds'ID{}("d6644b3ad5896be7282cd12bfe4cd9d57c6cf3e30b736ddf722fadb3e9659052")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#checkTypeUse(_)_WASM_Instr_TypeUse`(`(type_)_WASM_TypeUse_Index`(TFIDF)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d21e9b9a2c17bbae154e1e7b948ec057d928a86316c6f66b2b6e07df35afa9a8) contentStartColumn(10) contentStartLine(666) org.kframework.attributes.Location(Location(666,10,666,65)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(VarTFIDF:SortIndex{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("666"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(666,10,666,65)"), UNIQUE'Unds'ID{}("d21e9b9a2c17bbae154e1e7b948ec057d928a86316c6f66b2b6e07df35afa9a8")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#checkTypeUse(_)_WASM_Instr_TypeUse`(`(type_)__WASM_TypeUse_Index_TypeDecls`(TFIDF,TDECLS)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4ff25c68a526cc323c4d175047d7f0c4f8d7e90f0a4d1f8cc6870a6505cff11d) contentStartColumn(10) contentStartLine(667) org.kframework.attributes.Location(Location(667,10,667,65)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(VarTFIDF:SortIndex{},VarTDECLS:SortTypeDecls{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("667"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(667,10,667,65)"), UNIQUE'Unds'ID{}("4ff25c68a526cc323c4d175047d7f0c4f8d7e90f0a4d1f8cc6870a6505cff11d")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#checkTypeUse(_)_WASM_Instr_TypeUse`(inj{TypeDecls,TypeUse}(TDECLS)))~>DotVar2),_17,`<curFrame>`(_0,_1,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_2,_3) #as _31,_18,_19,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_4,_5,`<types>`(TYPES),_6,_7,_8,_9,_10,_11,_12,_13,_14,_15,_16)),DotVar4)) #as _34,_20,_21,_22,_23),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_17,_31,_18,_19,_34,_20,_21,_22,_23),DotVar0) requires `_in__LIST_Bool_KItem_List`(inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS))),`values(_)_MAP_List_Map`(TYPES)) ensures #token("true","Bool") [UNIQUE_ID(dd72925c59b40443949d6e509a9ca0c3e2d19b9c2b32f2650e2b15a57cd92873) contentStartColumn(10) contentStartLine(657) org.kframework.attributes.Location(Location(657,10,664,68)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{}))),Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(VarTYPES:SortMap{})),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(inj{SortTypeDecls{}, SortTypeUse{}}(VarTDECLS:SortTypeDecls{}))),VarDotVar2:SortK{})),Var'Unds'17:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'31:SortCurFrameCell{}),Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'4:SortExportsCell{},Var'Unds'5:SortTypeIdsCell{},Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'6:SortNextTypeIdxCell{},Var'Unds'7:SortFuncIdsCell{},Var'Unds'8:SortFuncAddrsCell{},Var'Unds'9:SortNextFuncIdxCell{},Var'Unds'10:SortTabIdsCell{},Var'Unds'11:SortTabAddrsCell{},Var'Unds'12:SortMemIdsCell{},Var'Unds'13:SortMemAddrsCell{},Var'Unds'14:SortGlobIdsCell{},Var'Unds'15:SortGlobalAddrsCell{},Var'Unds'16:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'34:SortModuleInstancesCell{}),Var'Unds'20:SortNextModuleIdxCell{},Var'Unds'21:SortMainStoreCell{},Var'Unds'22:SortDeterministicMemoryGrowthCell{},Var'Unds'23:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'17:SortValstackCell{},Var'Unds'31:SortCurFrameCell{},Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Var'Unds'34:SortModuleInstancesCell{},Var'Unds'20:SortNextModuleIdxCell{},Var'Unds'21:SortMainStoreCell{},Var'Unds'22:SortDeterministicMemoryGrowthCell{},Var'Unds'23:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("657"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(657,10,664,68)"), UNIQUE'Unds'ID{}("dd72925c59b40443949d6e509a9ca0c3e2d19b9c2b32f2650e2b15a57cd92873")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#checkTypeUse(_)_WASM_Instr_TypeUse`(inj{TypeDecls,TypeUse}(TDECLS)))~>DotVar2),_17,`<curFrame>`(_0,_1,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_2,_3) #as _31,_18,_19,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_4,_5,`<types>`(TYPES),_6,_7,_8,_9,_10,_11,_12,_13,_14,_15,_16)),DotVar4)) #as _34,_20,_21,_22,_23),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{TypeDefn,KItem}(`(type_(func_))_WASM_TypeDefn_OptionalId_TypeDecls`(`_WASM-DATA_OptionalId`(.KList),TDECLS))~>DotVar2),_17,_31,_18,_19,_34,_20,_21,_22,_23),DotVar0) requires `notBool_`(`_in__LIST_Bool_KItem_List`(inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS))),`values(_)_MAP_List_Map`(TYPES))) ensures #token("true","Bool") [UNIQUE_ID(6a265ba221a943c8a43b2788f523c985fb144c50c5003d11c8cadc62b81e9420) contentStartColumn(10) contentStartLine(648) org.kframework.attributes.Location(Location(648,10,655,76)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{}))),Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(VarTYPES:SortMap{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(inj{SortTypeDecls{}, SortTypeUse{}}(VarTDECLS:SortTypeDecls{}))),VarDotVar2:SortK{})),Var'Unds'17:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'31:SortCurFrameCell{}),Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'4:SortExportsCell{},Var'Unds'5:SortTypeIdsCell{},Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'6:SortNextTypeIdxCell{},Var'Unds'7:SortFuncIdsCell{},Var'Unds'8:SortFuncAddrsCell{},Var'Unds'9:SortNextFuncIdxCell{},Var'Unds'10:SortTabIdsCell{},Var'Unds'11:SortTabAddrsCell{},Var'Unds'12:SortMemIdsCell{},Var'Unds'13:SortMemAddrsCell{},Var'Unds'14:SortGlobIdsCell{},Var'Unds'15:SortGlobalAddrsCell{},Var'Unds'16:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'34:SortModuleInstancesCell{}),Var'Unds'20:SortNextModuleIdxCell{},Var'Unds'21:SortMainStoreCell{},Var'Unds'22:SortDeterministicMemoryGrowthCell{},Var'Unds'23:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTypeDefn{}, SortKItem{}}(Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),VarTDECLS:SortTypeDecls{})),VarDotVar2:SortK{})),Var'Unds'17:SortValstackCell{},Var'Unds'31:SortCurFrameCell{},Var'Unds'18:SortModuleRegistryCell{},Var'Unds'19:SortModuleIdsCell{},Var'Unds'34:SortModuleInstancesCell{},Var'Unds'20:SortNextModuleIdxCell{},Var'Unds'21:SortMainStoreCell{},Var'Unds'22:SortDeterministicMemoryGrowthCell{},Var'Unds'23:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("648"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(648,10,655,76)"), UNIQUE'Unds'ID{}("6a265ba221a943c8a43b2788f523c985fb144c50c5003d11c8cadc62b81e9420")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Stmt,KItem}(`#initElements(_,_,_,_,_)_WASM_Stmt_Int_Int_Map_Map_ElemSegment`(ADDR,OFFSET,FADDRS,IDS,`___WASM-DATA_ElemSegment_Index_ElemSegment`(E,ES)))~>DotVar2),_9,_10,_11,_12,_13,_14,`<mainStore>`(_2,_3,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),_0,_1,`<tdata>`(DATA))),DotVar4)),_4,_5,_6,_7,_8),_15,_16),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Stmt,KItem}(`#initElements(_,_,_,_,_)_WASM_Stmt_Int_Int_Map_Map_ElemSegment`(ADDR,`_+Int_`(OFFSET,#token("1","Int")),FADDRS,IDS,ES))~>DotVar2),_9,_10,_11,_12,_13,_14,`<mainStore>`(_2,_3,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),_0,_1,`<tdata>`(`Map:update`(DATA,inj{Int,KItem}(OFFSET),`Map:lookup`(FADDRS,inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,E))))))),DotVar4)),_4,_5,_6,_7,_8),_15,_16),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b737134cc6e7b6acacf56bbbdf824d19bc5eae29d70b0e1ea3a4cf77d52e4fa0) contentStartColumn(10) contentStartLine(1239) org.kframework.attributes.Location(Location(1239,10,1244,20)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(VarADDR:SortInt{},VarOFFSET:SortInt{},VarFADDRS:SortMap{},VarIDS:SortMap{},Lbl'UndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment{}(VarE:SortIndex{},VarES:SortElemSegment{}))),VarDotVar2:SortK{})),Var'Unds'9:SortValstackCell{},Var'Unds'10:SortCurFrameCell{},Var'Unds'11:SortModuleRegistryCell{},Var'Unds'12:SortModuleIdsCell{},Var'Unds'13:SortModuleInstancesCell{},Var'Unds'14:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Lbl'-LT-'tdata'-GT-'{}(VarDATA:SortMap{}))),VarDotVar4:SortTabInstCellMap{})),Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'15:SortDeterministicMemoryGrowthCell{},Var'Unds'16:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(VarADDR:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarOFFSET:SortInt{},\dv{SortInt{}}("1")),VarFADDRS:SortMap{},VarIDS:SortMap{},VarES:SortElemSegment{})),VarDotVar2:SortK{})),Var'Unds'9:SortValstackCell{},Var'Unds'10:SortCurFrameCell{},Var'Unds'11:SortModuleRegistryCell{},Var'Unds'12:SortModuleIdsCell{},Var'Unds'13:SortModuleInstancesCell{},Var'Unds'14:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Lbl'-LT-'tdata'-GT-'{}(LblMap'Coln'update{}(VarDATA:SortMap{},inj{SortInt{}, SortKItem{}}(VarOFFSET:SortInt{}),LblMap'Coln'lookup{}(VarFADDRS:SortMap{},inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarE:SortIndex{}))))))),VarDotVar4:SortTabInstCellMap{})),Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'15:SortDeterministicMemoryGrowthCell{},Var'Unds'16:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1239"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1239,10,1244,20)"), UNIQUE'Unds'ID{}("b737134cc6e7b6acacf56bbbdf824d19bc5eae29d70b0e1ea3a4cf77d52e4fa0")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Stmt,KItem}(`#initElements(_,_,_,_,_)_WASM_Stmt_Int_Int_Map_Map_ElemSegment`(_0,_1,_2,_3,`.List{"___WASM-DATA_ElemSegment_Index_ElemSegment"}_ElemSegment`(.KList)))~>DotVar2),_4,_5,_6,_7,_8,_9,_10,_11,_12),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_4,_5,_6,_7,_8,_9,_10,_11,_12),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(379dc96639b20cb031b08da4e04cb4d443462adaf097ed8bddc2c9207e4dabcb) contentStartColumn(10) contentStartLine(1238) org.kframework.attributes.Location(Location(1238,10,1238,85)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(Var'Unds'0:SortInt{},Var'Unds'1:SortInt{},Var'Unds'2:SortMap{},Var'Unds'3:SortMap{},Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ElemSegment'Unds'Index'Unds'ElemSegment'QuotRBraUnds'ElemSegment{}())),VarDotVar2:SortK{})),Var'Unds'4:SortValstackCell{},Var'Unds'5:SortCurFrameCell{},Var'Unds'6:SortModuleRegistryCell{},Var'Unds'7:SortModuleIdsCell{},Var'Unds'8:SortModuleInstancesCell{},Var'Unds'9:SortNextModuleIdxCell{},Var'Unds'10:SortMainStoreCell{},Var'Unds'11:SortDeterministicMemoryGrowthCell{},Var'Unds'12:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'4:SortValstackCell{},Var'Unds'5:SortCurFrameCell{},Var'Unds'6:SortModuleRegistryCell{},Var'Unds'7:SortModuleIdsCell{},Var'Unds'8:SortModuleInstancesCell{},Var'Unds'9:SortNextModuleIdxCell{},Var'Unds'10:SortMainStoreCell{},Var'Unds'11:SortDeterministicMemoryGrowthCell{},Var'Unds'12:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1238"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1238,10,1238,85)"), UNIQUE'Unds'ID{}("379dc96639b20cb031b08da4e04cb4d443462adaf097ed8bddc2c9207e4dabcb")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#init_localids___WASM_Instr_Int_ValTypes`(I,`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(077294a7c669931d19f0c8b63d38dc6b8d5afc1214844d27bdf9bdf06c1eff25) contentStartColumn(10) contentStartLine(431) org.kframework.attributes.Location(Location(431,10,431,87)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(VarI:SortInt{},Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("431"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(431,10,431,87)"), UNIQUE'Unds'ID{}("077294a7c669931d19f0c8b63d38dc6b8d5afc1214844d27bdf9bdf06c1eff25")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#init_localids___WASM_Instr_Int_ValTypes`(I,`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{AValType,ValType}(V),VS)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#init_localids___WASM_Instr_Int_ValTypes`(`_+Int_`(I,#token("1","Int")),VS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6773d3f8ff2b0654c1b8ff7343650da6d034a1f9b3b7d9247224e5413c4ec1a2) contentStartColumn(10) contentStartLine(432) org.kframework.attributes.Location(Location(432,10,432,87)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(VarI:SortInt{},Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortAValType{}, SortValType{}}(VarV:SortAValType{}),VarVS:SortValTypes{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")),VarVS:SortValTypes{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("432"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(432,10,432,87)"), UNIQUE'Unds'ID{}("6773d3f8ff2b0654c1b8ff7343650da6d034a1f9b3b7d9247224e5413c4ec1a2")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#init_localids___WASM_Instr_Int_ValTypes`(I,`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{NValType,ValType}(`{__}_WASM-DATA_NValType_Identifier_AValType`(ID,V)),VS)))~>DotVar2),_4,`<curFrame>`(_0,`<localIds>`(LOCALIDS),_1,_2,_3),_5,_6,_7,_8,_9,_10,_11),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#init_localids___WASM_Instr_Int_ValTypes`(`_+Int_`(I,#token("1","Int")),VS))~>DotVar2),_4,`<curFrame>`(_0,`<localIds>`(`Map:update`(LOCALIDS,inj{Identifier,KItem}(ID),inj{Int,KItem}(I))),_1,_2,_3),_5,_6,_7,_8,_9,_10,_11),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dfc5372c7846ed888619785ce501a585e142bc3b5ebaf952b3509413a1c6f887) contentStartColumn(10) contentStartLine(433) org.kframework.attributes.Location(Location(433,10,434,65)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(VarI:SortInt{},Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortNValType{}, SortValType{}}(Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},VarV:SortAValType{})),VarVS:SortValTypes{}))),VarDotVar2:SortK{})),Var'Unds'4:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Lbl'-LT-'localIds'-GT-'{}(VarLOCALIDS:SortMap{}),Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortModuleIdsCell{},Var'Unds'7:SortModuleInstancesCell{},Var'Unds'8:SortNextModuleIdxCell{},Var'Unds'9:SortMainStoreCell{},Var'Unds'10:SortDeterministicMemoryGrowthCell{},Var'Unds'11:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(Lbl'UndsPlus'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("1")),VarVS:SortValTypes{})),VarDotVar2:SortK{})),Var'Unds'4:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Lbl'-LT-'localIds'-GT-'{}(LblMap'Coln'update{}(VarLOCALIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarI:SortInt{}))),Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortModuleIdsCell{},Var'Unds'7:SortModuleInstancesCell{},Var'Unds'8:SortNextModuleIdxCell{},Var'Unds'9:SortMainStoreCell{},Var'Unds'10:SortDeterministicMemoryGrowthCell{},Var'Unds'11:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("433"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(433,10,434,65)"), UNIQUE'Unds'ID{}("dfc5372c7846ed888619785ce501a585e142bc3b5ebaf952b3509413a1c6f887")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#init_locals___WASM_Instr_Int_ValStack`(N,`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`init_local___WASM_Instr_Int_Val`(N,VALUE))~>inj{Instr,KItem}(`#init_locals___WASM_Instr_Int_ValStack`(`_+Int_`(N,#token("1","Int")),VALSTACK))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6d10b31e9fdcd4c7a4721a558034c68f15ffb7fe98986df72fb2ff74df5ff25e) contentStartColumn(10) contentStartLine(417) org.kframework.attributes.Location(Location(417,10,421,15)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(VarN:SortInt{},Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(VarN:SortInt{},VarVALUE:SortVal{})),kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")),VarVALSTACK:SortValStack{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("417"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(417,10,421,15)"), UNIQUE'Unds'ID{}("6d10b31e9fdcd4c7a4721a558034c68f15ffb7fe98986df72fb2ff74df5ff25e")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#init_locals___WASM_Instr_Int_ValStack`(_0,`.ValStack_WASM-DATA_ValStack`(.KList)))~>DotVar2),_1,_2,_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_1,_2,_3,_4,_5,_6,_7,_8,_9),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4ebd82dcade2881cd68d3ec3cab1fa8cde151408e275336ba33608d8aa5c3371) contentStartColumn(10) contentStartLine(416) org.kframework.attributes.Location(Location(416,10,416,52)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(Var'Unds'0:SortInt{},Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}())),VarDotVar2:SortK{})),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("416"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(416,10,416,52)"), UNIQUE'Unds'ID{}("4ebd82dcade2881cd68d3ec3cab1fa8cde151408e275336ba33608d8aa5c3371")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(_)_WASM-TEXT_FoldedInstr_PlainInstr`(PI))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(PI)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf4162273f4cd02153ce127e0f7f062c40fedf05a6d80709dc5412fc6bdcc494) contentStartColumn(10) contentStartLine(103) org.kframework.attributes.Location(Location(103,10,103,74)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(VarPI:SortPlainInstr{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(VarPI:SortPlainInstr{}),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("103"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(103,10,103,74)"), UNIQUE'Unds'ID{}("cf4162273f4cd02153ce127e0f7f062c40fedf05a6d80709dc5412fc6bdcc494")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(__)_WASM-TEXT_FoldedInstr_PlainInstr_Instrs`(PI,IS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>inj{PlainInstr,KItem}(PI)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(343033b534c8e6d1f224553298fe525afcc9bdba4749e1944689f18d512ff6a4) contentStartColumn(10) contentStartLine(102) org.kframework.attributes.Location(Location(102,10,102,74)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(VarPI:SortPlainInstr{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),kseq{}(inj{SortPlainInstr{}, SortKItem{}}(VarPI:SortPlainInstr{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("102"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(102,10,102,74)"), UNIQUE'Unds'ID{}("343033b534c8e6d1f224553298fe525afcc9bdba4749e1944689f18d512ff6a4")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(block___)_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs`(`_WASM-DATA_OptionalId`(.KList),TDECLS,INSTRS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`block__end_WASM_Instr_TypeDecls_Instrs`(TDECLS,INSTRS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e5307fde82135028934147d827cbb62f6a935194e9cfe983e44396a0b21513c) contentStartColumn(10) contentStartLine(111) org.kframework.attributes.Location(Location(111,10,111,107)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),VarTDECLS:SortTypeDecls{},VarINSTRS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarINSTRS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("111"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(111,10,111,107)"), UNIQUE'Unds'ID{}("9e5307fde82135028934147d827cbb62f6a935194e9cfe983e44396a0b21513c")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(block___)_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs`(inj{Identifier,OptionalId}(ID),TDECLS,INSTRS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{BlockInstr,KItem}(`block___end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId`(ID,TDECLS,INSTRS,`_WASM-DATA_OptionalId`(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b3a17f8fe97c07fd36429cf7d62b127aea84fb8573736946ae46a7e7a3453a99) contentStartColumn(10) contentStartLine(112) org.kframework.attributes.Location(Location(112,10,112,107)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LPar'block'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),VarTDECLS:SortTypeDecls{},VarINSTRS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDECLS:SortTypeDecls{},VarINSTRS:SortInstrs{},Lbl'Unds'WASM-DATA'Unds'OptionalId{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("112"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(112,10,112,107)"), UNIQUE'Unds'ID{}("b3a17f8fe97c07fd36429cf7d62b127aea84fb8573736946ae46a7e7a3453a99")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{DataDefn,KItem}(`(data__)_WASM_DataDefn_Offset_DataString`(OFFSET,STRINGS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{DataDefn,KItem}(`(data___)_WASM_DataDefn_Index_Offset_DataString`(inj{Int,Index}(#token("0","Int")),OFFSET,STRINGS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b537f9c872fa9a665b03f99890bb3f73ce0f8e90d5168ea302611a76041969b8) contentStartColumn(10) contentStartLine(1259) org.kframework.attributes.Location(Location(1259,10,1259,102)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbl'LPar'data'UndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Offset'Unds'DataString{}(VarOFFSET:SortOffset{},VarSTRINGS:SortDataString{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("0")),VarOFFSET:SortOffset{},VarSTRINGS:SortDataString{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1259"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1259,10,1259,102)"), UNIQUE'Unds'ID{}("b537f9c872fa9a665b03f99890bb3f73ce0f8e90d5168ea302611a76041969b8")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{DataDefn,KItem}(`(data___)_WASM_DataDefn_Index_Offset_DataString`(MEMID,`(offset_)_WASM_Offset_Instrs`(IS),STRINGS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>inj{DataDefn,KItem}(`data{__}_WASM_DataDefn_Index_Bytes`(MEMID,`#DS2Bytes(_)_WASM-DATA_Bytes_DataString`(STRINGS)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(386f2ec4ef269711818ce67a8bb29d9ff5134c1b77e0c65935ba3792e0be155d) contentStartColumn(10) contentStartLine(1261) org.kframework.attributes.Location(Location(1261,10,1261,102)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(VarMEMID:SortIndex{},Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(VarIS:SortInstrs{}),VarSTRINGS:SortDataString{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(VarMEMID:SortIndex{},Lbl'Hash'DS2Bytes'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'DataString{}(VarSTRINGS:SortDataString{}))),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1261"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1261,10,1261,102)"), UNIQUE'Unds'ID{}("386f2ec4ef269711818ce67a8bb29d9ff5134c1b77e0c65935ba3792e0be155d")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{DataDefn,KItem}(`(data___)_WASM_DataDefn_Index_Offset_DataString`(MEMID,inj{Instrs,Offset}(IS),STRINGS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>inj{DataDefn,KItem}(`data{__}_WASM_DataDefn_Index_Bytes`(MEMID,`#DS2Bytes(_)_WASM-DATA_Bytes_DataString`(STRINGS)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eea7f8098626d659045f416b445245353e7e94e304b5ba4671254b82842a5d7f) contentStartColumn(10) contentStartLine(1260) org.kframework.attributes.Location(Location(1260,10,1260,102)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(VarMEMID:SortIndex{},inj{SortInstrs{}, SortOffset{}}(VarIS:SortInstrs{}),VarSTRINGS:SortDataString{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(VarMEMID:SortIndex{},Lbl'Hash'DS2Bytes'LParUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'DataString{}(VarSTRINGS:SortDataString{}))),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1260"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1260,10,1260,102)"), UNIQUE'Unds'ID{}("eea7f8098626d659045f416b445245353e7e94e304b5ba4671254b82842a5d7f")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ElemDefn,KItem}(`(elem__)_WASM_ElemDefn_Offset_ElemSegment`(OFFSET,ELEMSEGMENT))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ElemDefn,KItem}(`(elem___)_WASM_ElemDefn_Index_Offset_ElemSegment`(inj{Int,Index}(#token("0","Int")),OFFSET,ELEMSEGMENT))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(44e8d94bd3d8976870bae5ad75312bd38feb84090058c056753225c12b1d7ea2) contentStartColumn(10) contentStartLine(1222) org.kframework.attributes.Location(Location(1222,10,1222,99)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lbl'LPar'elem'UndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Offset'Unds'ElemSegment{}(VarOFFSET:SortOffset{},VarELEMSEGMENT:SortElemSegment{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("0")),VarOFFSET:SortOffset{},VarELEMSEGMENT:SortElemSegment{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1222"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1222,10,1222,99)"), UNIQUE'Unds'ID{}("44e8d94bd3d8976870bae5ad75312bd38feb84090058c056753225c12b1d7ea2")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ElemDefn,KItem}(`(elem___)_WASM_ElemDefn_Index_Offset_ElemSegment`(TABIDX,`(offset_)_WASM_Offset_Instrs`(IS),ELEMSEGMENT))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>inj{ElemDefn,KItem}(`elem{__}_WASM_ElemDefn_Index_ElemSegment`(TABIDX,ELEMSEGMENT))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fc48a48dd780645e95d1c19e1dbe732d764e08642064650470e711768f07b2ce) contentStartColumn(10) contentStartLine(1224) org.kframework.attributes.Location(Location(1224,10,1224,99)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(VarTABIDX:SortIndex{},Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(VarIS:SortInstrs{}),VarELEMSEGMENT:SortElemSegment{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(VarTABIDX:SortIndex{},VarELEMSEGMENT:SortElemSegment{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1224"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1224,10,1224,99)"), UNIQUE'Unds'ID{}("fc48a48dd780645e95d1c19e1dbe732d764e08642064650470e711768f07b2ce")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ElemDefn,KItem}(`(elem___)_WASM_ElemDefn_Index_Offset_ElemSegment`(TABIDX,inj{Instrs,Offset}(IS),ELEMSEGMENT))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>inj{ElemDefn,KItem}(`elem{__}_WASM_ElemDefn_Index_ElemSegment`(TABIDX,ELEMSEGMENT))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(348fbd46bf7d92d0a37a7ea88cf4a2df019458781be7497f125cc03cd52f3a6e) contentStartColumn(10) contentStartLine(1223) org.kframework.attributes.Location(Location(1223,10,1223,99)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(VarTABIDX:SortIndex{},inj{SortInstrs{}, SortOffset{}}(VarIS:SortInstrs{}),VarELEMSEGMENT:SortElemSegment{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(VarTABIDX:SortIndex{},VarELEMSEGMENT:SortElemSegment{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1223"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1223,10,1223,99)"), UNIQUE'Unds'ID{}("348fbd46bf7d92d0a37a7ea88cf4a2df019458781be7497f125cc03cd52f3a6e")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ExportDefn,KItem}(`(export_(_))_WASM_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA_Externval_AllocatedKind_Index`(_0,TFIDX)))~>DotVar2),_18,`<curFrame>`(_1,_2,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_3,_4) #as _32,_19,_20,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),`<exports>`(EXPORTS),_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15,_16,_17)),DotVar4)),_21,_22,_23,_24),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_18,_32,_19,_20,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),`<exports>`(`Map:update`(EXPORTS,inj{WasmString,KItem}(ENAME),inj{Index,KItem}(TFIDX))),_5,_6,_7,_8,_9,_10,_11,_12,_13,_14,_15,_16,_17)),DotVar4)),_21,_22,_23,_24),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1ec20b424e6e154fc80b9fdf80c56a54039bfc331e40220efcb4f0a6a090a18f) contentStartColumn(10) contentStartLine(1318) org.kframework.attributes.Location(Location(1318,10,1324,23)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExportDefn{}, SortKItem{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Var'Unds'0:SortAllocatedKind{},VarTFIDX:SortIndex{}))),VarDotVar2:SortK{})),Var'Unds'18:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'1:SortLocalsCell{},Var'Unds'2:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'3:SortLabelDepthCell{},Var'Unds'4:SortLabelIdsCell{}),Var'Unds'32:SortCurFrameCell{}),Var'Unds'19:SortModuleRegistryCell{},Var'Unds'20:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'exports'-GT-'{}(VarEXPORTS:SortMap{}),Var'Unds'5:SortTypeIdsCell{},Var'Unds'6:SortTypesCell{},Var'Unds'7:SortNextTypeIdxCell{},Var'Unds'8:SortFuncIdsCell{},Var'Unds'9:SortFuncAddrsCell{},Var'Unds'10:SortNextFuncIdxCell{},Var'Unds'11:SortTabIdsCell{},Var'Unds'12:SortTabAddrsCell{},Var'Unds'13:SortMemIdsCell{},Var'Unds'14:SortMemAddrsCell{},Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'21:SortNextModuleIdxCell{},Var'Unds'22:SortMainStoreCell{},Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'24:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'18:SortValstackCell{},Var'Unds'32:SortCurFrameCell{},Var'Unds'19:SortModuleRegistryCell{},Var'Unds'20:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'exports'-GT-'{}(LblMap'Coln'update{}(VarEXPORTS:SortMap{},inj{SortWasmString{}, SortKItem{}}(VarENAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{}))),Var'Unds'5:SortTypeIdsCell{},Var'Unds'6:SortTypesCell{},Var'Unds'7:SortNextTypeIdxCell{},Var'Unds'8:SortFuncIdsCell{},Var'Unds'9:SortFuncAddrsCell{},Var'Unds'10:SortNextFuncIdxCell{},Var'Unds'11:SortTabIdsCell{},Var'Unds'12:SortTabAddrsCell{},Var'Unds'13:SortMemIdsCell{},Var'Unds'14:SortMemAddrsCell{},Var'Unds'15:SortGlobIdsCell{},Var'Unds'16:SortGlobalAddrsCell{},Var'Unds'17:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'21:SortNextModuleIdxCell{},Var'Unds'22:SortMainStoreCell{},Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'24:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1318"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1318,10,1324,23)"), UNIQUE'Unds'ID{}("1ec20b424e6e154fc80b9fdf80c56a54039bfc331e40220efcb4f0a6a090a18f")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FuncDefn,KItem}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(inj{Identifier,OptionalId}(ID) #as _15,`___WASM-TEXT_FuncSpec_InlineExport_FuncSpec`(`(export_)_WASM-TEXT_InlineExport_WasmString`(ENAME),SPEC)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ExportDefn,KItem}(`(export_(_))_WASM_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA_Externval_AllocatedKind_Index`(`func_WASM-DATA_AllocatedKind`(.KList),inj{Identifier,Index}(ID))))~>inj{FuncDefn,KItem}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(_15,SPEC))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(570aada692f23d0227f8270c2419a401f723cd6bdf4247f6a7d14ded9bb84380) contentStartColumn(10) contentStartLine(269) org.kframework.attributes.Location(Location(269,10,273,14)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFuncDefn{}, SortKItem{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'15:SortOptionalId{}),Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(VarENAME:SortWasmString{}),VarSPEC:SortFuncSpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExportDefn{}, SortKItem{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblfunc'Unds'WASM-DATA'Unds'AllocatedKind{}(),inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))),kseq{}(inj{SortFuncDefn{}, SortKItem{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Var'Unds'15:SortOptionalId{},VarSPEC:SortFuncSpec{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("269"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(269,10,273,14)"), UNIQUE'Unds'ID{}("570aada692f23d0227f8270c2419a401f723cd6bdf4247f6a7d14ded9bb84380")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FuncDefn,KItem}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(OID,`___WASM-TEXT_FuncSpec_InlineImport_TypeUse`(`(import__)_WASM-TEXT_InlineImport_WasmString_WasmString`(MOD,NAME),TUSE)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ImportDefn,KItem}(`(import___)_WASM_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(func__)_WASM_ImportDesc_OptionalId_TypeUse`(OID,TUSE)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(47e2e6519a25b4864099c8bfe0a07d76b3ad98db25e17aac2362d9835087ac49) contentStartColumn(10) contentStartLine(318) org.kframework.attributes.Location(Location(318,10,318,108)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFuncDefn{}, SortKItem{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(VarOID:SortOptionalId{},Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineImport'Unds'TypeUse{}(Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{}),VarTUSE:SortTypeUse{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(VarOID:SortOptionalId{},VarTUSE:SortTypeUse{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("318"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(318,10,318,108)"), UNIQUE'Unds'ID{}("47e2e6519a25b4864099c8bfe0a07d76b3ad98db25e17aac2362d9835087ac49")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FuncDefn,KItem}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(OID,`____WASM_FuncSpec_TypeUse_LocalDecls_Instrs`(TUSE,LDECLS,INSTRS)))~>DotVar2),_19,`<curFrame>`(_6,_7,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_8,_9) #as _32,_20,_21,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_10,`<typeIds>`(TYPEIDS),`<types>`(TYPES),_11,`<funcIds>`(IDS),`<funcAddrs>`(ADDRS),`<nextFuncIdx>`(NEXTIDX),_12,_13,_14,_15,_16,_17,_18)),DotVar6)),_22,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`.FuncDefCellMap`(.KList),DotVar4)),`<nextFuncAddr>`(NEXTADDR),_0,_1,_2,_3,_4,_5),_23,_24),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#checkTypeUse(_)_WASM_Instr_TypeUse`(TUSE))~>DotVar2),_19,_32,_20,_21,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_10,`<typeIds>`(TYPEIDS),`<types>`(TYPES),_11,`<funcIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,NEXTIDX)),`<funcAddrs>`(`Map:update`(ADDRS,inj{Int,KItem}(NEXTIDX),inj{Int,KItem}(NEXTADDR))),`<nextFuncIdx>`(`_+Int_`(NEXTIDX,#token("1","Int"))),_12,_13,_14,_15,_16,_17,_18)),DotVar6)),_22,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`FuncDefCellMapItem`(`<fAddr>`(NEXTADDR),`<funcDef>`(`<fAddr>`(NEXTADDR),`<fCode>`(INSTRS),`<fType>`(inj{FuncType,Type}(`asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(TYPEIDS,TYPES,TUSE))),`<fLocal>`(inj{VecType,Type}(`asLocalType(_)_WASM_VecType_LocalDecls`(LDECLS))),`<fModInst>`(CUR))),DotVar4)),`<nextFuncAddr>`(`_+Int_`(NEXTADDR,#token("1","Int"))),_0,_1,_2,_3,_4,_5),_23,_24),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9d202ae49f0bec869395fea94b691ff955fd24454c3dc1f38eab4f6479c1e676) contentStartColumn(10) contentStartLine(684) org.kframework.attributes.Location(Location(684,10,707,18)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFuncDefn{}, SortKItem{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(VarOID:SortOptionalId{},Lbl'UndsUndsUndsUnds'WASM'Unds'FuncSpec'Unds'TypeUse'Unds'LocalDecls'Unds'Instrs{}(VarTUSE:SortTypeUse{},VarLDECLS:SortLocalDecls{},VarINSTRS:SortInstrs{}))),VarDotVar2:SortK{})),Var'Unds'19:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'6:SortLocalsCell{},Var'Unds'7:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}),Var'Unds'32:SortCurFrameCell{}),Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'10:SortExportsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarTYPEIDS:SortMap{}),Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'11:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'funcAddrs'-GT-'{}(VarADDRS:SortMap{}),Lbl'-LT-'nextFuncIdx'-GT-'{}(VarNEXTIDX:SortInt{}),Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Var'Unds'15:SortMemAddrsCell{},Var'Unds'16:SortGlobIdsCell{},Var'Unds'17:SortGlobalAddrsCell{},Var'Unds'18:SortNextGlobIdxCell{})),VarDotVar6:SortModuleInstCellMap{})),Var'Unds'22:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(Lbl'Stop'FuncDefCellMap{}(),VarDotVar4:SortFuncDefCellMap{})),Lbl'-LT-'nextFuncAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Var'Unds'0:SortTabsCell{},Var'Unds'1:SortNextTabAddrCell{},Var'Unds'2:SortMemsCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'24:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'checkTypeUse'LParUndsRParUnds'WASM'Unds'Instr'Unds'TypeUse{}(VarTUSE:SortTypeUse{})),VarDotVar2:SortK{})),Var'Unds'19:SortValstackCell{},Var'Unds'32:SortCurFrameCell{},Var'Unds'20:SortModuleRegistryCell{},Var'Unds'21:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'10:SortExportsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarTYPEIDS:SortMap{}),Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'11:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},VarNEXTIDX:SortInt{})),Lbl'-LT-'funcAddrs'-GT-'{}(LblMap'Coln'update{}(VarADDRS:SortMap{},inj{SortInt{}, SortKItem{}}(VarNEXTIDX:SortInt{}),inj{SortInt{}, SortKItem{}}(VarNEXTADDR:SortInt{}))),Lbl'-LT-'nextFuncIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTIDX:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'12:SortTabIdsCell{},Var'Unds'13:SortTabAddrsCell{},Var'Unds'14:SortMemIdsCell{},Var'Unds'15:SortMemAddrsCell{},Var'Unds'16:SortGlobIdsCell{},Var'Unds'17:SortGlobalAddrsCell{},Var'Unds'18:SortNextGlobIdxCell{})),VarDotVar6:SortModuleInstCellMap{})),Var'Unds'22:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(Lbl'-LT-'fAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'funcDef'-GT-'{}(Lbl'-LT-'fAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'fCode'-GT-'{}(VarINSTRS:SortInstrs{}),Lbl'-LT-'fType'-GT-'{}(inj{SortFuncType{}, SortType{}}(LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarTUSE:SortTypeUse{}))),Lbl'-LT-'fLocal'-GT-'{}(inj{SortVecType{}, SortType{}}(LblasLocalType'LParUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls{}(VarLDECLS:SortLocalDecls{}))),Lbl'-LT-'fModInst'-GT-'{}(VarCUR:SortInt{}))),VarDotVar4:SortFuncDefCellMap{})),Lbl'-LT-'nextFuncAddr'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTADDR:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'0:SortTabsCell{},Var'Unds'1:SortNextTabAddrCell{},Var'Unds'2:SortMemsCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'23:SortDeterministicMemoryGrowthCell{},Var'Unds'24:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("684"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(684,10,707,18)"), UNIQUE'Unds'ID{}("9d202ae49f0bec869395fea94b691ff955fd24454c3dc1f38eab4f6479c1e676")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FuncDefn,KItem}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(`_WASM-DATA_OptionalId`(.KList),`___WASM-TEXT_FuncSpec_InlineExport_FuncSpec`(EXPO,SPEC) #as _15))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(NEXTID)),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{FuncDefn,KItem}(`(func__)_WASM_FuncDefn_OptionalId_FuncSpec`(inj{Identifier,OptionalId}(`#freshId(_)_WASM-DATA_Identifier_Int`(NEXTID)),_15))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(`_+Int_`(NEXTID,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ddf9fa47f0f2fbd6c79880ce1022fddf778b2c0f4065840ca4f16e7e144b2df3) contentStartColumn(10) contentStartLine(263) org.kframework.attributes.Location(Location(263,10,267,62)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFuncDefn{}, SortKItem{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),\and{SortFuncSpec{}}(Lbl'UndsUndsUnds'WASM-TEXT'Unds'FuncSpec'Unds'InlineExport'Unds'FuncSpec{}(VarEXPO:SortInlineExport{},VarSPEC:SortFuncSpec{}),Var'Unds'15:SortFuncSpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(VarNEXTID:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFuncDefn{}, SortKItem{}}(Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'FuncDefn'Unds'OptionalId'Unds'FuncSpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(VarNEXTID:SortInt{})),Var'Unds'15:SortFuncSpec{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTID:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("263"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(263,10,267,62)"), UNIQUE'Unds'ID{}("ddf9fa47f0f2fbd6c79880ce1022fddf778b2c0f4065840ca4f16e7e144b2df3")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{GlobalDefn,KItem}(`(global__)_WASM_GlobalDefn_OptionalId_GlobalSpec`(inj{Identifier,OptionalId}(ID) #as _15,`___WASM-TEXT_GlobalSpec_InlineExport_GlobalSpec`(`(export_)_WASM-TEXT_InlineExport_WasmString`(ENAME),SPEC)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ExportDefn,KItem}(`(export_(_))_WASM_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA_Externval_AllocatedKind_Index`(`global_WASM-DATA_AllocatedKind`(.KList),inj{Identifier,Index}(ID))))~>inj{GlobalDefn,KItem}(`(global__)_WASM_GlobalDefn_OptionalId_GlobalSpec`(_15,SPEC))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1deda638763d44272f76af1f39e37cbc8b77f84daf8b40e754a9fd01be0f8e84) contentStartColumn(10) contentStartLine(255) org.kframework.attributes.Location(Location(255,10,259,14)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'15:SortOptionalId{}),Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(VarENAME:SortWasmString{}),VarSPEC:SortGlobalSpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExportDefn{}, SortKItem{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblglobal'Unds'WASM-DATA'Unds'AllocatedKind{}(),inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))),kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(Var'Unds'15:SortOptionalId{},VarSPEC:SortGlobalSpec{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("255"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(255,10,259,14)"), UNIQUE'Unds'ID{}("1deda638763d44272f76af1f39e37cbc8b77f84daf8b40e754a9fd01be0f8e84")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{GlobalDefn,KItem}(`(global__)_WASM_GlobalDefn_OptionalId_GlobalSpec`(OID,`___WASM-TEXT_GlobalSpec_InlineImport_TextFormatGlobalType`(`(import__)_WASM-TEXT_InlineImport_WasmString_WasmString`(MOD,NAME),TYP)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ImportDefn,KItem}(`(import___)_WASM_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(global__)_WASM_ImportDesc_OptionalId_TextFormatGlobalType`(OID,TYP)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(659f4b1c1413a71724f8422e99d7a3ee42ad131f41726856823128257e78f093) contentStartColumn(10) contentStartLine(314) org.kframework.attributes.Location(Location(314,10,314,110)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(VarOID:SortOptionalId{},Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineImport'Unds'TextFormatGlobalType{}(Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{}),VarTYP:SortTextFormatGlobalType{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(VarOID:SortOptionalId{},VarTYP:SortTextFormatGlobalType{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("314"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(314,10,314,110)"), UNIQUE'Unds'ID{}("659f4b1c1413a71724f8422e99d7a3ee42ad131f41726856823128257e78f093")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{GlobalDefn,KItem}(`(global__)_WASM_GlobalDefn_OptionalId_GlobalSpec`(OID,`___WASM_GlobalSpec_TextFormatGlobalType_Instr`(TYP,IS)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(IS)~>inj{GlobalDefn,KItem}(`global___WASM_GlobalDefn_OptionalId_GlobalType`(OID,`asGMut(_)_WASM_GlobalType_TextFormatGlobalType`(TYP)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3461069c8a67c9b2c1186f797fa68d62311286dd265dd25d7142b9793f7ff61c) contentStartColumn(10) contentStartLine(483) org.kframework.attributes.Location(Location(483,10,483,114)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(VarOID:SortOptionalId{},Lbl'UndsUndsUnds'WASM'Unds'GlobalSpec'Unds'TextFormatGlobalType'Unds'Instr{}(VarTYP:SortTextFormatGlobalType{},VarIS:SortInstr{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(VarIS:SortInstr{}),kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(Lblglobal'UndsUndsUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalType{}(VarOID:SortOptionalId{},LblasGMut'LParUndsRParUnds'WASM'Unds'GlobalType'Unds'TextFormatGlobalType{}(VarTYP:SortTextFormatGlobalType{}))),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("483"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(483,10,483,114)"), UNIQUE'Unds'ID{}("3461069c8a67c9b2c1186f797fa68d62311286dd265dd25d7142b9793f7ff61c")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{GlobalDefn,KItem}(`(global__)_WASM_GlobalDefn_OptionalId_GlobalSpec`(`_WASM-DATA_OptionalId`(.KList),`___WASM-TEXT_GlobalSpec_InlineExport_GlobalSpec`(EXPO,SPEC) #as _15))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(NEXTID)),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{GlobalDefn,KItem}(`(global__)_WASM_GlobalDefn_OptionalId_GlobalSpec`(inj{Identifier,OptionalId}(`#freshId(_)_WASM-DATA_Identifier_Int`(NEXTID)),_15))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(`_+Int_`(NEXTID,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(be791816052135df320b22d5845ffcdbd1ffdf6ed7c0688f60eb0565718020b5) contentStartColumn(10) contentStartLine(249) org.kframework.attributes.Location(Location(249,10,253,62)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),\and{SortGlobalSpec{}}(Lbl'UndsUndsUnds'WASM-TEXT'Unds'GlobalSpec'Unds'InlineExport'Unds'GlobalSpec{}(VarEXPO:SortInlineExport{},VarSPEC:SortGlobalSpec{}),Var'Unds'15:SortGlobalSpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(VarNEXTID:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalSpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(VarNEXTID:SortInt{})),Var'Unds'15:SortGlobalSpec{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTID:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("249"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(249,10,253,62)"), UNIQUE'Unds'ID{}("be791816052135df320b22d5845ffcdbd1ffdf6ed7c0688f60eb0565718020b5")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(if___(then_)(else_))_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs_Instrs_Instrs`(`_WASM-DATA_OptionalId`(.KList),TDECLS,C,IS,IS'))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(C)~>inj{Instr,KItem}(`if__else_end_WASM_Instr_TypeDecls_Instrs_Instrs`(TDECLS,IS,IS'))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dd5f5490f286ca9ea73fb683def807f74175f138407cdba5baa495f32f8f58ff) contentStartColumn(10) contentStartLine(118) org.kframework.attributes.Location(Location(118,10,118,133)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),VarTDECLS:SortTypeDecls{},VarC:SortInstrs{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarC:SortInstrs{}),kseq{}(inj{SortInstr{}, SortKItem{}}(Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("118"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(118,10,118,133)"), UNIQUE'Unds'ID{}("dd5f5490f286ca9ea73fb683def807f74175f138407cdba5baa495f32f8f58ff")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(if___(then_)(else_))_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs_Instrs_Instrs`(inj{Identifier,OptionalId}(ID),TDECLS,C,IS,IS'))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(C)~>inj{BlockInstr,KItem}(`if___else__end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(ID,TDECLS,IS,`_WASM-DATA_OptionalId`(.KList),IS',`_WASM-DATA_OptionalId`(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8bff4b5abe39cddf2f793a9ad50a18541054bad285cfaa30a2e44f08b7c6749e) contentStartColumn(10) contentStartLine(119) org.kframework.attributes.Location(Location(119,10,119,133)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParLPar'else'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs'Unds'Instrs{}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),VarTDECLS:SortTypeDecls{},VarC:SortInstrs{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarC:SortInstrs{}),kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),VarIS'Apos':SortInstrs{},Lbl'Unds'WASM-DATA'Unds'OptionalId{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("119"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(119,10,119,133)"), UNIQUE'Unds'ID{}("8bff4b5abe39cddf2f793a9ad50a18541054bad285cfaa30a2e44f08b7c6749e")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(if___(then_))_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs_Instrs`(OID,TDECLS,C,IS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(C)~>inj{BlockInstr,KItem}(`if___end__WASM-TEXT_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(OID,TDECLS,IS,`_WASM-DATA_OptionalId`(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c3fb969c52a8c55c853412744898151c4a2585753078dda65db363bee4a458d5) contentStartColumn(10) contentStartLine(117) org.kframework.attributes.Location(Location(117,10,117,133)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LPar'if'UndsUndsUndsLPar'then'UndsRParRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarOID:SortOptionalId{},VarTDECLS:SortTypeDecls{},VarC:SortInstrs{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarC:SortInstrs{}),kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(VarOID:SortOptionalId{},VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},Lbl'Unds'WASM-DATA'Unds'OptionalId{}())),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("117"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(117,10,117,133)"), UNIQUE'Unds'ID{}("c3fb969c52a8c55c853412744898151c4a2585753078dda65db363bee4a458d5")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ImportDefn,KItem}(`(import___)_WASM_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(func__)_WASM_ImportDesc_OptionalId_TypeUse`(OID,TUSE)))~>DotVar2),_34,`<curFrame>`(_10,_11,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_12,_13) #as _46,`<moduleRegistry>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(MOD),inj{Int,KItem}(MODIDX)),DotVar3)) #as _49,_35,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_14,`<typeIds>`(TYPEIDS),`<types>`(TYPES),_15,`<funcIds>`(IDS),`<funcAddrs>`(FS),`<nextFuncIdx>`(NEXT),_16,_17,_18,_19,_20,_21,_22)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),DotVar12)),_23,_24,_25,`<funcIds>`(IDS'),`<funcAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),DotVar11)),_26,_27,_28,_29,_30,_31,_32,_33))),DotVar8)),_36,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`FuncDefCellMapItem`(`<fAddr>`(ADDR),`<funcDef>`(`<fAddr>`(ADDR),_0,`<fType>`(inj{FuncType,Type}(FTYPE)),_1,_2)),DotVar5)),_3,_4,_5,_6,_7,_8,_9) #as _53,_37,_38),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_34,_46,_49,_35,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_14,`<typeIds>`(TYPEIDS),`<types>`(TYPES),_15,`<funcIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,NEXT)),`<funcAddrs>`(`Map:update`(FS,inj{Int,KItem}(NEXT),inj{Int,KItem}(ADDR))),`<nextFuncIdx>`(`_+Int_`(NEXT,#token("1","Int"))),_16,_17,_18,_19,_20,_21,_22)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),DotVar12)),_23,_24,_25,`<funcIds>`(IDS'),`<funcAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),DotVar11)),_26,_27,_28,_29,_30,_31,_32,_33))),DotVar8)),_36,_53,_37,_38),DotVar0) requires `_==K_`(inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(FTYPE)),inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(`asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(TYPEIDS,TYPES,TUSE)))) ensures #token("true","Bool") [UNIQUE_ID(3fbbd49fdf4217a41ae915791bd462fc703cd0912ea34b24b8b8f35f23210365) contentStartColumn(10) contentStartLine(1342) org.kframework.attributes.Location(Location(1342,10,1366,90)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(VarFTYPE:SortFuncType{})),dotk{}()),kseq{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarTUSE:SortTypeUse{}))),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'func'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TypeUse{}(VarOID:SortOptionalId{},VarTUSE:SortTypeUse{}))),VarDotVar2:SortK{})),Var'Unds'34:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'10:SortLocalsCell{},Var'Unds'11:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'12:SortLabelDepthCell{},Var'Unds'13:SortLabelIdsCell{}),Var'Unds'46:SortCurFrameCell{}),\and{SortModuleRegistryCell{}}(Lbl'-LT-'moduleRegistry'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarMOD:SortWasmString{}),inj{SortInt{}, SortKItem{}}(VarMODIDX:SortInt{})),VarDotVar3:SortMap{})),Var'Unds'49:SortModuleRegistryCell{}),Var'Unds'35:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'14:SortExportsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarTYPEIDS:SortMap{}),Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'15:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'funcAddrs'-GT-'{}(VarFS:SortMap{}),Lbl'-LT-'nextFuncIdx'-GT-'{}(VarNEXT:SortInt{}),Var'Unds'16:SortTabIdsCell{},Var'Unds'17:SortTabAddrsCell{},Var'Unds'18:SortMemIdsCell{},Var'Unds'19:SortMemAddrsCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),VarDotVar12:SortMap{})),Var'Unds'23:SortTypeIdsCell{},Var'Unds'24:SortTypesCell{},Var'Unds'25:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'funcAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),VarDotVar11:SortMap{})),Var'Unds'26:SortNextFuncIdxCell{},Var'Unds'27:SortTabIdsCell{},Var'Unds'28:SortTabAddrsCell{},Var'Unds'29:SortMemIdsCell{},Var'Unds'30:SortMemAddrsCell{},Var'Unds'31:SortGlobIdsCell{},Var'Unds'32:SortGlobalAddrsCell{},Var'Unds'33:SortNextGlobIdxCell{}))),VarDotVar8:SortModuleInstCellMap{})),Var'Unds'36:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(Lbl'-LT-'fAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'funcDef'-GT-'{}(Lbl'-LT-'fAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortFCodeCell{},Lbl'-LT-'fType'-GT-'{}(inj{SortFuncType{}, SortType{}}(VarFTYPE:SortFuncType{})),Var'Unds'1:SortFLocalCell{},Var'Unds'2:SortFModInstCell{})),VarDotVar5:SortFuncDefCellMap{})),Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortTabsCell{},Var'Unds'5:SortNextTabAddrCell{},Var'Unds'6:SortMemsCell{},Var'Unds'7:SortNextMemAddrCell{},Var'Unds'8:SortGlobalsCell{},Var'Unds'9:SortNextGlobAddrCell{}),Var'Unds'53:SortMainStoreCell{}),Var'Unds'37:SortDeterministicMemoryGrowthCell{},Var'Unds'38:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'34:SortValstackCell{},Var'Unds'46:SortCurFrameCell{},Var'Unds'49:SortModuleRegistryCell{},Var'Unds'35:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'14:SortExportsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarTYPEIDS:SortMap{}),Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'15:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},VarNEXT:SortInt{})),Lbl'-LT-'funcAddrs'-GT-'{}(LblMap'Coln'update{}(VarFS:SortMap{},inj{SortInt{}, SortKItem{}}(VarNEXT:SortInt{}),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Lbl'-LT-'nextFuncIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXT:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'16:SortTabIdsCell{},Var'Unds'17:SortTabAddrsCell{},Var'Unds'18:SortMemIdsCell{},Var'Unds'19:SortMemAddrsCell{},Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),VarDotVar12:SortMap{})),Var'Unds'23:SortTypeIdsCell{},Var'Unds'24:SortTypesCell{},Var'Unds'25:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'funcAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),VarDotVar11:SortMap{})),Var'Unds'26:SortNextFuncIdxCell{},Var'Unds'27:SortTabIdsCell{},Var'Unds'28:SortTabAddrsCell{},Var'Unds'29:SortMemIdsCell{},Var'Unds'30:SortMemAddrsCell{},Var'Unds'31:SortGlobIdsCell{},Var'Unds'32:SortGlobalAddrsCell{},Var'Unds'33:SortNextGlobIdxCell{}))),VarDotVar8:SortModuleInstCellMap{})),Var'Unds'36:SortNextModuleIdxCell{},Var'Unds'53:SortMainStoreCell{},Var'Unds'37:SortDeterministicMemoryGrowthCell{},Var'Unds'38:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("1342"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1342,10,1366,90)"), UNIQUE'Unds'ID{}("3fbbd49fdf4217a41ae915791bd462fc703cd0912ea34b24b8b8f35f23210365")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ImportDefn,KItem}(`(import___)_WASM_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(global__)_WASM_ImportDesc_OptionalId_TextFormatGlobalType`(OID,TGTYP)))~>DotVar2),_34,`<curFrame>`(_8,_9,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_10,_11) #as _46,`<moduleRegistry>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(MOD),inj{Int,KItem}(MODIDX)),DotVar3)) #as _49,_35,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,`<globIds>`(IDS),`<globalAddrs>`(GS),`<nextGlobIdx>`(NEXT))),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),DotVar11)),_23,_24,_25,_26,_27,_28,_29,_30,_31,_32,`<globIds>`(IDS'),`<globalAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),DotVar10)),_33))),DotVar7)),_36,`<mainStore>`(_1,_2,_3,_4,_5,_6,`<globals>`(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(`<gAddr>`(ADDR),`<globalInst>`(`<gAddr>`(ADDR),`<gValue>`(`<_>__WASM-DATA_Val_AValType_Number`(TYP,_0)),`<gMut>`(MUT))),DotVar5)),_7) #as _53,_37,_38),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_34,_46,_49,_35,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,`<globIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,NEXT)),`<globalAddrs>`(`Map:update`(GS,inj{Int,KItem}(NEXT),inj{Int,KItem}(ADDR))),`<nextGlobIdx>`(`_+Int_`(NEXT,#token("1","Int"))))),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),DotVar11)),_23,_24,_25,_26,_27,_28,_29,_30,_31,_32,`<globIds>`(IDS'),`<globalAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),DotVar10)),_33))),DotVar7)),_36,_53,_37,_38),DotVar0) requires `_==K_`(inj{GlobalType,KItem}(`asGMut(_)_WASM_GlobalType_TextFormatGlobalType`(TGTYP)),inj{GlobalType,KItem}(`___WASM_GlobalType_Mut_AValType`(MUT,TYP))) ensures #token("true","Bool") [UNIQUE_ID(1ed5c2ee159dc99a90598dd1355e398143f72142e5cbd5e9116d30a7c070ab5d) contentStartColumn(10) contentStartLine(1416) org.kframework.attributes.Location(Location(1416,10,1438,42)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortGlobalType{}, SortKItem{}}(LblasGMut'LParUndsRParUnds'WASM'Unds'GlobalType'Unds'TextFormatGlobalType{}(VarTGTYP:SortTextFormatGlobalType{})),dotk{}()),kseq{}(inj{SortGlobalType{}, SortKItem{}}(Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(VarMUT:SortMut{},VarTYP:SortAValType{})),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'global'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TextFormatGlobalType{}(VarOID:SortOptionalId{},VarTGTYP:SortTextFormatGlobalType{}))),VarDotVar2:SortK{})),Var'Unds'34:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'8:SortLocalsCell{},Var'Unds'9:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'10:SortLabelDepthCell{},Var'Unds'11:SortLabelIdsCell{}),Var'Unds'46:SortCurFrameCell{}),\and{SortModuleRegistryCell{}}(Lbl'-LT-'moduleRegistry'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarMOD:SortWasmString{}),inj{SortInt{}, SortKItem{}}(VarMODIDX:SortInt{})),VarDotVar3:SortMap{})),Var'Unds'49:SortModuleRegistryCell{}),Var'Unds'35:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'20:SortTabAddrsCell{},Var'Unds'21:SortMemIdsCell{},Var'Unds'22:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'globalAddrs'-GT-'{}(VarGS:SortMap{}),Lbl'-LT-'nextGlobIdx'-GT-'{}(VarNEXT:SortInt{}))),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),VarDotVar11:SortMap{})),Var'Unds'23:SortTypeIdsCell{},Var'Unds'24:SortTypesCell{},Var'Unds'25:SortNextTypeIdxCell{},Var'Unds'26:SortFuncIdsCell{},Var'Unds'27:SortFuncAddrsCell{},Var'Unds'28:SortNextFuncIdxCell{},Var'Unds'29:SortTabIdsCell{},Var'Unds'30:SortTabAddrsCell{},Var'Unds'31:SortMemIdsCell{},Var'Unds'32:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'globalAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),VarDotVar10:SortMap{})),Var'Unds'33:SortNextGlobIdxCell{}))),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'36:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'1:SortFuncsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'3:SortTabsCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(Lbl'-LT-'gAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'globalInst'-GT-'{}(Lbl'-LT-'gAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'gValue'-GT-'{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYP:SortAValType{},Var'Unds'0:SortNumber{})),Lbl'-LT-'gMut'-GT-'{}(VarMUT:SortMut{}))),VarDotVar5:SortGlobalInstCellMap{})),Var'Unds'7:SortNextGlobAddrCell{}),Var'Unds'53:SortMainStoreCell{}),Var'Unds'37:SortDeterministicMemoryGrowthCell{},Var'Unds'38:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'34:SortValstackCell{},Var'Unds'46:SortCurFrameCell{},Var'Unds'49:SortModuleRegistryCell{},Var'Unds'35:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'20:SortTabAddrsCell{},Var'Unds'21:SortMemIdsCell{},Var'Unds'22:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},VarNEXT:SortInt{})),Lbl'-LT-'globalAddrs'-GT-'{}(LblMap'Coln'update{}(VarGS:SortMap{},inj{SortInt{}, SortKItem{}}(VarNEXT:SortInt{}),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Lbl'-LT-'nextGlobIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXT:SortInt{},\dv{SortInt{}}("1"))))),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),VarDotVar11:SortMap{})),Var'Unds'23:SortTypeIdsCell{},Var'Unds'24:SortTypesCell{},Var'Unds'25:SortNextTypeIdxCell{},Var'Unds'26:SortFuncIdsCell{},Var'Unds'27:SortFuncAddrsCell{},Var'Unds'28:SortNextFuncIdxCell{},Var'Unds'29:SortTabIdsCell{},Var'Unds'30:SortTabAddrsCell{},Var'Unds'31:SortMemIdsCell{},Var'Unds'32:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'globalAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),VarDotVar10:SortMap{})),Var'Unds'33:SortNextGlobIdxCell{}))),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'36:SortNextModuleIdxCell{},Var'Unds'53:SortMainStoreCell{},Var'Unds'37:SortDeterministicMemoryGrowthCell{},Var'Unds'38:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("1416"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1416,10,1438,42)"), UNIQUE'Unds'ID{}("1ed5c2ee159dc99a90598dd1355e398143f72142e5cbd5e9116d30a7c070ab5d")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ImportDefn,KItem}(`(import___)_WASM_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(memory__)_WASM_ImportDesc_OptionalId_MemType`(OID,inj{Limits,MemType}(LIM))))~>DotVar2),_34,`<curFrame>`(_7,_8,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_9,_10) #as _47,`<moduleRegistry>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(MOD),inj{Int,KItem}(MODIDX)),DotVar3)) #as _50,_35,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,_12,_13,_14,_15,_16,_17,_18,_19,`<memIds>`(IDS),`<memAddrs>`(`.Map`(.KList)),_20,_21,_22)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),DotVar12)),_23,_24,_25,_26,_27,_28,_29,_30,`<memIds>`(IDS'),`<memAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),DotVar11)),_31,_32,_33))),DotVar8)),_36,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),`<mmax>`(MAX),`<msize>`(SIZE),DotVar6)),DotVar5)),_4,_5,_6) #as _54,_37,_38),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_34,_47,_50,_35,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,_12,_13,_14,_15,_16,_17,_18,_19,`<memIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,#token("0","Int"))),`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_20,_21,_22)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),DotVar12)),_23,_24,_25,_26,_27,_28,_29,_30,`<memIds>`(IDS'),`<memAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),DotVar11)),_31,_32,_33))),DotVar8)),_36,_54,_37,_38),DotVar0) requires `#limitsMatchImport(_,_,_)_WASM_Bool_Int_OptionalInt_Limits`(SIZE,MAX,LIM) ensures #token("true","Bool") [UNIQUE_ID(023c35de6030117fbba6a9cf5d8e3bb3e98744cf10dd90c282f2bf1dc85bab67) contentStartColumn(10) contentStartLine(1392) org.kframework.attributes.Location(Location(1392,10,1414,51)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(VarSIZE:SortInt{},VarMAX:SortOptionalInt{},VarLIM:SortLimits{}),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(VarOID:SortOptionalId{},inj{SortLimits{}, SortMemType{}}(VarLIM:SortLimits{})))),VarDotVar2:SortK{})),Var'Unds'34:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'9:SortLabelDepthCell{},Var'Unds'10:SortLabelIdsCell{}),Var'Unds'47:SortCurFrameCell{}),\and{SortModuleRegistryCell{}}(Lbl'-LT-'moduleRegistry'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarMOD:SortWasmString{}),inj{SortInt{}, SortKItem{}}(VarMODIDX:SortInt{})),VarDotVar3:SortMap{})),Var'Unds'50:SortModuleRegistryCell{}),Var'Unds'35:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),VarDotVar12:SortMap{})),Var'Unds'23:SortTypeIdsCell{},Var'Unds'24:SortTypesCell{},Var'Unds'25:SortNextTypeIdxCell{},Var'Unds'26:SortFuncIdsCell{},Var'Unds'27:SortFuncAddrsCell{},Var'Unds'28:SortNextFuncIdxCell{},Var'Unds'29:SortTabIdsCell{},Var'Unds'30:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),VarDotVar11:SortMap{})),Var'Unds'31:SortGlobIdsCell{},Var'Unds'32:SortGlobalAddrsCell{},Var'Unds'33:SortNextGlobIdxCell{}))),VarDotVar8:SortModuleInstCellMap{})),Var'Unds'36:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'mmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),VarDotVar6:SortMdataCell{})),VarDotVar5:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'54:SortMainStoreCell{}),Var'Unds'37:SortDeterministicMemoryGrowthCell{},Var'Unds'38:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'34:SortValstackCell{},Var'Unds'47:SortCurFrameCell{},Var'Unds'50:SortModuleRegistryCell{},Var'Unds'35:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},\dv{SortInt{}}("0"))),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'20:SortGlobIdsCell{},Var'Unds'21:SortGlobalAddrsCell{},Var'Unds'22:SortNextGlobIdxCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),VarDotVar12:SortMap{})),Var'Unds'23:SortTypeIdsCell{},Var'Unds'24:SortTypesCell{},Var'Unds'25:SortNextTypeIdxCell{},Var'Unds'26:SortFuncIdsCell{},Var'Unds'27:SortFuncAddrsCell{},Var'Unds'28:SortNextFuncIdxCell{},Var'Unds'29:SortTabIdsCell{},Var'Unds'30:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),VarDotVar11:SortMap{})),Var'Unds'31:SortGlobIdsCell{},Var'Unds'32:SortGlobalAddrsCell{},Var'Unds'33:SortNextGlobIdxCell{}))),VarDotVar8:SortModuleInstCellMap{})),Var'Unds'36:SortNextModuleIdxCell{},Var'Unds'54:SortMainStoreCell{},Var'Unds'37:SortDeterministicMemoryGrowthCell{},Var'Unds'38:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("1392"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1392,10,1414,51)"), UNIQUE'Unds'ID{}("023c35de6030117fbba6a9cf5d8e3bb3e98744cf10dd90c282f2bf1dc85bab67")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ImportDefn,KItem}(`(import___)_WASM_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(table__)_WASM_ImportDesc_OptionalId_TableType`(OID,`___WASM_TableType_Limits_TableElemType`(LIM,_0))))~>DotVar2),_35,`<curFrame>`(_8,_9,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_10,_11) #as _48,`<moduleRegistry>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(MOD),inj{Int,KItem}(MODIDX)),DotVar3)) #as _51,_36,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_12,_13,_14,_15,_16,_17,_18,`<tabIds>`(IDS),`<tabAddrs>`(`.Map`(.KList)),_19,_20,_21,_22,_23)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),DotVar12)),_24,_25,_26,_27,_28,_29,`<tabIds>`(IDS'),`<tabAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),DotVar11)),_30,_31,_32,_33,_34))),DotVar8)),_37,`<mainStore>`(_1,_2,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),`<tmax>`(MAX),`<tsize>`(SIZE),DotVar6)),DotVar5)),_3,_4,_5,_6,_7) #as _55,_38,_39),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_35,_48,_51,_36,`<moduleInstances>`(`_ModuleInstCellMap_`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_12,_13,_14,_15,_16,_17,_18,`<tabIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,#token("0","Int"))),`<tabAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_19,_20,_21,_22,_23)),`ModuleInstCellMapItem`(`<modIdx>`(MODIDX),`<moduleInst>`(`<modIdx>`(MODIDX),`<exports>`(`_Map_`(`_|->_`(inj{WasmString,KItem}(NAME),inj{Index,KItem}(TFIDX)),DotVar12)),_24,_25,_26,_27,_28,_29,`<tabIds>`(IDS'),`<tabAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS',TFIDX)),inj{Int,KItem}(ADDR)),DotVar11)),_30,_31,_32,_33,_34))),DotVar8)),_37,_55,_38,_39),DotVar0) requires `#limitsMatchImport(_,_,_)_WASM_Bool_Int_OptionalInt_Limits`(SIZE,MAX,LIM) ensures #token("true","Bool") [UNIQUE_ID(8b5aac8e02dca959ec4e42c14124b0d3ad25e7c05b54703cb0b696fce54102de) contentStartColumn(10) contentStartLine(1368) org.kframework.attributes.Location(Location(1368,10,1390,51)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Hash'limitsMatchImport'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt'Unds'Limits{}(VarSIZE:SortInt{},VarMAX:SortOptionalInt{},VarLIM:SortLimits{}),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(VarOID:SortOptionalId{},Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(VarLIM:SortLimits{},Var'Unds'0:SortTableElemType{})))),VarDotVar2:SortK{})),Var'Unds'35:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'8:SortLocalsCell{},Var'Unds'9:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'10:SortLabelDepthCell{},Var'Unds'11:SortLabelIdsCell{}),Var'Unds'48:SortCurFrameCell{}),\and{SortModuleRegistryCell{}}(Lbl'-LT-'moduleRegistry'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarMOD:SortWasmString{}),inj{SortInt{}, SortKItem{}}(VarMODIDX:SortInt{})),VarDotVar3:SortMap{})),Var'Unds'51:SortModuleRegistryCell{}),Var'Unds'36:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'19:SortMemIdsCell{},Var'Unds'20:SortMemAddrsCell{},Var'Unds'21:SortGlobIdsCell{},Var'Unds'22:SortGlobalAddrsCell{},Var'Unds'23:SortNextGlobIdxCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),VarDotVar12:SortMap{})),Var'Unds'24:SortTypeIdsCell{},Var'Unds'25:SortTypesCell{},Var'Unds'26:SortNextTypeIdxCell{},Var'Unds'27:SortFuncIdsCell{},Var'Unds'28:SortFuncAddrsCell{},Var'Unds'29:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),VarDotVar11:SortMap{})),Var'Unds'30:SortMemIdsCell{},Var'Unds'31:SortMemAddrsCell{},Var'Unds'32:SortGlobIdsCell{},Var'Unds'33:SortGlobalAddrsCell{},Var'Unds'34:SortNextGlobIdxCell{}))),VarDotVar8:SortModuleInstCellMap{})),Var'Unds'37:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'1:SortFuncsCell{},Var'Unds'2:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'tsize'-GT-'{}(VarSIZE:SortInt{}),VarDotVar6:SortTdataCell{})),VarDotVar5:SortTabInstCellMap{})),Var'Unds'3:SortNextTabAddrCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Var'Unds'6:SortGlobalsCell{},Var'Unds'7:SortNextGlobAddrCell{}),Var'Unds'55:SortMainStoreCell{}),Var'Unds'38:SortDeterministicMemoryGrowthCell{},Var'Unds'39:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'35:SortValstackCell{},Var'Unds'48:SortCurFrameCell{},Var'Unds'51:SortModuleRegistryCell{},Var'Unds'36:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},\dv{SortInt{}}("0"))),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'19:SortMemIdsCell{},Var'Unds'20:SortMemAddrsCell{},Var'Unds'21:SortGlobIdsCell{},Var'Unds'22:SortGlobalAddrsCell{},Var'Unds'23:SortNextGlobIdxCell{})),LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarMODIDX:SortInt{}),Lbl'-LT-'exports'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortWasmString{}, SortKItem{}}(VarNAME:SortWasmString{}),inj{SortIndex{}, SortKItem{}}(VarTFIDX:SortIndex{})),VarDotVar12:SortMap{})),Var'Unds'24:SortTypeIdsCell{},Var'Unds'25:SortTypesCell{},Var'Unds'26:SortNextTypeIdxCell{},Var'Unds'27:SortFuncIdsCell{},Var'Unds'28:SortFuncAddrsCell{},Var'Unds'29:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(VarIDS'Apos':SortMap{}),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS'Apos':SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{})),VarDotVar11:SortMap{})),Var'Unds'30:SortMemIdsCell{},Var'Unds'31:SortMemAddrsCell{},Var'Unds'32:SortGlobIdsCell{},Var'Unds'33:SortGlobalAddrsCell{},Var'Unds'34:SortNextGlobIdxCell{}))),VarDotVar8:SortModuleInstCellMap{})),Var'Unds'37:SortNextModuleIdxCell{},Var'Unds'55:SortMainStoreCell{},Var'Unds'38:SortDeterministicMemoryGrowthCell{},Var'Unds'39:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("1368"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1368,10,1390,51)"), UNIQUE'Unds'ID{}("8b5aac8e02dca959ec4e42c14124b0d3ad25e7c05b54703cb0b696fce54102de")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`(invoke_)_WASM_Instr_Int`(FADDR))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(`<locals>`(LOCAL),DotVar5,`<curModIdx>`(inj{Int,OptionalInt}(MODIDX)),`<labelDepth>`(DEPTH),`<labelIds>`(IDS)),_7,_8,_9,_10,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`FuncDefCellMapItem`(`<fAddr>`(FADDR),`<funcDef>`(`<fAddr>`(FADDR),`<fCode>`(INSTRS),`<fType>`(inj{FuncType,Type}(`_->__WASM-DATA_FuncType_VecType_VecType`(`[_]_WASM-DATA_VecType_ValTypes`(TDOMAIN),`[_]_WASM-DATA_VecType_ValTypes`(TRANGE)))),`<fLocal>`(inj{VecType,Type}(`[_]_WASM-DATA_VecType_ValTypes`(TLOCALS))),`<fModInst>`(MODIDX'))),DotVar4)),_0,_1,_2,_3,_4,_5,_6) #as _26,_11,_12),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`init_locals__WASM_Instr_ValStack`(`_++__WASM-DATA_ValStack_ValStack_ValStack`(`#revs(_)_WASM-DATA_ValStack_ValStack`(`#take(_,_)_WASM-DATA_ValStack_ValTypes_ValStack`(`#revt(_)_WASM-DATA_ValTypes_ValTypes`(`unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(TDOMAIN)),VALSTACK)),`#zero(_)_WASM-DATA_ValStack_ValTypes`(`unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(TLOCALS)))))~>inj{Instr,KItem}(`init_localids__WASM_Instr_ValTypes`(`_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(TDOMAIN,TLOCALS)))~>inj{Instr,KItem}(`block__end_WASM_Instr_VecType_Instrs`(`[_]_WASM-DATA_VecType_ValTypes`(TRANGE),INSTRS))~>inj{Frame,KItem}(`frame_______WASM_Frame_Int_ValTypes_ValStack_Map_Int_Map`(MODIDX,TRANGE,`#drop(_,_)_WASM-DATA_ValStack_ValTypes_ValStack`(`#revt(_)_WASM-DATA_ValTypes_ValTypes`(`unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(TDOMAIN)),VALSTACK),LOCAL,DEPTH,IDS))~>DotVar2),`<valstack>`(`.ValStack_WASM-DATA_ValStack`(.KList)),`<curFrame>`(`<locals>`(`.Map`(.KList)),DotVar5,`<curModIdx>`(inj{Int,OptionalInt}(MODIDX')),`<labelDepth>`(#token("0","Int")),`<labelIds>`(`.Map`(.KList))),_7,_8,_9,_10,_26,_11,_12),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e7b0e112fa97917a310f3dd37ab88b1494df6d951f3df7d160af52e123ff15a9) contentStartColumn(10) contentStartLine(735) org.kframework.attributes.Location(Location(735,10,753,20)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(VarFADDR:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(VarLOCAL:SortMap{}),VarDotVar5:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarMODIDX:SortInt{})),Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Lbl'-LT-'labelIds'-GT-'{}(VarIDS:SortMap{})),Var'Unds'7:SortModuleRegistryCell{},Var'Unds'8:SortModuleIdsCell{},Var'Unds'9:SortModuleInstancesCell{},Var'Unds'10:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Lbl'-LT-'funcDef'-GT-'{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Lbl'-LT-'fCode'-GT-'{}(VarINSTRS:SortInstrs{}),Lbl'-LT-'fType'-GT-'{}(inj{SortFuncType{}, SortType{}}(Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarTDOMAIN:SortValTypes{}),Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarTRANGE:SortValTypes{})))),Lbl'-LT-'fLocal'-GT-'{}(inj{SortVecType{}, SortType{}}(Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarTLOCALS:SortValTypes{}))),Lbl'-LT-'fModInst'-GT-'{}(VarMODIDX'Apos':SortInt{}))),VarDotVar4:SortFuncDefCellMap{})),Var'Unds'0:SortNextFuncAddrCell{},Var'Unds'1:SortTabsCell{},Var'Unds'2:SortNextTabAddrCell{},Var'Unds'3:SortMemsCell{},Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'26:SortMainStoreCell{}),Var'Unds'11:SortDeterministicMemoryGrowthCell{},Var'Unds'12:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'Hash'revs'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValStack{}(Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes'Unds'ValStack{}(Lbl'Hash'revt'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(VarTDOMAIN:SortValTypes{})),VarVALSTACK:SortValStack{})),Lbl'Hash'zero'LParUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes{}(LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(VarTLOCALS:SortValTypes{}))))),kseq{}(inj{SortInstr{}, SortKItem{}}(Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarTDOMAIN:SortValTypes{},VarTLOCALS:SortValTypes{}))),kseq{}(inj{SortInstr{}, SortKItem{}}(Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarTRANGE:SortValTypes{}),VarINSTRS:SortInstrs{})),kseq{}(inj{SortFrame{}, SortKItem{}}(Lblframe'UndsUndsUndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map'Unds'Int'Unds'Map{}(VarMODIDX:SortInt{},VarTRANGE:SortValTypes{},Lbl'Hash'drop'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes'Unds'ValStack{}(Lbl'Hash'revt'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(VarTDOMAIN:SortValTypes{})),VarVALSTACK:SortValStack{}),VarLOCAL:SortMap{},VarDEPTH:SortInt{},VarIDS:SortMap{})),VarDotVar2:SortK{}))))),Lbl'-LT-'valstack'-GT-'{}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Stop'Map{}()),VarDotVar5:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarMODIDX'Apos':SortInt{})),Lbl'-LT-'labelDepth'-GT-'{}(\dv{SortInt{}}("0")),Lbl'-LT-'labelIds'-GT-'{}(Lbl'Stop'Map{}())),Var'Unds'7:SortModuleRegistryCell{},Var'Unds'8:SortModuleIdsCell{},Var'Unds'9:SortModuleInstancesCell{},Var'Unds'10:SortNextModuleIdxCell{},Var'Unds'26:SortMainStoreCell{},Var'Unds'11:SortDeterministicMemoryGrowthCell{},Var'Unds'12:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("735"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(735,10,753,20)"), UNIQUE'Unds'ID{}("e7b0e112fa97917a310f3dd37ab88b1494df6d951f3df7d160af52e123ff15a9")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(loop___)_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs`(`_WASM-DATA_OptionalId`(.KList),TDECLS,IS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`loop__end_WASM_Instr_TypeDecls_Instrs`(TDECLS,IS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9ec91ed72ef1a53f87d5eeec9293223e916fb510975c0e58b499db0b0c624693) contentStartColumn(10) contentStartLine(123) org.kframework.attributes.Location(Location(123,10,123,90)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("123"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(123,10,123,90)"), UNIQUE'Unds'ID{}("9ec91ed72ef1a53f87d5eeec9293223e916fb510975c0e58b499db0b0c624693")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(loop___)_WASM-TEXT_FoldedInstr_OptionalId_TypeDecls_Instrs`(inj{Identifier,OptionalId}(ID),TDECLS,IS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{BlockInstr,KItem}(`loop___end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId`(ID,TDECLS,IS,`_WASM-DATA_OptionalId`(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6d7ae552c3b2b8e8b9ae12596b8f7f52bf37f8dd6ccad16fc666e3d7c65c143d) contentStartColumn(10) contentStartLine(124) org.kframework.attributes.Location(Location(124,10,124,90)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LPar'loop'UndsUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs{}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},Lbl'Unds'WASM-DATA'Unds'OptionalId{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("124"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(124,10,124,90)"), UNIQUE'Unds'ID{}("6d7ae552c3b2b8e8b9ae12596b8f7f52bf37f8dd6ccad16fc666e3d7c65c143d")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(inj{Identifier,OptionalId}(ID) #as _15,`(data_)_WASM-TEXT_MemorySpec_DataString`(DS)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`memory{___}_WASM_MemoryDefn_OptionalId_Int_OptionalInt`(_15,`#lengthDataPages(_)_WASM_Int_DataString`(DS),inj{Int,OptionalInt}(`#lengthDataPages(_)_WASM_Int_DataString`(DS))))~>inj{DataDefn,KItem}(`(data___)_WASM_DataDefn_Index_Offset_DataString`(inj{Identifier,Index}(ID),`(offset_)_WASM_Offset_Instrs`(`___WASM_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(_)_WASM-TEXT_FoldedInstr_PlainInstr`(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int")))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)))),DS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires `_<=Int_`(`#lengthDataPages(_)_WASM_Int_DataString`(DS),`#maxMemorySize()_WASM_Int`(.KList)) ensures #token("true","Bool") [UNIQUE_ID(e7c419f7fe27d732ac8c3981ba7c24dfdea1e9130fb8929111bb038283870343) contentStartColumn(10) contentStartLine(217) org.kframework.attributes.Location(Location(217,10,222,59)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'Hash'lengthDataPages'LParUndsRParUnds'WASM'Unds'Int'Unds'DataString{}(VarDS:SortDataString{}),Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}()),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'15:SortOptionalId{}),Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(VarDS:SortDataString{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lblmemory'LBraUndsUndsUndsRBraUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Var'Unds'15:SortOptionalId{},Lbl'Hash'lengthDataPages'LParUndsRParUnds'WASM'Unds'Int'Unds'DataString{}(VarDS:SortDataString{}),inj{SortInt{}, SortOptionalInt{}}(Lbl'Hash'lengthDataPages'LParUndsRParUnds'WASM'Unds'Int'Unds'DataString{}(VarDS:SortDataString{})))),kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbl'LPar'data'UndsUndsUndsRParUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Offset'Unds'DataString{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{}),Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),\dv{SortInt{}}("0")))),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()))),VarDS:SortDataString{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("217"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(217,10,222,59)"), UNIQUE'Unds'ID{}("e7c419f7fe27d732ac8c3981ba7c24dfdea1e9130fb8929111bb038283870343")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(inj{Identifier,OptionalId}(ID) #as _15,`___WASM-TEXT_MemorySpec_InlineExport_MemorySpec`(`(export_)_WASM-TEXT_InlineExport_WasmString`(ENAME),SPEC)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ExportDefn,KItem}(`(export_(_))_WASM_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA_Externval_AllocatedKind_Index`(`memory_WASM-DATA_AllocatedKind`(.KList),inj{Identifier,Index}(ID))))~>inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(_15,SPEC))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ebed7cbec19bc2a5f233167d36025d1d7e520ed76a315d5d24e2663a314069f6) contentStartColumn(10) contentStartLine(297) org.kframework.attributes.Location(Location(297,10,301,14)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'15:SortOptionalId{}),Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(VarENAME:SortWasmString{}),VarSPEC:SortMemorySpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExportDefn{}, SortKItem{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lblmemory'Unds'WASM-DATA'Unds'AllocatedKind{}(),inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))),kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(Var'Unds'15:SortOptionalId{},VarSPEC:SortMemorySpec{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("297"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(297,10,301,14)"), UNIQUE'Unds'ID{}("ebed7cbec19bc2a5f233167d36025d1d7e520ed76a315d5d24e2663a314069f6")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(OID,`___WASM-TEXT_MemorySpec_InlineImport_MemType`(`(import__)_WASM-TEXT_InlineImport_WasmString_WasmString`(MOD,NAME),MT)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ImportDefn,KItem}(`(import___)_WASM_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(memory__)_WASM_ImportDesc_OptionalId_MemType`(OID,MT)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(974d9dc282323c7547d7b9043a5b6d7c674bc7242528d637a9fe424593ea4133) contentStartColumn(10) contentStartLine(326) org.kframework.attributes.Location(Location(326,10,326,116)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(VarOID:SortOptionalId{},Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineImport'Unds'MemType{}(Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{}),VarMT:SortMemType{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'MemType{}(VarOID:SortOptionalId{},VarMT:SortMemType{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("326"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(326,10,326,116)"), UNIQUE'Unds'ID{}("974d9dc282323c7547d7b9043a5b6d7c674bc7242528d637a9fe424593ea4133")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(OID,inj{Int,MemorySpec}(MIN)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`memory{___}_WASM_MemoryDefn_OptionalId_Int_OptionalInt`(OID,MIN,`.Int_WASM-DATA_OptionalInt`(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires `_<=Int_`(MIN,`#maxMemorySize()_WASM_Int`(.KList)) ensures #token("true","Bool") [UNIQUE_ID(20cbda5e177c2d69a0d5ce1d7b8b7bb4e142e1a42cce3f097283d2a34079d623) contentStartColumn(10) contentStartLine(925) org.kframework.attributes.Location(Location(925,10,926,42)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMIN:SortInt{},Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}()),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(VarOID:SortOptionalId{},inj{SortInt{}, SortMemorySpec{}}(VarMIN:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lblmemory'LBraUndsUndsUndsRBraUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarOID:SortOptionalId{},VarMIN:SortInt{},Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("925"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(925,10,926,42)"), UNIQUE'Unds'ID{}("20cbda5e177c2d69a0d5ce1d7b8b7bb4e142e1a42cce3f097283d2a34079d623")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(OID,inj{Limits,MemorySpec}(`___WASM-DATA_Limits_Int_Int`(MIN,MAX))))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`memory{___}_WASM_MemoryDefn_OptionalId_Int_OptionalInt`(OID,MIN,inj{Int,OptionalInt}(MAX)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires `_andBool_`(`_<=Int_`(MIN,`#maxMemorySize()_WASM_Int`(.KList)),`_<=Int_`(MAX,`#maxMemorySize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(ba55b3e29cf37aa825c87fd4041908d70b565ec6bc4121a5c86cd849be2ab47d) contentStartColumn(10) contentStartLine(927) org.kframework.attributes.Location(Location(927,10,929,42)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMIN:SortInt{},Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}()),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMAX:SortInt{},Lbl'Hash'maxMemorySize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(VarOID:SortOptionalId{},inj{SortLimits{}, SortMemorySpec{}}(Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(VarMIN:SortInt{},VarMAX:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lblmemory'LBraUndsUndsUndsRBraUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarOID:SortOptionalId{},VarMIN:SortInt{},inj{SortInt{}, SortOptionalInt{}}(VarMAX:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("927"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(927,10,929,42)"), UNIQUE'Unds'ID{}("ba55b3e29cf37aa825c87fd4041908d70b565ec6bc4121a5c86cd849be2ab47d")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(`_WASM-DATA_OptionalId`(.KList),`(data_)_WASM-TEXT_MemorySpec_DataString`(DS) #as _15))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(NEXTID)),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(inj{Identifier,OptionalId}(`#freshId(_)_WASM-DATA_Identifier_Int`(NEXTID)),_15))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(`_+Int_`(NEXTID,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b2b87e323b40c55a2bbc3bc3b57508618d764774ede46594637a4f793e63a4b) contentStartColumn(10) contentStartLine(214) org.kframework.attributes.Location(Location(214,10,215,62)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),\and{SortMemorySpec{}}(Lbl'LPar'data'UndsRParUnds'WASM-TEXT'Unds'MemorySpec'Unds'DataString{}(VarDS:SortDataString{}),Var'Unds'15:SortMemorySpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(VarNEXTID:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(VarNEXTID:SortInt{})),Var'Unds'15:SortMemorySpec{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTID:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("214"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(214,10,215,62)"), UNIQUE'Unds'ID{}("3b2b87e323b40c55a2bbc3bc3b57508618d764774ede46594637a4f793e63a4b")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(`_WASM-DATA_OptionalId`(.KList),`___WASM-TEXT_MemorySpec_InlineExport_MemorySpec`(EXPO,SPEC) #as _15))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(NEXTID)),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`(memory__)_WASM_MemoryDefn_OptionalId_MemorySpec`(inj{Identifier,OptionalId}(`#freshId(_)_WASM-DATA_Identifier_Int`(NEXTID)),_15))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(`_+Int_`(NEXTID,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4a4975213a9db97ed09f246a975440140b4f0b8bf546313756e5df132c3be5db) contentStartColumn(10) contentStartLine(291) org.kframework.attributes.Location(Location(291,10,295,62)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),\and{SortMemorySpec{}}(Lbl'UndsUndsUnds'WASM-TEXT'Unds'MemorySpec'Unds'InlineExport'Unds'MemorySpec{}(VarEXPO:SortInlineExport{},VarSPEC:SortMemorySpec{}),Var'Unds'15:SortMemorySpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(VarNEXTID:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lbl'LPar'memory'UndsUndsRParUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'MemorySpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(VarNEXTID:SortInt{})),Var'Unds'15:SortMemorySpec{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTID:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("291"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(291,10,295,62)"), UNIQUE'Unds'ID{}("4a4975213a9db97ed09f246a975440140b4f0b8bf546313756e5df132c3be5db")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ModuleDecl,KItem}(`(module__)_WASM_ModuleDecl_OptionalId_Defns`(OID,DEFNS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ModuleDecl,KItem}(`sortModule(_,_)_WASM_ModuleDecl_Defns_OptionalId`(DEFNS,OID))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5d690435c7f0b7d0acc5a9d3aaf33465be1704b168a6413ede4027c78a64997b) contentStartColumn(10) contentStartLine(1512) org.kframework.attributes.Location(Location(1512,10,1512,80)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortModuleDecl{}, SortKItem{}}(Lbl'LPar'module'UndsUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns{}(VarOID:SortOptionalId{},VarDEFNS:SortDefns{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortModuleDecl{}, SortKItem{}}(LblsortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'OptionalId{}(VarDEFNS:SortDefns{},VarOID:SortOptionalId{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1512"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1512,10,1512,80)"), UNIQUE'Unds'ID{}("5d690435c7f0b7d0acc5a9d3aaf33465be1704b168a6413ede4027c78a64997b")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{StartDefn,KItem}(`(start_)_WASM_StartDefn_Index`(TFIDX))~>DotVar2),_16,`<curFrame>`(_0,_1,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_2,_3) #as _29,_17,_18,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_4,_5,_6,_7,`<funcIds>`(IDS),`<funcAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,TFIDX)),inj{Int,KItem}(FADDR)),DotVar6)),_8,_9,_10,_11,_12,_13,_14,_15)),DotVar4)) #as _32,_19,_20,_21,_22),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`(invoke_)_WASM_Instr_Int`(FADDR))~>DotVar2),_16,_29,_17,_18,_32,_19,_20,_21,_22),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c5cf5a29cc4c735fd170c09242d7cb341a1e631aa88d503d4e2c1b582be9e216) contentStartColumn(10) contentStartLine(1299) org.kframework.attributes.Location(Location(1299,10,1306,23)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStartDefn{}, SortKItem{}}(Lbl'LPar'start'UndsRParUnds'WASM'Unds'StartDefn'Unds'Index{}(VarTFIDX:SortIndex{})),VarDotVar2:SortK{})),Var'Unds'16:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'29:SortCurFrameCell{}),Var'Unds'17:SortModuleRegistryCell{},Var'Unds'18:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'4:SortExportsCell{},Var'Unds'5:SortTypeIdsCell{},Var'Unds'6:SortTypesCell{},Var'Unds'7:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'funcAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarFADDR:SortInt{})),VarDotVar6:SortMap{})),Var'Unds'8:SortNextFuncIdxCell{},Var'Unds'9:SortTabIdsCell{},Var'Unds'10:SortTabAddrsCell{},Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'32:SortModuleInstancesCell{}),Var'Unds'19:SortNextModuleIdxCell{},Var'Unds'20:SortMainStoreCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'22:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(VarFADDR:SortInt{})),VarDotVar2:SortK{})),Var'Unds'16:SortValstackCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'17:SortModuleRegistryCell{},Var'Unds'18:SortModuleIdsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'19:SortNextModuleIdxCell{},Var'Unds'20:SortMainStoreCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'22:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1299"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1299,10,1306,23)"), UNIQUE'Unds'ID{}("c5cf5a29cc4c735fd170c09242d7cb341a1e631aa88d503d4e2c1b582be9e216")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(inj{Identifier,OptionalId}(ID) #as _15,`_(elem_)_WASM-TEXT_TableSpec_TableElemType_ElemSegment`(`funcref_WASM_TableElemType`(.KList),ES)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`table{___}_WASM_TableDefn_OptionalId_Int_OptionalInt`(_15,`#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(ES),inj{Int,OptionalInt}(`#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(ES))))~>inj{ElemDefn,KItem}(`(elem___)_WASM_ElemDefn_Index_Offset_ElemSegment`(inj{Identifier,Index}(ID),`(offset_)_WASM_Offset_Instrs`(`___WASM_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(_)_WASM-TEXT_FoldedInstr_PlainInstr`(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("0","Int")))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)))),ES))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(508bbdfdefdfdf7ed972acd5d89b6f2bfd0c73d6bde79a633f09a4af453727c6) contentStartColumn(10) contentStartLine(229) org.kframework.attributes.Location(Location(229,10,233,14)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'15:SortOptionalId{}),Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(Lblfuncref'Unds'WASM'Unds'TableElemType{}(),VarES:SortElemSegment{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbltable'LBraUndsUndsUndsRBraUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Var'Unds'15:SortOptionalId{},Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(VarES:SortElemSegment{}),inj{SortInt{}, SortOptionalInt{}}(Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(VarES:SortElemSegment{})))),kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lbl'LPar'elem'UndsUndsUndsRParUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'Offset'Unds'ElemSegment{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{}),Lbl'LPar'offset'UndsRParUnds'WASM'Unds'Offset'Unds'Instrs{}(Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),\dv{SortInt{}}("0")))),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()))),VarES:SortElemSegment{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("229"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(229,10,233,14)"), UNIQUE'Unds'ID{}("508bbdfdefdfdf7ed972acd5d89b6f2bfd0c73d6bde79a633f09a4af453727c6")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(inj{Identifier,OptionalId}(ID) #as _15,`___WASM-TEXT_TableSpec_InlineExport_TableSpec`(`(export_)_WASM-TEXT_InlineExport_WasmString`(ENAME),SPEC)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ExportDefn,KItem}(`(export_(_))_WASM_ExportDefn_WasmString_Externval`(ENAME,`___WASM-DATA_Externval_AllocatedKind_Index`(`table_WASM-DATA_AllocatedKind`(.KList),inj{Identifier,Index}(ID))))~>inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(_15,SPEC))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c5e4ca0125423eee829b879b608d099455d81140b13e5724e40dbe9b6e89e7ed) contentStartColumn(10) contentStartLine(283) org.kframework.attributes.Location(Location(283,10,287,14)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'15:SortOptionalId{}),Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(Lbl'LPar'export'UndsRParUnds'WASM-TEXT'Unds'InlineExport'Unds'WasmString{}(VarENAME:SortWasmString{}),VarSPEC:SortTableSpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExportDefn{}, SortKItem{}}(Lbl'LPar'export'UndsLParUndsRParRParUnds'WASM'Unds'ExportDefn'Unds'WasmString'Unds'Externval{}(VarENAME:SortWasmString{},Lbl'UndsUndsUnds'WASM-DATA'Unds'Externval'Unds'AllocatedKind'Unds'Index{}(Lbltable'Unds'WASM-DATA'Unds'AllocatedKind{}(),inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{})))),kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(Var'Unds'15:SortOptionalId{},VarSPEC:SortTableSpec{})),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("283"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(283,10,287,14)"), UNIQUE'Unds'ID{}("c5e4ca0125423eee829b879b608d099455d81140b13e5724e40dbe9b6e89e7ed")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(OID,`___WASM-TEXT_TableSpec_InlineImport_TableType`(`(import__)_WASM-TEXT_InlineImport_WasmString_WasmString`(MOD,NAME),TT)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{ImportDefn,KItem}(`(import___)_WASM_ImportDefn_WasmString_WasmString_ImportDesc`(MOD,NAME,`(table__)_WASM_ImportDesc_OptionalId_TableType`(OID,TT)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf78bd1963edc2ed79c4f576eeda0b99477055a4e228b6898720dd5d27917670) contentStartColumn(10) contentStartLine(322) org.kframework.attributes.Location(Location(322,10,322,116)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(VarOID:SortOptionalId{},Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineImport'Unds'TableType{}(Lbl'LPar'import'UndsUndsRParUnds'WASM-TEXT'Unds'InlineImport'Unds'WasmString'Unds'WasmString{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{}),VarTT:SortTableType{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(Lbl'LPar'import'UndsUndsUndsRParUnds'WASM'Unds'ImportDefn'Unds'WasmString'Unds'WasmString'Unds'ImportDesc{}(VarMOD:SortWasmString{},VarNAME:SortWasmString{},Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'ImportDesc'Unds'OptionalId'Unds'TableType{}(VarOID:SortOptionalId{},VarTT:SortTableType{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("322"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(322,10,322,116)"), UNIQUE'Unds'ID{}("cf78bd1963edc2ed79c4f576eeda0b99477055a4e228b6898720dd5d27917670")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(OID,inj{TableType,TableSpec}(`___WASM_TableType_Limits_TableElemType`(`___WASM-DATA_Limits_Int_Int`(MIN,MAX),`funcref_WASM_TableElemType`(.KList)))))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`table{___}_WASM_TableDefn_OptionalId_Int_OptionalInt`(OID,MIN,inj{Int,OptionalInt}(MAX)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires `_andBool_`(`_<=Int_`(MIN,`#maxTableSize()_WASM_Int`(.KList)),`_<=Int_`(MAX,`#maxTableSize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(d59da837afae95a2766cce582069bfe54c19e28647a0385f0cd8575ddbab65cd) contentStartColumn(10) contentStartLine(872) org.kframework.attributes.Location(Location(872,10,874,41)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMIN:SortInt{},Lbl'Hash'maxTableSize'LParRParUnds'WASM'Unds'Int{}()),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMAX:SortInt{},Lbl'Hash'maxTableSize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(VarOID:SortOptionalId{},inj{SortTableType{}, SortTableSpec{}}(Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'Limits'Unds'Int'Unds'Int{}(VarMIN:SortInt{},VarMAX:SortInt{}),Lblfuncref'Unds'WASM'Unds'TableElemType{}())))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbltable'LBraUndsUndsUndsRBraUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarOID:SortOptionalId{},VarMIN:SortInt{},inj{SortInt{}, SortOptionalInt{}}(VarMAX:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("872"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(872,10,874,41)"), UNIQUE'Unds'ID{}("d59da837afae95a2766cce582069bfe54c19e28647a0385f0cd8575ddbab65cd")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(OID,inj{TableType,TableSpec}(`___WASM_TableType_Limits_TableElemType`(inj{Int,Limits}(MIN),`funcref_WASM_TableElemType`(.KList)))))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`table{___}_WASM_TableDefn_OptionalId_Int_OptionalInt`(OID,MIN,`.Int_WASM-DATA_OptionalInt`(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires `_<=Int_`(MIN,`#maxTableSize()_WASM_Int`(.KList)) ensures #token("true","Bool") [UNIQUE_ID(deb6aa4688e8d71115c4affa3f0ca5c47b4314782de328318b3e475f4e2846fc) contentStartColumn(10) contentStartLine(870) org.kframework.attributes.Location(Location(870,10,871,41)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarMIN:SortInt{},Lbl'Hash'maxTableSize'LParRParUnds'WASM'Unds'Int{}()),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(VarOID:SortOptionalId{},inj{SortTableType{}, SortTableSpec{}}(Lbl'UndsUndsUnds'WASM'Unds'TableType'Unds'Limits'Unds'TableElemType{}(inj{SortInt{}, SortLimits{}}(VarMIN:SortInt{}),Lblfuncref'Unds'WASM'Unds'TableElemType{}())))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbltable'LBraUndsUndsUndsRBraUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarOID:SortOptionalId{},VarMIN:SortInt{},Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("870"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(870,10,871,41)"), UNIQUE'Unds'ID{}("deb6aa4688e8d71115c4affa3f0ca5c47b4314782de328318b3e475f4e2846fc")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(`_WASM-DATA_OptionalId`(.KList),`_(elem_)_WASM-TEXT_TableSpec_TableElemType_ElemSegment`(`funcref_WASM_TableElemType`(.KList),ES) #as _15))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(NEXTID)),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(inj{Identifier,OptionalId}(`#freshId(_)_WASM-DATA_Identifier_Int`(NEXTID)),_15))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(`_+Int_`(NEXTID,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e78bdd2d85f78a8a3899eec75f61680dea17a0ef483765f357c24e55df0a84ea) contentStartColumn(10) contentStartLine(226) org.kframework.attributes.Location(Location(226,10,227,62)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),\and{SortTableSpec{}}(Lbl'UndsLPar'elem'UndsRParUnds'WASM-TEXT'Unds'TableSpec'Unds'TableElemType'Unds'ElemSegment{}(Lblfuncref'Unds'WASM'Unds'TableElemType{}(),VarES:SortElemSegment{}),Var'Unds'15:SortTableSpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(VarNEXTID:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(VarNEXTID:SortInt{})),Var'Unds'15:SortTableSpec{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTID:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("226"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(226,10,227,62)"), UNIQUE'Unds'ID{}("e78bdd2d85f78a8a3899eec75f61680dea17a0ef483765f357c24e55df0a84ea")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(`_WASM-DATA_OptionalId`(.KList),`___WASM-TEXT_TableSpec_InlineExport_TableSpec`(EXPO,SPEC) #as _15))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(NEXTID)),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`(table__)_WASM_TableDefn_OptionalId_TableSpec`(inj{Identifier,OptionalId}(`#freshId(_)_WASM-DATA_Identifier_Int`(NEXTID)),_15))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,`<nextFreshId>`(`_+Int_`(NEXTID,#token("1","Int")))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d0977329aee3abf94fb03044206247ceff1322ff4866c8815e9cfdc60db50631) contentStartColumn(10) contentStartLine(277) org.kframework.attributes.Location(Location(277,10,281,62)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),\and{SortTableSpec{}}(Lbl'UndsUndsUnds'WASM-TEXT'Unds'TableSpec'Unds'InlineExport'Unds'TableSpec{}(VarEXPO:SortInlineExport{},VarSPEC:SortTableSpec{}),Var'Unds'15:SortTableSpec{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(VarNEXTID:SortInt{})),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbl'LPar'table'UndsUndsRParUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'TableSpec{}(inj{SortIdentifier{}, SortOptionalId{}}(Lbl'Hash'freshId'LParUndsRParUnds'WASM-DATA'Unds'Identifier'Unds'Int{}(VarNEXTID:SortInt{})),Var'Unds'15:SortTableSpec{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Lbl'-LT-'nextFreshId'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTID:SortInt{},\dv{SortInt{}}("1")))),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("277"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(277,10,281,62)"), UNIQUE'Unds'ID{}("d0977329aee3abf94fb03044206247ceff1322ff4866c8815e9cfdc60db50631")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{TypeDefn,KItem}(`(type_(func_))_WASM_TypeDefn_OptionalId_TypeDecls`(ID,TDECLS))~>DotVar2),_15,`<curFrame>`(_0,_1,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_2,_3) #as _28,_16,_17,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_4,`<typeIds>`(IDS),`<types>`(TYPES),`<nextTypeIdx>`(NEXTIDX),_5,_6,_7,_8,_9,_10,_11,_12,_13,_14)),DotVar4)),_18,_19,_20,_21),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_15,_28,_16,_17,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_4,`<typeIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,ID,NEXTIDX)),`<types>`(`Map:update`(TYPES,inj{Int,KItem}(NEXTIDX),inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS))))),`<nextTypeIdx>`(`_+Int_`(NEXTIDX,#token("1","Int"))),_5,_6,_7,_8,_9,_10,_11,_12,_13,_14)),DotVar4)),_18,_19,_20,_21),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3a17d067e3a8bf31af2d0f52d375cdad2b2f99721e5058c453e9829df7c8639d) contentStartColumn(10) contentStartLine(608) org.kframework.attributes.Location(Location(608,10,616,23)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTypeDefn{}, SortKItem{}}(Lbl'LPar'type'UndsLPar'func'UndsRParRParUnds'WASM'Unds'TypeDefn'Unds'OptionalId'Unds'TypeDecls{}(VarID:SortOptionalId{},VarTDECLS:SortTypeDecls{})),VarDotVar2:SortK{})),Var'Unds'15:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'28:SortCurFrameCell{}),Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'4:SortExportsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Lbl'-LT-'nextTypeIdx'-GT-'{}(VarNEXTIDX:SortInt{}),Var'Unds'5:SortFuncIdsCell{},Var'Unds'6:SortFuncAddrsCell{},Var'Unds'7:SortNextFuncIdxCell{},Var'Unds'8:SortTabIdsCell{},Var'Unds'9:SortTabAddrsCell{},Var'Unds'10:SortMemIdsCell{},Var'Unds'11:SortMemAddrsCell{},Var'Unds'12:SortGlobIdsCell{},Var'Unds'13:SortGlobalAddrsCell{},Var'Unds'14:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'18:SortNextModuleIdxCell{},Var'Unds'19:SortMainStoreCell{},Var'Unds'20:SortDeterministicMemoryGrowthCell{},Var'Unds'21:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'15:SortValstackCell{},Var'Unds'28:SortCurFrameCell{},Var'Unds'16:SortModuleRegistryCell{},Var'Unds'17:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'4:SortExportsCell{},Lbl'-LT-'typeIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarID:SortOptionalId{},VarNEXTIDX:SortInt{})),Lbl'-LT-'types'-GT-'{}(LblMap'Coln'update{}(VarTYPES:SortMap{},inj{SortInt{}, SortKItem{}}(VarNEXTIDX:SortInt{}),inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{}))))),Lbl'-LT-'nextTypeIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTIDX:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'5:SortFuncIdsCell{},Var'Unds'6:SortFuncAddrsCell{},Var'Unds'7:SortNextFuncIdxCell{},Var'Unds'8:SortTabIdsCell{},Var'Unds'9:SortTabAddrsCell{},Var'Unds'10:SortMemIdsCell{},Var'Unds'11:SortMemAddrsCell{},Var'Unds'12:SortGlobIdsCell{},Var'Unds'13:SortGlobalAddrsCell{},Var'Unds'14:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'18:SortNextModuleIdxCell{},Var'Unds'19:SortMainStoreCell{},Var'Unds'20:SortDeterministicMemoryGrowthCell{},Var'Unds'21:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("608"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(608,10,616,23)"), UNIQUE'Unds'ID{}("3a17d067e3a8bf31af2d0f52d375cdad2b2f99721e5058c453e9829df7c8639d")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{EmptyStmts,KItem}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(831bc0e4717274d24b9a1bf083cbf5497cccb1ce4cbdb99cdc50b3a8a2b0c3bd) contentStartColumn(19) contentStartLine(150) org.kframework.attributes.Location(Location(150,19,150,58)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortEmptyStmts{}, SortKItem{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("150"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(150,19,150,58)"), UNIQUE'Unds'ID{}("831bc0e4717274d24b9a1bf083cbf5497cccb1ce4cbdb99cdc50b3a8a2b0c3bd")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_AValType_CvtOp`(ATYPE,inj{Cvtf32Op,CvtOp}(CVTOP) #as _14))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(inj{FValType,AValType}(`f32_WASM-DATA_FValType`(.KList)),C1),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(ATYPE,_14,C1))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8dacf5b92f8ef995ad3e7d8de02b647ec260e1700f5113fbc42c7233fb5c14a3) contentStartColumn(10) contentStartLine(273) org.kframework.attributes.Location(Location(273,10,274,66)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(VarATYPE:SortAValType{},\and{SortCvtOp{}}(inj{SortCvtf32Op{}, SortCvtOp{}}(VarCVTOP:SortCvtf32Op{}),Var'Unds'14:SortCvtOp{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortFValType{}, SortAValType{}}(Lblf32'Unds'WASM-DATA'Unds'FValType{}()),VarC1:SortNumber{}),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(VarATYPE:SortAValType{},Var'Unds'14:SortCvtOp{},VarC1:SortNumber{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("273"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(273,10,274,66)"), UNIQUE'Unds'ID{}("8dacf5b92f8ef995ad3e7d8de02b647ec260e1700f5113fbc42c7233fb5c14a3")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_AValType_CvtOp`(ATYPE,inj{Cvtf64Op,CvtOp}(CVTOP) #as _14))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(inj{FValType,AValType}(`f64_WASM-DATA_FValType`(.KList)),C1),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(ATYPE,_14,C1))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1a21b672d850dd85996c83d09a6963fb56166f9cb66dc8cc14f170d257acb880) contentStartColumn(10) contentStartLine(276) org.kframework.attributes.Location(Location(276,10,277,66)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(VarATYPE:SortAValType{},\and{SortCvtOp{}}(inj{SortCvtf64Op{}, SortCvtOp{}}(VarCVTOP:SortCvtf64Op{}),Var'Unds'14:SortCvtOp{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortFValType{}, SortAValType{}}(Lblf64'Unds'WASM-DATA'Unds'FValType{}()),VarC1:SortNumber{}),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(VarATYPE:SortAValType{},Var'Unds'14:SortCvtOp{},VarC1:SortNumber{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("276"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(276,10,277,66)"), UNIQUE'Unds'ID{}("1a21b672d850dd85996c83d09a6963fb56166f9cb66dc8cc14f170d257acb880")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_AValType_CvtOp`(ATYPE,inj{Cvti32Op,CvtOp}(CVTOP) #as _14))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(inj{IValType,AValType}(`i32_WASM-DATA_IValType`(.KList)),C1),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(ATYPE,_14,C1))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d63af7bfd4db6dd2d63b3d917e33f929f8e842befc66eeaf237075d0b27a1200) contentStartColumn(10) contentStartLine(267) org.kframework.attributes.Location(Location(267,10,268,66)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(VarATYPE:SortAValType{},\and{SortCvtOp{}}(inj{SortCvti32Op{}, SortCvtOp{}}(VarCVTOP:SortCvti32Op{}),Var'Unds'14:SortCvtOp{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(Lbli32'Unds'WASM-DATA'Unds'IValType{}()),VarC1:SortNumber{}),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(VarATYPE:SortAValType{},Var'Unds'14:SortCvtOp{},VarC1:SortNumber{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("267"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(267,10,268,66)"), UNIQUE'Unds'ID{}("d63af7bfd4db6dd2d63b3d917e33f929f8e842befc66eeaf237075d0b27a1200")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_AValType_CvtOp`(ATYPE,inj{Cvti64Op,CvtOp}(CVTOP) #as _14))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(inj{IValType,AValType}(`i64_WASM-DATA_IValType`(.KList)),C1),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(ATYPE,_14,C1))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e1fbc4bb3c5db9e2b04ac7cf56f8ad2c07b700d776482fcbc323b79441c524c8) contentStartColumn(10) contentStartLine(270) org.kframework.attributes.Location(Location(270,10,271,66)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'AValType'Unds'CvtOp{}(VarATYPE:SortAValType{},\and{SortCvtOp{}}(inj{SortCvti64Op{}, SortCvtOp{}}(VarCVTOP:SortCvti64Op{}),Var'Unds'14:SortCvtOp{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(Lbli64'Unds'WASM-DATA'Unds'IValType{}()),VarC1:SortNumber{}),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(VarATYPE:SortAValType{},Var'Unds'14:SortCvtOp{},VarC1:SortNumber{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("270"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(270,10,271,66)"), UNIQUE'Unds'ID{}("e1fbc4bb3c5db9e2b04ac7cf56f8ad2c07b700d776482fcbc323b79441c524c8")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_FValType_FBinOp`(FTYPE,BOP))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,C2)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,C1)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,BOP,C1,C2))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(804add527caab575ffa3267a1821e4921e27396f08876f9d40c25cc3ca87c4a7) contentStartColumn(10) contentStartLine(231) org.kframework.attributes.Location(Location(231,10,232,83)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FBinOp{}(VarFTYPE:SortFValType{},VarBOP:SortFBinOp{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarC2:SortFloat{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarC1:SortFloat{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},VarBOP:SortFBinOp{},VarC1:SortFloat{},VarC2:SortFloat{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("231"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(231,10,232,83)"), UNIQUE'Unds'ID{}("804add527caab575ffa3267a1821e4921e27396f08876f9d40c25cc3ca87c4a7")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_FValType_FRelOp`(FTYPE,ROP))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,C2)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,C1)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(FTYPE,ROP,C1,C2))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b192f56bc4fff88e2101799e77a453515017c801cf23e28dce0f13122e1ec279) contentStartColumn(10) contentStartLine(256) org.kframework.attributes.Location(Location(256,10,257,83)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FRelOp{}(VarFTYPE:SortFValType{},VarROP:SortFRelOp{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarC2:SortFloat{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarC1:SortFloat{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},VarROP:SortFRelOp{},VarC1:SortFloat{},VarC2:SortFloat{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("256"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(256,10,257,83)"), UNIQUE'Unds'ID{}("b192f56bc4fff88e2101799e77a453515017c801cf23e28dce0f13122e1ec279")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_FValType_FUnOp`(FTYPE,UOP))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,C1)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,UOP,C1))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1d23b7289540c2a7182f3f0da4aaeb9c1f60026be97aeb3647d246c43c832dd4) contentStartColumn(10) contentStartLine(217) org.kframework.attributes.Location(Location(217,10,218,68)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'FUnOp{}(VarFTYPE:SortFValType{},VarUOP:SortFUnOp{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarC1:SortFloat{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},VarUOP:SortFUnOp{},VarC1:SortFloat{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("217"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(217,10,218,68)"), UNIQUE'Unds'ID{}("1d23b7289540c2a7182f3f0da4aaeb9c1f60026be97aeb3647d246c43c832dd4")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_IValType_IBinOp`(ITYPE,BOP))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,C2)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,C1)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,BOP,C1,C2))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(30e5d70f473bb452b2100757cfafaca0dc5d72649c0c3ef559a4288e25b923ca) contentStartColumn(10) contentStartLine(229) org.kframework.attributes.Location(Location(229,10,230,83)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IBinOp{}(VarITYPE:SortIValType{},VarBOP:SortIBinOp{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarC2:SortInt{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarC1:SortInt{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},VarBOP:SortIBinOp{},VarC1:SortInt{},VarC2:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("229"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(229,10,230,83)"), UNIQUE'Unds'ID{}("30e5d70f473bb452b2100757cfafaca0dc5d72649c0c3ef559a4288e25b923ca")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_IValType_IRelOp`(ITYPE,ROP))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,C2)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,C1)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(ITYPE,ROP,C1,C2))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b04a71477c21480921327978cc19dde584cca03c3c678bb12a56b96ca2c01c8c) contentStartColumn(10) contentStartLine(254) org.kframework.attributes.Location(Location(254,10,255,83)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IRelOp{}(VarITYPE:SortIValType{},VarROP:SortIRelOp{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarC2:SortInt{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarC1:SortInt{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},VarROP:SortIRelOp{},VarC1:SortInt{},VarC2:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("254"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(254,10,255,83)"), UNIQUE'Unds'ID{}("b04a71477c21480921327978cc19dde584cca03c3c678bb12a56b96ca2c01c8c")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_IValType_IUnOp`(ITYPE,UOP))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,C1)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_IValType_IUnOp_Int`(ITYPE,UOP,C1))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8813c1035429a4410a2635382d3e998018cccd2704e7645014326d747c6958fe) contentStartColumn(10) contentStartLine(215) org.kframework.attributes.Location(Location(215,10,216,68)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'IUnOp{}(VarITYPE:SortIValType{},VarUOP:SortIUnOp{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarC1:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IUnOp'Unds'Int{}(VarITYPE:SortIValType{},VarUOP:SortIUnOp{},VarC1:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("215"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(215,10,216,68)"), UNIQUE'Unds'ID{}("8813c1035429a4410a2635382d3e998018cccd2704e7645014326d747c6958fe")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_IValType_LoadOpM`(ITYPE,`___WASM_LoadOpM_LoadOp_MemArg`(LOP,MEMARG)))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),IDX)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.___WASM_PlainInstr_IValType_LoadOp_Int`(ITYPE,LOP,`_+Int_`(IDX,`#getOffset(_)_WASM_Int_MemArg`(MEMARG))))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d280920458c9aef7dcc08cee4a1af27d787d5ede80c90fc3220799bb3903c3b) contentStartColumn(10) contentStartLine(1038) org.kframework.attributes.Location(Location(1038,10,1039,70)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(VarITYPE:SortIValType{},Lbl'UndsUndsUnds'WASM'Unds'LoadOpM'Unds'LoadOp'Unds'MemArg{}(VarLOP:SortLoadOp{},VarMEMARG:SortMemArg{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarIDX:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},VarLOP:SortLoadOp{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},Lbl'Hash'getOffset'LParUndsRParUnds'WASM'Unds'Int'Unds'MemArg{}(VarMEMARG:SortMemArg{})))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1038"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1038,10,1039,70)"), UNIQUE'Unds'ID{}("2d280920458c9aef7dcc08cee4a1af27d787d5ede80c90fc3220799bb3903c3b")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_IValType_LoadOpM`(ITYPE,inj{LoadOp,LoadOpM}(LOP)))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),IDX)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.___WASM_PlainInstr_IValType_LoadOp_Int`(ITYPE,LOP,IDX))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c1e002cd39b9c0076b1e9e1361376dbf29aa1dca33f1d0a9f954e2c159d0894) contentStartColumn(10) contentStartLine(1036) org.kframework.attributes.Location(Location(1036,10,1037,70)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(VarITYPE:SortIValType{},inj{SortLoadOp{}, SortLoadOpM{}}(VarLOP:SortLoadOp{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarIDX:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},VarLOP:SortLoadOp{},VarIDX:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1036"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1036,10,1037,70)"), UNIQUE'Unds'ID{}("9c1e002cd39b9c0076b1e9e1361376dbf29aa1dca33f1d0a9f954e2c159d0894")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_IValType_StoreOpM`(ITYPE,`___WASM_StoreOpM_StoreOp_MemArg`(SOP,MEMARG)))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,VAL)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),IDX)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(ITYPE,SOP,`_+Int_`(IDX,`#getOffset(_)_WASM_Int_MemArg`(MEMARG)),VAL))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(808d5fd05ef07e917d3dc41ddf3a959542dca08fb12c7cdc1a37e57d7be1c1ef) contentStartColumn(10) contentStartLine(980) org.kframework.attributes.Location(Location(980,10,981,83)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(VarITYPE:SortIValType{},Lbl'UndsUndsUnds'WASM'Unds'StoreOpM'Unds'StoreOp'Unds'MemArg{}(VarSOP:SortStoreOp{},VarMEMARG:SortMemArg{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarVAL:SortInt{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarIDX:SortInt{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},VarSOP:SortStoreOp{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},Lbl'Hash'getOffset'LParUndsRParUnds'WASM'Unds'Int'Unds'MemArg{}(VarMEMARG:SortMemArg{})),VarVAL:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("980"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(980,10,981,83)"), UNIQUE'Unds'ID{}("808d5fd05ef07e917d3dc41ddf3a959542dca08fb12c7cdc1a37e57d7be1c1ef")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_IValType_StoreOpM`(ITYPE,inj{StoreOp,StoreOpM}(SOP)))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,VAL)),`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),IDX)),VALSTACK))),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(ITYPE,SOP,IDX,VAL))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5c809d3dc87ca5a8cbc3ae2315ca9be99ce75bdd37bf076ca0960f42c5f47c63) contentStartColumn(10) contentStartLine(978) org.kframework.attributes.Location(Location(978,10,979,83)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(VarITYPE:SortIValType{},inj{SortStoreOp{}, SortStoreOpM{}}(VarSOP:SortStoreOp{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarVAL:SortInt{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarIDX:SortInt{})),VarVALSTACK:SortValStack{}))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},VarSOP:SortStoreOp{},VarIDX:SortInt{},VarVAL:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("978"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(978,10,979,83)"), UNIQUE'Unds'ID{}("5c809d3dc87ca5a8cbc3ae2315ca9be99ce75bdd37bf076ca0960f42c5f47c63")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.__WASM_PlainInstr_IValType_TestOp`(TYPE,TOP))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(TYPE,C1)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`_.___WASM-NUMERIC_Val_IValType_TestOp_Int`(TYPE,TOP,C1))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ecc009be408a7132697828e0da18a750392ce460ecf76add3aa2d39c2f254b7a) contentStartColumn(10) contentStartLine(242) org.kframework.attributes.Location(Location(242,10,243,67)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'TestOp{}(VarTYPE:SortIValType{},VarTOP:SortTestOp{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarTYPE:SortIValType{},VarC1:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'TestOp'Unds'Int{}(VarTYPE:SortIValType{},VarTOP:SortTestOp{},VarC1:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("242"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(242,10,243,67)"), UNIQUE'Unds'ID{}("ecc009be408a7132697828e0da18a750392ce460ecf76add3aa2d39c2f254b7a")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.___WASM_PlainInstr_IValType_LoadOp_Int`(`i64_WASM-DATA_IValType`(.KList) #as _15,`load32_s_WASM_LoadOp`(.KList),EA))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(_15,#token("4","Int"),EA,signedBytes(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(58048cc01255d6a9e08538f15c2807eb2b7d3b168094e1f28e06095455790239) contentStartColumn(10) contentStartLine(1086) org.kframework.attributes.Location(Location(1086,10,1086,93)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(\and{SortIValType{}}(Lbli64'Unds'WASM-DATA'Unds'IValType{}(),Var'Unds'15:SortIValType{}),Lblload32'Unds's'Unds'WASM'Unds'LoadOp{}(),VarEA:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Var'Unds'15:SortIValType{},\dv{SortInt{}}("4"),VarEA:SortInt{},LblsignedBytes{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1086"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1086,10,1086,93)"), UNIQUE'Unds'ID{}("58048cc01255d6a9e08538f15c2807eb2b7d3b168094e1f28e06095455790239")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.___WASM_PlainInstr_IValType_LoadOp_Int`(`i64_WASM-DATA_IValType`(.KList) #as _15,`load32_u_WASM_LoadOp`(.KList),EA))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(_15,#token("4","Int"),EA,unsignedBytes(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(83ddd20c53449c07555ae333fec69add20535735b4d22da0b5347c3a7b30e073) contentStartColumn(10) contentStartLine(1083) org.kframework.attributes.Location(Location(1083,10,1083,93)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(\and{SortIValType{}}(Lbli64'Unds'WASM-DATA'Unds'IValType{}(),Var'Unds'15:SortIValType{}),Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}(),VarEA:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Var'Unds'15:SortIValType{},\dv{SortInt{}}("4"),VarEA:SortInt{},LblunsignedBytes{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1083"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1083,10,1083,93)"), UNIQUE'Unds'ID{}("83ddd20c53449c07555ae333fec69add20535735b4d22da0b5347c3a7b30e073")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.___WASM_PlainInstr_IValType_LoadOp_Int`(ITYPE,`load16_s_WASM_LoadOp`(.KList),EA))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,#token("2","Int"),EA,signedBytes(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(151d860928a0c56be388f04a57c5d0b873302600e127c42b99fe9799e94e61e7) contentStartColumn(10) contentStartLine(1085) org.kframework.attributes.Location(Location(1085,10,1085,93)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},Lblload16'Unds's'Unds'WASM'Unds'LoadOp{}(),VarEA:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},\dv{SortInt{}}("2"),VarEA:SortInt{},LblsignedBytes{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1085"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1085,10,1085,93)"), UNIQUE'Unds'ID{}("151d860928a0c56be388f04a57c5d0b873302600e127c42b99fe9799e94e61e7")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.___WASM_PlainInstr_IValType_LoadOp_Int`(ITYPE,`load16_u_WASM_LoadOp`(.KList),EA))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,#token("2","Int"),EA,unsignedBytes(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4bc38cb05cd231c192ab9ec087fce04dadac2defb402f4b8a1c8eb7b809d3f69) contentStartColumn(10) contentStartLine(1082) org.kframework.attributes.Location(Location(1082,10,1082,93)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},Lblload16'Unds'u'Unds'WASM'Unds'LoadOp{}(),VarEA:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},\dv{SortInt{}}("2"),VarEA:SortInt{},LblunsignedBytes{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1082"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1082,10,1082,93)"), UNIQUE'Unds'ID{}("4bc38cb05cd231c192ab9ec087fce04dadac2defb402f4b8a1c8eb7b809d3f69")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.___WASM_PlainInstr_IValType_LoadOp_Int`(ITYPE,`load8_s_WASM_LoadOp`(.KList),EA))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,#token("1","Int"),EA,signedBytes(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f5a3877e8bccaa936d53bcbe1eea1a882c2f5f3efb68b0f9f0e12b1542e263c0) contentStartColumn(10) contentStartLine(1084) org.kframework.attributes.Location(Location(1084,10,1084,93)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},Lblload8'Unds's'Unds'WASM'Unds'LoadOp{}(),VarEA:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},\dv{SortInt{}}("1"),VarEA:SortInt{},LblsignedBytes{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1084"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1084,10,1084,93)"), UNIQUE'Unds'ID{}("f5a3877e8bccaa936d53bcbe1eea1a882c2f5f3efb68b0f9f0e12b1542e263c0")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.___WASM_PlainInstr_IValType_LoadOp_Int`(ITYPE,`load8_u_WASM_LoadOp`(.KList),EA))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,#token("1","Int"),EA,unsignedBytes(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a22a569039b812d806b60374aefa6b455478c7e7e11f5bb8b4db393b9055996d) contentStartColumn(10) contentStartLine(1081) org.kframework.attributes.Location(Location(1081,10,1081,93)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},Lblload8'Unds'u'Unds'WASM'Unds'LoadOp{}(),VarEA:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},\dv{SortInt{}}("1"),VarEA:SortInt{},LblunsignedBytes{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1081"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1081,10,1081,93)"), UNIQUE'Unds'ID{}("a22a569039b812d806b60374aefa6b455478c7e7e11f5bb8b4db393b9055996d")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.___WASM_PlainInstr_IValType_LoadOp_Int`(ITYPE,`load_WASM_LoadOp`(.KList),EA))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,`#numBytes(_)_WASM-DATA_Int_IValType`(ITYPE),EA,unsignedBytes(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f06ffa5b0a4b65ee406ada8b1e3df5dc412624f77a02321d187513179f25396a) contentStartColumn(10) contentStartLine(1080) org.kframework.attributes.Location(Location(1080,10,1080,93)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOp'Unds'Int{}(VarITYPE:SortIValType{},Lblload'Unds'WASM'Unds'LoadOp{}(),VarEA:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),VarEA:SortInt{},LblunsignedBytes{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1080"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1080,10,1080,93)"), UNIQUE'Unds'ID{}("f06ffa5b0a4b65ee406ada8b1e3df5dc412624f77a02321d187513179f25396a")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(ITYPE,`store_WASM_StoreOp`(.KList),EA,VAL))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(`#numBytes(_)_WASM-DATA_Int_IValType`(ITYPE),EA,inj{Int,Number}(VAL)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(028b9afa9aa3c67410d839a43120976beb35a8714709f5a6da9be1e110c063ef) contentStartColumn(10) contentStartLine(1014) org.kframework.attributes.Location(Location(1014,10,1014,93)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblstore'Unds'WASM'Unds'StoreOp{}(),VarEA:SortInt{},VarVAL:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),VarEA:SortInt{},inj{SortInt{}, SortNumber{}}(VarVAL:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1014"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1014,10,1014,93)"), UNIQUE'Unds'ID{}("028b9afa9aa3c67410d839a43120976beb35a8714709f5a6da9be1e110c063ef")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(_0,`store16_WASM_StoreOp`(.KList),EA,VAL))~>DotVar2),_1,_2,_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(#token("2","Int"),EA,inj{Int,Number}(`#wrap(_,_)_WASM-DATA_Int_Int_Int`(#token("16","Int"),VAL))))~>DotVar2),_1,_2,_3,_4,_5,_6,_7,_8,_9),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(47fccb06811a82361c9e3c34d516dc7dda93c466536c3c73638d7921adae8fc3) contentStartColumn(10) contentStartLine(1016) org.kframework.attributes.Location(Location(1016,10,1016,93)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},Lblstore16'Unds'WASM'Unds'StoreOp{}(),VarEA:SortInt{},VarVAL:SortInt{})),VarDotVar2:SortK{})),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(\dv{SortInt{}}("2"),VarEA:SortInt{},inj{SortInt{}, SortNumber{}}(Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("16"),VarVAL:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1016"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1016,10,1016,93)"), UNIQUE'Unds'ID{}("47fccb06811a82361c9e3c34d516dc7dda93c466536c3c73638d7921adae8fc3")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(_0,`store8_WASM_StoreOp`(.KList),EA,VAL))~>DotVar2),_1,_2,_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(#token("1","Int"),EA,inj{Int,Number}(`#wrap(_,_)_WASM-DATA_Int_Int_Int`(#token("8","Int"),VAL))))~>DotVar2),_1,_2,_3,_4,_5,_6,_7,_8,_9),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d0696c834ee3208e1124ff3c60e0cdfc931f5bb005c8169da601a30a87e420b6) contentStartColumn(10) contentStartLine(1015) org.kframework.attributes.Location(Location(1015,10,1015,93)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},Lblstore8'Unds'WASM'Unds'StoreOp{}(),VarEA:SortInt{},VarVAL:SortInt{})),VarDotVar2:SortK{})),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(\dv{SortInt{}}("1"),VarEA:SortInt{},inj{SortInt{}, SortNumber{}}(Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("8"),VarVAL:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'1:SortValstackCell{},Var'Unds'2:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1015"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1015,10,1015,93)"), UNIQUE'Unds'ID{}("d0696c834ee3208e1124ff3c60e0cdfc931f5bb005c8169da601a30a87e420b6")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`_.____WASM_Instr_IValType_StoreOp_Int_Int`(`i64_WASM-DATA_IValType`(.KList),`store32_WASM_StoreOp`(.KList),EA,VAL))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(#token("4","Int"),EA,inj{Int,Number}(`#wrap(_,_)_WASM-DATA_Int_Int_Int`(#token("32","Int"),VAL))))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0dfde24a5283d4ea6a7a1405fbdd3e3d4e520bf05c79070cb42129b204f6f499) contentStartColumn(10) contentStartLine(1017) org.kframework.attributes.Location(Location(1017,10,1017,93)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'UndsStopUndsUndsUndsUnds'WASM'Unds'Instr'Unds'IValType'Unds'StoreOp'Unds'Int'Unds'Int{}(Lbli64'Unds'WASM-DATA'Unds'IValType{}(),Lblstore32'Unds'WASM'Unds'StoreOp{}(),VarEA:SortInt{},VarVAL:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(\dv{SortInt{}}("4"),VarEA:SortInt{},inj{SortInt{}, SortNumber{}}(Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(\dv{SortInt{}}("32"),VarVAL:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1017"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1017,10,1017,93)"), UNIQUE'Unds'ID{}("0dfde24a5283d4ea6a7a1405fbdd3e3d4e520bf05c79070cb42129b204f6f499")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.const__WASM_PlainInstr_FValType_Number`(FTYPE,VAL))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{FVal,KItem}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,VAL))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ddf40100311897860c83f3bf6e98241ef0288d80c53d4e0006c412350a69774c) contentStartColumn(10) contentStartLine(203) org.kframework.attributes.Location(Location(203,10,203,74)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},VarVAL:SortNumber{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFVal{}, SortKItem{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},VarVAL:SortNumber{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("203"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(203,10,203,74)"), UNIQUE'Unds'ID{}("ddf40100311897860c83f3bf6e98241ef0288d80c53d4e0006c412350a69774c")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`_.const__WASM_PlainInstr_IValType_Int`(ITYPE,VAL))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{IVal,KItem}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,VAL)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(97c637f63167cc7d19698068bf5d66e50a5dbb60b0d159a62583ed75cd3b69e9) contentStartColumn(10) contentStartLine(202) org.kframework.attributes.Location(Location(202,10,202,74)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarVAL:SortInt{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIVal{}, SortKItem{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarVAL:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("202"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(202,10,202,74)"), UNIQUE'Unds'ID{}("97c637f63167cc7d19698068bf5d66e50a5dbb60b0d159a62583ed75cd3b69e9")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Stmts,KItem}(`___WASM_Stmts_Stmt_Stmts`(S,SS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Stmt,KItem}(S)~>inj{Stmts,KItem}(SS)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires `_=/=K_`(inj{Stmts,KItem}(SS),inj{EmptyStmts,KItem}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(8c5037076555451c7425967181bb86d68c45a908dcb663cbd7265b43b08e1bce) contentStartColumn(19) contentStartLine(152) label(WASM.step) org.kframework.attributes.Location(Location(152,19,152,82)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortStmts{}, SortKItem{}}(VarSS:SortStmts{}),dotk{}()),kseq{}(inj{SortEmptyStmts{}, SortKItem{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmts{}, SortKItem{}}(Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(VarS:SortStmt{},VarSS:SortStmts{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),kseq{}(inj{SortStmts{}, SortKItem{}}(VarSS:SortStmts{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [label{}("WASM.step"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("152"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(152,19,152,82)"), UNIQUE'Unds'ID{}("8c5037076555451c7425967181bb86d68c45a908dcb663cbd7265b43b08e1bce")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Stmts,KItem}(`___WASM_Stmts_Stmt_Stmts`(S,inj{EmptyStmts,Stmts}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Stmt,KItem}(S)~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2e99f70d97072b5437c634bfee47486faacc507d95fb682214d7934baf4edd93) contentStartColumn(19) contentStartLine(151) org.kframework.attributes.Location(Location(151,19,151,58)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmts{}, SortKItem{}}(Lbl'UndsUndsUnds'WASM'Unds'Stmts'Unds'Stmt'Unds'Stmts{}(VarS:SortStmt{},inj{SortEmptyStmts{}, SortStmts{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("151"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(151,19,151,58)"), UNIQUE'Unds'ID{}("2e99f70d97072b5437c634bfee47486faacc507d95fb682214d7934baf4edd93")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{BlockInstr,KItem}(`block___end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId`(ID,TDECLS,IS,OID'))~>DotVar2),_3,`<curFrame>`(_0,_1,_2,`<labelDepth>`(DEPTH) #as _18,`<labelIds>`(IDS)),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`block__end_WASM_Instr_TypeDecls_Instrs`(TDECLS,IS))~>DotVar2),_3,`<curFrame>`(_0,_1,_2,_18,`<labelIds>`(`Map:update`(IDS,inj{Identifier,KItem}(ID),inj{Int,KItem}(DEPTH)))),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires `_orBool__BOOL_Bool_Bool_Bool`(`_==K_`(inj{Identifier,KItem}(ID),inj{OptionalId,KItem}(OID')),`notBool_`(isIdentifier(inj{OptionalId,KItem}(OID')))) ensures #token("true","Bool") [UNIQUE_ID(b98e704357f9240a9236c7e2e4fe565a233054a740d1ca69783a299b5afd3dbb) contentStartColumn(10) contentStartLine(173) org.kframework.attributes.Location(Location(173,10,177,42)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),dotk{}()),kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'Apos':SortOptionalId{}),dotk{}())),LblnotBool'Unds'{}(LblisIdentifier{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'Apos':SortOptionalId{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblblock'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},VarOID'Apos':SortOptionalId{})),VarDotVar2:SortK{})),Var'Unds'3:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},\and{SortLabelDepthCell{}}(Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'18:SortLabelDepthCell{}),Lbl'-LT-'labelIds'-GT-'{}(VarIDS:SortMap{})),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'3:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},Var'Unds'18:SortLabelDepthCell{},Lbl'-LT-'labelIds'-GT-'{}(LblMap'Coln'update{}(VarIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarDEPTH:SortInt{})))),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("173"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(173,10,177,42)"), UNIQUE'Unds'ID{}("b98e704357f9240a9236c7e2e4fe565a233054a740d1ca69783a299b5afd3dbb")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`block__end_WASM_Instr_TypeDecls_Instrs`(TDECLS,IS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`block__end_WASM_Instr_VecType_Instrs`(`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`result_WASM_TypeKeyWord`(.KList),TDECLS),IS))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4ed0f0e595e4a323e4274f17bf266584aac75ba712ec5dc86907da5d17c88099) contentStartColumn(10) contentStartLine(339) org.kframework.attributes.Location(Location(339,10,339,96)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblresult'Unds'WASM'Unds'TypeKeyWord{}(),VarTDECLS:SortTypeDecls{}),VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("339"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(339,10,339,96)"), UNIQUE'Unds'ID{}("4ed0f0e595e4a323e4274f17bf266584aac75ba712ec5dc86907da5d17c88099")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`block__end_WASM_Instr_VecType_Instrs`(VECTYP,IS))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(_0,_1,_2,`<labelDepth>`(DEPTH),_3),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(VECTYP,inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),VALSTACK))~>DotVar2),`<valstack>`(`.ValStack_WASM-DATA_ValStack`(.KList)),`<curFrame>`(_0,_1,_2,`<labelDepth>`(`_+Int_`(DEPTH,#token("1","Int"))),_3),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c30a8bc47ac63ad48d9620e61ef4d719c9447fb29cf92ad39629754b93c26612) contentStartColumn(10) contentStartLine(340) org.kframework.attributes.Location(Location(340,10,342,58)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblblock'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'VecType'Unds'Instrs{}(VarVECTYP:SortVecType{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(VarVECTYP:SortVecType{},inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),VarVALSTACK:SortValStack{})),VarDotVar2:SortK{}))),Lbl'-LT-'valstack'-GT-'{}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}()),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("340"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(340,10,342,58)"), UNIQUE'Unds'ID{}("c30a8bc47ac63ad48d9620e61ef4d719c9447fb29cf92ad39629754b93c26612")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(inj{Identifier,Index}(ID)))~>DotVar2),_3,`<curFrame>`(_0,_1,_2,`<labelDepth>`(DEPTH),`<labelIds>`(`_Map_`(`_|->_`(inj{Identifier,KItem}(ID),inj{Int,KItem}(DEPTH')),DotVar4))) #as _18,_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(inj{Int,Index}(`_-Int_`(`_-Int_`(DEPTH,DEPTH'),#token("1","Int")))))~>DotVar2),_3,_18,_4,_5,_6,_7,_8,_9,_10),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(15dd47be6acacc059f3417e5b57995a88755088d85a99385d22116100c5ff8a3) contentStartColumn(10) contentStartLine(158) org.kframework.attributes.Location(Location(158,10,160,54)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortIdentifier{}, SortIndex{}}(VarID:SortIdentifier{}))),VarDotVar2:SortK{})),Var'Unds'3:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Lbl'-LT-'labelIds'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarDEPTH'Apos':SortInt{})),VarDotVar4:SortMap{}))),Var'Unds'18:SortCurFrameCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(Lbl'Unds'-Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarDEPTH:SortInt{},VarDEPTH'Apos':SortInt{}),\dv{SortInt{}}("1"))))),VarDotVar2:SortK{})),Var'Unds'3:SortValstackCell{},Var'Unds'18:SortCurFrameCell{},Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("158"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(158,10,160,54)"), UNIQUE'Unds'ID{}("15dd47be6acacc059f3417e5b57995a88755088d85a99385d22116100c5ff8a3")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(inj{Int,Index}(N)))~>inj{Label,KItem}(L)~>DotVar2),_4,`<curFrame>`(_0,_1,_2,`<labelDepth>`(DEPTH),_3),_5,_6,_7,_8,_9,_10,_11),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(inj{Int,Index}(`_-Int_`(N,#token("1","Int")))))~>DotVar2),_4,`<curFrame>`(_0,_1,_2,`<labelDepth>`(`_-Int_`(DEPTH,#token("1","Int"))),_3),_5,_6,_7,_8,_9,_10,_11),DotVar0) requires `_>Int_`(N,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(36424201dbd5e229b926f1589c72a5a6dab4865f3c109b8f0068e316ef021991) contentStartColumn(10) contentStartLine(358) org.kframework.attributes.Location(Location(358,10,360,24)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(VarN:SortInt{}))),kseq{}(inj{SortLabel{}, SortKItem{}}(VarL:SortLabel{}),VarDotVar2:SortK{}))),Var'Unds'4:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'3:SortLabelIdsCell{}),Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortModuleIdsCell{},Var'Unds'7:SortModuleInstancesCell{},Var'Unds'8:SortNextModuleIdxCell{},Var'Unds'9:SortMainStoreCell{},Var'Unds'10:SortDeterministicMemoryGrowthCell{},Var'Unds'11:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1"))))),VarDotVar2:SortK{})),Var'Unds'4:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(Lbl'Unds'-Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'3:SortLabelIdsCell{}),Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortModuleIdsCell{},Var'Unds'7:SortModuleInstancesCell{},Var'Unds'8:SortNextModuleIdxCell{},Var'Unds'9:SortMainStoreCell{},Var'Unds'10:SortDeterministicMemoryGrowthCell{},Var'Unds'11:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("358"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(358,10,360,24)"), UNIQUE'Unds'ID{}("36424201dbd5e229b926f1589c72a5a6dab4865f3c109b8f0068e316ef021991")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(inj{Int,Index}(#token("0","Int"))))~>inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(`[_]_WASM-DATA_VecType_ValTypes`(TYPES),IS,VALSTACK'))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(_0,_1,_2,`<labelDepth>`(DEPTH),_3),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>DotVar2),`<valstack>`(`_++__WASM-DATA_ValStack_ValStack_ValStack`(`#take(_,_)_WASM-DATA_ValStack_ValTypes_ValStack`(TYPES,VALSTACK),VALSTACK')),`<curFrame>`(_0,_1,_2,`<labelDepth>`(`_-Int_`(DEPTH,#token("1","Int"))),_3),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c686d5cc4dfb41f81a208dc9fc0a8b372370da88b93b34e9373c4a6e6b66575d) contentStartColumn(10) contentStartLine(355) org.kframework.attributes.Location(Location(355,10,357,58)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(inj{SortInt{}, SortIndex{}}(\dv{SortInt{}}("0")))),kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarTYPES:SortValTypes{}),VarIS:SortInstrs{},VarVALSTACK'Apos':SortValStack{})),VarDotVar2:SortK{}))),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes'Unds'ValStack{}(VarTYPES:SortValTypes{},VarVALSTACK:SortValStack{}),VarVALSTACK'Apos':SortValStack{})),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(Lbl'Unds'-Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("355"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(355,10,357,58)"), UNIQUE'Unds'ID{}("c686d5cc4dfb41f81a208dc9fc0a8b372370da88b93b34e9373c4a6e6b66575d")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br_if__WASM_PlainInstr_Index`(IDX))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(TYPE,inj{Int,Number}(VAL)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires `_==Int_`(VAL,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(ac465d17a5a427c2b477baccdb42afc05cb3c6eac38f09146406549df5b4a4f7) contentStartColumn(10) contentStartLine(367) org.kframework.attributes.Location(Location(367,10,369,28)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarIDX:SortIndex{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYPE:SortAValType{},inj{SortInt{}, SortNumber{}}(VarVAL:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("367"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(367,10,369,28)"), UNIQUE'Unds'ID{}("ac465d17a5a427c2b477baccdb42afc05cb3c6eac38f09146406549df5b4a4f7")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br_if__WASM_PlainInstr_Index`(IDX))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(TYPE,inj{Int,Number}(VAL)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(IDX))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires `_=/=Int_`(VAL,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(9d135ae8bc4feeef403654ed6087fbf17c98e76b7ed5427d2704d138077e1e68) contentStartColumn(10) contentStartLine(364) org.kframework.attributes.Location(Location(364,10,366,28)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'Unds'if'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarIDX:SortIndex{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYPE:SortAValType{},inj{SortInt{}, SortNumber{}}(VarVAL:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarIDX:SortIndex{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("364"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(364,10,366,28)"), UNIQUE'Unds'ID{}("9d135ae8bc4feeef403654ed6087fbf17c98e76b7ed5427d2704d138077e1e68")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br_table__WASM_PlainInstr_ElemSegment`(ES))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(TYPE,inj{Int,Number}(VAL)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`br__WASM_PlainInstr_Index`(`#getElemSegment(_,_)_WASM-DATA_Index_ElemSegment_Int`(ES,`minInt(_,_)_INT-COMMON_Int_Int_Int`(VAL,`_-Int_`(`#lenElemSegment(_)_WASM-DATA_Int_ElemSegment`(ES),#token("1","Int"))))))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(61df9b63d02e90713c5018b9ad7f518627cb47e334bde9688a3298eb788cdcce) contentStartColumn(10) contentStartLine(373) org.kframework.attributes.Location(Location(373,10,374,68)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'Unds'table'UndsUnds'WASM'Unds'PlainInstr'Unds'ElemSegment{}(VarES:SortElemSegment{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYPE:SortAValType{},inj{SortInt{}, SortNumber{}}(VarVAL:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblbr'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(Lbl'Hash'getElemSegment'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Index'Unds'ElemSegment'Unds'Int{}(VarES:SortElemSegment{},LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VarVAL:SortInt{},Lbl'Unds'-Int'Unds'{}(Lbl'Hash'lenElemSegment'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'ElemSegment{}(VarES:SortElemSegment{}),\dv{SortInt{}}("1")))))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("373"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,10,374,68)"), UNIQUE'Unds'ID{}("61df9b63d02e90713c5018b9ad7f518627cb47e334bde9688a3298eb788cdcce")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`call__WASM_PlainInstr_Index`(TFIDX))~>DotVar2),_16,`<curFrame>`(_0,_1,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_2,_3) #as _29,_17,_18,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_4,_5,_6,_7,`<funcIds>`(IDS),`<funcAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,TFIDX)),inj{Int,KItem}(FADDR)),DotVar6)),_8,_9,_10,_11,_12,_13,_14,_15)),DotVar4)) #as _32,_19,_20,_21,_22),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`(invoke_)_WASM_Instr_Int`(FADDR))~>DotVar2),_16,_29,_17,_18,_32,_19,_20,_21,_22),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8efbde43eac10ec536483aa12782b42975b3537f33182085d659add5f3673f6d) contentStartColumn(10) contentStartLine(770) org.kframework.attributes.Location(Location(770,10,777,23)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblcall'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarTFIDX:SortIndex{})),VarDotVar2:SortK{})),Var'Unds'16:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'29:SortCurFrameCell{}),Var'Unds'17:SortModuleRegistryCell{},Var'Unds'18:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'4:SortExportsCell{},Var'Unds'5:SortTypeIdsCell{},Var'Unds'6:SortTypesCell{},Var'Unds'7:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'funcAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarFADDR:SortInt{})),VarDotVar6:SortMap{})),Var'Unds'8:SortNextFuncIdxCell{},Var'Unds'9:SortTabIdsCell{},Var'Unds'10:SortTabAddrsCell{},Var'Unds'11:SortMemIdsCell{},Var'Unds'12:SortMemAddrsCell{},Var'Unds'13:SortGlobIdsCell{},Var'Unds'14:SortGlobalAddrsCell{},Var'Unds'15:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'32:SortModuleInstancesCell{}),Var'Unds'19:SortNextModuleIdxCell{},Var'Unds'20:SortMainStoreCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'22:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(VarFADDR:SortInt{})),VarDotVar2:SortK{})),Var'Unds'16:SortValstackCell{},Var'Unds'29:SortCurFrameCell{},Var'Unds'17:SortModuleRegistryCell{},Var'Unds'18:SortModuleIdsCell{},Var'Unds'32:SortModuleInstancesCell{},Var'Unds'19:SortNextModuleIdxCell{},Var'Unds'20:SortMainStoreCell{},Var'Unds'21:SortDeterministicMemoryGrowthCell{},Var'Unds'22:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("770"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(770,10,777,23)"), UNIQUE'Unds'ID{}("8efbde43eac10ec536483aa12782b42975b3537f33182085d659add5f3673f6d")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`call_indirect__WASM_PlainInstr_TypeUse`(TUSE))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(inj{IValType,AValType}(`i32_WASM-DATA_IValType`(.KList)),IDX),VALSTACK)),`<curFrame>`(_11,_12,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_13,_14) #as _42,_26,_27,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_15,`<typeIds>`(TYPEIDS),`<types>`(TYPES),_16,_17,_18,_19,_20,`<tabAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_21,_22,_23,_24,_25)),DotVar10)) #as _45,_28,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`FuncDefCellMapItem`(`<fAddr>`(FADDR),`<funcDef>`(`<fAddr>`(FADDR),_2,`<fType>`(inj{FuncType,Type}(FTYPE)),_3,_4)),DotVar7)),_5,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),_0,_1,`<tdata>`(`_Map_`(`_|->_`(inj{Number,KItem}(IDX),inj{Int,KItem}(FADDR)),DotVar6)))),DotVar4)),_6,_7,_8,_9,_10) #as _47,_29,_30),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`(invoke_)_WASM_Instr_Int`(FADDR))~>DotVar2),`<valstack>`(VALSTACK),_42,_26,_27,_45,_28,_47,_29,_30),DotVar0) requires `_==K_`(inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(`asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(TYPEIDS,TYPES,TUSE))),inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(FTYPE))) ensures #token("true","Bool") [UNIQUE_ID(76a7914a596932531a19686cbd17a78b08b569430ff4e5647fe4187fe2bc3fa2) contentStartColumn(10) contentStartLine(783) org.kframework.attributes.Location(Location(783,10,803,90)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarTUSE:SortTypeUse{}))),dotk{}()),kseq{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(VarFTYPE:SortFuncType{})),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(VarTUSE:SortTypeUse{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(Lbli32'Unds'WASM-DATA'Unds'IValType{}()),VarIDX:SortNumber{}),VarVALSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'11:SortLocalsCell{},Var'Unds'12:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'13:SortLabelDepthCell{},Var'Unds'14:SortLabelIdsCell{}),Var'Unds'42:SortCurFrameCell{}),Var'Unds'26:SortModuleRegistryCell{},Var'Unds'27:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'15:SortExportsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarTYPEIDS:SortMap{}),Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'16:SortNextTypeIdxCell{},Var'Unds'17:SortFuncIdsCell{},Var'Unds'18:SortFuncAddrsCell{},Var'Unds'19:SortNextFuncIdxCell{},Var'Unds'20:SortTabIdsCell{},Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'21:SortMemIdsCell{},Var'Unds'22:SortMemAddrsCell{},Var'Unds'23:SortGlobIdsCell{},Var'Unds'24:SortGlobalAddrsCell{},Var'Unds'25:SortNextGlobIdxCell{})),VarDotVar10:SortModuleInstCellMap{})),Var'Unds'45:SortModuleInstancesCell{}),Var'Unds'28:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Lbl'-LT-'funcDef'-GT-'{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Var'Unds'2:SortFCodeCell{},Lbl'-LT-'fType'-GT-'{}(inj{SortFuncType{}, SortType{}}(VarFTYPE:SortFuncType{})),Var'Unds'3:SortFLocalCell{},Var'Unds'4:SortFModInstCell{})),VarDotVar7:SortFuncDefCellMap{})),Var'Unds'5:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Lbl'-LT-'tdata'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortNumber{}, SortKItem{}}(VarIDX:SortNumber{}),inj{SortInt{}, SortKItem{}}(VarFADDR:SortInt{})),VarDotVar6:SortMap{})))),VarDotVar4:SortTabInstCellMap{})),Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortMemsCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{},Var'Unds'10:SortNextGlobAddrCell{}),Var'Unds'47:SortMainStoreCell{}),Var'Unds'29:SortDeterministicMemoryGrowthCell{},Var'Unds'30:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'LPar'invoke'UndsRParUnds'WASM'Unds'Instr'Unds'Int{}(VarFADDR:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'42:SortCurFrameCell{},Var'Unds'26:SortModuleRegistryCell{},Var'Unds'27:SortModuleIdsCell{},Var'Unds'45:SortModuleInstancesCell{},Var'Unds'28:SortNextModuleIdxCell{},Var'Unds'47:SortMainStoreCell{},Var'Unds'29:SortDeterministicMemoryGrowthCell{},Var'Unds'30:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("783"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(783,10,803,90)"), UNIQUE'Unds'ID{}("76a7914a596932531a19686cbd17a78b08b569430ff4e5647fe4187fe2bc3fa2")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`call_indirect__WASM_PlainInstr_TypeUse`(TUSE))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(inj{IValType,AValType}(`i32_WASM-DATA_IValType`(.KList)),IDX),VALSTACK)),`<curFrame>`(_11,_12,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_13,_14) #as _42,_26,_27,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_15,`<typeIds>`(TYPEIDS),`<types>`(TYPES),_16,_17,_18,_19,_20,`<tabAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_21,_22,_23,_24,_25)),DotVar10)) #as _45,_28,`<mainStore>`(`<funcs>`(`_FuncDefCellMap_`(`FuncDefCellMapItem`(`<fAddr>`(FADDR),`<funcDef>`(`<fAddr>`(FADDR),_2,`<fType>`(inj{FuncType,Type}(FTYPE)),_3,_4)),DotVar7)),_5,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),_0,_1,`<tdata>`(`_Map_`(`_|->_`(inj{Number,KItem}(IDX),inj{Int,KItem}(FADDR)),DotVar6)))),DotVar4)),_6,_7,_8,_9,_10) #as _47,_29,_30),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>DotVar2),`<valstack>`(VALSTACK),_42,_26,_27,_45,_28,_47,_29,_30),DotVar0) requires `_=/=K_`(inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(`asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(TYPEIDS,TYPES,TUSE))),inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(FTYPE))) ensures #token("true","Bool") [UNIQUE_ID(4971709b8d0f337230f259b712c21d386534c6d77c3e825b0b7a550c3547c520) contentStartColumn(10) contentStartLine(805) org.kframework.attributes.Location(Location(805,10,825,91)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(VarTYPEIDS:SortMap{},VarTYPES:SortMap{},VarTUSE:SortTypeUse{}))),dotk{}()),kseq{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(VarFTYPE:SortFuncType{})),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(VarTUSE:SortTypeUse{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(Lbli32'Unds'WASM-DATA'Unds'IValType{}()),VarIDX:SortNumber{}),VarVALSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'11:SortLocalsCell{},Var'Unds'12:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'13:SortLabelDepthCell{},Var'Unds'14:SortLabelIdsCell{}),Var'Unds'42:SortCurFrameCell{}),Var'Unds'26:SortModuleRegistryCell{},Var'Unds'27:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'15:SortExportsCell{},Lbl'-LT-'typeIds'-GT-'{}(VarTYPEIDS:SortMap{}),Lbl'-LT-'types'-GT-'{}(VarTYPES:SortMap{}),Var'Unds'16:SortNextTypeIdxCell{},Var'Unds'17:SortFuncIdsCell{},Var'Unds'18:SortFuncAddrsCell{},Var'Unds'19:SortNextFuncIdxCell{},Var'Unds'20:SortTabIdsCell{},Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'21:SortMemIdsCell{},Var'Unds'22:SortMemAddrsCell{},Var'Unds'23:SortGlobIdsCell{},Var'Unds'24:SortGlobalAddrsCell{},Var'Unds'25:SortNextGlobIdxCell{})),VarDotVar10:SortModuleInstCellMap{})),Var'Unds'45:SortModuleInstancesCell{}),Var'Unds'28:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Lbl'-LT-'funcs'-GT-'{}(Lbl'Unds'FuncDefCellMap'Unds'{}(LblFuncDefCellMapItem{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Lbl'-LT-'funcDef'-GT-'{}(Lbl'-LT-'fAddr'-GT-'{}(VarFADDR:SortInt{}),Var'Unds'2:SortFCodeCell{},Lbl'-LT-'fType'-GT-'{}(inj{SortFuncType{}, SortType{}}(VarFTYPE:SortFuncType{})),Var'Unds'3:SortFLocalCell{},Var'Unds'4:SortFModInstCell{})),VarDotVar7:SortFuncDefCellMap{})),Var'Unds'5:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Lbl'-LT-'tdata'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortNumber{}, SortKItem{}}(VarIDX:SortNumber{}),inj{SortInt{}, SortKItem{}}(VarFADDR:SortInt{})),VarDotVar6:SortMap{})))),VarDotVar4:SortTabInstCellMap{})),Var'Unds'6:SortNextTabAddrCell{},Var'Unds'7:SortMemsCell{},Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{},Var'Unds'10:SortNextGlobAddrCell{}),Var'Unds'47:SortMainStoreCell{}),Var'Unds'29:SortDeterministicMemoryGrowthCell{},Var'Unds'30:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'42:SortCurFrameCell{},Var'Unds'26:SortModuleRegistryCell{},Var'Unds'27:SortModuleIdsCell{},Var'Unds'45:SortModuleInstancesCell{},Var'Unds'28:SortNextModuleIdxCell{},Var'Unds'47:SortMainStoreCell{},Var'Unds'29:SortDeterministicMemoryGrowthCell{},Var'Unds'30:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("805"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(805,10,825,91)"), UNIQUE'Unds'ID{}("4971709b8d0f337230f259b712c21d386534c6d77c3e825b0b7a550c3547c520")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`call_indirect__WASM_PlainInstr_TypeUse`(TUSE))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(inj{IValType,AValType}(`i32_WASM-DATA_IValType`(.KList)),IDX),VALSTACK)),`<curFrame>`(_9,_10,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_11,_12) #as _42,_26,_27,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_13,_14,_15,_16,_17,_18,_19,_20,`<tabAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_21,_22,_23,_24,_25)),DotVar7)) #as _45,_28,`<mainStore>`(_2,_3,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(ADDR),`<tabInst>`(`<tAddr>`(ADDR),_0,_1,`<tdata>`(TDATA))),DotVar4)),_4,_5,_6,_7,_8) #as _47,_29,_30),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>DotVar2),`<valstack>`(VALSTACK),_42,_26,_27,_45,_28,_47,_29,_30),DotVar0) requires `notBool_`(`_in_keys(_)_MAP_Bool_KItem_Map`(inj{Number,KItem}(IDX),TDATA)) ensures #token("true","Bool") [UNIQUE_ID(ca672822fbba8a3306ace2980e303087933015b56ff0ad9b0b498aaaa9e504d5) contentStartColumn(10) contentStartLine(827) org.kframework.attributes.Location(Location(827,10,840,42)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(inj{SortNumber{}, SortKItem{}}(VarIDX:SortNumber{}),VarTDATA:SortMap{})),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblcall'Unds'indirect'UndsUnds'WASM'Unds'PlainInstr'Unds'TypeUse{}(VarTUSE:SortTypeUse{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(Lbli32'Unds'WASM-DATA'Unds'IValType{}()),VarIDX:SortNumber{}),VarVALSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'9:SortLocalsCell{},Var'Unds'10:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'11:SortLabelDepthCell{},Var'Unds'12:SortLabelIdsCell{}),Var'Unds'42:SortCurFrameCell{}),Var'Unds'26:SortModuleRegistryCell{},Var'Unds'27:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'13:SortExportsCell{},Var'Unds'14:SortTypeIdsCell{},Var'Unds'15:SortTypesCell{},Var'Unds'16:SortNextTypeIdxCell{},Var'Unds'17:SortFuncIdsCell{},Var'Unds'18:SortFuncAddrsCell{},Var'Unds'19:SortNextFuncIdxCell{},Var'Unds'20:SortTabIdsCell{},Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'21:SortMemIdsCell{},Var'Unds'22:SortMemAddrsCell{},Var'Unds'23:SortGlobIdsCell{},Var'Unds'24:SortGlobalAddrsCell{},Var'Unds'25:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'45:SortModuleInstancesCell{}),Var'Unds'28:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortTmaxCell{},Var'Unds'1:SortTsizeCell{},Lbl'-LT-'tdata'-GT-'{}(VarTDATA:SortMap{}))),VarDotVar4:SortTabInstCellMap{})),Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'47:SortMainStoreCell{}),Var'Unds'29:SortDeterministicMemoryGrowthCell{},Var'Unds'30:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'42:SortCurFrameCell{},Var'Unds'26:SortModuleRegistryCell{},Var'Unds'27:SortModuleIdsCell{},Var'Unds'45:SortModuleInstancesCell{},Var'Unds'28:SortNextModuleIdxCell{},Var'Unds'47:SortMainStoreCell{},Var'Unds'29:SortDeterministicMemoryGrowthCell{},Var'Unds'30:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("827"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(827,10,840,42)"), UNIQUE'Unds'ID{}("ca672822fbba8a3306ace2980e303087933015b56ff0ad9b0b498aaaa9e504d5")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{DataDefn,KItem}(`data{__}_WASM_DataDefn_Index_Bytes`(MEMIDX,DSBYTES))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),OFFSET)),STACK)),`<curFrame>`(_9,_10,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_11,_12) #as _41,_25,_26,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_13,_14,_15,_16,_17,_18,_19,_20,_21,`<memIds>`(IDS),`<memAddrs>`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,MEMIDX)),inj{Int,KItem}(ADDR))),_22,_23,_24)),DotVar7)) #as _44,_27,`<mainStore>`(_2,_3,_4,_5,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_0,_1,`<mdata>`(DATA))),DotVar4)),_6,_7,_8),_28,_29),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(STACK),_41,_25,_26,_44,_27,`<mainStore>`(_2,_3,_4,_5,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_0,_1,`<mdata>`(`#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(DATA,OFFSET,`Bytes2Int(_,_,_)_BYTES-HOOKED_Int_Bytes_Endianness_Signedness`(DSBYTES,littleEndianBytes(.KList),unsignedBytes(.KList)),`lengthBytes(_)_BYTES-HOOKED_Int_Bytes`(DSBYTES))))),DotVar4)),_6,_7,_8),_28,_29),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(16c451d23e5f1f24bef0759d3c0a73cb294da46668e5e49d831cd2e511ee3410) contentStartColumn(10) contentStartLine(1264) org.kframework.attributes.Location(Location(1264,10,1279,20)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortDataDefn{}, SortKItem{}}(Lbldata'LBraUndsUndsRBraUnds'WASM'Unds'DataDefn'Unds'Index'Unds'Bytes{}(VarMEMIDX:SortIndex{},VarDSBYTES:SortBytes{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarOFFSET:SortInt{})),VarSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'9:SortLocalsCell{},Var'Unds'10:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'11:SortLabelDepthCell{},Var'Unds'12:SortLabelIdsCell{}),Var'Unds'41:SortCurFrameCell{}),Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'13:SortExportsCell{},Var'Unds'14:SortTypeIdsCell{},Var'Unds'15:SortTypesCell{},Var'Unds'16:SortNextTypeIdxCell{},Var'Unds'17:SortFuncIdsCell{},Var'Unds'18:SortFuncAddrsCell{},Var'Unds'19:SortNextFuncIdxCell{},Var'Unds'20:SortTabIdsCell{},Var'Unds'21:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarMEMIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'22:SortGlobIdsCell{},Var'Unds'23:SortGlobalAddrsCell{},Var'Unds'24:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'44:SortModuleInstancesCell{}),Var'Unds'27:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortTabsCell{},Var'Unds'5:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortMmaxCell{},Var'Unds'1:SortMsizeCell{},Lbl'-LT-'mdata'-GT-'{}(VarDATA:SortByteMap{}))),VarDotVar4:SortMemInstCellMap{})),Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarSTACK:SortValStack{}),Var'Unds'41:SortCurFrameCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'44:SortModuleInstancesCell{},Var'Unds'27:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortTabsCell{},Var'Unds'5:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortMmaxCell{},Var'Unds'1:SortMsizeCell{},Lbl'-LT-'mdata'-GT-'{}(Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(VarDATA:SortByteMap{},VarOFFSET:SortInt{},LblBytes2Int'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes'Unds'Endianness'Unds'Signedness{}(VarDSBYTES:SortBytes{},LbllittleEndianBytes{}(),LblunsignedBytes{}()),LbllengthBytes'LParUndsRParUnds'BYTES-HOOKED'Unds'Int'Unds'Bytes{}(VarDSBYTES:SortBytes{}))))),VarDotVar4:SortMemInstCellMap{})),Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1264"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1264,10,1279,20)"), UNIQUE'Unds'ID{}("16c451d23e5f1f24bef0759d3c0a73cb294da46668e5e49d831cd2e511ee3410")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`drop_WASM_PlainInstr`(.KList))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(_0,VALSTACK)),_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(VALSTACK),_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0ddd57697554b7595a87160dd37556f3ec6655dcbfc1704f773d61fb79d2d370) contentStartColumn(10) contentStartLine(289) org.kframework.attributes.Location(Location(289,10,290,57)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbldrop'Unds'WASM'Unds'PlainInstr{}()),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Var'Unds'0:SortVal{},VarVALSTACK:SortValStack{})),Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("289"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(289,10,290,57)"), UNIQUE'Unds'ID{}("0ddd57697554b7595a87160dd37556f3ec6655dcbfc1704f773d61fb79d2d370")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ElemDefn,KItem}(`elem{__}_WASM_ElemDefn_Index_ElemSegment`(TABIDX,ELEMSEGMENT))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),OFFSET)),STACK)),`<curFrame>`(_0,_1,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_2,_3) #as _31,_14,_15,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_4,_5,_6,_7,`<funcIds>`(FIDS),`<funcAddrs>`(FADDRS),_8,`<tabIds>`(TIDS),`<tabAddrs>`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(TIDS,TABIDX)),inj{Int,KItem}(ADDR))),_9,_10,_11,_12,_13)),DotVar4)) #as _34,_16,_17,_18,_19),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Stmt,KItem}(`#initElements(_,_,_,_,_)_WASM_Stmt_Int_Int_Map_Map_ElemSegment`(ADDR,OFFSET,FADDRS,FIDS,ELEMSEGMENT))~>DotVar2),`<valstack>`(STACK),_31,_14,_15,_34,_16,_17,_18,_19),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a377b134b5dcb590fbaa71778088cc8f91132fdc036972abeca00cc886cf19f) contentStartColumn(10) contentStartLine(1226) org.kframework.attributes.Location(Location(1226,10,1236,23)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortElemDefn{}, SortKItem{}}(Lblelem'LBraUndsUndsRBraUnds'WASM'Unds'ElemDefn'Unds'Index'Unds'ElemSegment{}(VarTABIDX:SortIndex{},VarELEMSEGMENT:SortElemSegment{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarOFFSET:SortInt{})),VarSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'31:SortCurFrameCell{}),Var'Unds'14:SortModuleRegistryCell{},Var'Unds'15:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'4:SortExportsCell{},Var'Unds'5:SortTypeIdsCell{},Var'Unds'6:SortTypesCell{},Var'Unds'7:SortNextTypeIdxCell{},Lbl'-LT-'funcIds'-GT-'{}(VarFIDS:SortMap{}),Lbl'-LT-'funcAddrs'-GT-'{}(VarFADDRS:SortMap{}),Var'Unds'8:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(VarTIDS:SortMap{}),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarTIDS:SortMap{},VarTABIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'9:SortMemIdsCell{},Var'Unds'10:SortMemAddrsCell{},Var'Unds'11:SortGlobIdsCell{},Var'Unds'12:SortGlobalAddrsCell{},Var'Unds'13:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'34:SortModuleInstancesCell{}),Var'Unds'16:SortNextModuleIdxCell{},Var'Unds'17:SortMainStoreCell{},Var'Unds'18:SortDeterministicMemoryGrowthCell{},Var'Unds'19:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'Hash'initElements'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'Stmt'Unds'Int'Unds'Int'Unds'Map'Unds'Map'Unds'ElemSegment{}(VarADDR:SortInt{},VarOFFSET:SortInt{},VarFADDRS:SortMap{},VarFIDS:SortMap{},VarELEMSEGMENT:SortElemSegment{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarSTACK:SortValStack{}),Var'Unds'31:SortCurFrameCell{},Var'Unds'14:SortModuleRegistryCell{},Var'Unds'15:SortModuleIdsCell{},Var'Unds'34:SortModuleInstancesCell{},Var'Unds'16:SortNextModuleIdxCell{},Var'Unds'17:SortMainStoreCell{},Var'Unds'18:SortDeterministicMemoryGrowthCell{},Var'Unds'19:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1226"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1226,10,1236,23)"), UNIQUE'Unds'ID{}("9a377b134b5dcb590fbaa71778088cc8f91132fdc036972abeca00cc886cf19f")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Frame,KItem}(`frame_______WASM_Frame_Int_ValTypes_ValStack_Map_Int_Map`(MODIDX',TRANGE,VALSTACK',LOCAL',LABELDEPTH,LABELIDS))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(`<locals>`(_0),DotVar3,`<curModIdx>`(_1),`<labelDepth>`(_2),`<labelIds>`(_3)),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(`_++__WASM-DATA_ValStack_ValStack_ValStack`(`#take(_,_)_WASM-DATA_ValStack_ValTypes_ValStack`(`unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(TRANGE),VALSTACK),VALSTACK')),`<curFrame>`(`<locals>`(LOCAL'),DotVar3,`<curModIdx>`(inj{Int,OptionalInt}(MODIDX')),`<labelDepth>`(LABELDEPTH),`<labelIds>`(LABELIDS)),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7c8ebd5651750f68510108ae006eed3d1101e7176dfc4afbb8c1eeafc6250dd0) contentStartColumn(10) contentStartLine(719) org.kframework.attributes.Location(Location(719,10,724,46)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFrame{}, SortKItem{}}(Lblframe'UndsUndsUndsUndsUndsUndsUnds'WASM'Unds'Frame'Unds'Int'Unds'ValTypes'Unds'ValStack'Unds'Map'Unds'Int'Unds'Map{}(VarMODIDX'Apos':SortInt{},VarTRANGE:SortValTypes{},VarVALSTACK'Apos':SortValStack{},VarLOCAL'Apos':SortMap{},VarLABELDEPTH:SortInt{},VarLABELIDS:SortMap{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Var'Unds'0:SortMap{}),VarDotVar3:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(Var'Unds'1:SortOptionalInt{}),Lbl'-LT-'labelDepth'-GT-'{}(Var'Unds'2:SortInt{}),Lbl'-LT-'labelIds'-GT-'{}(Var'Unds'3:SortMap{})),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes'Unds'ValStack{}(LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(VarTRANGE:SortValTypes{}),VarVALSTACK:SortValStack{}),VarVALSTACK'Apos':SortValStack{})),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(VarLOCAL'Apos':SortMap{}),VarDotVar3:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarMODIDX'Apos':SortInt{})),Lbl'-LT-'labelDepth'-GT-'{}(VarLABELDEPTH:SortInt{}),Lbl'-LT-'labelIds'-GT-'{}(VarLABELIDS:SortMap{})),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("719"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(719,10,724,46)"), UNIQUE'Unds'ID{}("7c8ebd5651750f68510108ae006eed3d1101e7176dfc4afbb8c1eeafc6250dd0")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`global.get__WASM_PlainInstr_Index`(TFIDX))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(_7,_8,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_9,_10) #as _35,_23,_24,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,`<globIds>`(IDS),`<globalAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,TFIDX)),inj{Int,KItem}(GADDR)),DotVar9)),_22)),DotVar7)) #as _38,_25,`<mainStore>`(_0,_1,_2,_3,_4,_5,`<globals>`(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(`<gAddr>`(GADDR),`<globalInst>`(`<gAddr>`(GADDR),`<gValue>`(VALUE),DotVar5)),DotVar4)),_6) #as _40,_26,_27),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)),_35,_23,_24,_38,_25,_40,_26,_27),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(145ec2e10b94cc96768384f16be24b14044233b84eb1947c52c796cc4d330466) contentStartColumn(10) contentStartLine(514) org.kframework.attributes.Location(Location(514,10,527,23)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblglobal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarTFIDX:SortIndex{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'9:SortLabelDepthCell{},Var'Unds'10:SortLabelIdsCell{}),Var'Unds'35:SortCurFrameCell{}),Var'Unds'23:SortModuleRegistryCell{},Var'Unds'24:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Var'Unds'20:SortMemIdsCell{},Var'Unds'21:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'globalAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarGADDR:SortInt{})),VarDotVar9:SortMap{})),Var'Unds'22:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'38:SortModuleInstancesCell{}),Var'Unds'25:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'globalInst'-GT-'{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'gValue'-GT-'{}(VarVALUE:SortVal{}),VarDotVar5:SortGMutCell{})),VarDotVar4:SortGlobalInstCellMap{})),Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'40:SortMainStoreCell{}),Var'Unds'26:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{})),Var'Unds'35:SortCurFrameCell{},Var'Unds'23:SortModuleRegistryCell{},Var'Unds'24:SortModuleIdsCell{},Var'Unds'38:SortModuleInstancesCell{},Var'Unds'25:SortNextModuleIdxCell{},Var'Unds'40:SortMainStoreCell{},Var'Unds'26:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("514"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(514,10,527,23)"), UNIQUE'Unds'ID{}("145ec2e10b94cc96768384f16be24b14044233b84eb1947c52c796cc4d330466")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`global.set__WASM_PlainInstr_Index`(TFIDX))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)),`<curFrame>`(_8,_9,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_10,_11) #as _37,_24,_25,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_12,_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,`<globIds>`(IDS),`<globalAddrs>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,TFIDX)),inj{Int,KItem}(GADDR)),DotVar9)),_23)),DotVar7)) #as _40,_26,`<mainStore>`(_1,_2,_3,_4,_5,_6,`<globals>`(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(`<gAddr>`(GADDR),`<globalInst>`(`<gAddr>`(GADDR),`<gValue>`(_0),DotVar5)),DotVar4)),_7),_27,_28),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(VALSTACK),_37,_24,_25,_40,_26,`<mainStore>`(_1,_2,_3,_4,_5,_6,`<globals>`(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(`<gAddr>`(GADDR),`<globalInst>`(`<gAddr>`(GADDR),`<gValue>`(VALUE),DotVar5)),DotVar4)),_7),_27,_28),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(53de7a40b78c04176c726929afe9e026c3434538e300e5a8575eedd8e24e1dce) contentStartColumn(10) contentStartLine(529) org.kframework.attributes.Location(Location(529,10,542,23)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblglobal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarTFIDX:SortIndex{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'8:SortLocalsCell{},Var'Unds'9:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'10:SortLabelDepthCell{},Var'Unds'11:SortLabelIdsCell{}),Var'Unds'37:SortCurFrameCell{}),Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'12:SortExportsCell{},Var'Unds'13:SortTypeIdsCell{},Var'Unds'14:SortTypesCell{},Var'Unds'15:SortNextTypeIdxCell{},Var'Unds'16:SortFuncIdsCell{},Var'Unds'17:SortFuncAddrsCell{},Var'Unds'18:SortNextFuncIdxCell{},Var'Unds'19:SortTabIdsCell{},Var'Unds'20:SortTabAddrsCell{},Var'Unds'21:SortMemIdsCell{},Var'Unds'22:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'globalAddrs'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarTFIDX:SortIndex{})),inj{SortInt{}, SortKItem{}}(VarGADDR:SortInt{})),VarDotVar9:SortMap{})),Var'Unds'23:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'40:SortModuleInstancesCell{}),Var'Unds'26:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'1:SortFuncsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'3:SortTabsCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'globalInst'-GT-'{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'gValue'-GT-'{}(Var'Unds'0:SortVal{}),VarDotVar5:SortGMutCell{})),VarDotVar4:SortGlobalInstCellMap{})),Var'Unds'7:SortNextGlobAddrCell{}),Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'37:SortCurFrameCell{},Var'Unds'24:SortModuleRegistryCell{},Var'Unds'25:SortModuleIdsCell{},Var'Unds'40:SortModuleInstancesCell{},Var'Unds'26:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'1:SortFuncsCell{},Var'Unds'2:SortNextFuncAddrCell{},Var'Unds'3:SortTabsCell{},Var'Unds'4:SortNextTabAddrCell{},Var'Unds'5:SortMemsCell{},Var'Unds'6:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'globalInst'-GT-'{}(Lbl'-LT-'gAddr'-GT-'{}(VarGADDR:SortInt{}),Lbl'-LT-'gValue'-GT-'{}(VarVALUE:SortVal{}),VarDotVar5:SortGMutCell{})),VarDotVar4:SortGlobalInstCellMap{})),Var'Unds'7:SortNextGlobAddrCell{}),Var'Unds'27:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("529"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(529,10,542,23)"), UNIQUE'Unds'ID{}("53de7a40b78c04176c726929afe9e026c3434538e300e5a8575eedd8e24e1dce")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{GlobalDefn,KItem}(`global___WASM_GlobalDefn_OptionalId_GlobalType`(OID,`___WASM_GlobalType_Mut_AValType`(MUT,TYP)))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(TYP,VAL) #as _35,STACK)),`<curFrame>`(_6,_7,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_8,_9) #as _36,_21,_22,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,`<globIds>`(IDS),`<globalAddrs>`(GLOBS),`<nextGlobIdx>`(NEXTIDX))),DotVar6)),_23,`<mainStore>`(_0,_1,_2,_3,_4,_5,`<globals>`(`_GlobalInstCellMap_`(`.GlobalInstCellMap`(.KList),DotVar4)),`<nextGlobAddr>`(NEXTADDR)),_24,_25),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(STACK),_36,_21,_22,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,`<globIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,NEXTIDX)),`<globalAddrs>`(`Map:update`(GLOBS,inj{Int,KItem}(NEXTIDX),inj{Int,KItem}(NEXTADDR))),`<nextGlobIdx>`(`_+Int_`(NEXTIDX,#token("1","Int"))))),DotVar6)),_23,`<mainStore>`(_0,_1,_2,_3,_4,_5,`<globals>`(`_GlobalInstCellMap_`(`GlobalInstCellMapItem`(`<gAddr>`(NEXTADDR),`<globalInst>`(`<gAddr>`(NEXTADDR),`<gValue>`(_35),`<gMut>`(MUT))),DotVar4)),`<nextGlobAddr>`(`_+Int_`(NEXTADDR,#token("1","Int")))),_24,_25),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0333400a78726dc248891c5223dcb8622825565584258a05963637e38947dd68) contentStartColumn(10) contentStartLine(485) org.kframework.attributes.Location(Location(485,10,505,20)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(Lblglobal'UndsUndsUnds'WASM'Unds'GlobalDefn'Unds'OptionalId'Unds'GlobalType{}(VarOID:SortOptionalId{},Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(VarMUT:SortMut{},VarTYP:SortAValType{}))),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(\and{SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYP:SortAValType{},VarVAL:SortNumber{}),Var'Unds'35:SortVal{}),VarSTACK:SortValStack{})),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'6:SortLocalsCell{},Var'Unds'7:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}),Var'Unds'36:SortCurFrameCell{}),Var'Unds'21:SortModuleRegistryCell{},Var'Unds'22:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'20:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'globalAddrs'-GT-'{}(VarGLOBS:SortMap{}),Lbl'-LT-'nextGlobIdx'-GT-'{}(VarNEXTIDX:SortInt{}))),VarDotVar6:SortModuleInstCellMap{})),Var'Unds'23:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(Lbl'Stop'GlobalInstCellMap{}(),VarDotVar4:SortGlobalInstCellMap{})),Lbl'-LT-'nextGlobAddr'-GT-'{}(VarNEXTADDR:SortInt{})),Var'Unds'24:SortDeterministicMemoryGrowthCell{},Var'Unds'25:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarSTACK:SortValStack{}),Var'Unds'36:SortCurFrameCell{},Var'Unds'21:SortModuleRegistryCell{},Var'Unds'22:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Var'Unds'19:SortMemIdsCell{},Var'Unds'20:SortMemAddrsCell{},Lbl'-LT-'globIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},VarNEXTIDX:SortInt{})),Lbl'-LT-'globalAddrs'-GT-'{}(LblMap'Coln'update{}(VarGLOBS:SortMap{},inj{SortInt{}, SortKItem{}}(VarNEXTIDX:SortInt{}),inj{SortInt{}, SortKItem{}}(VarNEXTADDR:SortInt{}))),Lbl'-LT-'nextGlobIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTIDX:SortInt{},\dv{SortInt{}}("1"))))),VarDotVar6:SortModuleInstCellMap{})),Var'Unds'23:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Var'Unds'4:SortMemsCell{},Var'Unds'5:SortNextMemAddrCell{},Lbl'-LT-'globals'-GT-'{}(Lbl'Unds'GlobalInstCellMap'Unds'{}(LblGlobalInstCellMapItem{}(Lbl'-LT-'gAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'globalInst'-GT-'{}(Lbl'-LT-'gAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'gValue'-GT-'{}(Var'Unds'35:SortVal{}),Lbl'-LT-'gMut'-GT-'{}(VarMUT:SortMut{}))),VarDotVar4:SortGlobalInstCellMap{})),Lbl'-LT-'nextGlobAddr'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTADDR:SortInt{},\dv{SortInt{}}("1")))),Var'Unds'24:SortDeterministicMemoryGrowthCell{},Var'Unds'25:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("485"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(485,10,505,20)"), UNIQUE'Unds'ID{}("0333400a78726dc248891c5223dcb8622825565584258a05963637e38947dd68")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`grow__WASM_Instr_Int`(N))~>DotVar2),_24,`<curFrame>`(_7,_8,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_9,_10) #as _35,_25,_26,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_21,_22,_23)),DotVar7)) #as _38,_27,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),`<mmax>`(MAX),`<msize>`(SIZE),DotVar5)),DotVar4)),_4,_5,_6) #as _40,`<deterministicMemoryGrowth>`(DET) #as _43,_28),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{IVal,KItem}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),#token("-1","Int"))))~>DotVar2),_24,_35,_25,_26,_38,_27,_40,_43,_28),DotVar0) requires `_orBool__BOOL_Bool_Bool_Bool`(`notBool_`(DET),`notBool_`(`#growthAllowed(_,_)_WASM_Bool_Int_OptionalInt`(`_+Int_`(SIZE,N),MAX))) ensures #token("true","Bool") [UNIQUE_ID(d554478227036da4e6574a516c2c2d0f922a8b9795a751dfc517fc7453b43989) contentStartColumn(10) contentStartLine(1157) org.kframework.attributes.Location(Location(1157,10,1172,56)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(LblnotBool'Unds'{}(VarDET:SortBool{}),LblnotBool'Unds'{}(Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(Lbl'UndsPlus'Int'Unds'{}(VarSIZE:SortInt{},VarN:SortInt{}),VarMAX:SortOptionalInt{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(VarN:SortInt{})),VarDotVar2:SortK{})),Var'Unds'24:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'9:SortLabelDepthCell{},Var'Unds'10:SortLabelIdsCell{}),Var'Unds'35:SortCurFrameCell{}),Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Var'Unds'20:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'21:SortGlobIdsCell{},Var'Unds'22:SortGlobalAddrsCell{},Var'Unds'23:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'38:SortModuleInstancesCell{}),Var'Unds'27:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'mmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),VarDotVar5:SortMdataCell{})),VarDotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'40:SortMainStoreCell{}),\and{SortDeterministicMemoryGrowthCell{}}(Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(VarDET:SortBool{}),Var'Unds'43:SortDeterministicMemoryGrowthCell{}),Var'Unds'28:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIVal{}, SortKItem{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),\dv{SortInt{}}("-1")))),VarDotVar2:SortK{})),Var'Unds'24:SortValstackCell{},Var'Unds'35:SortCurFrameCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'38:SortModuleInstancesCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'40:SortMainStoreCell{},Var'Unds'43:SortDeterministicMemoryGrowthCell{},Var'Unds'28:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("1157"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1157,10,1172,56)"), UNIQUE'Unds'ID{}("d554478227036da4e6574a516c2c2d0f922a8b9795a751dfc517fc7453b43989")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`grow__WASM_Instr_Int`(N))~>DotVar2),_24,`<curFrame>`(_7,_8,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_9,_10) #as _36,_25,_26,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_21,_22,_23)),DotVar7)) #as _39,_27,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),`<mmax>`(MAX),`<msize>`(SIZE),DotVar5)),DotVar4)),_4,_5,_6),_28,_29),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{IVal,KItem}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),SIZE))~>DotVar2),_24,_36,_25,_26,_39,_27,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),`<mmax>`(MAX),`<msize>`(`_+Int_`(SIZE,N)),DotVar5)),DotVar4)),_4,_5,_6),_28,_29),DotVar0) requires `#growthAllowed(_,_)_WASM_Bool_Int_OptionalInt`(`_+Int_`(SIZE,N),MAX) ensures #token("true","Bool") [UNIQUE_ID(b1222ad768a33585c58436a5d6759d0ce0b11e091ca09910a7ab1de517a79ff7) contentStartColumn(10) contentStartLine(1142) org.kframework.attributes.Location(Location(1142,10,1155,48)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Hash'growthAllowed'LParUndsCommUndsRParUnds'WASM'Unds'Bool'Unds'Int'Unds'OptionalInt{}(Lbl'UndsPlus'Int'Unds'{}(VarSIZE:SortInt{},VarN:SortInt{}),VarMAX:SortOptionalInt{}),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(VarN:SortInt{})),VarDotVar2:SortK{})),Var'Unds'24:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'9:SortLabelDepthCell{},Var'Unds'10:SortLabelIdsCell{}),Var'Unds'36:SortCurFrameCell{}),Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Var'Unds'20:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'21:SortGlobIdsCell{},Var'Unds'22:SortGlobalAddrsCell{},Var'Unds'23:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'39:SortModuleInstancesCell{}),Var'Unds'27:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'mmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),VarDotVar5:SortMdataCell{})),VarDotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIVal{}, SortKItem{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarSIZE:SortInt{})),VarDotVar2:SortK{})),Var'Unds'24:SortValstackCell{},Var'Unds'36:SortCurFrameCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'39:SortModuleInstancesCell{},Var'Unds'27:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'mmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'msize'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarSIZE:SortInt{},VarN:SortInt{})),VarDotVar5:SortMdataCell{})),VarDotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("1142"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1142,10,1155,48)"), UNIQUE'Unds'ID{}("b1222ad768a33585c58436a5d6759d0ce0b11e091ca09910a7ab1de517a79ff7")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{BlockInstr,KItem}(`if___else__end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(ID,TDECLS,IS,OID',IS',OID''))~>DotVar2),_3,`<curFrame>`(_0,_1,_2,`<labelDepth>`(DEPTH) #as _18,`<labelIds>`(IDS)),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`if__else_end_WASM_Instr_TypeDecls_Instrs_Instrs`(TDECLS,IS,IS'))~>DotVar2),_3,`<curFrame>`(_0,_1,_2,_18,`<labelIds>`(`Map:update`(IDS,inj{Identifier,KItem}(ID),inj{Int,KItem}(DEPTH)))),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires `_andBool_`(`_orBool__BOOL_Bool_Bool_Bool`(`_==K_`(inj{Identifier,KItem}(ID),inj{OptionalId,KItem}(OID')),`notBool_`(isIdentifier(inj{OptionalId,KItem}(OID')))),`_orBool__BOOL_Bool_Bool_Bool`(`_==K_`(inj{Identifier,KItem}(ID),inj{OptionalId,KItem}(OID'')),`notBool_`(isIdentifier(inj{OptionalId,KItem}(OID''))))) ensures #token("true","Bool") [UNIQUE_ID(8b73d4dee5e25e6576a94a6f47a71ca35ed7bbb73672b7fbde5fc7cb7ec97763) contentStartColumn(10) contentStartLine(200) org.kframework.attributes.Location(Location(200,10,204,67)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),dotk{}()),kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'Apos':SortOptionalId{}),dotk{}())),LblnotBool'Unds'{}(LblisIdentifier{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'Apos':SortOptionalId{}),dotk{}())))),Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),dotk{}()),kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'AposApos':SortOptionalId{}),dotk{}())),LblnotBool'Unds'{}(LblisIdentifier{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'AposApos':SortOptionalId{}),dotk{}()))))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},VarOID'Apos':SortOptionalId{},VarIS'Apos':SortInstrs{},VarOID'AposApos':SortOptionalId{})),VarDotVar2:SortK{})),Var'Unds'3:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},\and{SortLabelDepthCell{}}(Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'18:SortLabelDepthCell{}),Lbl'-LT-'labelIds'-GT-'{}(VarIDS:SortMap{})),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'3:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},Var'Unds'18:SortLabelDepthCell{},Lbl'-LT-'labelIds'-GT-'{}(LblMap'Coln'update{}(VarIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarDEPTH:SortInt{})))),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("200"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(200,10,204,67)"), UNIQUE'Unds'ID{}("8b73d4dee5e25e6576a94a6f47a71ca35ed7bbb73672b7fbde5fc7cb7ec97763")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{BlockInstr,KItem}(`if___end__WASM-TEXT_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(inj{Identifier,OptionalId}(ID) #as _15,TDECLS,IS,OID''))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{BlockInstr,KItem}(`if___else__end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId_Instrs_OptionalId`(ID,TDECLS,IS,_15,inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),_15))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires `_orBool__BOOL_Bool_Bool_Bool`(`_==K_`(inj{Identifier,KItem}(ID),inj{OptionalId,KItem}(OID'')),`notBool_`(isIdentifier(inj{OptionalId,KItem}(OID'')))) ensures #token("true","Bool") [UNIQUE_ID(f34dd1e0130b6a4d114642237319c1ff4ea67bca05312d5de2ddbf9746f9be84) contentStartColumn(10) contentStartLine(196) org.kframework.attributes.Location(Location(196,10,198,43)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),dotk{}()),kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'AposApos':SortOptionalId{}),dotk{}())),LblnotBool'Unds'{}(LblisIdentifier{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'AposApos':SortOptionalId{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(\and{SortOptionalId{}}(inj{SortIdentifier{}, SortOptionalId{}}(VarID:SortIdentifier{}),Var'Unds'15:SortOptionalId{}),VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},VarOID'AposApos':SortOptionalId{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblif'UndsUndsUnds'else'UndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},Var'Unds'15:SortOptionalId{},inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),Var'Unds'15:SortOptionalId{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("196"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(196,10,198,43)"), UNIQUE'Unds'ID{}("f34dd1e0130b6a4d114642237319c1ff4ea67bca05312d5de2ddbf9746f9be84")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{BlockInstr,KItem}(`if___end__WASM-TEXT_BlockInstr_OptionalId_TypeDecls_Instrs_OptionalId`(`_WASM-DATA_OptionalId`(.KList),TDECLS,IS,`_WASM-DATA_OptionalId`(.KList)))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`if__else_end_WASM_Instr_TypeDecls_Instrs_Instrs`(TDECLS,IS,inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(544e3b67da61863dbda6b84308c49d8412bb94fec658de5f2bc9e54695593716) contentStartColumn(10) contentStartLine(194) org.kframework.attributes.Location(Location(194,10,194,82)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblif'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'OptionalId'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(Lbl'Unds'WASM-DATA'Unds'OptionalId{}(),VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},Lbl'Unds'WASM-DATA'Unds'OptionalId{}())),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()))),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("194"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(194,10,194,82)"), UNIQUE'Unds'ID{}("544e3b67da61863dbda6b84308c49d8412bb94fec658de5f2bc9e54695593716")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`if__else_end_WASM_Instr_TypeDecls_Instrs_Instrs`(TDECLS,IS,IS'))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),VAL)),VALSTACK)),`<curFrame>`(_0,_1,_2,`<labelDepth>`(DEPTH),_3),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS)~>inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`result_WASM_TypeKeyWord`(.KList),TDECLS),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),VALSTACK))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(_0,_1,_2,`<labelDepth>`(`_+Int_`(DEPTH,#token("1","Int"))),_3),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires `_=/=Int_`(VAL,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(a4cc075499d2ab9dfa00204059095fd983bf807a1a3996dd49ab2a6cc682a2fc) contentStartColumn(10) contentStartLine(382) org.kframework.attributes.Location(Location(382,10,385,28)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarVAL:SortInt{})),VarVALSTACK:SortValStack{})),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS:SortInstrs{}),kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblresult'Unds'WASM'Unds'TypeKeyWord{}(),VarTDECLS:SortTypeDecls{}),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),VarVALSTACK:SortValStack{})),VarDotVar2:SortK{}))),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("382"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(382,10,385,28)"), UNIQUE'Unds'ID{}("a4cc075499d2ab9dfa00204059095fd983bf807a1a3996dd49ab2a6cc682a2fc")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`if__else_end_WASM_Instr_TypeDecls_Instrs_Instrs`(TDECLS,IS,IS'))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),VAL)),VALSTACK)),`<curFrame>`(_0,_1,_2,`<labelDepth>`(DEPTH),_3),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instrs,KItem}(IS')~>inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`result_WASM_TypeKeyWord`(.KList),TDECLS),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),VALSTACK))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(_0,_1,_2,`<labelDepth>`(`_+Int_`(DEPTH,#token("1","Int"))),_3),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires `_==Int_`(VAL,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(21d81a238ac91aab9dbf36be0bea63a28ee997454d3398279864ea056c59ddc3) contentStartColumn(10) contentStartLine(387) org.kframework.attributes.Location(Location(387,10,390,27)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarVAL:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblif'UndsUnds'else'Unds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},VarIS'Apos':SortInstrs{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarVAL:SortInt{})),VarVALSTACK:SortValStack{})),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarIS'Apos':SortInstrs{}),kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblresult'Unds'WASM'Unds'TypeKeyWord{}(),VarTDECLS:SortTypeDecls{}),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),VarVALSTACK:SortValStack{})),VarDotVar2:SortK{}))),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("387"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(387,10,390,27)"), UNIQUE'Unds'ID{}("21d81a238ac91aab9dbf36be0bea63a28ee997454d3398279864ea056c59ddc3")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`init_local___WASM_Instr_Int_Val`(INDEX,VALUE))~>DotVar2),_4,`<curFrame>`(`<locals>`(LOCALS),_0,_1,_2,_3),_5,_6,_7,_8,_9,_10,_11),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_4,`<curFrame>`(`<locals>`(`Map:update`(LOCALS,inj{Int,KItem}(INDEX),inj{Val,KItem}(VALUE))),_0,_1,_2,_3),_5,_6,_7,_8,_9,_10,_11),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(62721dba656b73f18ff4938388ea14d4e8db2c56bd50e9cd161ecd4ccec72cd4) contentStartColumn(10) contentStartLine(411) org.kframework.attributes.Location(Location(411,10,412,64)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblinit'Unds'local'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'Val{}(VarINDEX:SortInt{},VarVALUE:SortVal{})),VarDotVar2:SortK{})),Var'Unds'4:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(VarLOCALS:SortMap{}),Var'Unds'0:SortLocalIdsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortModuleIdsCell{},Var'Unds'7:SortModuleInstancesCell{},Var'Unds'8:SortNextModuleIdxCell{},Var'Unds'9:SortMainStoreCell{},Var'Unds'10:SortDeterministicMemoryGrowthCell{},Var'Unds'11:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'4:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(LblMap'Coln'update{}(VarLOCALS:SortMap{},inj{SortInt{}, SortKItem{}}(VarINDEX:SortInt{}),inj{SortVal{}, SortKItem{}}(VarVALUE:SortVal{}))),Var'Unds'0:SortLocalIdsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortModuleIdsCell{},Var'Unds'7:SortModuleInstancesCell{},Var'Unds'8:SortNextModuleIdxCell{},Var'Unds'9:SortMainStoreCell{},Var'Unds'10:SortDeterministicMemoryGrowthCell{},Var'Unds'11:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("411"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(411,10,412,64)"), UNIQUE'Unds'ID{}("62721dba656b73f18ff4938388ea14d4e8db2c56bd50e9cd161ecd4ccec72cd4")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`init_localids__WASM_Instr_ValTypes`(VTYPES))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#init_localids___WASM_Instr_Int_ValTypes`(#token("0","Int"),VTYPES))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(11860b1d26a36309ac0d1af96f97354130b9a5f9d776f1a1e1b344b77553df9c) contentStartColumn(10) contentStartLine(430) org.kframework.attributes.Location(Location(430,10,430,70)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblinit'Unds'localids'UndsUnds'WASM'Unds'Instr'Unds'ValTypes{}(VarVTYPES:SortValTypes{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'localids'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValTypes{}(\dv{SortInt{}}("0"),VarVTYPES:SortValTypes{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("430"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(430,10,430,70)"), UNIQUE'Unds'ID{}("11860b1d26a36309ac0d1af96f97354130b9a5f9d776f1a1e1b344b77553df9c")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`init_locals__WASM_Instr_ValStack`(VALUES))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`#init_locals___WASM_Instr_Int_ValStack`(#token("0","Int"),VALUES))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4653a1795a3f2f790eac07551956fce6ac2f1ed1f15e2a714c6151f3d2983529) contentStartColumn(10) contentStartLine(414) org.kframework.attributes.Location(Location(414,10,414,66)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblinit'Unds'locals'UndsUnds'WASM'Unds'Instr'Unds'ValStack{}(VarVALUES:SortValStack{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbl'Hash'init'Unds'locals'UndsUndsUnds'WASM'Unds'Instr'Unds'Int'Unds'ValStack{}(\dv{SortInt{}}("0"),VarVALUES:SortValStack{})),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("414"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(414,10,414,66)"), UNIQUE'Unds'ID{}("4653a1795a3f2f790eac07551956fce6ac2f1ed1f15e2a714c6151f3d2983529")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Label,KItem}(`label_{_}__WASM_Label_VecType_Instrs_ValStack`(`[_]_WASM-DATA_VecType_ValTypes`(TYPES),_0,VALSTACK'))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(_1,_2,_3,`<labelDepth>`(DEPTH),_4),_5,_6,_7,_8,_9,_10,_11),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(`_++__WASM-DATA_ValStack_ValStack_ValStack`(`#take(_,_)_WASM-DATA_ValStack_ValTypes_ValStack`(TYPES,VALSTACK),VALSTACK')),`<curFrame>`(_1,_2,_3,`<labelDepth>`(`_-Int_`(DEPTH,#token("1","Int"))),_4),_5,_6,_7,_8,_9,_10,_11),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1940936cedb42400d4f9e9f7f8aaef6d7fd64a4a376a42752f2c42859f8c5977) contentStartColumn(10) contentStartLine(332) org.kframework.attributes.Location(Location(332,10,334,58)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortLabel{}, SortKItem{}}(Lbllabel'UndsLBraUndsRBraUndsUnds'WASM'Unds'Label'Unds'VecType'Unds'Instrs'Unds'ValStack{}(Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarTYPES:SortValTypes{}),Var'Unds'0:SortInstrs{},VarVALSTACK'Apos':SortValStack{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'1:SortLocalsCell{},Var'Unds'2:SortLocalIdsCell{},Var'Unds'3:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'4:SortLabelIdsCell{}),Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortModuleIdsCell{},Var'Unds'7:SortModuleInstancesCell{},Var'Unds'8:SortNextModuleIdxCell{},Var'Unds'9:SortMainStoreCell{},Var'Unds'10:SortDeterministicMemoryGrowthCell{},Var'Unds'11:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'Hash'take'LParUndsCommUndsRParUnds'WASM-DATA'Unds'ValStack'Unds'ValTypes'Unds'ValStack{}(VarTYPES:SortValTypes{},VarVALSTACK:SortValStack{}),VarVALSTACK'Apos':SortValStack{})),Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'1:SortLocalsCell{},Var'Unds'2:SortLocalIdsCell{},Var'Unds'3:SortCurModIdxCell{},Lbl'-LT-'labelDepth'-GT-'{}(Lbl'Unds'-Int'Unds'{}(VarDEPTH:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'4:SortLabelIdsCell{}),Var'Unds'5:SortModuleRegistryCell{},Var'Unds'6:SortModuleIdsCell{},Var'Unds'7:SortModuleInstancesCell{},Var'Unds'8:SortNextModuleIdxCell{},Var'Unds'9:SortMainStoreCell{},Var'Unds'10:SortDeterministicMemoryGrowthCell{},Var'Unds'11:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("332"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(332,10,334,58)"), UNIQUE'Unds'ID{}("1940936cedb42400d4f9e9f7f8aaef6d7fd64a4a376a42752f2c42859f8c5977")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(ITYPE,WIDTH,EA,SIGN))~>DotVar2),_24,`<curFrame>`(_7,_8,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_9,_10) #as _36,_25,_26,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_21,_22,_23)),DotVar7)) #as _39,_27,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),DotVar5,`<msize>`(SIZE),`<mdata>`(DATA))),DotVar4)),_4,_5,_6) #as _41,_28,_29),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{IVal,KItem}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`{Int}(`_==K_`(inj{Signedness,KItem}(SIGN),inj{Signedness,KItem}(signedBytes(.KList))),`#signedWidth(_,_)_WASM-DATA_Int_Int_Int`(WIDTH,`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(DATA,EA,WIDTH)),`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(DATA,EA,WIDTH))))~>DotVar2),_24,_36,_25,_26,_39,_27,_41,_28,_29),DotVar0) requires `_<=Int_`(`_+Int_`(EA,WIDTH),`_*Int_`(SIZE,`#pageSize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(2da8a1cdf9a1bdf95e57202928b5bb08a4418a110192625fe17010174a8b5c79) contentStartColumn(10) contentStartLine(1041) org.kframework.attributes.Location(Location(1041,10,1060,61)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarEA:SortInt{},VarWIDTH:SortInt{}),Lbl'UndsStar'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(VarITYPE:SortIValType{},VarWIDTH:SortInt{},VarEA:SortInt{},VarSIGN:SortSignedness{})),VarDotVar2:SortK{})),Var'Unds'24:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'9:SortLabelDepthCell{},Var'Unds'10:SortLabelIdsCell{}),Var'Unds'36:SortCurFrameCell{}),Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Var'Unds'20:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'21:SortGlobIdsCell{},Var'Unds'22:SortGlobalAddrsCell{},Var'Unds'23:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'39:SortModuleInstancesCell{}),Var'Unds'27:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),VarDotVar5:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Lbl'-LT-'mdata'-GT-'{}(VarDATA:SortByteMap{}))),VarDotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'41:SortMainStoreCell{}),Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIVal{}, SortKItem{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortSignedness{}, SortKItem{}}(VarSIGN:SortSignedness{}),dotk{}()),kseq{}(inj{SortSignedness{}, SortKItem{}}(LblsignedBytes{}()),dotk{}())),Lbl'Hash'signedWidth'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarWIDTH:SortInt{},Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarDATA:SortByteMap{},VarEA:SortInt{},VarWIDTH:SortInt{})),Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarDATA:SortByteMap{},VarEA:SortInt{},VarWIDTH:SortInt{})))),VarDotVar2:SortK{})),Var'Unds'24:SortValstackCell{},Var'Unds'36:SortCurFrameCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'39:SortModuleInstancesCell{},Var'Unds'27:SortNextModuleIdxCell{},Var'Unds'41:SortMainStoreCell{},Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("1041"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1041,10,1060,61)"), UNIQUE'Unds'ID{}("2da8a1cdf9a1bdf95e57202928b5bb08a4418a110192625fe17010174a8b5c79")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`load{____}_WASM_Instr_IValType_Int_Int_Signedness`(_0,WIDTH,EA,_1))~>DotVar2),_28,`<curFrame>`(_11,_12,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_13,_14) #as _40,_29,_30,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_15,_16,_17,_18,_19,_20,_21,_22,_23,_24,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_25,_26,_27)),DotVar7)) #as _43,_31,`<mainStore>`(_4,_5,_6,_7,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_2,`<msize>`(SIZE),_3)),DotVar4)),_8,_9,_10) #as _45,_32,_33),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>DotVar2),_28,_40,_29,_30,_43,_31,_45,_32,_33),DotVar0) requires `_>Int_`(`_+Int_`(EA,WIDTH),`_*Int_`(SIZE,`#pageSize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(fd947d7689287ec5c0a335e88b3b65679fe924254b65496fa07228cb73e8d5f0) contentStartColumn(10) contentStartLine(1062) org.kframework.attributes.Location(Location(1062,10,1074,60)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-GT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarEA:SortInt{},VarWIDTH:SortInt{}),Lbl'UndsStar'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblload'LBraUndsUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'IValType'Unds'Int'Unds'Int'Unds'Signedness{}(Var'Unds'0:SortIValType{},VarWIDTH:SortInt{},VarEA:SortInt{},Var'Unds'1:SortSignedness{})),VarDotVar2:SortK{})),Var'Unds'28:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'11:SortLocalsCell{},Var'Unds'12:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'13:SortLabelDepthCell{},Var'Unds'14:SortLabelIdsCell{}),Var'Unds'40:SortCurFrameCell{}),Var'Unds'29:SortModuleRegistryCell{},Var'Unds'30:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'15:SortExportsCell{},Var'Unds'16:SortTypeIdsCell{},Var'Unds'17:SortTypesCell{},Var'Unds'18:SortNextTypeIdxCell{},Var'Unds'19:SortFuncIdsCell{},Var'Unds'20:SortFuncAddrsCell{},Var'Unds'21:SortNextFuncIdxCell{},Var'Unds'22:SortTabIdsCell{},Var'Unds'23:SortTabAddrsCell{},Var'Unds'24:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'25:SortGlobIdsCell{},Var'Unds'26:SortGlobalAddrsCell{},Var'Unds'27:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'43:SortModuleInstancesCell{}),Var'Unds'31:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'4:SortFuncsCell{},Var'Unds'5:SortNextFuncAddrCell{},Var'Unds'6:SortTabsCell{},Var'Unds'7:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'2:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Var'Unds'3:SortMdataCell{})),VarDotVar4:SortMemInstCellMap{})),Var'Unds'8:SortNextMemAddrCell{},Var'Unds'9:SortGlobalsCell{},Var'Unds'10:SortNextGlobAddrCell{}),Var'Unds'45:SortMainStoreCell{}),Var'Unds'32:SortDeterministicMemoryGrowthCell{},Var'Unds'33:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),VarDotVar2:SortK{})),Var'Unds'28:SortValstackCell{},Var'Unds'40:SortCurFrameCell{},Var'Unds'29:SortModuleRegistryCell{},Var'Unds'30:SortModuleIdsCell{},Var'Unds'43:SortModuleInstancesCell{},Var'Unds'31:SortNextModuleIdxCell{},Var'Unds'45:SortMainStoreCell{},Var'Unds'32:SortDeterministicMemoryGrowthCell{},Var'Unds'33:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("1062"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1062,10,1074,60)"), UNIQUE'Unds'ID{}("fd947d7689287ec5c0a335e88b3b65679fe924254b65496fa07228cb73e8d5f0")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`local.get__WASM_PlainInstr_Index`(TFIDX))~>DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(`<locals>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,TFIDX)),inj{Val,KItem}(VALUE)),DotVar4)),`<localIds>`(IDS),_0,_1,_2) #as _17,_3,_4,_5,_6,_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)),_17,_3,_4,_5,_6,_7,_8,_9),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1f9869639ae1594dec7565489decee0746cc504b7647c3042a6fd4bc0f5c6e4e) contentStartColumn(10) contentStartLine(444) org.kframework.attributes.Location(Location(444,10,447,36)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbllocal'Stop'get'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarTFIDX:SortIndex{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarTFIDX:SortIndex{})),inj{SortVal{}, SortKItem{}}(VarVALUE:SortVal{})),VarDotVar4:SortMap{})),Lbl'-LT-'localIds'-GT-'{}(VarIDS:SortMap{}),Var'Unds'0:SortCurModIdxCell{},Var'Unds'1:SortLabelDepthCell{},Var'Unds'2:SortLabelIdsCell{}),Var'Unds'17:SortCurFrameCell{}),Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{})),Var'Unds'17:SortCurFrameCell{},Var'Unds'3:SortModuleRegistryCell{},Var'Unds'4:SortModuleIdsCell{},Var'Unds'5:SortModuleInstancesCell{},Var'Unds'6:SortNextModuleIdxCell{},Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("444"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(444,10,447,36)"), UNIQUE'Unds'ID{}("1f9869639ae1594dec7565489decee0746cc504b7647c3042a6fd4bc0f5c6e4e")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`local.set__WASM_PlainInstr_Index`(TFIDX))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)),`<curFrame>`(`<locals>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,TFIDX)),_0),DotVar4)),`<localIds>`(IDS) #as _22,_1,_2,_3),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(VALSTACK),`<curFrame>`(`<locals>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,TFIDX)),inj{Val,KItem}(VALUE)),DotVar4)),_22,_1,_2,_3),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f2c880e1d47fee9dab679c0fa2b80fbecbf62c83666065fa188816b9b00f1290) contentStartColumn(10) contentStartLine(449) org.kframework.attributes.Location(Location(449,10,452,36)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbllocal'Stop'set'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarTFIDX:SortIndex{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{})),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarTFIDX:SortIndex{})),Var'Unds'0:SortKItem{}),VarDotVar4:SortMap{})),\and{SortLocalIdsCell{}}(Lbl'-LT-'localIds'-GT-'{}(VarIDS:SortMap{}),Var'Unds'22:SortLocalIdsCell{}),Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarTFIDX:SortIndex{})),inj{SortVal{}, SortKItem{}}(VarVALUE:SortVal{})),VarDotVar4:SortMap{})),Var'Unds'22:SortLocalIdsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("449"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(449,10,452,36)"), UNIQUE'Unds'ID{}("f2c880e1d47fee9dab679c0fa2b80fbecbf62c83666065fa188816b9b00f1290")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`local.tee__WASM_PlainInstr_Index`(TFIDX))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(VALUE,VALSTACK)) #as _17,`<curFrame>`(`<locals>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,TFIDX)),_0),DotVar4)),`<localIds>`(IDS) #as _22,_1,_2,_3),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_17,`<curFrame>`(`<locals>`(`_Map_`(`_|->_`(inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(IDS,TFIDX)),inj{Val,KItem}(VALUE)),DotVar4)),_22,_1,_2,_3),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bfdf24863c749fd856fffb61014c567f62b9e606f29a7d76ab26994cc4ca3bc7) contentStartColumn(10) contentStartLine(454) org.kframework.attributes.Location(Location(454,10,457,36)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lbllocal'Stop'tee'UndsUnds'WASM'Unds'PlainInstr'Unds'Index{}(VarTFIDX:SortIndex{})),VarDotVar2:SortK{})),\and{SortValstackCell{}}(Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarVALUE:SortVal{},VarVALSTACK:SortValStack{})),Var'Unds'17:SortValstackCell{}),Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarTFIDX:SortIndex{})),Var'Unds'0:SortKItem{}),VarDotVar4:SortMap{})),\and{SortLocalIdsCell{}}(Lbl'-LT-'localIds'-GT-'{}(VarIDS:SortMap{}),Var'Unds'22:SortLocalIdsCell{}),Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'17:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Lbl'-LT-'locals'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarIDS:SortMap{},VarTFIDX:SortIndex{})),inj{SortVal{}, SortKItem{}}(VarVALUE:SortVal{})),VarDotVar4:SortMap{})),Var'Unds'22:SortLocalIdsCell{},Var'Unds'1:SortCurModIdxCell{},Var'Unds'2:SortLabelDepthCell{},Var'Unds'3:SortLabelIdsCell{}),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("454"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(454,10,457,36)"), UNIQUE'Unds'ID{}("bfdf24863c749fd856fffb61014c567f62b9e606f29a7d76ab26994cc4ca3bc7")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{BlockInstr,KItem}(`loop___end__WASM-TEXT_BlockInstr_Identifier_TypeDecls_Instrs_OptionalId`(ID,TDECLS,IS,OID'))~>DotVar2),_3,`<curFrame>`(_0,_1,_2,`<labelDepth>`(DEPTH) #as _18,`<labelIds>`(IDS)),_4,_5,_6,_7,_8,_9,_10),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`loop__end_WASM_Instr_TypeDecls_Instrs`(TDECLS,IS))~>DotVar2),_3,`<curFrame>`(_0,_1,_2,_18,`<labelIds>`(`Map:update`(IDS,inj{Identifier,KItem}(ID),inj{Int,KItem}(DEPTH)))),_4,_5,_6,_7,_8,_9,_10),DotVar0) requires `_orBool__BOOL_Bool_Bool_Bool`(`_==K_`(inj{Identifier,KItem}(ID),inj{OptionalId,KItem}(OID')),`notBool_`(isIdentifier(inj{OptionalId,KItem}(OID')))) ensures #token("true","Bool") [UNIQUE_ID(6421e25fb78be0173744420aaebd7c813ac364ab72e84124406092e3a9653f27) contentStartColumn(10) contentStartLine(181) org.kframework.attributes.Location(Location(181,10,185,42)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),dotk{}()),kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'Apos':SortOptionalId{}),dotk{}())),LblnotBool'Unds'{}(LblisIdentifier{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOID'Apos':SortOptionalId{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Lblloop'UndsUndsUnds'end'UndsUnds'WASM-TEXT'Unds'BlockInstr'Unds'Identifier'Unds'TypeDecls'Unds'Instrs'Unds'OptionalId{}(VarID:SortIdentifier{},VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{},VarOID'Apos':SortOptionalId{})),VarDotVar2:SortK{})),Var'Unds'3:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},\and{SortLabelDepthCell{}}(Lbl'-LT-'labelDepth'-GT-'{}(VarDEPTH:SortInt{}),Var'Unds'18:SortLabelDepthCell{}),Lbl'-LT-'labelIds'-GT-'{}(VarIDS:SortMap{})),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblloop'UndsUnds'end'Unds'WASM'Unds'Instr'Unds'TypeDecls'Unds'Instrs{}(VarTDECLS:SortTypeDecls{},VarIS:SortInstrs{})),VarDotVar2:SortK{})),Var'Unds'3:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'0:SortLocalsCell{},Var'Unds'1:SortLocalIdsCell{},Var'Unds'2:SortCurModIdxCell{},Var'Unds'18:SortLabelDepthCell{},Lbl'-LT-'labelIds'-GT-'{}(LblMap'Coln'update{}(VarIDS:SortMap{},inj{SortIdentifier{}, SortKItem{}}(VarID:SortIdentifier{}),inj{SortInt{}, SortKItem{}}(VarDEPTH:SortInt{})))),Var'Unds'4:SortModuleRegistryCell{},Var'Unds'5:SortModuleIdsCell{},Var'Unds'6:SortModuleInstancesCell{},Var'Unds'7:SortNextModuleIdxCell{},Var'Unds'8:SortMainStoreCell{},Var'Unds'9:SortDeterministicMemoryGrowthCell{},Var'Unds'10:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm-text.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("181"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(181,10,185,42)"), UNIQUE'Unds'ID{}("6421e25fb78be0173744420aaebd7c813ac364ab72e84124406092e3a9653f27")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`memory.grow_WASM_PlainInstr`(.KList))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),N)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`grow__WASM_Instr_Int`(N))~>DotVar2),`<valstack>`(VALSTACK),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(84cd9b352dae00c72889741d25d981ee7abbb8ddb40838742cb343f11b1fce36) contentStartColumn(10) contentStartLine(1139) org.kframework.attributes.Location(Location(1139,10,1140,65)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblmemory'Stop'grow'Unds'WASM'Unds'PlainInstr{}()),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarN:SortInt{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblgrow'UndsUnds'WASM'Unds'Instr'Unds'Int{}(VarN:SortInt{})),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(VarVALSTACK:SortValStack{}),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1139"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1139,10,1140,65)"), UNIQUE'Unds'ID{}("84cd9b352dae00c72889741d25d981ee7abbb8ddb40838742cb343f11b1fce36")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`memory.size_WASM_PlainInstr`(.KList))~>DotVar2),_26,`<curFrame>`(_9,_10,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_11,_12) #as _38,_27,_28,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_13,_14,_15,_16,_17,_18,_19,_20,_21,_22,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_23,_24,_25)),DotVar7)) #as _41,_29,`<mainStore>`(_2,_3,_4,_5,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_0,`<msize>`(SIZE),_1)),DotVar4)),_6,_7,_8) #as _43,_30,_31),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{IVal,KItem}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),SIZE))~>DotVar2),_26,_38,_27,_28,_41,_29,_43,_30,_31),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(75acd8bfb085540cb159b1d6e765e9924daee68453c34484130fd137929db333) contentStartColumn(10) contentStartLine(1113) org.kframework.attributes.Location(Location(1113,10,1124,20)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblmemory'Stop'size'Unds'WASM'Unds'PlainInstr{}()),VarDotVar2:SortK{})),Var'Unds'26:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'9:SortLocalsCell{},Var'Unds'10:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'11:SortLabelDepthCell{},Var'Unds'12:SortLabelIdsCell{}),Var'Unds'38:SortCurFrameCell{}),Var'Unds'27:SortModuleRegistryCell{},Var'Unds'28:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'13:SortExportsCell{},Var'Unds'14:SortTypeIdsCell{},Var'Unds'15:SortTypesCell{},Var'Unds'16:SortNextTypeIdxCell{},Var'Unds'17:SortFuncIdsCell{},Var'Unds'18:SortFuncAddrsCell{},Var'Unds'19:SortNextFuncIdxCell{},Var'Unds'20:SortTabIdsCell{},Var'Unds'21:SortTabAddrsCell{},Var'Unds'22:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'23:SortGlobIdsCell{},Var'Unds'24:SortGlobalAddrsCell{},Var'Unds'25:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'41:SortModuleInstancesCell{}),Var'Unds'29:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'2:SortFuncsCell{},Var'Unds'3:SortNextFuncAddrCell{},Var'Unds'4:SortTabsCell{},Var'Unds'5:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'0:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Var'Unds'1:SortMdataCell{})),VarDotVar4:SortMemInstCellMap{})),Var'Unds'6:SortNextMemAddrCell{},Var'Unds'7:SortGlobalsCell{},Var'Unds'8:SortNextGlobAddrCell{}),Var'Unds'43:SortMainStoreCell{}),Var'Unds'30:SortDeterministicMemoryGrowthCell{},Var'Unds'31:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortIVal{}, SortKItem{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarSIZE:SortInt{})),VarDotVar2:SortK{})),Var'Unds'26:SortValstackCell{},Var'Unds'38:SortCurFrameCell{},Var'Unds'27:SortModuleRegistryCell{},Var'Unds'28:SortModuleIdsCell{},Var'Unds'41:SortModuleInstancesCell{},Var'Unds'29:SortNextModuleIdxCell{},Var'Unds'43:SortMainStoreCell{},Var'Unds'30:SortDeterministicMemoryGrowthCell{},Var'Unds'31:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1113"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1113,10,1124,20)"), UNIQUE'Unds'ID{}("75acd8bfb085540cb159b1d6e765e9924daee68453c34484130fd137929db333")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`memory{___}_WASM_MemoryDefn_OptionalId_Int_OptionalInt`(ID,MIN,MAX))~>DotVar2),_22,`<curFrame>`(_6,_7,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_8,_9) #as _34,_23,_24,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_10,_11,_12,_13,_14,_15,_16,_17,_18,`<memIds>`(IDS),`<memAddrs>`(`.Map`(.KList)),_19,_20,_21)),DotVar6)),_25,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`.MemInstCellMap`(.KList),DotVar4)),`<nextMemAddr>`(NEXTADDR),_4,_5),_26,_27),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_22,_34,_23,_24,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_10,_11,_12,_13,_14,_15,_16,_17,_18,`<memIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,ID,#token("0","Int"))),`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(NEXTADDR))),_19,_20,_21)),DotVar6)),_25,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(NEXTADDR),`<memInst>`(`<mAddr>`(NEXTADDR),`<mmax>`(MAX),`<msize>`(MIN),initMdataCell(.KList))),DotVar4)),`<nextMemAddr>`(`_+Int_`(NEXTADDR,#token("1","Int"))),_4,_5),_26,_27),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(008704b5436a862c5075d567df71ceb05d63e806a8b8ce8cd1e0457b16211ac9) contentStartColumn(10) contentStartLine(940) org.kframework.attributes.Location(Location(940,10,959,17)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lblmemory'LBraUndsUndsUndsRBraUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarID:SortOptionalId{},VarMIN:SortInt{},VarMAX:SortOptionalInt{})),VarDotVar2:SortK{})),Var'Unds'22:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'6:SortLocalsCell{},Var'Unds'7:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}),Var'Unds'34:SortCurFrameCell{}),Var'Unds'23:SortModuleRegistryCell{},Var'Unds'24:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'19:SortGlobIdsCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{})),VarDotVar6:SortModuleInstCellMap{})),Var'Unds'25:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(Lbl'Stop'MemInstCellMap{}(),VarDotVar4:SortMemInstCellMap{})),Lbl'-LT-'nextMemAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'26:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'22:SortValstackCell{},Var'Unds'34:SortCurFrameCell{},Var'Unds'23:SortModuleRegistryCell{},Var'Unds'24:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Var'Unds'17:SortTabIdsCell{},Var'Unds'18:SortTabAddrsCell{},Lbl'-LT-'memIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarID:SortOptionalId{},\dv{SortInt{}}("0"))),Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarNEXTADDR:SortInt{}))),Var'Unds'19:SortGlobIdsCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{})),VarDotVar6:SortModuleInstCellMap{})),Var'Unds'25:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'mmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'msize'-GT-'{}(VarMIN:SortInt{}),LblinitMdataCell{}())),VarDotVar4:SortMemInstCellMap{})),Lbl'-LT-'nextMemAddr'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTADDR:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'26:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("940"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(940,10,959,17)"), UNIQUE'Unds'ID{}("008704b5436a862c5075d567df71ceb05d63e806a8b8ce8cd1e0457b16211ac9")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{MemoryDefn,KItem}(`memory{___}_WASM_MemoryDefn_OptionalId_Int_OptionalInt`(_0,_1,_2))~>DotVar2),_20,`<curFrame>`(_3,_4,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_5,_6) #as _33,_21,_22,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_7,_8,_9,_10,_11,_12,_13,_14,_15,_16,`<memAddrs>`(MAP),_17,_18,_19)),DotVar4)) #as _36,_23,_24,_25,_26),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>DotVar2),_20,_33,_21,_22,_36,_23,_24,_25,_26),DotVar0) requires `_=/=K_`(inj{Map,KItem}(MAP),inj{Map,KItem}(`.Map`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(1d1488c6b5fa5f85637244bfc4674f1ed8e3a8f48518dbb0781cf3082600da1a) contentStartColumn(10) contentStartLine(931) org.kframework.attributes.Location(Location(931,10,938,29)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortMap{}, SortKItem{}}(VarMAP:SortMap{}),dotk{}()),kseq{}(inj{SortMap{}, SortKItem{}}(Lbl'Stop'Map{}()),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Lblmemory'LBraUndsUndsUndsRBraUnds'WASM'Unds'MemoryDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortInt{},Var'Unds'2:SortOptionalInt{})),VarDotVar2:SortK{})),Var'Unds'20:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'3:SortLocalsCell{},Var'Unds'4:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'5:SortLabelDepthCell{},Var'Unds'6:SortLabelIdsCell{}),Var'Unds'33:SortCurFrameCell{}),Var'Unds'21:SortModuleRegistryCell{},Var'Unds'22:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypeIdsCell{},Var'Unds'9:SortTypesCell{},Var'Unds'10:SortNextTypeIdxCell{},Var'Unds'11:SortFuncIdsCell{},Var'Unds'12:SortFuncAddrsCell{},Var'Unds'13:SortNextFuncIdxCell{},Var'Unds'14:SortTabIdsCell{},Var'Unds'15:SortTabAddrsCell{},Var'Unds'16:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(VarMAP:SortMap{}),Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortGlobalAddrsCell{},Var'Unds'19:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'36:SortModuleInstancesCell{}),Var'Unds'23:SortNextModuleIdxCell{},Var'Unds'24:SortMainStoreCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),VarDotVar2:SortK{})),Var'Unds'20:SortValstackCell{},Var'Unds'33:SortCurFrameCell{},Var'Unds'21:SortModuleRegistryCell{},Var'Unds'22:SortModuleIdsCell{},Var'Unds'36:SortModuleInstancesCell{},Var'Unds'23:SortNextModuleIdxCell{},Var'Unds'24:SortMainStoreCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("931"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(931,10,938,29)"), UNIQUE'Unds'ID{}("1d1488c6b5fa5f85637244bfc4674f1ed8e3a8f48518dbb0781cf3082600da1a")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`nop_WASM_PlainInstr`(.KList))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(200b49af1fe6ea331d4bdc05035a304bfc5e563705f073eef5d0c666b3b45259) contentStartColumn(10) contentStartLine(309) org.kframework.attributes.Location(Location(309,10,309,31)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblnop'Unds'WASM'Unds'PlainInstr{}()),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("309"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(309,10,309,31)"), UNIQUE'Unds'ID{}("200b49af1fe6ea331d4bdc05035a304bfc5e563705f073eef5d0c666b3b45259")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`return_WASM_PlainInstr`(.KList))~>``inj{Frame,KItem}(FR) #as _15``~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(_15~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a70d92e82464fdd7c6febd2b9915b2b108e0d056f9acd2275238efdf1f1e8562) contentStartColumn(10) contentStartLine(760) org.kframework.attributes.Location(Location(760,10,760,51)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblreturn'Unds'WASM'Unds'PlainInstr{}()),kseq{}(\and{SortKItem{}}(inj{SortFrame{}, SortKItem{}}(VarFR:SortFrame{}),Var'Unds'15:SortKItem{}),VarDotVar2:SortK{}))),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'15:SortKItem{},VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("760"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(760,10,760,51)"), UNIQUE'Unds'ID{}("a70d92e82464fdd7c6febd2b9915b2b108e0d056f9acd2275238efdf1f1e8562")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`select_WASM_PlainInstr`(.KList))~>DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),C)),`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(TYPE,V2),`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(TYPE,V1),VALSTACK)))),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),`<valstack>`(`_:__WASM-DATA_ValStack_Val_ValStack`(`<_>__WASM-DATA_Val_AValType_Number`(TYPE,`#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`{Number}(`_=/=Int_`(C,#token("0","Int")),V1,V2)),VALSTACK)),_0,_1,_2,_3,_4,_5,_6,_7),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0afa5320c8334f86c71011a727cf3d4e84df3e452bcb94cc1d43a0407ce3749b) contentStartColumn(10) contentStartLine(294) org.kframework.attributes.Location(Location(294,10,298,21)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblselect'Unds'WASM'Unds'PlainInstr{}()),VarDotVar2:SortK{})),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarC:SortInt{})),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYPE:SortAValType{},VarV2:SortNumber{}),Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYPE:SortAValType{},VarV1:SortNumber{}),VarVALSTACK:SortValStack{})))),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Lbl'-LT-'valstack'-GT-'{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'Val'Unds'AValType'Unds'Number{}(VarTYPE:SortAValType{},Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortNumber{}}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarC:SortInt{},\dv{SortInt{}}("0")),VarV1:SortNumber{},VarV2:SortNumber{})),VarVALSTACK:SortValStack{})),Var'Unds'0:SortCurFrameCell{},Var'Unds'1:SortModuleRegistryCell{},Var'Unds'2:SortModuleIdsCell{},Var'Unds'3:SortModuleInstancesCell{},Var'Unds'4:SortNextModuleIdxCell{},Var'Unds'5:SortMainStoreCell{},Var'Unds'6:SortDeterministicMemoryGrowthCell{},Var'Unds'7:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("294"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(294,10,298,21)"), UNIQUE'Unds'ID{}("0afa5320c8334f86c71011a727cf3d4e84df3e452bcb94cc1d43a0407ce3749b")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{ModuleDecl,KItem}(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(OID,TS,IS,FGS,AS,ES,INIS,S))~>DotVar2),_5,`<curFrame>`(_1,_2,`<curModIdx>`(_0),_3,_4),_6,`<moduleIds>`(IDS),`<moduleInstances>`(`_ModuleInstCellMap_`(`.ModuleInstCellMap`(.KList),DotVar3)),`<nextModuleIdx>`(NEXT),_7,_8,_9),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Defns,KItem}(TS)~>inj{Defns,KItem}(IS)~>inj{Defns,KItem}(FGS)~>inj{Defns,KItem}(AS)~>inj{Defns,KItem}(ES)~>inj{Defns,KItem}(INIS)~>inj{Defns,KItem}(S)~>DotVar2),_5,`<curFrame>`(_1,_2,`<curModIdx>`(inj{Int,OptionalInt}(NEXT)),_3,_4),_6,`<moduleIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,OID,NEXT)),`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(NEXT),`<moduleInst>`(`<modIdx>`(NEXT),initExportsCell(.KList),initTypeIdsCell(.KList),initTypesCell(.KList),initNextTypeIdxCell(.KList),initFuncIdsCell(.KList),initFuncAddrsCell(.KList),initNextFuncIdxCell(.KList),initTabIdsCell(.KList),initTabAddrsCell(.KList),initMemIdsCell(.KList),initMemAddrsCell(.KList),initGlobIdsCell(.KList),initGlobalAddrsCell(.KList),initNextGlobIdxCell(.KList))),DotVar3)),`<nextModuleIdx>`(`_+Int_`(NEXT,#token("1","Int"))),_7,_8,_9),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5d6e2fb5828fb5f74822e2534bc8414e9eeba60a14dc634797c100d9c28a68c4) contentStartColumn(10) contentStartLine(1514) org.kframework.attributes.Location(Location(1514,10,1529,28)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortModuleDecl{}, SortKItem{}}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarOID:SortOptionalId{},VarTS:SortDefns{},VarIS:SortDefns{},VarFGS:SortDefns{},VarAS:SortDefns{},VarES:SortDefns{},VarINIS:SortDefns{},VarS:SortDefns{})),VarDotVar2:SortK{})),Var'Unds'5:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'1:SortLocalsCell{},Var'Unds'2:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(Var'Unds'0:SortOptionalInt{}),Var'Unds'3:SortLabelDepthCell{},Var'Unds'4:SortLabelIdsCell{}),Var'Unds'6:SortModuleRegistryCell{},Lbl'-LT-'moduleIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(Lbl'Stop'ModuleInstCellMap{}(),VarDotVar3:SortModuleInstCellMap{})),Lbl'-LT-'nextModuleIdx'-GT-'{}(VarNEXT:SortInt{}),Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortDefns{}, SortKItem{}}(VarTS:SortDefns{}),kseq{}(inj{SortDefns{}, SortKItem{}}(VarIS:SortDefns{}),kseq{}(inj{SortDefns{}, SortKItem{}}(VarFGS:SortDefns{}),kseq{}(inj{SortDefns{}, SortKItem{}}(VarAS:SortDefns{}),kseq{}(inj{SortDefns{}, SortKItem{}}(VarES:SortDefns{}),kseq{}(inj{SortDefns{}, SortKItem{}}(VarINIS:SortDefns{}),kseq{}(inj{SortDefns{}, SortKItem{}}(VarS:SortDefns{}),VarDotVar2:SortK{})))))))),Var'Unds'5:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'1:SortLocalsCell{},Var'Unds'2:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarNEXT:SortInt{})),Var'Unds'3:SortLabelDepthCell{},Var'Unds'4:SortLabelIdsCell{}),Var'Unds'6:SortModuleRegistryCell{},Lbl'-LT-'moduleIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarOID:SortOptionalId{},VarNEXT:SortInt{})),Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarNEXT:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarNEXT:SortInt{}),LblinitExportsCell{}(),LblinitTypeIdsCell{}(),LblinitTypesCell{}(),LblinitNextTypeIdxCell{}(),LblinitFuncIdsCell{}(),LblinitFuncAddrsCell{}(),LblinitNextFuncIdxCell{}(),LblinitTabIdsCell{}(),LblinitTabAddrsCell{}(),LblinitMemIdsCell{}(),LblinitMemAddrsCell{}(),LblinitGlobIdsCell{}(),LblinitGlobalAddrsCell{}(),LblinitNextGlobIdxCell{}())),VarDotVar3:SortModuleInstCellMap{})),Lbl'-LT-'nextModuleIdx'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXT:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'7:SortMainStoreCell{},Var'Unds'8:SortDeterministicMemoryGrowthCell{},Var'Unds'9:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1514"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1514,10,1529,28)"), UNIQUE'Unds'ID{}("5d6e2fb5828fb5f74822e2534bc8414e9eeba60a14dc634797c100d9c28a68c4")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(WIDTH,EA,_0))~>DotVar2),_27,`<curFrame>`(_10,_11,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_12,_13) #as _39,_28,_29,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_14,_15,_16,_17,_18,_19,_20,_21,_22,_23,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_24,_25,_26)),DotVar7)) #as _42,_30,`<mainStore>`(_3,_4,_5,_6,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),_1,`<msize>`(SIZE),_2)),DotVar4)),_7,_8,_9) #as _44,_31,_32),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>DotVar2),_27,_39,_28,_29,_42,_30,_44,_31,_32),DotVar0) requires `_>Int_`(`_+Int_`(EA,WIDTH),`_*Int_`(SIZE,`#pageSize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(94e019ab59f335d3c6158b410688dd2d8c00980f3cfbb25b721897e23e4042fa) contentStartColumn(10) contentStartLine(998) org.kframework.attributes.Location(Location(998,10,1010,63)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-GT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarEA:SortInt{},VarWIDTH:SortInt{}),Lbl'UndsStar'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(VarWIDTH:SortInt{},VarEA:SortInt{},Var'Unds'0:SortNumber{})),VarDotVar2:SortK{})),Var'Unds'27:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'10:SortLocalsCell{},Var'Unds'11:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'12:SortLabelDepthCell{},Var'Unds'13:SortLabelIdsCell{}),Var'Unds'39:SortCurFrameCell{}),Var'Unds'28:SortModuleRegistryCell{},Var'Unds'29:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'14:SortExportsCell{},Var'Unds'15:SortTypeIdsCell{},Var'Unds'16:SortTypesCell{},Var'Unds'17:SortNextTypeIdxCell{},Var'Unds'18:SortFuncIdsCell{},Var'Unds'19:SortFuncAddrsCell{},Var'Unds'20:SortNextFuncIdxCell{},Var'Unds'21:SortTabIdsCell{},Var'Unds'22:SortTabAddrsCell{},Var'Unds'23:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'24:SortGlobIdsCell{},Var'Unds'25:SortGlobalAddrsCell{},Var'Unds'26:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'42:SortModuleInstancesCell{}),Var'Unds'30:SortNextModuleIdxCell{},\and{SortMainStoreCell{}}(Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'3:SortFuncsCell{},Var'Unds'4:SortNextFuncAddrCell{},Var'Unds'5:SortTabsCell{},Var'Unds'6:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Var'Unds'1:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Var'Unds'2:SortMdataCell{})),VarDotVar4:SortMemInstCellMap{})),Var'Unds'7:SortNextMemAddrCell{},Var'Unds'8:SortGlobalsCell{},Var'Unds'9:SortNextGlobAddrCell{}),Var'Unds'44:SortMainStoreCell{}),Var'Unds'31:SortDeterministicMemoryGrowthCell{},Var'Unds'32:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),VarDotVar2:SortK{})),Var'Unds'27:SortValstackCell{},Var'Unds'39:SortCurFrameCell{},Var'Unds'28:SortModuleRegistryCell{},Var'Unds'29:SortModuleIdsCell{},Var'Unds'42:SortModuleInstancesCell{},Var'Unds'30:SortNextModuleIdxCell{},Var'Unds'44:SortMainStoreCell{},Var'Unds'31:SortDeterministicMemoryGrowthCell{},Var'Unds'32:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("998"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(998,10,1010,63)"), UNIQUE'Unds'ID{}("94e019ab59f335d3c6158b410688dd2d8c00980f3cfbb25b721897e23e4042fa")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`store{___}_WASM_Instr_Int_Int_Number`(WIDTH,EA,inj{Int,Number}(VAL)))~>DotVar2),_24,`<curFrame>`(_7,_8,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_9,_10) #as _37,_25,_26,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(ADDR))),_21,_22,_23)),DotVar7)) #as _40,_27,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),DotVar5,`<msize>`(SIZE),`<mdata>`(DATA))),DotVar4)),_4,_5,_6),_28,_29),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_24,_37,_25,_26,_40,_27,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(ADDR),`<memInst>`(`<mAddr>`(ADDR),DotVar5,`<msize>`(SIZE),`<mdata>`(`#setRange(_,_,_,_)_WASM-DATA_ByteMap_ByteMap_Int_Int_Int`(DATA,EA,VAL,WIDTH)))),DotVar4)),_4,_5,_6),_28,_29),DotVar0) requires `_<=Int_`(`_+Int_`(EA,WIDTH),`_*Int_`(SIZE,`#pageSize()_WASM_Int`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(ea3cf1c2889744c56015951a3961b657edaaa45edac2baa9bf5771cf00045437) contentStartColumn(10) contentStartLine(983) org.kframework.attributes.Location(Location(983,10,996,64)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarEA:SortInt{},VarWIDTH:SortInt{}),Lbl'UndsStar'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lblstore'LBraUndsUndsUndsRBraUnds'WASM'Unds'Instr'Unds'Int'Unds'Int'Unds'Number{}(VarWIDTH:SortInt{},VarEA:SortInt{},inj{SortInt{}, SortNumber{}}(VarVAL:SortInt{}))),VarDotVar2:SortK{})),Var'Unds'24:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'9:SortLabelDepthCell{},Var'Unds'10:SortLabelIdsCell{}),Var'Unds'37:SortCurFrameCell{}),Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Var'Unds'20:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarADDR:SortInt{}))),Var'Unds'21:SortGlobIdsCell{},Var'Unds'22:SortGlobalAddrsCell{},Var'Unds'23:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'40:SortModuleInstancesCell{}),Var'Unds'27:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),VarDotVar5:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Lbl'-LT-'mdata'-GT-'{}(VarDATA:SortByteMap{}))),VarDotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'24:SortValstackCell{},Var'Unds'37:SortCurFrameCell{},Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Var'Unds'40:SortModuleInstancesCell{},Var'Unds'27:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarADDR:SortInt{}),VarDotVar5:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Lbl'-LT-'mdata'-GT-'{}(Lbl'Hash'setRange'LParUndsCommUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'ByteMap'Unds'ByteMap'Unds'Int'Unds'Int'Unds'Int{}(VarDATA:SortByteMap{},VarEA:SortInt{},VarVAL:SortInt{},VarWIDTH:SortInt{})))),VarDotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("983"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(983,10,996,64)"), UNIQUE'Unds'ID{}("ea3cf1c2889744c56015951a3961b657edaaa45edac2baa9bf5771cf00045437")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`table{___}_WASM_TableDefn_OptionalId_Int_OptionalInt`(ID,MIN,MAX))~>DotVar2),_22,`<curFrame>`(_6,_7,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_8,_9) #as _34,_23,_24,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_10,_11,_12,_13,_14,_15,_16,`<tabIds>`(IDS),`<tabAddrs>`(`.Map`(.KList)),_17,_18,_19,_20,_21)),DotVar6)),_25,`<mainStore>`(_0,_1,`<tabs>`(`_TabInstCellMap_`(`.TabInstCellMap`(.KList),DotVar4)),`<nextTabAddr>`(NEXTADDR),_2,_3,_4,_5),_26,_27),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_22,_34,_23,_24,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_10,_11,_12,_13,_14,_15,_16,`<tabIds>`(`#saveId(_,_,_)_WASM-DATA_Map_Map_OptionalId_Int`(IDS,ID,#token("0","Int"))),`<tabAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(NEXTADDR))),_17,_18,_19,_20,_21)),DotVar6)),_25,`<mainStore>`(_0,_1,`<tabs>`(`_TabInstCellMap_`(`TabInstCellMapItem`(`<tAddr>`(NEXTADDR),`<tabInst>`(`<tAddr>`(NEXTADDR),`<tmax>`(MAX),`<tsize>`(MIN),`<tdata>`(`.Map`(.KList)))),DotVar4)),`<nextTabAddr>`(`_+Int_`(NEXTADDR,#token("1","Int"))),_2,_3,_4,_5),_26,_27),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f30e647738318ffa0482f67dc5d29847bca865cd184c7e3746f78b649e207e39) contentStartColumn(10) contentStartLine(885) org.kframework.attributes.Location(Location(885,10,904,17)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbltable'LBraUndsUndsUndsRBraUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(VarID:SortOptionalId{},VarMIN:SortInt{},VarMAX:SortOptionalInt{})),VarDotVar2:SortK{})),Var'Unds'22:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'6:SortLocalsCell{},Var'Unds'7:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'8:SortLabelDepthCell{},Var'Unds'9:SortLabelIdsCell{}),Var'Unds'34:SortCurFrameCell{}),Var'Unds'23:SortModuleRegistryCell{},Var'Unds'24:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(VarIDS:SortMap{}),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'Stop'Map{}()),Var'Unds'17:SortMemIdsCell{},Var'Unds'18:SortMemAddrsCell{},Var'Unds'19:SortGlobIdsCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{})),VarDotVar6:SortModuleInstCellMap{})),Var'Unds'25:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(Lbl'Stop'TabInstCellMap{}(),VarDotVar4:SortTabInstCellMap{})),Lbl'-LT-'nextTabAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Var'Unds'2:SortMemsCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'26:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'22:SortValstackCell{},Var'Unds'34:SortCurFrameCell{},Var'Unds'23:SortModuleRegistryCell{},Var'Unds'24:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'10:SortExportsCell{},Var'Unds'11:SortTypeIdsCell{},Var'Unds'12:SortTypesCell{},Var'Unds'13:SortNextTypeIdxCell{},Var'Unds'14:SortFuncIdsCell{},Var'Unds'15:SortFuncAddrsCell{},Var'Unds'16:SortNextFuncIdxCell{},Lbl'-LT-'tabIds'-GT-'{}(Lbl'Hash'saveId'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Map'Unds'Map'Unds'OptionalId'Unds'Int{}(VarIDS:SortMap{},VarID:SortOptionalId{},\dv{SortInt{}}("0"))),Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarNEXTADDR:SortInt{}))),Var'Unds'17:SortMemIdsCell{},Var'Unds'18:SortMemAddrsCell{},Var'Unds'19:SortGlobIdsCell{},Var'Unds'20:SortGlobalAddrsCell{},Var'Unds'21:SortNextGlobIdxCell{})),VarDotVar6:SortModuleInstCellMap{})),Var'Unds'25:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Lbl'-LT-'tabs'-GT-'{}(Lbl'Unds'TabInstCellMap'Unds'{}(LblTabInstCellMapItem{}(Lbl'-LT-'tAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'tabInst'-GT-'{}(Lbl'-LT-'tAddr'-GT-'{}(VarNEXTADDR:SortInt{}),Lbl'-LT-'tmax'-GT-'{}(VarMAX:SortOptionalInt{}),Lbl'-LT-'tsize'-GT-'{}(VarMIN:SortInt{}),Lbl'-LT-'tdata'-GT-'{}(Lbl'Stop'Map{}()))),VarDotVar4:SortTabInstCellMap{})),Lbl'-LT-'nextTabAddr'-GT-'{}(Lbl'UndsPlus'Int'Unds'{}(VarNEXTADDR:SortInt{},\dv{SortInt{}}("1"))),Var'Unds'2:SortMemsCell{},Var'Unds'3:SortNextMemAddrCell{},Var'Unds'4:SortGlobalsCell{},Var'Unds'5:SortNextGlobAddrCell{}),Var'Unds'26:SortDeterministicMemoryGrowthCell{},Var'Unds'27:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("885"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(885,10,904,17)"), UNIQUE'Unds'ID{}("f30e647738318ffa0482f67dc5d29847bca865cd184c7e3746f78b649e207e39")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{TableDefn,KItem}(`table{___}_WASM_TableDefn_OptionalId_Int_OptionalInt`(_0,_1,_2))~>DotVar2),_20,`<curFrame>`(_3,_4,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_5,_6) #as _33,_21,_22,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_7,_8,_9,_10,_11,_12,_13,_14,`<tabAddrs>`(MAP),_15,_16,_17,_18,_19)),DotVar4)) #as _36,_23,_24,_25,_26),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>DotVar2),_20,_33,_21,_22,_36,_23,_24,_25,_26),DotVar0) requires `_=/=K_`(inj{Map,KItem}(MAP),inj{Map,KItem}(`.Map`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(ce869f8a7c12a4a1edae518e3f3e962651d501226d2cf7981b886764c8b14f9c) contentStartColumn(10) contentStartLine(876) org.kframework.attributes.Location(Location(876,10,883,30)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortMap{}, SortKItem{}}(VarMAP:SortMap{}),dotk{}()),kseq{}(inj{SortMap{}, SortKItem{}}(Lbl'Stop'Map{}()),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(Lbltable'LBraUndsUndsUndsRBraUnds'WASM'Unds'TableDefn'Unds'OptionalId'Unds'Int'Unds'OptionalInt{}(Var'Unds'0:SortOptionalId{},Var'Unds'1:SortInt{},Var'Unds'2:SortOptionalInt{})),VarDotVar2:SortK{})),Var'Unds'20:SortValstackCell{},\and{SortCurFrameCell{}}(Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'3:SortLocalsCell{},Var'Unds'4:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'5:SortLabelDepthCell{},Var'Unds'6:SortLabelIdsCell{}),Var'Unds'33:SortCurFrameCell{}),Var'Unds'21:SortModuleRegistryCell{},Var'Unds'22:SortModuleIdsCell{},\and{SortModuleInstancesCell{}}(Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'7:SortExportsCell{},Var'Unds'8:SortTypeIdsCell{},Var'Unds'9:SortTypesCell{},Var'Unds'10:SortNextTypeIdxCell{},Var'Unds'11:SortFuncIdsCell{},Var'Unds'12:SortFuncAddrsCell{},Var'Unds'13:SortNextFuncIdxCell{},Var'Unds'14:SortTabIdsCell{},Lbl'-LT-'tabAddrs'-GT-'{}(VarMAP:SortMap{}),Var'Unds'15:SortMemIdsCell{},Var'Unds'16:SortMemAddrsCell{},Var'Unds'17:SortGlobIdsCell{},Var'Unds'18:SortGlobalAddrsCell{},Var'Unds'19:SortNextGlobIdxCell{})),VarDotVar4:SortModuleInstCellMap{})),Var'Unds'36:SortModuleInstancesCell{}),Var'Unds'23:SortNextModuleIdxCell{},Var'Unds'24:SortMainStoreCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),VarDotVar2:SortK{})),Var'Unds'20:SortValstackCell{},Var'Unds'33:SortCurFrameCell{},Var'Unds'21:SortModuleRegistryCell{},Var'Unds'22:SortModuleIdsCell{},Var'Unds'36:SortModuleInstancesCell{},Var'Unds'23:SortNextModuleIdxCell{},Var'Unds'24:SortMainStoreCell{},Var'Unds'25:SortDeterministicMemoryGrowthCell{},Var'Unds'26:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("876"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(876,10,883,30)"), UNIQUE'Unds'ID{}("ce869f8a7c12a4a1edae518e3f3e962651d501226d2cf7981b886764c8b14f9c")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{Val,KItem}(`undefined_WASM-DATA_Val`(.KList))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(feb718456211c88cc93d0e36258a25e0b7b6a83eacb29a5e810fd0722ac16416) contentStartColumn(10) contentStartLine(180) org.kframework.attributes.Location(Location(180,10,180,40)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortVal{}, SortKItem{}}(Lblundefined'Unds'WASM-DATA'Unds'Val{}()),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("180"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(180,10,180,40)"), UNIQUE'Unds'ID{}("feb718456211c88cc93d0e36258a25e0b7b6a83eacb29a5e810fd0722ac16416")]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{PlainInstr,KItem}(`unreachable_WASM_PlainInstr`(.KList))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(inj{Instr,KItem}(`trap_WASM_Instr`(.KList))~>DotVar2),_0,_1,_2,_3,_4,_5,_6,_7,_8),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ef91422acc0c38c31555bdad2a8be2ec7876ba7143ab8b59a359922dcedb18d) contentStartColumn(10) contentStartLine(317) org.kframework.attributes.Location(Location(317,10,317,42)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Lblunreachable'Unds'WASM'Unds'PlainInstr{}()),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInstr{}, SortKItem{}}(Lbltrap'Unds'WASM'Unds'Instr{}()),VarDotVar2:SortK{})),Var'Unds'0:SortValstackCell{},Var'Unds'1:SortCurFrameCell{},Var'Unds'2:SortModuleRegistryCell{},Var'Unds'3:SortModuleIdsCell{},Var'Unds'4:SortModuleInstancesCell{},Var'Unds'5:SortNextModuleIdxCell{},Var'Unds'6:SortMainStoreCell{},Var'Unds'7:SortDeterministicMemoryGrowthCell{},Var'Unds'8:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("317"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(317,10,317,42)"), UNIQUE'Unds'ID{}("7ef91422acc0c38c31555bdad2a8be2ec7876ba7143ab8b59a359922dcedb18d")]

// rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(#token("-1","Int") #as _1,E,signedBytes(.KList))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(#token("1","Int"),_1,E) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(60d7bda596db9e87d63f81125a28bb02fc9add44cbddb212e5171a17c3521299) contentStartColumn(8) contentStartLine(819) org.kframework.attributes.Location(Location(819,8,819,67)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBytes{},R} (
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(\and{SortInt{}}(\dv{SortInt{}}("-1"),Var'Unds'1:SortInt{}),VarE:SortEndianness{},LblsignedBytes{}()),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(\dv{SortInt{}}("1"),Var'Unds'1:SortInt{},VarE:SortEndianness{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("819"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(819,8,819,67)"), UNIQUE'Unds'ID{}("60d7bda596db9e87d63f81125a28bb02fc9add44cbddb212e5171a17c3521299")]

// rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(I,E,signedBytes(.KList))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(`_/Int_`(`_+Int_`(`log2Int(_)_INT-COMMON_Int_Int`(I),#token("9","Int")),#token("8","Int")),I,E) requires `_>Int_`(I,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(282f02a43cf3ca5ff2eba57d1d24e479f8a6334433147206ed55a685a597fdb9) contentStartColumn(8) contentStartLine(815) org.kframework.attributes.Location(Location(815,8,816,22)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBytes{},R} (
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(VarI:SortInt{},VarE:SortEndianness{},LblsignedBytes{}()),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(Lbl'UndsSlsh'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI:SortInt{}),\dv{SortInt{}}("9")),\dv{SortInt{}}("8")),VarI:SortInt{},VarE:SortEndianness{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("815"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(815,8,816,22)"), UNIQUE'Unds'ID{}("282f02a43cf3ca5ff2eba57d1d24e479f8a6334433147206ed55a685a597fdb9")]

// rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(I,E,signedBytes(.KList))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(`_/Int_`(`_+Int_`(`log2Int(_)_INT-COMMON_Int_Int`(`~Int_`(I)),#token("9","Int")),#token("8","Int")),I,E) requires `_<Int_`(I,#token("-1","Int")) ensures #token("true","Bool") [UNIQUE_ID(a58af0c809ed5ae432af0f454cd370e1209197b84128e239a7afb779a439e9da) contentStartColumn(8) contentStartLine(817) org.kframework.attributes.Location(Location(817,8,818,23)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("-1")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBytes{},R} (
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(VarI:SortInt{},VarE:SortEndianness{},LblsignedBytes{}()),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(Lbl'UndsSlsh'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(Lbl'Tild'Int'Unds'{}(VarI:SortInt{})),\dv{SortInt{}}("9")),\dv{SortInt{}}("8")),VarI:SortInt{},VarE:SortEndianness{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("817"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(817,8,818,23)"), UNIQUE'Unds'ID{}("a58af0c809ed5ae432af0f454cd370e1209197b84128e239a7afb779a439e9da")]

// rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(I,E,unsignedBytes(.KList))=>`Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Int_Endianness`(`_/Int_`(`_+Int_`(`log2Int(_)_INT-COMMON_Int_Int`(I),#token("8","Int")),#token("8","Int")),I,E) requires `_>Int_`(I,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(9d6165ac6318590783dbaff420ad6b52abd9e5484cb9cfd66d05443dfb800078) contentStartColumn(8) contentStartLine(812) org.kframework.attributes.Location(Location(812,8,813,22)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBytes{},R} (
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(VarI:SortInt{},VarE:SortEndianness{},LblunsignedBytes{}()),
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Int'Unds'Endianness{}(Lbl'UndsSlsh'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI:SortInt{}),\dv{SortInt{}}("8")),\dv{SortInt{}}("8")),VarI:SortInt{},VarE:SortEndianness{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("812"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(812,8,813,22)"), UNIQUE'Unds'ID{}("9d6165ac6318590783dbaff420ad6b52abd9e5484cb9cfd66d05443dfb800078")]

// rule `Int2Bytes(_,_,_)_BYTES-HOOKED_Bytes_Int_Endianness_Signedness`(#token("0","Int"),_0,_1)=>`.Bytes_BYTES-HOOKED_Bytes`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4e0a73c5fb57b9aa2f01e3b1a8396e0109bd02c78243d519fc1e61aec0fb3e45) contentStartColumn(8) contentStartLine(814) org.kframework.attributes.Location(Location(814,8,814,48)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBytes{},R} (
        LblInt2Bytes'LParUndsCommUndsCommUndsRParUnds'BYTES-HOOKED'Unds'Bytes'Unds'Int'Unds'Endianness'Unds'Signedness{}(\dv{SortInt{}}("0"),Var'Unds'0:SortEndianness{},Var'Unds'1:SortSignedness{}),
        Lbl'Stop'Bytes'Unds'BYTES-HOOKED'Unds'Bytes{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("814"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(814,8,814,48)"), UNIQUE'Unds'ID{}("4e0a73c5fb57b9aa2f01e3b1a8396e0109bd02c78243d519fc1e61aec0fb3e45")]

// rule `Map:lookup`(`Map:update`(MAP,KEY,VAL),KEY)=>VAL requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6ce3386daa6c5c0a6cfccde4004c9eb0326151a602b810dc31005530c6f4d503) contentStartColumn(10) contentStartLine(239) org.kframework.attributes.Location(Location(239,10,239,44)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKItem{},R} (
        LblMap'Coln'lookup{}(LblMap'Coln'update{}(VarMAP:SortMap{},VarKEY:SortKItem{},VarVAL:SortKItem{}),VarKEY:SortKItem{}),
        VarVAL:SortKItem{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("239"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(239,10,239,44)"), simplification{}(), UNIQUE'Unds'ID{}("6ce3386daa6c5c0a6cfccde4004c9eb0326151a602b810dc31005530c6f4d503")]

// rule `_++Defns__WRC20_Defns_Defns_Defns`(`___WASM_Defns_Defn_Defns`(D,DS),DS')=>`___WASM_Defns_Defn_Defns`(D,`_++Defns__WRC20_Defns_Defns_Defns`(DS,DS')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f52db4ca5238ac3aa53fa4d73d1da32f33f5eb3af87b96eeb944cae213757c13) contentStartColumn(10) contentStartLine(632) org.kframework.attributes.Location(Location(632,10,632,50)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'UndsPlusPlus'Defns'UndsUnds'WRC20'Unds'Defns'Unds'Defns'Unds'Defns{}(Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(VarD:SortDefn{},VarDS:SortDefns{}),VarDS'Apos':SortDefns{}),
        Lbl'UndsUndsUnds'WASM'Unds'Defns'Unds'Defn'Unds'Defns{}(VarD:SortDefn{},Lbl'UndsPlusPlus'Defns'UndsUnds'WRC20'Unds'Defns'Unds'Defns'Unds'Defns{}(VarDS:SortDefns{},VarDS'Apos':SortDefns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("632"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(632,10,632,50)"), UNIQUE'Unds'ID{}("f52db4ca5238ac3aa53fa4d73d1da32f33f5eb3af87b96eeb944cae213757c13")]

// rule `_++Defns__WRC20_Defns_Defns_Defns`(inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),DS')=>DS' requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(152c2e6cb3ba42d8e5401c46a02f396c1035849dc95ec09746b229fdbc32d445) contentStartColumn(10) contentStartLine(631) org.kframework.attributes.Location(Location(631,10,631,35)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lbl'UndsPlusPlus'Defns'UndsUnds'WRC20'Unds'Defns'Unds'Defns'Unds'Defns{}(inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),VarDS'Apos':SortDefns{}),
        VarDS'Apos':SortDefns{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("631"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(631,10,631,35)"), UNIQUE'Unds'ID{}("152c2e6cb3ba42d8e5401c46a02f396c1035849dc95ec09746b229fdbc32d445")]

// rule `_++__WASM-DATA_ValStack_ValStack_ValStack`(`.ValStack_WASM-DATA_ValStack`(.KList),VALSTACK')=>VALSTACK' requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dffa60b7120723f9fd90411eb24e5b17a75746ff973538716321a3e30d82174c) contentStartColumn(10) contentStartLine(342) org.kframework.attributes.Location(Location(342,10,342,51)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}(),VarVALSTACK'Apos':SortValStack{}),
        VarVALSTACK'Apos':SortValStack{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("342"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(342,10,342,51)"), UNIQUE'Unds'ID{}("dffa60b7120723f9fd90411eb24e5b17a75746ff973538716321a3e30d82174c")]

// rule `_++__WASM-DATA_ValStack_ValStack_ValStack`(`_:__WASM-DATA_ValStack_Val_ValStack`(SI,VALSTACK),VALSTACK')=>`_:__WASM-DATA_ValStack_Val_ValStack`(SI,`_++__WASM-DATA_ValStack_ValStack_ValStack`(VALSTACK,VALSTACK')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f81e29e049f431be99d07b32b9a7291cdc011170f20866e6c99f89b325dbd809) contentStartColumn(10) contentStartLine(343) org.kframework.attributes.Location(Location(343,10,343,70)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarSI:SortVal{},VarVALSTACK:SortValStack{}),VarVALSTACK'Apos':SortValStack{}),
        Lbl'UndsColnUndsUnds'WASM-DATA'Unds'ValStack'Unds'Val'Unds'ValStack{}(VarSI:SortVal{},Lbl'UndsPlusPlusUndsUnds'WASM-DATA'Unds'ValStack'Unds'ValStack'Unds'ValStack{}(VarVALSTACK:SortValStack{},VarVALSTACK'Apos':SortValStack{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("343"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(343,10,343,70)"), UNIQUE'Unds'ID{}("f81e29e049f431be99d07b32b9a7291cdc011170f20866e6c99f89b325dbd809")]

// rule `_+Int_`(X,#token("0","Int"))=>X requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e91c75f9434548de9db66f515912cb2af151b4af6d902d9bb1db31e1eeec50eb) contentStartColumn(10) contentStartLine(208) org.kframework.attributes.Location(Location(208,10,208,24)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},\dv{SortInt{}}("0")),
        VarX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("208"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(208,10,208,24)"), simplification{}(), UNIQUE'Unds'ID{}("e91c75f9434548de9db66f515912cb2af151b4af6d902d9bb1db31e1eeec50eb")]

// rule `_+Int_`(#token("0","Int"),X)=>X requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(759b151ccd73dc73ce614a7eba49fb68884ce27cd396c15f53be3682ca8348ee) contentStartColumn(10) contentStartLine(209) org.kframework.attributes.Location(Location(209,10,209,24)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("0"),VarX:SortInt{}),
        VarX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("209"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(209,10,209,24)"), simplification{}(), UNIQUE'Unds'ID{}("759b151ccd73dc73ce614a7eba49fb68884ce27cd396c15f53be3682ca8348ee")]

// rule `_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList),VTYPES)=>VTYPES requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3601ba0c0f85f71c0a91a4d4395e49a879b3fd88738b7f14e7b8861589030651) contentStartColumn(10) contentStartLine(167) org.kframework.attributes.Location(Location(167,10,167,49)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}(),VarVTYPES:SortValTypes{}),
        VarVTYPES:SortValTypes{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("167"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(167,10,167,49)"), UNIQUE'Unds'ID{}("3601ba0c0f85f71c0a91a4d4395e49a879b3fd88738b7f14e7b8861589030651")]

// rule `_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(VT,VTYPES),VTYPES')=>`___WASM-DATA_ValTypes_ValType_ValTypes`(VT,`_+__WASM-DATA_ValTypes_ValTypes_ValTypes`(VTYPES,VTYPES')) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dff135660573c56c341b10c6f46f5e6c7a01cedb39e8ed1482d11c8bf858aabc) contentStartColumn(10) contentStartLine(168) org.kframework.attributes.Location(Location(168,10,168,64)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(VarVT:SortValType{},VarVTYPES:SortValTypes{}),VarVTYPES'Apos':SortValTypes{}),
        Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(VarVT:SortValType{},Lbl'UndsPlusUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes'Unds'ValTypes{}(VarVTYPES:SortValTypes{},VarVTYPES'Apos':SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("168"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,10,168,64)"), UNIQUE'Unds'ID{}("dff135660573c56c341b10c6f46f5e6c7a01cedb39e8ed1482d11c8bf858aabc")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{FValType,AValType}(`f32_WASM-DATA_FValType`(.KList) #as _2),inj{Cvtf64Op,CvtOp}(`demote_f64_WASM-NUMERIC_Cvtf64Op`(.KList)),F)=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(_2,F)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aceec464a7b312807afb69488e54f815e74f5467979190bf3548da5881ca6c36) contentStartColumn(10) contentStartLine(391) org.kframework.attributes.Location(Location(391,10,391,50)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortFValType{}, SortAValType{}}(\and{SortFValType{}}(Lblf32'Unds'WASM-DATA'Unds'FValType{}(),Var'Unds'2:SortFValType{})),inj{SortCvtf64Op{}, SortCvtOp{}}(Lbldemote'Unds'f64'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}()),VarF:SortNumber{}),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(Var'Unds'2:SortFValType{},VarF:SortNumber{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("391"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(391,10,391,50)"), UNIQUE'Unds'ID{}("aceec464a7b312807afb69488e54f815e74f5467979190bf3548da5881ca6c36")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{FValType,AValType}(`f64_WASM-DATA_FValType`(.KList) #as _2),inj{Cvtf32Op,CvtOp}(`promote_f32_WASM-NUMERIC_Cvtf32Op`(.KList)),F)=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(_2,F)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(920c5bc73e1401b0c882a1475c6c26a7a9777612b4b625390e844ab184acb1e9) contentStartColumn(10) contentStartLine(387) org.kframework.attributes.Location(Location(387,10,387,50)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortFValType{}, SortAValType{}}(\and{SortFValType{}}(Lblf64'Unds'WASM-DATA'Unds'FValType{}(),Var'Unds'2:SortFValType{})),inj{SortCvtf32Op{}, SortCvtOp{}}(Lblpromote'Unds'f32'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}()),VarF:SortNumber{}),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(Var'Unds'2:SortFValType{},VarF:SortNumber{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("387"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(387,10,387,50)"), UNIQUE'Unds'ID{}("920c5bc73e1401b0c882a1475c6c26a7a9777612b4b625390e844ab184acb1e9")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(`i32_WASM-DATA_IValType`(.KList) #as _2),inj{Cvti64Op,CvtOp}(`wrap_i64_WASM-NUMERIC_Cvti64Op`(.KList)),inj{Int,Number}(I))=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(_2,I))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c3d583402b4c74ed9b43a2c6a40cc4ada053470e78f9fbddec4e2bf3bdaedc40) contentStartColumn(10) contentStartLine(355) org.kframework.attributes.Location(Location(355,10,355,46)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(\and{SortIValType{}}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Var'Unds'2:SortIValType{})),inj{SortCvti64Op{}, SortCvtOp{}}(Lblwrap'Unds'i64'Unds'WASM-NUMERIC'Unds'Cvti64Op{}()),inj{SortInt{}, SortNumber{}}(VarI:SortInt{})),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Var'Unds'2:SortIValType{},VarI:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("355"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(355,10,355,46)"), UNIQUE'Unds'ID{}("c3d583402b4c74ed9b43a2c6a40cc4ada053470e78f9fbddec4e2bf3bdaedc40")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(`i64_WASM-DATA_IValType`(.KList) #as _2),inj{Cvti32Op,CvtOp}(`extend_i32_s_WASM-NUMERIC_Cvti32Op`(.KList)),inj{Int,Number}(I))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(_2,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(_2,`#signed(_,_)_WASM-DATA_Int_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),I)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f032b5ee330922fe9ec06c640eb9987c1412ee7e6c32ffa0822af0f1411d7117) contentStartColumn(10) contentStartLine(364) org.kframework.attributes.Location(Location(364,10,364,77)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(\and{SortIValType{}}(Lbli64'Unds'WASM-DATA'Unds'IValType{}(),Var'Unds'2:SortIValType{})),inj{SortCvti32Op{}, SortCvtOp{}}(Lblextend'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}()),inj{SortInt{}, SortNumber{}}(VarI:SortInt{})),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Var'Unds'2:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Var'Unds'2:SortIValType{},Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarI:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("364"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(364,10,364,77)"), UNIQUE'Unds'ID{}("f032b5ee330922fe9ec06c640eb9987c1412ee7e6c32ffa0822af0f1411d7117")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(`i64_WASM-DATA_IValType`(.KList) #as _2),inj{Cvti32Op,CvtOp}(`extend_i32_u_WASM-NUMERIC_Cvti32Op`(.KList)),inj{Int,Number}(I))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(_2,I)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(92e1053a76b4fd5ffecb4d23ab94c8a6c4d753cafcf5fac856006aa3371556e4) contentStartColumn(10) contentStartLine(363) org.kframework.attributes.Location(Location(363,10,363,47)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(\and{SortIValType{}}(Lbli64'Unds'WASM-DATA'Unds'IValType{}(),Var'Unds'2:SortIValType{})),inj{SortCvti32Op{}, SortCvtOp{}}(Lblextend'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}()),inj{SortInt{}, SortNumber{}}(VarI:SortInt{})),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Var'Unds'2:SortIValType{},VarI:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("363"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(363,10,363,47)"), UNIQUE'Unds'ID{}("92e1053a76b4fd5ffecb4d23ab94c8a6c4d753cafcf5fac856006aa3371556e4")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{FValType,AValType}(FTYPE),inj{Cvti32Op,CvtOp}(`convert_i32_s_WASM-NUMERIC_Cvti32Op`(.KList)),inj{Int,Number}(I))=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,inj{Int,Number}(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),I)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b8eb931d46dba8b818adb4806ccd7dfd89120123409ee02c2bd97c95ce1dbaa4) contentStartColumn(10) contentStartLine(372) org.kframework.attributes.Location(Location(372,10,372,74)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortFValType{}, SortAValType{}}(VarFTYPE:SortFValType{}),inj{SortCvti32Op{}, SortCvtOp{}}(Lblconvert'Unds'i32'Unds's'Unds'WASM-NUMERIC'Unds'Cvti32Op{}()),inj{SortInt{}, SortNumber{}}(VarI:SortInt{})),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},inj{SortInt{}, SortNumber{}}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarI:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("372"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(372,10,372,74)"), UNIQUE'Unds'ID{}("b8eb931d46dba8b818adb4806ccd7dfd89120123409ee02c2bd97c95ce1dbaa4")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{FValType,AValType}(FTYPE),inj{Cvti32Op,CvtOp}(`convert_i32_u_WASM-NUMERIC_Cvti32Op`(.KList)),inj{Int,Number}(I) #as _4)=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,_4)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(86ec6d88fdd698a52f25730a42acfcc359fa5fbdcfc7e7b8dd8d935a1229f836) contentStartColumn(10) contentStartLine(373) org.kframework.attributes.Location(Location(373,10,373,60)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortFValType{}, SortAValType{}}(VarFTYPE:SortFValType{}),inj{SortCvti32Op{}, SortCvtOp{}}(Lblconvert'Unds'i32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti32Op{}()),\and{SortNumber{}}(inj{SortInt{}, SortNumber{}}(VarI:SortInt{}),Var'Unds'4:SortNumber{})),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},Var'Unds'4:SortNumber{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("373"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,10,373,60)"), UNIQUE'Unds'ID{}("86ec6d88fdd698a52f25730a42acfcc359fa5fbdcfc7e7b8dd8d935a1229f836")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{FValType,AValType}(FTYPE),inj{Cvti64Op,CvtOp}(`convert_i64_s_WASM-NUMERIC_Cvti64Op`(.KList)),inj{Int,Number}(I))=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,inj{Int,Number}(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(`i64_WASM-DATA_IValType`(.KList),I)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d16da84b31616264c0724c078c2294ae97546b43669942287a531dae31384703) contentStartColumn(10) contentStartLine(377) org.kframework.attributes.Location(Location(377,10,377,74)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortFValType{}, SortAValType{}}(VarFTYPE:SortFValType{}),inj{SortCvti64Op{}, SortCvtOp{}}(Lblconvert'Unds'i64'Unds's'Unds'WASM-NUMERIC'Unds'Cvti64Op{}()),inj{SortInt{}, SortNumber{}}(VarI:SortInt{})),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},inj{SortInt{}, SortNumber{}}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(Lbli64'Unds'WASM-DATA'Unds'IValType{}(),VarI:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("377"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(377,10,377,74)"), UNIQUE'Unds'ID{}("d16da84b31616264c0724c078c2294ae97546b43669942287a531dae31384703")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{FValType,AValType}(FTYPE),inj{Cvti64Op,CvtOp}(`convert_i64_u_WASM-NUMERIC_Cvti64Op`(.KList)),inj{Int,Number}(I) #as _4)=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,_4)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5f56f0b0e8e620f8ccb2095f895b43c9c9c6ea2af941a4cc3b147e7e1652490b) contentStartColumn(10) contentStartLine(378) org.kframework.attributes.Location(Location(378,10,378,60)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortFValType{}, SortAValType{}}(VarFTYPE:SortFValType{}),inj{SortCvti64Op{}, SortCvtOp{}}(Lblconvert'Unds'i64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvti64Op{}()),\and{SortNumber{}}(inj{SortInt{}, SortNumber{}}(VarI:SortInt{}),Var'Unds'4:SortNumber{})),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},Var'Unds'4:SortNumber{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("378"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(378,10,378,60)"), UNIQUE'Unds'ID{}("5f56f0b0e8e620f8ccb2095f895b43c9c9c6ea2af941a4cc3b147e7e1652490b")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(ITYPE),inj{Cvtf32Op,CvtOp}(`trunc_f32_s_WASM-NUMERIC_Cvtf32Op`(.KList)),inj{Float,Number}(F))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))))) requires `notBool_`(`_orBool__BOOL_Bool_Bool_Bool`(`_orBool__BOOL_Bool_Bool_Bool`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))),`_>Int_`(`_-Int_`(#token("0","Int"),`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE)))) ensures #token("true","Bool") [UNIQUE_ID(78e34f9a5e70e0303c55f4fe1ebb6d55e47aead0ba3fb4fd3786994c76859055) contentStartColumn(10) contentStartLine(404) org.kframework.attributes.Location(Location(404,10,405,159)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-GT-'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(VarITYPE:SortIValType{}),inj{SortCvtf32Op{}, SortCvtOp{}}(Lbltrunc'Unds'f32'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}()),inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("404"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(404,10,405,159)"), UNIQUE'Unds'ID{}("78e34f9a5e70e0303c55f4fe1ebb6d55e47aead0ba3fb4fd3786994c76859055")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(ITYPE),inj{Cvtf32Op,CvtOp}(`trunc_f32_s_WASM-NUMERIC_Cvtf32Op`(.KList)),inj{Float,Number}(F))=>`undefined_WASM-DATA_Val`(.KList) requires `_orBool__BOOL_Bool_Bool_Bool`(`_orBool__BOOL_Bool_Bool_Bool`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))),`_>Int_`(`_-Int_`(#token("0","Int"),`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(86592872d215fec0669079e9101961824b4e3c0f0aadc355cc17047b5f16ab3b) contentStartColumn(10) contentStartLine(399) org.kframework.attributes.Location(Location(399,10,400,149)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-GT-'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(VarITYPE:SortIValType{}),inj{SortCvtf32Op{}, SortCvtOp{}}(Lbltrunc'Unds'f32'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}()),inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("399"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(399,10,400,149)"), UNIQUE'Unds'ID{}("86592872d215fec0669079e9101961824b4e3c0f0aadc355cc17047b5f16ab3b")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(ITYPE),inj{Cvtf32Op,CvtOp}(`trunc_f32_u_WASM-NUMERIC_Cvtf32Op`(.KList)),inj{Float,Number}(F))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)))) requires `notBool_`(`_orBool__BOOL_Bool_Bool_Bool`(`_orBool__BOOL_Bool_Bool_Bool`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))),`_<Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),#token("0","Int")))) ensures #token("true","Bool") [UNIQUE_ID(1a4567707fe7f08e93240c21895967467901fb9588218e98a5086debb6ce8d9e) contentStartColumn(10) contentStartLine(406) org.kframework.attributes.Location(Location(406,10,407,140)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-LT-'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),\dv{SortInt{}}("0")))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(VarITYPE:SortIValType{}),inj{SortCvtf32Op{}, SortCvtOp{}}(Lbltrunc'Unds'f32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}()),inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("406"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(406,10,407,140)"), UNIQUE'Unds'ID{}("1a4567707fe7f08e93240c21895967467901fb9588218e98a5086debb6ce8d9e")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(ITYPE),inj{Cvtf32Op,CvtOp}(`trunc_f32_u_WASM-NUMERIC_Cvtf32Op`(.KList)),inj{Float,Number}(F))=>`undefined_WASM-DATA_Val`(.KList) requires `_orBool__BOOL_Bool_Bool_Bool`(`_orBool__BOOL_Bool_Bool_Bool`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))),`_<Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(24ad0f5a6314754f46c0d0eef9b7dee6dfbc888d99c646d1b17a2a6df183b138) contentStartColumn(10) contentStartLine(401) org.kframework.attributes.Location(Location(401,10,402,130)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-LT-'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(VarITYPE:SortIValType{}),inj{SortCvtf32Op{}, SortCvtOp{}}(Lbltrunc'Unds'f32'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf32Op{}()),inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("401"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(401,10,402,130)"), UNIQUE'Unds'ID{}("24ad0f5a6314754f46c0d0eef9b7dee6dfbc888d99c646d1b17a2a6df183b138")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(ITYPE),inj{Cvtf64Op,CvtOp}(`trunc_f64_s_WASM-NUMERIC_Cvtf64Op`(.KList)),inj{Float,Number}(F))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))))) requires `notBool_`(`_orBool__BOOL_Bool_Bool_Bool`(`_orBool__BOOL_Bool_Bool_Bool`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))),`_>Int_`(`_-Int_`(#token("0","Int"),`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE)))) ensures #token("true","Bool") [UNIQUE_ID(1590f6c17c5a4c6e763c3ccd0e2b134c59c14e03a8f6c5ba0fae6eda9a440682) contentStartColumn(10) contentStartLine(416) org.kframework.attributes.Location(Location(416,10,417,159)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-GT-'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(VarITYPE:SortIValType{}),inj{SortCvtf64Op{}, SortCvtOp{}}(Lbltrunc'Unds'f64'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}()),inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("416"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(416,10,417,159)"), UNIQUE'Unds'ID{}("1590f6c17c5a4c6e763c3ccd0e2b134c59c14e03a8f6c5ba0fae6eda9a440682")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(ITYPE),inj{Cvtf64Op,CvtOp}(`trunc_f64_s_WASM-NUMERIC_Cvtf64Op`(.KList)),inj{Float,Number}(F))=>`undefined_WASM-DATA_Val`(.KList) requires `_orBool__BOOL_Bool_Bool_Bool`(`_orBool__BOOL_Bool_Bool_Bool`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))),`_>Int_`(`_-Int_`(#token("0","Int"),`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(d2eadddf8ce37a76e3ed2c25483c0e7957bcccf1f7822705e93a4700dda0607e) contentStartColumn(10) contentStartLine(411) org.kframework.attributes.Location(Location(411,10,412,149)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-GT-'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(VarITYPE:SortIValType{}),inj{SortCvtf64Op{}, SortCvtOp{}}(Lbltrunc'Unds'f64'Unds's'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}()),inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("411"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(411,10,412,149)"), UNIQUE'Unds'ID{}("d2eadddf8ce37a76e3ed2c25483c0e7957bcccf1f7822705e93a4700dda0607e")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(ITYPE),inj{Cvtf64Op,CvtOp}(`trunc_f64_u_WASM-NUMERIC_Cvtf64Op`(.KList)),inj{Float,Number}(F))=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)))) requires `notBool_`(`_orBool__BOOL_Bool_Bool_Bool`(`_orBool__BOOL_Bool_Bool_Bool`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))),`_<Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),#token("0","Int")))) ensures #token("true","Bool") [UNIQUE_ID(71d6c43f3c8c8c9c06cbd08aae811f1985bda884dbb9096321816c04036e2f87) contentStartColumn(10) contentStartLine(418) org.kframework.attributes.Location(Location(418,10,419,140)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-LT-'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),\dv{SortInt{}}("0")))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(VarITYPE:SortIValType{}),inj{SortCvtf64Op{}, SortCvtOp{}}(Lbltrunc'Unds'f64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}()),inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("418"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(418,10,419,140)"), UNIQUE'Unds'ID{}("71d6c43f3c8c8c9c06cbd08aae811f1985bda884dbb9096321816c04036e2f87")]

// rule `_.___WASM-NUMERIC_Val_AValType_CvtOp_Number`(inj{IValType,AValType}(ITYPE),inj{Cvtf64Op,CvtOp}(`trunc_f64_u_WASM-NUMERIC_Cvtf64Op`(.KList)),inj{Float,Number}(F))=>`undefined_WASM-DATA_Val`(.KList) requires `_orBool__BOOL_Bool_Bool_Bool`(`_orBool__BOOL_Bool_Bool_Bool`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F),`_>=Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))),`_<Int_`(`Float2Int(_)_FLOAT_Int_Float`(`truncFloat(_)_WASM-NUMERIC_Float_Float`(F)),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(6bb2b4b3b0bb7ed9647b8625fa95dbae789748652fbfd734472e560f211af77d) contentStartColumn(10) contentStartLine(413) org.kframework.attributes.Location(Location(413,10,414,130)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),Lbl'Unds-GT-Eqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-LT-'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'AValType'Unds'CvtOp'Unds'Number{}(inj{SortIValType{}, SortAValType{}}(VarITYPE:SortIValType{}),inj{SortCvtf64Op{}, SortCvtOp{}}(Lbltrunc'Unds'f64'Unds'u'Unds'WASM-NUMERIC'Unds'Cvtf64Op{}()),inj{SortFloat{}, SortNumber{}}(VarF:SortFloat{})),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("413"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(413,10,414,130)"), UNIQUE'Unds'ID{}("6bb2b4b3b0bb7ed9647b8625fa95dbae789748652fbfd734472e560f211af77d")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`abs_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`absFloat(_)_FLOAT_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(221a7b5e2eb3162338d3bce9a6cd6dec6b39b46be3b37c744af355f55b7073b1) contentStartColumn(10) contentStartLine(88) org.kframework.attributes.Location(Location(88,10,88,55)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lblabs'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblabsFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("88"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(88,10,88,55)"), UNIQUE'Unds'ID{}("221a7b5e2eb3162338d3bce9a6cd6dec6b39b46be3b37c744af355f55b7073b1")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`ceil_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`ceilFloat(_)_FLOAT_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b35df9c05a08a579e7a65fc21859d4ef7553ad2d9aa271227526bafea6208810) contentStartColumn(10) contentStartLine(92) org.kframework.attributes.Location(Location(92,10,92,55)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lblceil'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblceilFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("92"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(92,10,92,55)"), UNIQUE'Unds'ID{}("b35df9c05a08a579e7a65fc21859d4ef7553ad2d9aa271227526bafea6208810")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`floor_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`floorFloat(_)_FLOAT_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bebdeacbbaacffde91d3ce8f0ba4af8f6b412d2470d2207f3c721f66bb4096fc) contentStartColumn(10) contentStartLine(91) org.kframework.attributes.Location(Location(91,10,91,55)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lblfloor'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblfloorFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("91"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(91,10,91,55)"), UNIQUE'Unds'ID{}("bebdeacbbaacffde91d3ce8f0ba4af8f6b412d2470d2207f3c721f66bb4096fc")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`nearest_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`#round(_,_)_WASM-DATA_FVal_FValType_Number`(FTYPE,inj{Int,Number}(`Float2Int(_)_FLOAT_Int_Float`(F)))) requires `_andBool_`(`notBool_`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F)),`_orBool__BOOL_Bool_Bool_Bool`(`_=/=Int_`(`Float2Int(_)_FLOAT_Int_Float`(F),#token("0","Int")),`notBool_`(`signFloat(_)_FLOAT_Bool_Float`(F)))) ensures #token("true","Bool") [UNIQUE_ID(c28e8b881e182eeb1355ee2a76a30c98ee41beee8aa454da173dfec77e901901) contentStartColumn(10) contentStartLine(95) org.kframework.attributes.Location(Location(95,10,95,158)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(LblnotBool'Unds'{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{})),Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}),\dv{SortInt{}}("0")),LblnotBool'Unds'{}(LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{})))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'Hash'round'LParUndsCommUndsRParUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Number{}(VarFTYPE:SortFValType{},inj{SortInt{}, SortNumber{}}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("95"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(95,10,95,158)"), UNIQUE'Unds'ID{}("c28e8b881e182eeb1355ee2a76a30c98ee41beee8aa454da173dfec77e901901")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`nearest_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,F)) requires `#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F) ensures #token("true","Bool") [UNIQUE_ID(acac9210fe28ff7539e8bdadbaa048721406d96818675565a6fa995df451ae86) contentStartColumn(10) contentStartLine(94) org.kframework.attributes.Location(Location(94,10,94,88)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarF:SortFloat{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("94"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(94,10,94,88)"), UNIQUE'Unds'ID{}("acac9210fe28ff7539e8bdadbaa048721406d96818675565a6fa995df451ae86")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`nearest_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,#token("-0.0","Float"))) requires `_andBool_`(`_andBool_`(`notBool_`(`#isInfinityOrNaN(_)_WASM-NUMERIC_Bool_Float`(F)),`_==Int_`(`Float2Int(_)_FLOAT_Int_Float`(F),#token("0","Int"))),`signFloat(_)_FLOAT_Bool_Float`(F)) ensures #token("true","Bool") [UNIQUE_ID(b7406fb972673508c6dacba8b821d1d8b2618e14d144a736aa5944157cb3bf63) contentStartColumn(10) contentStartLine(96) org.kframework.attributes.Location(Location(96,10,96,148)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblnotBool'Unds'{}(Lbl'Hash'isInfinityOrNaN'LParUndsRParUnds'WASM-NUMERIC'Unds'Bool'Unds'Float{}(VarF:SortFloat{})),Lbl'UndsEqlsEqls'Int'Unds'{}(LblFloat2Int'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}),\dv{SortInt{}}("0"))),LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lblnearest'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},\dv{SortFloat{}}("-0.0")))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("96"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(96,10,96,148)"), UNIQUE'Unds'ID{}("b7406fb972673508c6dacba8b821d1d8b2618e14d144a736aa5944157cb3bf63")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`neg_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`--Float__FLOAT_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2f8ca71edf9d7bb699992176af704d8cf2df3dbb978ad78da6661301fb1fa4db) contentStartColumn(10) contentStartLine(89) org.kframework.attributes.Location(Location(89,10,89,54)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lblneg'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl--Float'UndsUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("89"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(89,10,89,54)"), UNIQUE'Unds'ID{}("2f8ca71edf9d7bb699992176af704d8cf2df3dbb978ad78da6661301fb1fa4db")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`sqrt_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`sqrtFloat(_)_FLOAT_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2f02822d7a8949e4e8e8784ac4c5405e7ee181e1140ad0f902f19c311e1d4475) contentStartColumn(10) contentStartLine(90) org.kframework.attributes.Location(Location(90,10,90,55)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lblsqrt'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblsqrtFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("90"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(90,10,90,55)"), UNIQUE'Unds'ID{}("2f02822d7a8949e4e8e8784ac4c5405e7ee181e1140ad0f902f19c311e1d4475")]

// rule `_.___WASM-NUMERIC_Val_FValType_FUnOp_Float`(FTYPE,`trunc_WASM-NUMERIC_FUnOp`(.KList),F)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`truncFloat(_)_WASM-NUMERIC_Float_Float`(F))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(66f3ed6eaf3cc4b0c1ce26aa44e4a2ee5cd779af8b8d5eb68491cf111a5429e3) contentStartColumn(10) contentStartLine(93) org.kframework.attributes.Location(Location(93,10,93,55)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FUnOp'Unds'Float{}(VarFTYPE:SortFValType{},Lbltrunc'Unds'WASM-NUMERIC'Unds'FUnOp{}(),VarF:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("93"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(93,10,93,55)"), UNIQUE'Unds'ID{}("66f3ed6eaf3cc4b0c1ce26aa44e4a2ee5cd779af8b8d5eb68491cf111a5429e3")]

// rule `_.___WASM-NUMERIC_Val_IValType_IUnOp_Int`(ITYPE,`clz_WASM-NUMERIC_IUnOp`(.KList),I1)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_-Int_`(`#width(_)_WASM-DATA_Int_IValType`(ITYPE),`#minWidth(_)_WASM-NUMERIC_Int_Int`(I1)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8e4715a1e0b431ca3a071c4e2dd117e595d5ff33bd8cb7169828e689e19c09ae) contentStartColumn(10) contentStartLine(39) org.kframework.attributes.Location(Location(39,10,39,73)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IUnOp'Unds'Int{}(VarITYPE:SortIValType{},Lblclz'Unds'WASM-NUMERIC'Unds'IUnOp{}(),VarI1:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds'-Int'Unds'{}(Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),Lbl'Hash'minWidth'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(VarI1:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("39"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,10,39,73)"), UNIQUE'Unds'ID{}("8e4715a1e0b431ca3a071c4e2dd117e595d5ff33bd8cb7169828e689e19c09ae")]

// rule `_.___WASM-NUMERIC_Val_IValType_IUnOp_Int`(ITYPE,`ctz_WASM-NUMERIC_IUnOp`(.KList),I1)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(I1,#token("0","Int")),`#width(_)_WASM-DATA_Int_IValType`(ITYPE),`#ctz(_)_WASM-NUMERIC_Int_Int`(I1)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dea9208dd87eca90da41ede907dcce87c61b4425371cdb247fcf02fc7c4827e6) contentStartColumn(10) contentStartLine(40) org.kframework.attributes.Location(Location(40,10,40,94)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IUnOp'Unds'Int{}(VarITYPE:SortIValType{},Lblctz'Unds'WASM-NUMERIC'Unds'IUnOp{}(),VarI1:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},\dv{SortInt{}}("0")),Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),Lbl'Hash'ctz'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(VarI1:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("40"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,10,40,94)"), UNIQUE'Unds'ID{}("dea9208dd87eca90da41ede907dcce87c61b4425371cdb247fcf02fc7c4827e6")]

// rule `_.___WASM-NUMERIC_Val_IValType_IUnOp_Int`(ITYPE,`popcnt_WASM-NUMERIC_IUnOp`(.KList),I1)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#popcnt(_)_WASM-NUMERIC_Int_Int`(I1))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3d14d8597c24ec27d3f3c2e101b2fc7c34d9d9523ee569c06b42c2b367df219f) contentStartColumn(10) contentStartLine(41) org.kframework.attributes.Location(Location(41,10,41,52)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IUnOp'Unds'Int{}(VarITYPE:SortIValType{},Lblpopcnt'Unds'WASM-NUMERIC'Unds'IUnOp{}(),VarI1:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'popcnt'LParUndsRParUnds'WASM-NUMERIC'Unds'Int'Unds'Int{}(VarI1:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("41"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(41,10,41,52)"), UNIQUE'Unds'ID{}("3d14d8597c24ec27d3f3c2e101b2fc7c34d9d9523ee569c06b42c2b367df219f")]

// rule `_.___WASM-NUMERIC_Val_IValType_TestOp_Int`(_0,`eqz_WASM-NUMERIC_TestOp`(.KList),I)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_==Int_`(I,#token("0","Int"))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8e162d36498faea843f677b0ed64c8f24c4b3b114fcd8f857cfa6bca83aaed72) contentStartColumn(10) contentStartLine(255) org.kframework.attributes.Location(Location(255,10,255,47)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'TestOp'Unds'Int{}(Var'Unds'0:SortIValType{},Lbleqz'Unds'WASM-NUMERIC'Unds'TestOp{}(),VarI:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI:SortInt{},\dv{SortInt{}}("0")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("255"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(255,10,255,47)"), UNIQUE'Unds'ID{}("8e162d36498faea843f677b0ed64c8f24c4b3b114fcd8f857cfa6bca83aaed72")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,`copysign_WASM-NUMERIC_FBinOp`(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,F1)) requires `_==Bool_`(`signFloat(_)_FLOAT_Bool_Float`(F1),`signFloat(_)_FLOAT_Bool_Float`(F2)) ensures #token("true","Bool") [UNIQUE_ID(c573b511941e7d220073ed415e31efb5ab688ec0a6e416963c9dc4e12dda18dc) contentStartColumn(10) contentStartLine(234) org.kframework.attributes.Location(Location(234,10,234,119)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Bool'Unds'{}(LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF1:SortFloat{}),LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF2:SortFloat{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},VarF1:SortFloat{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("234"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(234,10,234,119)"), UNIQUE'Unds'ID{}("c573b511941e7d220073ed415e31efb5ab688ec0a6e416963c9dc4e12dda18dc")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,`copysign_WASM-NUMERIC_FBinOp`(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`--Float__FLOAT_Float_Float`(F1))) requires `_=/=Bool_`(`signFloat(_)_FLOAT_Bool_Float`(F1),`signFloat(_)_FLOAT_Bool_Float`(F2)) ensures #token("true","Bool") [UNIQUE_ID(f5a21ebc2b54171f3206f427213761a221f2babcaebb66ce73feea93f0e7e57d) contentStartColumn(10) contentStartLine(235) org.kframework.attributes.Location(Location(235,10,235,119)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF1:SortFloat{}),LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF2:SortFloat{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},Lblcopysign'Unds'WASM-NUMERIC'Unds'FBinOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl--Float'UndsUnds'FLOAT'Unds'Float'Unds'Float{}(VarF1:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("235"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(235,10,235,119)"), UNIQUE'Unds'ID{}("f5a21ebc2b54171f3206f427213761a221f2babcaebb66ce73feea93f0e7e57d")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,`div_WASM-NUMERIC_FBinOp`(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`_/Float__FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3cc2bd84664d64fd64bd2e24e56980abd9ab23438f437e017dd70cecc04abb31) contentStartColumn(10) contentStartLine(231) org.kframework.attributes.Location(Location(231,10,231,67)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},Lbldiv'Unds'WASM-NUMERIC'Unds'FBinOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl'UndsSlsh'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("231"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(231,10,231,67)"), UNIQUE'Unds'ID{}("3cc2bd84664d64fd64bd2e24e56980abd9ab23438f437e017dd70cecc04abb31")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,floatAdd(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`_+Float__FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1a831beb18719d8af633a9fc85fe360f35d5089813d49a241b1018de850efaf6) contentStartColumn(10) contentStartLine(228) org.kframework.attributes.Location(Location(228,10,228,67)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},LblfloatAdd{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl'UndsPlus'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("228"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(228,10,228,67)"), UNIQUE'Unds'ID{}("1a831beb18719d8af633a9fc85fe360f35d5089813d49a241b1018de850efaf6")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,floatMul(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`_*Float__FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(48fe07ce5f33c8738cab7d741539e2fd7daa136076cd8bba3c364abb8fa712ad) contentStartColumn(10) contentStartLine(230) org.kframework.attributes.Location(Location(230,10,230,67)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},LblfloatMul{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl'UndsStar'Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("230"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(230,10,230,67)"), UNIQUE'Unds'ID{}("48fe07ce5f33c8738cab7d741539e2fd7daa136076cd8bba3c364abb8fa712ad")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,floatSub(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`_-Float__FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(38f22c54e8b0bc57f2b0697f234b672c7242b78bca3afca242829131dabb55e9) contentStartColumn(10) contentStartLine(229) org.kframework.attributes.Location(Location(229,10,229,67)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},LblfloatSub{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},Lbl'Unds'-Float'UndsUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("229"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(229,10,229,67)"), UNIQUE'Unds'ID{}("38f22c54e8b0bc57f2b0697f234b672c7242b78bca3afca242829131dabb55e9")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,`max_WASM-NUMERIC_FBinOp`(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`maxFloat(_,_)_FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4c08759e52ed05e68fddd750a5ad3dd086d392f27947809161e2ef0cf8a0b60c) contentStartColumn(10) contentStartLine(233) org.kframework.attributes.Location(Location(233,10,233,72)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},Lblmax'Unds'WASM-NUMERIC'Unds'FBinOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblmaxFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("233"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(233,10,233,72)"), UNIQUE'Unds'ID{}("4c08759e52ed05e68fddd750a5ad3dd086d392f27947809161e2ef0cf8a0b60c")]

// rule `_.____WASM-NUMERIC_Val_FValType_FBinOp_Float_Float`(FTYPE,`min_WASM-NUMERIC_FBinOp`(.KList),F1,F2)=>inj{FVal,Val}(`<_>__WASM-DATA_FVal_FValType_Float`(FTYPE,`minFloat(_,_)_FLOAT_Float_Float_Float`(F1,F2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5ae880848174d45c9998ab10214fc987ca0b61abe6c964c8997099f86e590e86) contentStartColumn(10) contentStartLine(232) org.kframework.attributes.Location(Location(232,10,232,72)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FBinOp'Unds'Float'Unds'Float{}(VarFTYPE:SortFValType{},Lblmin'Unds'WASM-NUMERIC'Unds'FBinOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortFVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'FVal'Unds'FValType'Unds'Float{}(VarFTYPE:SortFValType{},LblminFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("232"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(232,10,232,72)"), UNIQUE'Unds'ID{}("5ae880848174d45c9998ab10214fc987ca0b61abe6c964c8997099f86e590e86")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,floatEq(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_==Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(97796c41afa88fb039b5bddabbe3a30a424b6ece5a21d1e6d2e3ac5c1b072720) contentStartColumn(10) contentStartLine(331) org.kframework.attributes.Location(Location(331,10,331,64)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(Var'Unds'0:SortFValType{},LblfloatEq{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("331"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(331,10,331,64)"), UNIQUE'Unds'ID{}("97796c41afa88fb039b5bddabbe3a30a424b6ece5a21d1e6d2e3ac5c1b072720")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,floatNe(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_=/=Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6b352fc03a02c0a2ab2ae8c06d8f9e3ee5559bc8ce89bd4ee02bc6daebb42e1c) contentStartColumn(10) contentStartLine(332) org.kframework.attributes.Location(Location(332,10,332,64)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(Var'Unds'0:SortFValType{},LblfloatNe{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsSlshEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("332"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(332,10,332,64)"), UNIQUE'Unds'ID{}("6b352fc03a02c0a2ab2ae8c06d8f9e3ee5559bc8ce89bd4ee02bc6daebb42e1c")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,`ge_WASM-NUMERIC_FRelOp`(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>=Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(25b205e0cb9df53b6db225dfa3870668505ff6c1dd968e97d7f21011e1be04cb) contentStartColumn(10) contentStartLine(330) org.kframework.attributes.Location(Location(330,10,330,64)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(Var'Unds'0:SortFValType{},Lblge'Unds'WASM-NUMERIC'Unds'FRelOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-Eqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("330"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(330,10,330,64)"), UNIQUE'Unds'ID{}("25b205e0cb9df53b6db225dfa3870668505ff6c1dd968e97d7f21011e1be04cb")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,`gt_WASM-NUMERIC_FRelOp`(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f885cad5defce02f837116fc67836a7f53a233ce0ff7c4212aaff43497c99562) contentStartColumn(10) contentStartLine(328) org.kframework.attributes.Location(Location(328,10,328,64)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(Var'Unds'0:SortFValType{},Lblgt'Unds'WASM-NUMERIC'Unds'FRelOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("328"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(328,10,328,64)"), UNIQUE'Unds'ID{}("f885cad5defce02f837116fc67836a7f53a233ce0ff7c4212aaff43497c99562")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,`le_WASM-NUMERIC_FRelOp`(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<=Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b64f9981ba5cf362fda3773eadfcdde1fd82d69a47440b0b522e8cf38e2faf83) contentStartColumn(10) contentStartLine(329) org.kframework.attributes.Location(Location(329,10,329,64)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(Var'Unds'0:SortFValType{},Lblle'Unds'WASM-NUMERIC'Unds'FRelOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-Eqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("329"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(329,10,329,64)"), UNIQUE'Unds'ID{}("b64f9981ba5cf362fda3773eadfcdde1fd82d69a47440b0b522e8cf38e2faf83")]

// rule `_.____WASM-NUMERIC_Val_FValType_FRelOp_Float_Float`(_0,`lt_WASM-NUMERIC_FRelOp`(.KList),F1,F2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<Float__FLOAT_Bool_Float_Float`(F1,F2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d8539f4baf43d6cf35e87d8ecb92a2c180450a0a2332cda908e0513dd84e96b9) contentStartColumn(10) contentStartLine(327) org.kframework.attributes.Location(Location(327,10,327,64)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'FValType'Unds'FRelOp'Unds'Float'Unds'Float{}(Var'Unds'0:SortFValType{},Lbllt'Unds'WASM-NUMERIC'Unds'FRelOp{}(),VarF1:SortFloat{},VarF2:SortFloat{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("327"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(327,10,327,64)"), UNIQUE'Unds'ID{}("d8539f4baf43d6cf35e87d8ecb92a2c180450a0a2332cda908e0513dd84e96b9")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`add_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_+Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e0e53f624a0c8a324235a8e79b9ef32dd9e9cf918b6f355ecff391c99c1b1981) contentStartColumn(10) contentStartLine(123) org.kframework.attributes.Location(Location(123,10,123,67)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lbladd'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("123"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(123,10,123,67)"), UNIQUE'Unds'ID{}("e0e53f624a0c8a324235a8e79b9ef32dd9e9cf918b6f355ecff391c99c1b1981")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`and_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_&Int_`(I1,I2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b635bdddde66ca876f48c8a086b75d5cc08a787c2f38823eff5717bb4490dbe9) contentStartColumn(10) contentStartLine(172) org.kframework.attributes.Location(Location(172,10,172,59)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lbland'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsAnd-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("172"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(172,10,172,59)"), UNIQUE'Unds'ID{}("b635bdddde66ca876f48c8a086b75d5cc08a787c2f38823eff5717bb4490dbe9")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`div_s_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,`_/Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires `_andBool_`(`_=/=Int_`(I2,#token("0","Int")),`_=/=Int_`(`_/Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(e2c6784e0df2111989e82fbe204297aed269dd6e828f690fb0b4d8d1d627b476) contentStartColumn(10) contentStartLine(144) org.kframework.attributes.Location(Location(144,10,146,78)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),Lbl'UndsEqlsSlshEqls'Int'Unds'{}(Lbl'UndsSlsh'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsSlsh'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("144"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(144,10,146,78)"), UNIQUE'Unds'ID{}("e2c6784e0df2111989e82fbe204297aed269dd6e828f690fb0b4d8d1d627b476")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`div_s_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>`undefined_WASM-DATA_Val`(.KList) requires `_==Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(4cacde68013a9ace84a4439e94e5244f6a57af4646b03163f05ba04bf0d51330) contentStartColumn(10) contentStartLine(148) org.kframework.attributes.Location(Location(148,10,149,26)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("148"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(148,10,149,26)"), UNIQUE'Unds'ID{}("4cacde68013a9ace84a4439e94e5244f6a57af4646b03163f05ba04bf0d51330")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`div_s_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>`undefined_WASM-DATA_Val`(.KList) requires `_andBool_`(`_=/=Int_`(I2,#token("0","Int")),`_==Int_`(`_/Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2)),`#pow1(_)_WASM-DATA_Int_IValType`(ITYPE))) ensures #token("true","Bool") [UNIQUE_ID(4f2f5a933babc126e3d6d3ca7fc6f6e4ae83115bde1fd923333f414523585265) contentStartColumn(10) contentStartLine(151) org.kframework.attributes.Location(Location(151,10,153,77)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsSlsh'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})),Lbl'Hash'pow1'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lbldiv'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("151"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(151,10,153,77)"), UNIQUE'Unds'ID{}("4f2f5a933babc126e3d6d3ca7fc6f6e4ae83115bde1fd923333f414523585265")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`div_u_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_/Int_`(I1,I2))) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(35525950c232eaf2d4eb6ab5304f0038faa5afcb2f5617b99217235c1e917795) contentStartColumn(10) contentStartLine(136) org.kframework.attributes.Location(Location(136,10,136,74)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsSlsh'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("136"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(136,10,136,74)"), UNIQUE'Unds'ID{}("35525950c232eaf2d4eb6ab5304f0038faa5afcb2f5617b99217235c1e917795")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`div_u_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>`undefined_WASM-DATA_Val`(.KList) requires `_==Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(04f1d7761de0eabc2cd351366571bd567fe62ba4d765132178662fc7a496be7c) contentStartColumn(10) contentStartLine(137) org.kframework.attributes.Location(Location(137,10,137,74)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lbldiv'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("137"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(137,10,137,74)"), UNIQUE'Unds'ID{}("04f1d7761de0eabc2cd351366571bd567fe62ba4d765132178662fc7a496be7c")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`mul_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_*Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b45f788204fc6f4053a684c39ec595fa7055934e497bd73d0a97125f1e023ee5) contentStartColumn(10) contentStartLine(125) org.kframework.attributes.Location(Location(125,10,125,67)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblmul'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsStar'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("125"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(125,10,125,67)"), UNIQUE'Unds'ID{}("b45f788204fc6f4053a684c39ec595fa7055934e497bd73d0a97125f1e023ee5")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`or_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_|Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4dcb3fed050e1e21d52bfd26b053687a220060a680a5ed6702c7bdb55627f439) contentStartColumn(10) contentStartLine(173) org.kframework.attributes.Location(Location(173,10,173,60)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblor'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPipe'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("173"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(173,10,173,60)"), UNIQUE'Unds'ID{}("4dcb3fed050e1e21d52bfd26b053687a220060a680a5ed6702c7bdb55627f439")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`rem_s_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,`_%Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(41239be6f41f8947fa881ad2d16cd14663e2a243f0d34bc628c5e3f254374fde) contentStartColumn(10) contentStartLine(155) org.kframework.attributes.Location(Location(155,10,156,27)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPerc'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("155"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(155,10,156,27)"), UNIQUE'Unds'ID{}("41239be6f41f8947fa881ad2d16cd14663e2a243f0d34bc628c5e3f254374fde")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`rem_s_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>`undefined_WASM-DATA_Val`(.KList) requires `_==Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(d35ee5b3197f8ed7dca2f7cc4eb99a23f4c0a3ec5a6f597b29179c07b3270a3a) contentStartColumn(10) contentStartLine(158) org.kframework.attributes.Location(Location(158,10,159,26)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblrem'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("158"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(158,10,159,26)"), UNIQUE'Unds'ID{}("d35ee5b3197f8ed7dca2f7cc4eb99a23f4c0a3ec5a6f597b29179c07b3270a3a")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`rem_u_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_%Int_`(I1,I2))) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(b2f35ed17561448540808bea28c31e41cddd27218ce7279478d549f335c493fd) contentStartColumn(10) contentStartLine(139) org.kframework.attributes.Location(Location(139,10,139,74)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("139"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(139,10,139,74)"), UNIQUE'Unds'ID{}("b2f35ed17561448540808bea28c31e41cddd27218ce7279478d549f335c493fd")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`rem_u_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>`undefined_WASM-DATA_Val`(.KList) requires `_==Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(feffb3482deb1cc7be1914112f87c76a4a420146f013082144bec4fdc30b1848) contentStartColumn(10) contentStartLine(140) org.kframework.attributes.Location(Location(140,10,140,74)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblrem'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        Lblundefined'Unds'WASM-DATA'Unds'Val{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("140"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(140,10,140,74)"), UNIQUE'Unds'ID{}("feffb3482deb1cc7be1914112f87c76a4a420146f013082144bec4fdc30b1848")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`rotl_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_+Int_`(`_<<Int_`(I1,`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE))),`_>>Int_`(I1,`_-Int_`(`#width(_)_WASM-DATA_Int_IValType`(ITYPE),`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE)))))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c0a2b4a434e25b681773d1257550885535d087a0baf58738cf3dba133d556047) contentStartColumn(10) contentStartLine(201) org.kframework.attributes.Location(Location(201,10,201,144)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblrotl'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-GT--GT-'Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'-Int'Unds'{}(Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))))))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("201"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(201,10,201,144)"), UNIQUE'Unds'ID{}("c0a2b4a434e25b681773d1257550885535d087a0baf58738cf3dba133d556047")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`rotr_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_+Int_`(`_>>Int_`(I1,`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE))),`_<<Int_`(I1,`_-Int_`(`#width(_)_WASM-DATA_Int_IValType`(ITYPE),`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE)))))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(312d546bd4a3640add87c7d56ebd888c9c9fedbe271e2562e5cfcb35ed52cd57) contentStartColumn(10) contentStartLine(202) org.kframework.attributes.Location(Location(202,10,202,144)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblrotr'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))),Lbl'Unds-LT--LT-'Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'-Int'Unds'{}(Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}),Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))))))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("202"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(202,10,202,144)"), UNIQUE'Unds'ID{}("312d546bd4a3640add87c7d56ebd888c9c9fedbe271e2562e5cfcb35ed52cd57")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`shl_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_<<Int_`(I1,`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE)))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9bfc0f469b69e238a4cd7fda5bae4b107f46e92dbb3c653cc0e80d1a6d8b83e7) contentStartColumn(10) contentStartLine(187) org.kframework.attributes.Location(Location(187,10,187,82)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblshl'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds-LT--LT-'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("187"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(187,10,187,82)"), UNIQUE'Unds'ID{}("9bfc0f469b69e238a4cd7fda5bae4b107f46e92dbb3c653cc0e80d1a6d8b83e7")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`shr_s_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,`_>>Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE)))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c610980fc20c7cf59800354b13d97d0aa4b9bdda7c14413506882d805c0536ff) contentStartColumn(10) contentStartLine(190) org.kframework.attributes.Location(Location(190,10,190,109)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblshr'Unds's'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{}))))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("190"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,10,190,109)"), UNIQUE'Unds'ID{}("c610980fc20c7cf59800354b13d97d0aa4b9bdda7c14413506882d805c0536ff")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`shr_u_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_>>Int_`(I1,`_%Int_`(I2,`#width(_)_WASM-DATA_Int_IValType`(ITYPE))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6eca6346f0a831a340a70e665ac3c2791be5869776b361794401d2857cec90a0) contentStartColumn(10) contentStartLine(188) org.kframework.attributes.Location(Location(188,10,188,81)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblshr'Unds'u'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds-GT--GT-'Int'Unds'{}(VarI1:SortInt{},Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},Lbl'Hash'width'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("188"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(188,10,188,81)"), UNIQUE'Unds'ID{}("6eca6346f0a831a340a70e665ac3c2791be5869776b361794401d2857cec90a0")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`sub_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_-Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b2100882a542acc51eee9229bade900eac430afc17b52550f4ab7fdc81ccd2f) contentStartColumn(10) contentStartLine(124) org.kframework.attributes.Location(Location(124,10,124,67)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblsub'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("124"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(124,10,124,67)"), UNIQUE'Unds'ID{}("5b2100882a542acc51eee9229bade900eac430afc17b52550f4ab7fdc81ccd2f")]

// rule `_.____WASM-NUMERIC_Val_IValType_IBinOp_Int_Int`(ITYPE,`xor_WASM-NUMERIC_IBinOp`(.KList),I1,I2)=>inj{IVal,Val}(`#chop(_)_WASM-DATA_IVal_IVal`(`<_>__WASM-DATA_IVal_IValType_Int`(ITYPE,`_xorInt_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ddfe876d69d1d6243a4a0f4dd3dfcef491fc03191bd405702d1790ecc32d029) contentStartColumn(10) contentStartLine(174) org.kframework.attributes.Location(Location(174,10,174,60)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IBinOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblxor'Unds'WASM-NUMERIC'Unds'IBinOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'Hash'chop'LParUndsRParUnds'WASM-DATA'Unds'IVal'Unds'IVal{}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},Lbl'Unds'xorInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("174"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(174,10,174,60)"), UNIQUE'Unds'ID{}("7ddfe876d69d1d6243a4a0f4dd3dfcef491fc03191bd405702d1790ecc32d029")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(ITYPE,`ge_s_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>=Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0dabb0f53cc50508ec1020831195bc5aa771ca7efcbdcb3e0b0d63f7968aaba3) contentStartColumn(10) contentStartLine(305) org.kframework.attributes.Location(Location(305,10,305,90)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblge'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("305"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(305,10,305,90)"), UNIQUE'Unds'ID{}("0dabb0f53cc50508ec1020831195bc5aa771ca7efcbdcb3e0b0d63f7968aaba3")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(ITYPE,`gt_s_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6952a4781cbb47f431ca098bbe5d40a4edafcfc7709892622d48173292184b69) contentStartColumn(10) contentStartLine(292) org.kframework.attributes.Location(Location(292,10,292,89)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblgt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("292"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(292,10,292,89)"), UNIQUE'Unds'ID{}("6952a4781cbb47f431ca098bbe5d40a4edafcfc7709892622d48173292184b69")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(ITYPE,`le_s_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<=Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(429037bfba928f3eb6acde834344748c042a35b7e888953fe8bdb91e177fd1e6) contentStartColumn(10) contentStartLine(304) org.kframework.attributes.Location(Location(304,10,304,90)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lblle'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("304"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(304,10,304,90)"), UNIQUE'Unds'ID{}("429037bfba928f3eb6acde834344748c042a35b7e888953fe8bdb91e177fd1e6")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(ITYPE,`lt_s_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<Int_`(`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I1),`#signed(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,I2))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6b7e255efb1f75a503dd1005411d9293e19b079aec1b292481668d08d9db09b5) contentStartColumn(10) contentStartLine(291) org.kframework.attributes.Location(Location(291,10,291,89)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(VarITYPE:SortIValType{},Lbllt'Unds's'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-'Int'Unds'{}(Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI1:SortInt{}),Lbl'Hash'signed'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarI2:SortInt{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("291"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(291,10,291,89)"), UNIQUE'Unds'ID{}("6b7e255efb1f75a503dd1005411d9293e19b079aec1b292481668d08d9db09b5")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,`eq_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_==Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ab6a83ee142f7ec4ab9e8b49324650c69f66c12e69b178d45aa4df5f919c57ee) contentStartColumn(10) contentStartLine(278) org.kframework.attributes.Location(Location(278,10,278,62)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},Lbleq'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("278"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(278,10,278,62)"), UNIQUE'Unds'ID{}("ab6a83ee142f7ec4ab9e8b49324650c69f66c12e69b178d45aa4df5f919c57ee")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,`ge_u_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>=Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(05ecc21682e35671cb4a75780f796184bbcc38ddea77a27c3aa2ee1a68cfaede) contentStartColumn(10) contentStartLine(302) org.kframework.attributes.Location(Location(302,10,302,58)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},Lblge'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("302"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(302,10,302,58)"), UNIQUE'Unds'ID{}("05ecc21682e35671cb4a75780f796184bbcc38ddea77a27c3aa2ee1a68cfaede")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,`gt_u_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_>Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(41d7e0ce6abb74f5590f61e1bbb17a5b4234b97ca4d6b0bb861f2195b518f369) contentStartColumn(10) contentStartLine(289) org.kframework.attributes.Location(Location(289,10,289,57)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},Lblgt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-GT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("289"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(289,10,289,57)"), UNIQUE'Unds'ID{}("41d7e0ce6abb74f5590f61e1bbb17a5b4234b97ca4d6b0bb861f2195b518f369")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,`le_u_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<=Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(598cd8bfc9b2490ee8950afd5f12794a55f4f9c1f116bcdf4ce19f667efca31c) contentStartColumn(10) contentStartLine(301) org.kframework.attributes.Location(Location(301,10,301,58)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},Lblle'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("301"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(301,10,301,58)"), UNIQUE'Unds'ID{}("598cd8bfc9b2490ee8950afd5f12794a55f4f9c1f116bcdf4ce19f667efca31c")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,`lt_u_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_<Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3d8225f89952f985c13793235bef75f9d51096fe29e02d35243f48de5d5034be) contentStartColumn(10) contentStartLine(288) org.kframework.attributes.Location(Location(288,10,288,57)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},Lbllt'Unds'u'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'Unds-LT-'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("288"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(288,10,288,57)"), UNIQUE'Unds'ID{}("3d8225f89952f985c13793235bef75f9d51096fe29e02d35243f48de5d5034be")]

// rule `_.____WASM-NUMERIC_Val_IValType_IRelOp_Int_Int`(_0,`ne_WASM-NUMERIC_IRelOp`(.KList),I1,I2)=>inj{IVal,Val}(`<_>__WASM-DATA_IVal_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),`#bool(_)_WASM-DATA_Int_Bool`(`_=/=Int_`(I1,I2)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(14e0899bd0d76951b990f9d48e94d0140517ac3bbf7b91d010bf121873ecceb0) contentStartColumn(10) contentStartLine(279) org.kframework.attributes.Location(Location(279,10,279,62)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lbl'UndsStopUndsUndsUndsUnds'WASM-NUMERIC'Unds'Val'Unds'IValType'Unds'IRelOp'Unds'Int'Unds'Int{}(Var'Unds'0:SortIValType{},Lblne'Unds'WASM-NUMERIC'Unds'IRelOp{}(),VarI1:SortInt{},VarI2:SortInt{}),
        inj{SortIVal{}, SortVal{}}(Lbl'-LT-Unds-GT-UndsUnds'WASM-DATA'Unds'IVal'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("279"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(279,10,279,62)"), UNIQUE'Unds'ID{}("14e0899bd0d76951b990f9d48e94d0140517ac3bbf7b91d010bf121873ecceb0")]

// rule `_<<Int_`(#token("0","Int") #as _1,X)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(76545141d63f50e13b4959f7aadee25745bc16715118ac8f721ea3d6799799fc) contentStartColumn(10) contentStartLine(211) org.kframework.attributes.Location(Location(211,10,211,24)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-LT--LT-'Int'Unds'{}(\and{SortInt{}}(\dv{SortInt{}}("0"),Var'Unds'1:SortInt{}),VarX:SortInt{}),
        Var'Unds'1:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("211"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(211,10,211,24)"), simplification{}(), UNIQUE'Unds'ID{}("76545141d63f50e13b4959f7aadee25745bc16715118ac8f721ea3d6799799fc")]

// rule `_<<Int_`(X,#token("0","Int"))=>X requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b1e5af9c2d9542f718eae8096dbf4d11def546c079f3b64dfab54fee8b900533) contentStartColumn(10) contentStartLine(210) org.kframework.attributes.Location(Location(210,10,210,24)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},\dv{SortInt{}}("0")),
        VarX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("210"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(210,10,210,24)"), simplification{}(), UNIQUE'Unds'ID{}("b1e5af9c2d9542f718eae8096dbf4d11def546c079f3b64dfab54fee8b900533")]

// rule `_<<Int_`(`_<<Int_`(X,N),M)=>`_<<Int_`(X,`_+Int_`(N,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3909c71cf18c23a9f70314300fe9e5c3361b9bdba33996359ae1b84a0f3833dd) contentStartColumn(10) contentStartLine(139) org.kframework.attributes.Location(Location(139,10,139,51)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("139"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(139,10,139,51)"), simplification{}(), UNIQUE'Unds'ID{}("3909c71cf18c23a9f70314300fe9e5c3361b9bdba33996359ae1b84a0f3833dd")]

// rule `_<=Int_`(#token("0","Int"),`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BM,ADDR))=>#token("true","Bool") requires `#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(BM) ensures #token("true","Bool") [UNIQUE_ID(10f41f9be481986c5af37eb0ae76735624d407cfff727ea4077d8bef5603745e) contentStartColumn(10) contentStartLine(270) org.kframework.attributes.Location(Location(270,10,270,77)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(VarBM:SortByteMap{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("270"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(270,10,270,77)"), simplification{}(), UNIQUE'Unds'ID{}("10f41f9be481986c5af37eb0ae76735624d407cfff727ea4077d8bef5603745e")]

// rule `_<=String__STRING_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING_Bool_String_String`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b845027eb9a8c978d2dfe3ec05a6eff77ba88b8f5c3ab2cb696a29aeae2db3b8) contentStartColumn(8) contentStartLine(623) org.kframework.attributes.Location(Location(623,8,623,63)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("623"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(623,8,623,63)"), UNIQUE'Unds'ID{}("b845027eb9a8c978d2dfe3ec05a6eff77ba88b8f5c3ab2cb696a29aeae2db3b8")]

// rule `_<Int_`(`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BM,ADDR),#token("256","Int"))=>#token("true","Bool") requires `#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(BM) ensures #token("true","Bool") [UNIQUE_ID(bdfe70436a6d08c8e6041ef7d1524daea4945b42978df3e5c1eeb73efa968ed0) contentStartColumn(10) contentStartLine(271) org.kframework.attributes.Location(Location(271,10,271,77)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(VarBM:SortByteMap{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-'Int'Unds'{}(Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{}),\dv{SortInt{}}("256")),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("271"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(271,10,271,77)"), simplification{}(), UNIQUE'Unds'ID{}("bdfe70436a6d08c8e6041ef7d1524daea4945b42978df3e5c1eeb73efa968ed0")]

// rule `_=/=Bool_`(B1,B2)=>`notBool_`(`_==Bool_`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8082ec9e8ff1aaf1e4594a6b86a75f2a67d244a719944f7f727338912cec93c1) contentStartColumn(8) contentStartLine(359) org.kframework.attributes.Location(Location(359,8,359,57)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("359"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(359,8,359,57)"), UNIQUE'Unds'ID{}("8082ec9e8ff1aaf1e4594a6b86a75f2a67d244a719944f7f727338912cec93c1")]

// rule `_=/=Float__FLOAT_Bool_Float_Float`(F1,F2)=>`notBool_`(`_==Float__FLOAT_Bool_Float_Float`(F1,F2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(be1d56c0b3fd2766ad1b9538981f841c929d286018b99b0b287bf307b66783d7) contentStartColumn(8) contentStartLine(551) org.kframework.attributes.Location(Location(551,8,551,61)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF1:SortFloat{},VarF2:SortFloat{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("551"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(551,8,551,61)"), UNIQUE'Unds'ID{}("be1d56c0b3fd2766ad1b9538981f841c929d286018b99b0b287bf307b66783d7")]

// rule `_=/=Int_`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1268ef8223300f719d2c898f934c4a0dd4d5d94e2224e9d2139c61b6a7fd7621) contentStartColumn(8) contentStartLine(479) org.kframework.attributes.Location(Location(479,8,479,53)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("479"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(479,8,479,53)"), UNIQUE'Unds'ID{}("1268ef8223300f719d2c898f934c4a0dd4d5d94e2224e9d2139c61b6a7fd7621")]

// rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(be43f022db407512c682c661ea25224c02085b8ae4fc4e4122c1ffda4d9c10dc) contentStartColumn(8) contentStartLine(863) org.kframework.attributes.Location(Location(863,8,863,45)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("863"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(863,8,863,45)"), UNIQUE'Unds'ID{}("be43f022db407512c682c661ea25224c02085b8ae4fc4e4122c1ffda4d9c10dc")]

// rule `_=/=String__STRING_Bool_String_String`(S1,S2)=>`notBool_`(`_==String__STRING_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a78bcc075d04a4fc9a360ddd678304c36ad82d78aed5298cf3ca840ff9a64c6c) contentStartColumn(8) contentStartLine(610) org.kframework.attributes.Location(Location(610,8,610,65)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("610"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(610,8,610,65)"), UNIQUE'Unds'ID{}("a78bcc075d04a4fc9a360ddd678304c36ad82d78aed5298cf3ca840ff9a64c6c")]

// rule `_==Bool_`(K1,K2)=>`_==K_`(inj{Bool,KItem}(K1),inj{Bool,KItem}(K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f80f7fe83e61312531fc419ec0b0880a6d89d056a322bd6e29a1f8082203f4f5) contentStartColumn(8) contentStartLine(865) org.kframework.attributes.Location(Location(865,8,865,43)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'Bool'Unds'{}(VarK1:SortBool{},VarK2:SortBool{}),
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarK1:SortBool{}),dotk{}()),kseq{}(inj{SortBool{}, SortKItem{}}(VarK2:SortBool{}),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("865"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(865,8,865,43)"), UNIQUE'Unds'ID{}("f80f7fe83e61312531fc419ec0b0880a6d89d056a322bd6e29a1f8082203f4f5")]

// rule `_==Int_`(I1,I2)=>`_==K_`(inj{Int,KItem}(I1),inj{Int,KItem}(I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e92e4aa4a18bee70f2627cdafb8687e2dfcc0dd6a7f8cbb8d1bd17d751c2da2a) contentStartColumn(8) contentStartLine(478) org.kframework.attributes.Location(Location(478,8,478,40)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI1:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("478"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(478,8,478,40)"), UNIQUE'Unds'ID{}("e92e4aa4a18bee70f2627cdafb8687e2dfcc0dd6a7f8cbb8d1bd17d751c2da2a")]

// rule `_==Int_`(`#bool(_)_WASM-DATA_Int_Bool`(P),#token("0","Int"))=>`notBool_`(P) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d0a3238246248f254569b41dc3f61e20472f5b191ffa46193e41675ee800681) contentStartColumn(10) contentStartLine(17) org.kframework.attributes.Location(Location(17,10,17,39)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Hash'bool'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'Bool{}(VarP:SortBool{}),\dv{SortInt{}}("0")),
        LblnotBool'Unds'{}(VarP:SortBool{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("17"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,10,17,39)"), simplification{}(), UNIQUE'Unds'ID{}("7d0a3238246248f254569b41dc3f61e20472f5b191ffa46193e41675ee800681")]

// rule `_==String__STRING_Bool_String_String`(S1,S2)=>`_==K_`(inj{String,KItem}(S1),inj{String,KItem}(S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d866d86c70a0259cfd553051351e356373b3c533c9a7b9974500e5dd032f7ca9) contentStartColumn(8) contentStartLine(611) org.kframework.attributes.Location(Location(611,8,611,49)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS1:SortString{}),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(VarS2:SortString{}),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("611"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(611,8,611,49)"), UNIQUE'Unds'ID{}("d866d86c70a0259cfd553051351e356373b3c533c9a7b9974500e5dd032f7ca9")]

// rule `_>=String__STRING_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8307efe6b82cfb4a21276b92acefe5869f724f1def05bc54f10b09ba49b56f33) contentStartColumn(8) contentStartLine(625) org.kframework.attributes.Location(Location(625,8,625,63)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-GT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("625"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(625,8,625,63)"), UNIQUE'Unds'ID{}("8307efe6b82cfb4a21276b92acefe5869f724f1def05bc54f10b09ba49b56f33")]

// rule `_>>Int_`(#token("0","Int") #as _1,X)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0d561ac1402fe072360d418944728df4c4e4698de3751df029e3f2c9aea50f88) contentStartColumn(10) contentStartLine(213) org.kframework.attributes.Location(Location(213,10,213,24)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(\and{SortInt{}}(\dv{SortInt{}}("0"),Var'Unds'1:SortInt{}),VarX:SortInt{}),
        Var'Unds'1:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("213"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(213,10,213,24)"), simplification{}(), UNIQUE'Unds'ID{}("0d561ac1402fe072360d418944728df4c4e4698de3751df029e3f2c9aea50f88")]

// rule `_>>Int_`(X,N)=>#token("0","Int") requires `_<Int_`(X,`_^Int_`(#token("2","Int"),N)) ensures #token("true","Bool") [UNIQUE_ID(c755f5f535b546a6afc93fdaa232e46faea04ce9cfb728831afeed2f737f8f91) contentStartColumn(10) contentStartLine(135) org.kframework.attributes.Location(Location(135,10,135,60)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(VarX:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("135"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(135,10,135,60)"), simplification{}(), UNIQUE'Unds'ID{}("c755f5f535b546a6afc93fdaa232e46faea04ce9cfb728831afeed2f737f8f91")]

// rule `_>>Int_`(X,#token("0","Int"))=>X requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(da3874b03993e810f52ef90b1e093c856ad9dae6dd5f8e41e7c8c7e7ad44157f) contentStartColumn(10) contentStartLine(212) org.kframework.attributes.Location(Location(212,10,212,24)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},\dv{SortInt{}}("0")),
        VarX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("212"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(212,10,212,24)"), simplification{}(), UNIQUE'Unds'ID{}("da3874b03993e810f52ef90b1e093c856ad9dae6dd5f8e41e7c8c7e7ad44157f")]

// rule `_>>Int_`(`_+Int_`(Y,`_<<Int_`(X,M)),N)=>`_+Int_`(`_<<Int_`(X,`_-Int_`(M,N)),`_>>Int_`(Y,N)) requires `_>=Int_`(M,N) ensures #token("true","Bool") [UNIQUE_ID(9d19ecf72683ea6a7da129a25c5917c40985f447ea6969857f5907631863abe5) contentStartColumn(10) contentStartLine(149) org.kframework.attributes.Location(Location(149,10,149,98)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarM:SortInt{},VarN:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarY:SortInt{},Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarM:SortInt{})),VarN:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},Lbl'Unds'-Int'Unds'{}(VarM:SortInt{},VarN:SortInt{})),Lbl'Unds-GT--GT-'Int'Unds'{}(VarY:SortInt{},VarN:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("149"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(149,10,149,98)"), simplification{}(), UNIQUE'Unds'ID{}("9d19ecf72683ea6a7da129a25c5917c40985f447ea6969857f5907631863abe5")]

// rule `_>>Int_`(`_+Int_`(`_<<Int_`(X,M),Y),N)=>`_+Int_`(`_<<Int_`(X,`_-Int_`(M,N)),`_>>Int_`(Y,N)) requires `_>=Int_`(M,N) ensures #token("true","Bool") [UNIQUE_ID(80069399fa67a4bfeb86126a5667b0197e5e96b47529486a94846a70219c5721) contentStartColumn(10) contentStartLine(148) org.kframework.attributes.Location(Location(148,10,148,98)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarM:SortInt{},VarN:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarM:SortInt{}),VarY:SortInt{}),VarN:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},Lbl'Unds'-Int'Unds'{}(VarM:SortInt{},VarN:SortInt{})),Lbl'Unds-GT--GT-'Int'Unds'{}(VarY:SortInt{},VarN:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("148"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(148,10,148,98)"), simplification{}(), UNIQUE'Unds'ID{}("80069399fa67a4bfeb86126a5667b0197e5e96b47529486a94846a70219c5721")]

// rule `_>>Int_`(`_<<Int_`(X,N),M)=>`_<<Int_`(X,`_-Int_`(N,M)) requires `_>=Int_`(N,M) ensures #token("true","Bool") [UNIQUE_ID(8838f340e0d99bb183b9e69c9ee206b7651ca72d3d2ce4d094c93c6c541f69fa) contentStartColumn(10) contentStartLine(143) org.kframework.attributes.Location(Location(143,10,143,81)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("143"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(143,10,143,81)"), simplification{}(), UNIQUE'Unds'ID{}("8838f340e0d99bb183b9e69c9ee206b7651ca72d3d2ce4d094c93c6c541f69fa")]

// rule `_>>Int_`(`_<<Int_`(X,N),M)=>`_>>Int_`(X,`_-Int_`(M,N)) requires `notBool_`(`_>=Int_`(N,M)) ensures #token("true","Bool") [UNIQUE_ID(71b2b1a127652353b2f74910bd9ab189d1ddf2cce9adff99b92d03316f2009ad) contentStartColumn(10) contentStartLine(144) org.kframework.attributes.Location(Location(144,10,144,82)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},Lbl'Unds'-Int'Unds'{}(VarM:SortInt{},VarN:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("144"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(144,10,144,82)"), simplification{}(), UNIQUE'Unds'ID{}("71b2b1a127652353b2f74910bd9ab189d1ddf2cce9adff99b92d03316f2009ad")]

// rule `_>>Int_`(`_>>Int_`(X,N),M)=>`_>>Int_`(X,`_+Int_`(N,M)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cfde4e31678d54b12557f829f01570406b370cb9e8e4da9590b9bd9479013913) contentStartColumn(10) contentStartLine(138) org.kframework.attributes.Location(Location(138,10,138,51)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarN:SortInt{},VarM:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("138"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(138,10,138,51)"), simplification{}(), UNIQUE'Unds'ID{}("cfde4e31678d54b12557f829f01570406b370cb9e8e4da9590b9bd9479013913")]

// rule `_>>Int_`(`_modInt_`(X,POW),N)=>`_modInt_`(`_>>Int_`(X,N),`_/Int_`(POW,`_^Int_`(#token("2","Int"),N))) requires `_andBool_`(`_andBool_`(`_>=Int_`(N,#token("0","Int")),`_>Int_`(POW,#token("0","Int"))),`_==Int_`(`_modInt_`(POW,`_^Int_`(#token("2","Int"),N)),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(6ea8668563cb254adb24a442408ccdced52e4cf561afac4a6c6586b95a0426e8) contentStartColumn(10) contentStartLine(171) org.kframework.attributes.Location(Location(171,10,174,45)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarPOW:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarPOW:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{})),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds-GT--GT-'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarPOW:SortInt{}),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),Lbl'UndsSlsh'Int'Unds'{}(VarPOW:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("171"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(171,10,174,45)"), simplification{}(), UNIQUE'Unds'ID{}("6ea8668563cb254adb24a442408ccdced52e4cf561afac4a6c6586b95a0426e8")]

// rule `_>String__STRING_Bool_String_String`(S1,S2)=>`_<String__STRING_Bool_String_String`(S2,S1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(24e2c6676f433dc8124ed0562f1c81405451eb8a338e395aa96f1325c51dea92) contentStartColumn(8) contentStartLine(624) org.kframework.attributes.Location(Location(624,8,624,52)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-GT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        Lbl'Unds-LT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("624"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(624,8,624,52)"), UNIQUE'Unds'ID{}("24e2c6676f433dc8124ed0562f1c81405451eb8a338e395aa96f1325c51dea92")]

// rule `_andBool_`(#token("false","Bool") #as _2,_0)=>_2 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e6ebe927ba416a1602679eb0166f22d394adf70452e0505c00f11c036a896253) contentStartColumn(8) contentStartLine(332) org.kframework.attributes.Location(Location(332,8,332,37)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'2:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'2:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("332"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(332,8,332,37)"), UNIQUE'Unds'ID{}("e6ebe927ba416a1602679eb0166f22d394adf70452e0505c00f11c036a896253")]

// rule `_andBool_`(#token("true","Bool") #as _1,B)=>B requires _1 ensures _1 [UNIQUE_ID(cd0a9b340fae24c9a05126d8df860cb7145fc64875711e36efaa694085559dc0) contentStartColumn(8) contentStartLine(330) org.kframework.attributes.Location(Location(330,8,330,37)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{}),VarB:SortBool{}),
        VarB:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("330"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(330,8,330,37)"), UNIQUE'Unds'ID{}("cd0a9b340fae24c9a05126d8df860cb7145fc64875711e36efaa694085559dc0")]

// rule `_andBool_`(B,#token("true","Bool") #as _1)=>B requires _1 ensures _1 [UNIQUE_ID(b598bf51d1c959b7112e06b7f85a391ee5a18108acd52bb65ea27ef0381ed0e0) contentStartColumn(8) contentStartLine(331) org.kframework.attributes.Location(Location(331,8,331,37)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(VarB:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{})),
        VarB:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("331"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(331,8,331,37)"), UNIQUE'Unds'ID{}("b598bf51d1c959b7112e06b7f85a391ee5a18108acd52bb65ea27ef0381ed0e0")]

// rule `_andBool_`(_0,#token("false","Bool") #as _2)=>_2 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1a7512841ede635d09556466797d23f3f3cec57fe0fb6a68ce0c3a1cccb0b68f) contentStartColumn(8) contentStartLine(333) org.kframework.attributes.Location(Location(333,8,333,37)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'2:SortBool{})),
        Var'Unds'2:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("333"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,8,333,37)"), UNIQUE'Unds'ID{}("1a7512841ede635d09556466797d23f3f3cec57fe0fb6a68ce0c3a1cccb0b68f")]

// rule `_andThenBool_`(#token("false","Bool") #as _2,_0)=>_2 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5655ee866bbbb608f1f964220ab1530b0ef7135eeda23603dff05807b6d16b64) contentStartColumn(8) contentStartLine(337) org.kframework.attributes.Location(Location(337,8,337,36)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'2:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'2:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("337"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(337,8,337,36)"), UNIQUE'Unds'ID{}("5655ee866bbbb608f1f964220ab1530b0ef7135eeda23603dff05807b6d16b64")]

// rule `_andThenBool_`(#token("true","Bool") #as _1,K)=>K requires _1 ensures _1 [UNIQUE_ID(7222515db4659f9d91276b956c8ae62254acb676f0a77a32927a2f9664a0277f) contentStartColumn(8) contentStartLine(335) org.kframework.attributes.Location(Location(335,8,335,37)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{}),VarK:SortBool{}),
        VarK:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("335"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(335,8,335,37)"), UNIQUE'Unds'ID{}("7222515db4659f9d91276b956c8ae62254acb676f0a77a32927a2f9664a0277f")]

// rule `_andThenBool_`(K,#token("true","Bool") #as _1)=>K requires _1 ensures _1 [UNIQUE_ID(3bbe6cf1318a61acb32fba25030cb15ff73ba968cd584d9b07573260cfd5542d) contentStartColumn(8) contentStartLine(336) org.kframework.attributes.Location(Location(336,8,336,37)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(VarK:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{})),
        VarK:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("336"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(336,8,336,37)"), UNIQUE'Unds'ID{}("3bbe6cf1318a61acb32fba25030cb15ff73ba968cd584d9b07573260cfd5542d")]

// rule `_andThenBool_`(_0,#token("false","Bool") #as _2)=>_2 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f9686d847651f3e51fa10373f3a2f282ece21460a20353e2e97d8100b357eae8) contentStartColumn(8) contentStartLine(338) org.kframework.attributes.Location(Location(338,8,338,36)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'2:SortBool{})),
        Var'Unds'2:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("338"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(338,8,338,36)"), UNIQUE'Unds'ID{}("f9686d847651f3e51fa10373f3a2f282ece21460a20353e2e97d8100b357eae8")]

// rule `_divInt_`(I1,I2)=>`_/Int_`(`_-Int_`(I1,`_modInt_`(I1,I2)),I2) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(98da5640fc5e6ee59b397ff504565399b7ff03664f67915c80712fa0cdb0a8f4) contentStartColumn(8) contentStartLine(467) org.kframework.attributes.Location(Location(467,8,468,23)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'divInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsSlsh'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarI2:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("467"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(467,8,468,23)"), UNIQUE'Unds'ID{}("98da5640fc5e6ee59b397ff504565399b7ff03664f67915c80712fa0cdb0a8f4")]

// rule `_dividesInt__INT-COMMON_Bool_Int_Int`(I1,I2)=>`_==Int_`(`_%Int_`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9695792871716095ab52385178d2734b9ea1a429bd7b0c82d3eeeba2c43573a1) contentStartColumn(8) contentStartLine(480) org.kframework.attributes.Location(Location(480,8,480,58)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},VarI1:SortInt{}),\dv{SortInt{}}("0"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("480"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(480,8,480,58)"), UNIQUE'Unds'ID{}("9695792871716095ab52385178d2734b9ea1a429bd7b0c82d3eeeba2c43573a1")]

// rule `_impliesBool_`(#token("true","Bool") #as _1,B)=>B requires _1 ensures _1 [UNIQUE_ID(a14afb572fbb3cafc70cb9d12559ea76b3cadc10fe7660cbfc3ac421d8c83472) contentStartColumn(8) contentStartLine(354) org.kframework.attributes.Location(Location(354,8,354,36)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{}),VarB:SortBool{}),
        VarB:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("354"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(354,8,354,36)"), UNIQUE'Unds'ID{}("a14afb572fbb3cafc70cb9d12559ea76b3cadc10fe7660cbfc3ac421d8c83472")]

// rule `_impliesBool_`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1b7a876afdaa257c8b3f634d4e2a8b25d443ca975cd70924532f97c11b5436a3) contentStartColumn(8) contentStartLine(357) org.kframework.attributes.Location(Location(357,8,357,45)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(VarB:SortBool{},\dv{SortBool{}}("false")),
        LblnotBool'Unds'{}(VarB:SortBool{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("357"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,8,357,45)"), UNIQUE'Unds'ID{}("1b7a876afdaa257c8b3f634d4e2a8b25d443ca975cd70924532f97c11b5436a3")]

// rule `_impliesBool_`(_0,#token("true","Bool") #as _2)=>_2 requires _2 ensures _2 [UNIQUE_ID(dd9b1a472eea37abb732383a93435249ef41975a934479c3ad416fe808fbe42f) contentStartColumn(8) contentStartLine(356) org.kframework.attributes.Location(Location(356,8,356,39)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'2:SortBool{})),
        Var'Unds'2:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("356"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(356,8,356,39)"), UNIQUE'Unds'ID{}("dd9b1a472eea37abb732383a93435249ef41975a934479c3ad416fe808fbe42f")]

// rule `_impliesBool_`(`#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(BMAP),`_andBool_`(`_<=Int_`(#token("0","Int"),`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BMAP,IDX)),`_<Int_`(`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BMAP,IDX),#token("256","Int"))))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f13a4e53d9aef119a579cc0c5454f2e1561d45c093f0ab81ca55c09c3d249e9f) contentStartColumn(10) contentStartLine(277) org.kframework.attributes.Location(Location(277,10,277,105)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) smt-lemma()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(VarBMAP:SortByteMap{}),Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBMAP:SortByteMap{},VarIDX:SortInt{})),Lbl'Unds-LT-'Int'Unds'{}(Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBMAP:SortByteMap{},VarIDX:SortInt{}),\dv{SortInt{}}("256")))),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("277"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(277,10,277,105)"), simplification{}(), UNIQUE'Unds'ID{}("f13a4e53d9aef119a579cc0c5454f2e1561d45c093f0ab81ca55c09c3d249e9f"), smt-lemma{}()]

// rule `_impliesBool_`(#token("false","Bool"),_0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1f2244d9b271fbf663741428beb3049daf5dd0a60f428c146b07d2595095f548) contentStartColumn(8) contentStartLine(355) org.kframework.attributes.Location(Location(355,8,355,40)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(\dv{SortBool{}}("false"),Var'Unds'0:SortBool{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("355"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(355,8,355,40)"), UNIQUE'Unds'ID{}("1f2244d9b271fbf663741428beb3049daf5dd0a60f428c146b07d2595095f548")]

// rule `_modInt_`(`_modInt_`(X,M) #as _1,N)=>_1 requires `_andBool_`(`_>Int_`(M,#token("0","Int")),`_<=Int_`(M,N)) ensures #token("true","Bool") [UNIQUE_ID(f129d2547ec280a9ccbae0618518bd427df9d3791252e5ac712b54225ac32d92) contentStartColumn(10) contentStartLine(48) org.kframework.attributes.Location(Location(48,10,50,25)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-LT-Eqls'Int'Unds'{}(VarM:SortInt{},VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(\and{SortInt{}}(Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarM:SortInt{}),Var'Unds'1:SortInt{}),VarN:SortInt{}),
        Var'Unds'1:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("48"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(48,10,50,25)"), simplification{}(), UNIQUE'Unds'ID{}("f129d2547ec280a9ccbae0618518bd427df9d3791252e5ac712b54225ac32d92")]

// rule `_modInt_`(I1,I2)=>`_%Int_`(`_+Int_`(`_%Int_`(I1,`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(06049b365f7975e4498cb4e762dcb432b2fbb5b4e91f53d1554c5a2c6bfac7a4) concrete() contentStartColumn(5) contentStartLine(470) org.kframework.attributes.Location(Location(470,5,473,23)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsPerc'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), concrete{}(), contentStartLine{}("470"), contentStartColumn{}("5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(470,5,473,23)"), UNIQUE'Unds'ID{}("06049b365f7975e4498cb4e762dcb432b2fbb5b4e91f53d1554c5a2c6bfac7a4")]

// rule `_modInt_`(X,N)=>X requires `_andBool_`(`_<=Int_`(#token("0","Int"),X),`_<Int_`(X,N)) ensures #token("true","Bool") [UNIQUE_ID(c8c8fbc02c5ac36d1d7915737449e7c25f52d6054ec61564c107b65c8c2c5aab) contentStartColumn(10) contentStartLine(39) org.kframework.attributes.Location(Location(39,10,41,25)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),VarX:SortInt{}),Lbl'Unds-LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarN:SortInt{}),
        VarX:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("39"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,10,41,25)"), simplification{}(), UNIQUE'Unds'ID{}("c8c8fbc02c5ac36d1d7915737449e7c25f52d6054ec61564c107b65c8c2c5aab")]

// rule `_modInt_`(X,`#pow(_)_WASM-DATA_Int_IValType`(ITYPE))=>`#unsigned(_,_)_WASM-DATA_Int_IValType_Int`(ITYPE,X) requires `#inSignedRange(_,_)_KWASM-LEMMAS_Bool_IValType_Int`(ITYPE,X) ensures #token("true","Bool") [UNIQUE_ID(277b4b4bcdae786ef9932e290d1d29826b9f1cac297a3e841f9c6e8b470ce366) contentStartColumn(10) contentStartLine(220) org.kframework.attributes.Location(Location(220,10,221,41)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Hash'inSignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarX:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},Lbl'Hash'pow'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(VarITYPE:SortIValType{})),
        Lbl'Hash'unsigned'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType'Unds'Int{}(VarITYPE:SortIValType{},VarX:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("220"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(220,10,221,41)"), simplification{}(), UNIQUE'Unds'ID{}("277b4b4bcdae786ef9932e290d1d29826b9f1cac297a3e841f9c6e8b470ce366")]

// rule `_modInt_`(`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,ADDR,WIDTH),#token("256","Int") #as _2)=>`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BM,ADDR) requires `_andBool_`(`notBool_`(`_==Int_`(WIDTH,#token("0","Int"))),`#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(BM)) ensures `_andBool_`(`_<=Int_`(#token("0","Int"),`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BM,ADDR)),`_<Int_`(`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BM,ADDR),_2)) [UNIQUE_ID(fecc600d585347046e733fe10baccf639203610e465fcba1f99ae9f079acb970) contentStartColumn(10) contentStartLine(297) org.kframework.attributes.Location(Location(297,10,301,39)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K "ensures" K [klabel(#ruleRequiresEnsures) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("0"))),Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(VarBM:SortByteMap{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{},VarWIDTH:SortInt{}),\and{SortInt{}}(\dv{SortInt{}}("256"),Var'Unds'2:SortInt{})),
        Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{})),
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{})),Lbl'Unds-LT-'Int'Unds'{}(Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBM:SortByteMap{},VarADDR:SortInt{}),Var'Unds'2:SortInt{})),
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K \"ensures\" K [klabel(#ruleRequiresEnsures) symbol()]"), contentStartLine{}("297"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(297,10,301,39)"), simplification{}(), UNIQUE'Unds'ID{}("fecc600d585347046e733fe10baccf639203610e465fcba1f99ae9f079acb970")]

// rule `_modInt_`(`_+Int_`(X,`_<<Int_`(Y,N)),POW)=>`_modInt_`(X,POW) requires `_andBool_`(`_andBool_`(`_>=Int_`(N,#token("0","Int")),`_>Int_`(POW,#token("0","Int"))),`_==Int_`(`_modInt_`(`_^Int_`(#token("2","Int"),N),POW),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(5f6256f1e893e7a694dcadd85b4772f2e191e9e7f8907ed5133c50f3a040d161) contentStartColumn(10) contentStartLine(190) org.kframework.attributes.Location(Location(190,10,193,45)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarPOW:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{}),VarPOW:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},Lbl'Unds-LT--LT-'Int'Unds'{}(VarY:SortInt{},VarN:SortInt{})),VarPOW:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarPOW:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("190"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,10,193,45)"), simplification{}(), UNIQUE'Unds'ID{}("5f6256f1e893e7a694dcadd85b4772f2e191e9e7f8907ed5133c50f3a040d161")]

// rule `_modInt_`(`_+Int_`(X,`_modInt_`(Y,M)),N)=>`_modInt_`(`_+Int_`(X,Y),N) requires `_andBool_`(`_andBool_`(`_>Int_`(M,#token("0","Int")),`_>Int_`(N,#token("0","Int"))),`_==Int_`(`_modInt_`(M,N),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(2770dbff7c1263519f6d4de7836556c1cc727c0c90748beedd3bb5d5a1baf264) contentStartColumn(10) contentStartLine(110) org.kframework.attributes.Location(Location(110,10,113,34)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarM:SortInt{},VarN:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},Lbl'Unds'modInt'Unds'{}(VarY:SortInt{},VarM:SortInt{})),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},VarY:SortInt{}),VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("110"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(110,10,113,34)"), simplification{}(), UNIQUE'Unds'ID{}("2770dbff7c1263519f6d4de7836556c1cc727c0c90748beedd3bb5d5a1baf264")]

// rule `_modInt_`(`_+Int_`(Y,`_*Int_`(X,M)),N)=>`_modInt_`(Y,N) requires `_andBool_`(`_andBool_`(`_>Int_`(M,#token("0","Int")),`_>Int_`(N,#token("0","Int"))),`_==Int_`(`_modInt_`(M,N),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(9ae1ae5453ea486865b00c08c0a3cf639b6f7325e748310c186782ef3923a9de) contentStartColumn(10) contentStartLine(89) org.kframework.attributes.Location(Location(89,10,92,34)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarM:SortInt{},VarN:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarY:SortInt{},Lbl'UndsStar'Int'Unds'{}(VarX:SortInt{},VarM:SortInt{})),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarY:SortInt{},VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("89"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(89,10,92,34)"), simplification{}(), UNIQUE'Unds'ID{}("9ae1ae5453ea486865b00c08c0a3cf639b6f7325e748310c186782ef3923a9de")]

// rule `_modInt_`(`_+Int_`(`_*Int_`(X,M),Y),N)=>`_modInt_`(Y,N) requires `_andBool_`(`_andBool_`(`_>Int_`(M,#token("0","Int")),`_>Int_`(N,#token("0","Int"))),`_==Int_`(`_modInt_`(M,N),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(ed96f920e87a2d62327744769afe3dbd97febf2f3241acffc566ca70d8fe2449) contentStartColumn(10) contentStartLine(83) org.kframework.attributes.Location(Location(83,10,86,34)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarM:SortInt{},VarN:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsStar'Int'Unds'{}(VarX:SortInt{},VarM:SortInt{}),VarY:SortInt{}),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarY:SortInt{},VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("83"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(83,10,86,34)"), simplification{}(), UNIQUE'Unds'ID{}("ed96f920e87a2d62327744769afe3dbd97febf2f3241acffc566ca70d8fe2449")]

// rule `_modInt_`(`_+Int_`(`_<<Int_`(Y,N),X),POW)=>`_modInt_`(X,POW) requires `_andBool_`(`_andBool_`(`_>=Int_`(N,#token("0","Int")),`_>Int_`(POW,#token("0","Int"))),`_==Int_`(`_modInt_`(`_^Int_`(#token("2","Int"),N),POW),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(df6068588f37b39259c6bafaee54ac7f2a2d2862daf04d5c0eb1ea252e773179) contentStartColumn(10) contentStartLine(196) org.kframework.attributes.Location(Location(196,10,199,45)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarPOW:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{}),VarPOW:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarY:SortInt{},VarN:SortInt{}),VarX:SortInt{}),VarPOW:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarPOW:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("196"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(196,10,199,45)"), simplification{}(), UNIQUE'Unds'ID{}("df6068588f37b39259c6bafaee54ac7f2a2d2862daf04d5c0eb1ea252e773179")]

// rule `_modInt_`(`_+Int_`(`_modInt_`(X,M),Y),N)=>`_modInt_`(`_+Int_`(X,Y),N) requires `_andBool_`(`_andBool_`(`_>Int_`(M,#token("0","Int")),`_>Int_`(N,#token("0","Int"))),`_==Int_`(`_modInt_`(M,N),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(188793262a37730b11f905e62e7bcbcfc8e220caf36022dbfcfe73708c008e94) contentStartColumn(10) contentStartLine(104) org.kframework.attributes.Location(Location(104,10,107,34)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarM:SortInt{},VarN:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarM:SortInt{}),VarY:SortInt{}),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarX:SortInt{},VarY:SortInt{}),VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("104"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(104,10,107,34)"), simplification{}(), UNIQUE'Unds'ID{}("188793262a37730b11f905e62e7bcbcfc8e220caf36022dbfcfe73708c008e94")]

// rule `_modInt_`(`_<<Int_`(X,N),M)=>#token("0","Int") requires `_<Int_`(M,`_^Int_`(#token("2","Int"),N)) ensures #token("true","Bool") [UNIQUE_ID(cb3420d78c6fead472b400d17f369a108339700b8344f027f03530c8d126e6ac) contentStartColumn(10) contentStartLine(136) org.kframework.attributes.Location(Location(136,10,136,60)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(VarM:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarM:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("136"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(136,10,136,60)"), simplification{}(), UNIQUE'Unds'ID{}("cb3420d78c6fead472b400d17f369a108339700b8344f027f03530c8d126e6ac")]

// rule `_modInt_`(`_<<Int_`(X,N),POW)=>`_<<Int_`(`_modInt_`(X,`_/Int_`(POW,`_^Int_`(#token("2","Int"),N))),N) requires `_andBool_`(`_andBool_`(`_>=Int_`(N,#token("0","Int")),`_>Int_`(POW,#token("0","Int"))),`_==Int_`(`_modInt_`(POW,`_^Int_`(#token("2","Int"),N)),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(338d1c576e05fd018b2758ce2f1f9d134eedbb04b62286eaf8bc06455407de01) contentStartColumn(10) contentStartLine(177) org.kframework.attributes.Location(Location(177,10,180,45)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-Eqls'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarPOW:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarPOW:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{})),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(VarX:SortInt{},VarN:SortInt{}),VarPOW:SortInt{}),
        Lbl'Unds-LT--LT-'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},Lbl'UndsSlsh'Int'Unds'{}(VarPOW:SortInt{},Lbl'UndsXor-'Int'Unds'{}(\dv{SortInt{}}("2"),VarN:SortInt{}))),VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("177"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(177,10,180,45)"), simplification{}(), UNIQUE'Unds'ID{}("338d1c576e05fd018b2758ce2f1f9d134eedbb04b62286eaf8bc06455407de01")]

// rule `_modInt_`(`_modInt_`(X,M),N)=>`_modInt_`(X,N) requires `_andBool_`(`_andBool_`(`_>Int_`(M,#token("0","Int")),`_>Int_`(N,#token("0","Int"))),`_==Int_`(`_modInt_`(M,N),#token("0","Int"))) ensures #token("true","Bool") [UNIQUE_ID(084feb3d9c80e33fc156be2417d18448bfaed326a82a166dbe4099ae5c0f45a3) contentStartColumn(10) contentStartLine(61) org.kframework.attributes.Location(Location(61,10,64,34)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarM:SortInt{},\dv{SortInt{}}("0")),Lbl'Unds-GT-'Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("0"))),Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarM:SortInt{},VarN:SortInt{}),\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarM:SortInt{}),VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarX:SortInt{},VarN:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("61"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(61,10,64,34)"), simplification{}(), UNIQUE'Unds'ID{}("084feb3d9c80e33fc156be2417d18448bfaed326a82a166dbe4099ae5c0f45a3")]

// rule `_orBool__BOOL_Bool_Bool_Bool`(#token("true","Bool") #as _2,_0)=>_2 requires _2 ensures _2 [UNIQUE_ID(dc3966c0487ffc67c7b2138883703d82c0ca3707d493d7ecbeed16591eda4002) contentStartColumn(8) contentStartLine(344) org.kframework.attributes.Location(Location(344,8,344,34)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'2:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'2:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("344"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(344,8,344,34)"), UNIQUE'Unds'ID{}("dc3966c0487ffc67c7b2138883703d82c0ca3707d493d7ecbeed16591eda4002")]

// rule `_orBool__BOOL_Bool_Bool_Bool`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ec0c7ff02d00be2a1ad79d358b0298a044942a1b87d9d60c5c00ad5022700119) contentStartColumn(8) contentStartLine(347) org.kframework.attributes.Location(Location(347,8,347,32)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(VarB:SortBool{},\dv{SortBool{}}("false")),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("347"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(347,8,347,32)"), UNIQUE'Unds'ID{}("ec0c7ff02d00be2a1ad79d358b0298a044942a1b87d9d60c5c00ad5022700119")]

// rule `_orBool__BOOL_Bool_Bool_Bool`(_0,#token("true","Bool") #as _2)=>_2 requires _2 ensures _2 [UNIQUE_ID(50b5fa147c0e5b9e6c6e24d3de018f312a796c662ac8cf4f82a65141b5c1c7ba) contentStartColumn(8) contentStartLine(345) org.kframework.attributes.Location(Location(345,8,345,34)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'2:SortBool{})),
        Var'Unds'2:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("345"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(345,8,345,34)"), UNIQUE'Unds'ID{}("50b5fa147c0e5b9e6c6e24d3de018f312a796c662ac8cf4f82a65141b5c1c7ba")]

// rule `_orBool__BOOL_Bool_Bool_Bool`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd354715c1ec4875a94c348cc1369a78bd9c7d7ea16a377b110867d2d6b9d976) contentStartColumn(8) contentStartLine(346) org.kframework.attributes.Location(Location(346,8,346,32)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(\dv{SortBool{}}("false"),VarB:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("346"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(346,8,346,32)"), UNIQUE'Unds'ID{}("fd354715c1ec4875a94c348cc1369a78bd9c7d7ea16a377b110867d2d6b9d976")]

// rule `_orElseBool_`(#token("true","Bool") #as _2,_0)=>_2 requires _2 ensures _2 [UNIQUE_ID(73e5640668de4bd9a9bc557aa9f2ab264a44a4afc44099933ed18b2d9fb7ecda) contentStartColumn(8) contentStartLine(349) org.kframework.attributes.Location(Location(349,8,349,33)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'2:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'2:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("349"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,8,349,33)"), UNIQUE'Unds'ID{}("73e5640668de4bd9a9bc557aa9f2ab264a44a4afc44099933ed18b2d9fb7ecda")]

// rule `_orElseBool_`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0943d1ee643c9b20db8186b069d596390234d7ae17deef0eb5df56d604652df5) contentStartColumn(8) contentStartLine(352) org.kframework.attributes.Location(Location(352,8,352,37)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(VarK:SortBool{},\dv{SortBool{}}("false")),
        VarK:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("352"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(352,8,352,37)"), UNIQUE'Unds'ID{}("0943d1ee643c9b20db8186b069d596390234d7ae17deef0eb5df56d604652df5")]

// rule `_orElseBool_`(_0,#token("true","Bool") #as _2)=>_2 requires _2 ensures _2 [UNIQUE_ID(53eb8e839f826d23ba5ac5b4c664ba890f66acecb1700ae2afae906c5ad31fde) contentStartColumn(8) contentStartLine(350) org.kframework.attributes.Location(Location(350,8,350,33)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'2:SortBool{})),
        Var'Unds'2:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("350"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(350,8,350,33)"), UNIQUE'Unds'ID{}("53eb8e839f826d23ba5ac5b4c664ba890f66acecb1700ae2afae906c5ad31fde")]

// rule `_orElseBool_`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(93c62e2a1ad3d088f4f73f7239196b7745782f7646fa90eb12c2c42741d645f0) contentStartColumn(8) contentStartLine(351) org.kframework.attributes.Location(Location(351,8,351,37)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(\dv{SortBool{}}("false"),VarK:SortBool{}),
        VarK:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("351"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(351,8,351,37)"), UNIQUE'Unds'ID{}("93c62e2a1ad3d088f4f73f7239196b7745782f7646fa90eb12c2c42741d645f0")]

// rule `_up/Int__WASM_Int_Int_Int`(I1,I2)=>`_/Int_`(`_+Int_`(I1,`_-Int_`(I2,#token("1","Int"))),I2) requires `_>Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(0a31a904c7a99265de2fdc2789cf49dcc4376df33fe37e6592193874a3e77316) contentStartColumn(10) contentStartLine(1287) org.kframework.attributes.Location(Location(1287,10,1287,74)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'up'Slsh'Int'UndsUnds'WASM'Unds'Int'Unds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsSlsh'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'-Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("1"))),VarI2:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("1287"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1287,10,1287,74)"), UNIQUE'Unds'ID{}("0a31a904c7a99265de2fdc2789cf49dcc4376df33fe37e6592193874a3e77316")]

// rule `_xorBool_`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(acf02bbb1c02949b2bfee30178d6cdd980414738448a5f9c5576e7522a683b4f) contentStartColumn(8) contentStartLine(342) org.kframework.attributes.Location(Location(342,8,342,38)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'Unds'{}(VarB:SortBool{},VarB:SortBool{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("342"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(342,8,342,38)"), UNIQUE'Unds'ID{}("acf02bbb1c02949b2bfee30178d6cdd980414738448a5f9c5576e7522a683b4f")]

// rule `_xorBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bc1d9558787d9b5f86fbd50908b7841cd343eaf620351d6791f03fb9434badc8) contentStartColumn(8) contentStartLine(341) org.kframework.attributes.Location(Location(341,8,341,38)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'Unds'{}(VarB:SortBool{},\dv{SortBool{}}("false")),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("341"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,8,341,38)"), UNIQUE'Unds'ID{}("bc1d9558787d9b5f86fbd50908b7841cd343eaf620351d6791f03fb9434badc8")]

// rule `_xorBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(20ee6a1a4ec1a9203558107910a0bf65c612a140ecce3ca920bc69806b8ccf3a) contentStartColumn(8) contentStartLine(340) org.kframework.attributes.Location(Location(340,8,340,38)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'Unds'{}(\dv{SortBool{}}("false"),VarB:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("340"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(340,8,340,38)"), UNIQUE'Unds'ID{}("20ee6a1a4ec1a9203558107910a0bf65c612a140ecce3ca920bc69806b8ccf3a")]

// rule `asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS)=>`_->__WASM-DATA_FuncType_VecType_VecType`(`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`param_WASM_TypeKeyWord`(.KList),TDECLS),`gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(`result_WASM_TypeKeyWord`(.KList),TDECLS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2b0bf625f46b95d2694eb8fdaad859f9a0d9c2a992b893b8763791d1bd5fffdb) contentStartColumn(10) contentStartLine(591) org.kframework.attributes.Location(Location(591,10,591,121)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncType{},R} (
        LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{}),
        Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblparam'Unds'WASM'Unds'TypeKeyWord{}(),VarTDECLS:SortTypeDecls{}),LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(Lblresult'Unds'WASM'Unds'TypeKeyWord{}(),VarTDECLS:SortTypeDecls{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("591"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(591,10,591,121)"), UNIQUE'Unds'ID{}("2b0bf625f46b95d2694eb8fdaad859f9a0d9c2a992b893b8763791d1bd5fffdb")]

// rule `asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(TYPEIDS,TYPES,`(type_)_WASM_TypeUse_Index`(TFIDX))=>`project:FuncType`(`Map:lookup`(TYPES,inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(TYPEIDS,TFIDX)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c0e0bfc933ddfd02d1b7825ba5315a1b34e52fbb1199c892a72f071838d3f69f) contentStartColumn(10) contentStartLine(593) org.kframework.attributes.Location(Location(593,10,593,113)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncType{},R} (
        LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(VarTYPEIDS:SortMap{},VarTYPES:SortMap{},Lbl'LPar'type'UndsRParUnds'WASM'Unds'TypeUse'Unds'Index{}(VarTFIDX:SortIndex{})),
        Lblproject'Coln'FuncType{}(kseq{}(LblMap'Coln'lookup{}(VarTYPES:SortMap{},inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarTYPEIDS:SortMap{},VarTFIDX:SortIndex{}))),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("593"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(593,10,593,113)"), UNIQUE'Unds'ID{}("c0e0bfc933ddfd02d1b7825ba5315a1b34e52fbb1199c892a72f071838d3f69f")]

// rule `asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(TYPEIDS,TYPES,`(type_)__WASM_TypeUse_Index_TypeDecls`(TFIDX,TDECLS))=>`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS) requires `_==K_`(`Map:lookup`(TYPES,inj{Int,KItem}(`#ContextLookup(_,_)_WASM-DATA_Int_Map_Index`(TYPEIDS,TFIDX))),inj{FuncType,KItem}(`unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS)))) ensures #token("true","Bool") [UNIQUE_ID(3e8cb6da85b074e665ebc7f179fdc548dcac5844d6917fdadc7be76606229b5b) contentStartColumn(10) contentStartLine(594) org.kframework.attributes.Location(Location(594,10,595,92)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(LblMap'Coln'lookup{}(VarTYPES:SortMap{},inj{SortInt{}, SortKItem{}}(Lbl'Hash'ContextLookup'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Map'Unds'Index{}(VarTYPEIDS:SortMap{},VarTFIDX:SortIndex{}))),dotk{}()),kseq{}(inj{SortFuncType{}, SortKItem{}}(LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{}))),dotk{}())),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortFuncType{},R} (
        LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(VarTYPEIDS:SortMap{},VarTYPES:SortMap{},Lbl'LPar'type'UndsRParUndsUnds'WASM'Unds'TypeUse'Unds'Index'Unds'TypeDecls{}(VarTFIDX:SortIndex{},VarTDECLS:SortTypeDecls{})),
        LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("594"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(594,10,595,92)"), UNIQUE'Unds'ID{}("3e8cb6da85b074e665ebc7f179fdc548dcac5844d6917fdadc7be76606229b5b")]

// rule `asFuncType(_,_,_)_WASM_FuncType_Map_Map_TypeUse`(_0,_1,inj{TypeDecls,TypeUse}(TDECLS))=>`asFuncType(_)_WASM_FuncType_TypeDecls`(TDECLS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9839cd16eb7863c7dc6e46df2bb260f065d476f35ae605d8e47f5a9e58c66078) contentStartColumn(10) contentStartLine(592) org.kframework.attributes.Location(Location(592,10,592,82)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncType{},R} (
        LblasFuncType'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'FuncType'Unds'Map'Unds'Map'Unds'TypeUse{}(Var'Unds'0:SortMap{},Var'Unds'1:SortMap{},inj{SortTypeDecls{}, SortTypeUse{}}(VarTDECLS:SortTypeDecls{})),
        LblasFuncType'LParUndsRParUnds'WASM'Unds'FuncType'Unds'TypeDecls{}(VarTDECLS:SortTypeDecls{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("592"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(592,10,592,82)"), UNIQUE'Unds'ID{}("9839cd16eb7863c7dc6e46df2bb260f065d476f35ae605d8e47f5a9e58c66078")]

// rule `asGMut(_)_WASM_GlobalType_TextFormatGlobalType`(`(mut_)_WASM_TextFormatGlobalType_AValType`(T))=>`___WASM_GlobalType_Mut_AValType`(`var_WASM-DATA_Mut`(.KList),T) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d1ac99cf2b083910fee47311cc72d3c9c60b8a1f6101cc6a5a469deea4e73d07) contentStartColumn(10) contentStartLine(475) org.kframework.attributes.Location(Location(475,10,475,49)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalType{},R} (
        LblasGMut'LParUndsRParUnds'WASM'Unds'GlobalType'Unds'TextFormatGlobalType{}(Lbl'LPar'mut'UndsRParUnds'WASM'Unds'TextFormatGlobalType'Unds'AValType{}(VarT:SortAValType{})),
        Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(Lblvar'Unds'WASM-DATA'Unds'Mut{}(),VarT:SortAValType{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("475"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(475,10,475,49)"), UNIQUE'Unds'ID{}("d1ac99cf2b083910fee47311cc72d3c9c60b8a1f6101cc6a5a469deea4e73d07")]

// rule `asGMut(_)_WASM_GlobalType_TextFormatGlobalType`(inj{AValType,TextFormatGlobalType}(T))=>`___WASM_GlobalType_Mut_AValType`(`const_WASM-DATA_Mut`(.KList),T) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aa974b4c1bae3b8c5f4ce58858762a3f68a97adea5b72bd2ec493c2a639ec4ec) contentStartColumn(10) contentStartLine(476) org.kframework.attributes.Location(Location(476,10,476,49)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalType{},R} (
        LblasGMut'LParUndsRParUnds'WASM'Unds'GlobalType'Unds'TextFormatGlobalType{}(inj{SortAValType{}, SortTextFormatGlobalType{}}(VarT:SortAValType{})),
        Lbl'UndsUndsUnds'WASM'Unds'GlobalType'Unds'Mut'Unds'AValType{}(Lblconst'Unds'WASM-DATA'Unds'Mut{}(),VarT:SortAValType{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("476"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(476,10,476,49)"), UNIQUE'Unds'ID{}("aa974b4c1bae3b8c5f4ce58858762a3f68a97adea5b72bd2ec493c2a639ec4ec")]

// rule `asLocalType(_)_WASM_VecType_LocalDecls`(LDECLS)=>`#asLocalType(_,_)_WASM_VecType_LocalDecls_ValTypes`(LDECLS,`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4c1ac60e42a137110374ecc0639e12b3090b89357d08ab4df8a2b829dffd91c4) contentStartColumn(11) contentStartLine(634) org.kframework.attributes.Location(Location(634,11,634,65)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        LblasLocalType'LParUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls{}(VarLDECLS:SortLocalDecls{}),
        Lbl'Hash'asLocalType'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'LocalDecls'Unds'ValTypes{}(VarLDECLS:SortLocalDecls{},Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("634"), contentStartColumn{}("11"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(634,11,634,65)"), UNIQUE'Unds'ID{}("4c1ac60e42a137110374ecc0639e12b3090b89357d08ab4df8a2b829dffd91c4")]

// rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_modInt_`(`_>>Int_`(I,IDX),`_<<Int_`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6d2521bec62ae0624c366eac1bef561e6cfe867154f1dc263fede52ab2e3cd35) contentStartColumn(8) contentStartLine(463) org.kframework.attributes.Location(Location(463,8,463,85)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI:SortInt{},VarIDX:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("463"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(463,8,463,85)"), UNIQUE'Unds'ID{}("6d2521bec62ae0624c366eac1bef561e6cfe867154f1dc263fede52ab2e3cd35")]

// rule `countAllOccurrences(_,_)_STRING_Int_String_String`(Source,ToCount)=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING_Int_String_String`(`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToCount,#token("0","Int")),`lengthString(_)_STRING_Int_String`(ToCount)),`lengthString(_)_STRING_Int_String`(Source)),ToCount)) requires `_>=Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(4bccfa06c644e08f8bc72d06c14c533f32eee6cde071a3b29aa26ff23c922baf) contentStartColumn(8) contentStartLine(634) org.kframework.attributes.Location(Location(634,8,635,60)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToCount:SortString{}),
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarToCount:SortString{})),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToCount:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("634"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(634,8,635,60)"), UNIQUE'Unds'ID{}("4bccfa06c644e08f8bc72d06c14c533f32eee6cde071a3b29aa26ff23c922baf")]

// rule `countAllOccurrences(_,_)_STRING_Int_String_String`(Source,ToCount)=>#token("0","Int") requires `_<Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(dfa3f190163a3253c79d99a66ad7826cdaebf15d32e558c2e1c1c28d223401ec) contentStartColumn(8) contentStartLine(632) org.kframework.attributes.Location(Location(632,8,633,59)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToCount:SortString{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("632"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(632,8,633,59)"), UNIQUE'Unds'ID{}("dfa3f190163a3253c79d99a66ad7826cdaebf15d32e558c2e1c1c28d223401ec")]

// rule `findChar(_,_,_)_STRING_Int_String_String_Int`(S1,S2,I)=>`#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),`findChar(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING_Int_String`(S2)),I),`#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findChar(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING_Int_String`(S2)),I),#token("-1","Int")),`findString(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT-COMMON_Int_Int_Int`(`findString(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`findChar(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING_Int_String`(S2)),I)))) requires `_=/=String__STRING_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(0d56eed034d2fa4ad082122b8d6b80f1e82c06fb05ba24f8cec9dcc22391f3c5) contentStartColumn(8) contentStartLine(627) org.kframework.attributes.Location(Location(627,8,627,431)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},VarS2:SortString{},VarI:SortInt{}),
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("627"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(627,8,627,431)"), UNIQUE'Unds'ID{}("0d56eed034d2fa4ad082122b8d6b80f1e82c06fb05ba24f8cec9dcc22391f3c5")]

// rule `findChar(_,_,_)_STRING_Int_String_String_Int`(_0,#token("\"\"","String"),_1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0591f2bf9f969151282b463b90a46889c2f24b2ccc17d5e7d0f4a39bac3b9431) contentStartColumn(8) contentStartLine(628) org.kframework.attributes.Location(Location(628,8,628,32)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(Var'Unds'0:SortString{},\dv{SortString{}}(""),Var'Unds'1:SortInt{}),
        \dv{SortInt{}}("-1")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("628"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(628,8,628,32)"), UNIQUE'Unds'ID{}("0591f2bf9f969151282b463b90a46889c2f24b2ccc17d5e7d0f4a39bac3b9431")]

// rule `freshInt(_)_INT_Int_Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1540ca30a8409b2d12d93dbe87ce1795c0b21bbb9e38cb622cd6b5997b7273d) contentStartColumn(8) contentStartLine(483) org.kframework.attributes.Location(Location(483,8,483,28)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(VarI:SortInt{}),
        VarI:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("483"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(483,8,483,28)"), UNIQUE'Unds'ID{}("f1540ca30a8409b2d12d93dbe87ce1795c0b21bbb9e38cb622cd6b5997b7273d")]

// rule `gatherTypes(_,_)_WASM_VecType_TypeKeyWord_TypeDecls`(TKW,TDECLS)=>`#gatherTypes(_,_,_)_WASM_VecType_TypeKeyWord_TypeDecls_ValTypes`(TKW,TDECLS,`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf7c84893448cda9b0a741e2aa97307f44ca1b8369331a835a09f83af92c4148) contentStartColumn(11) contentStartLine(566) org.kframework.attributes.Location(Location(566,11,566,86)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        LblgatherTypes'LParUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls{}(VarTKW:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{}),
        Lbl'Hash'gatherTypes'LParUndsCommUndsCommUndsRParUnds'WASM'Unds'VecType'Unds'TypeKeyWord'Unds'TypeDecls'Unds'ValTypes{}(VarTKW:SortTypeKeyWord{},VarTDECLS:SortTypeDecls{},Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("566"), contentStartColumn{}("11"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(566,11,566,86)"), UNIQUE'Unds'ID{}("cf7c84893448cda9b0a741e2aa97307f44ca1b8369331a835a09f83af92c4148")]

// rule getGeneratedCounterCell(`<generatedTop>`(DotVar0,Cell))=>Cell requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedCounterCell{},R} (
        LblgetGeneratedCounterCell{}(Lbl'-LT-'generatedTop'-GT-'{}(VarDotVar0:SortWasmCell{},VarCell:SortGeneratedCounterCell{})),
        VarCell:SortGeneratedCounterCell{}),
      \top{R}()))
  []

// rule initCurFrameCell(.KList)=>`<curFrame>`(initLocalsCell(.KList),initLocalIdsCell(.KList),initCurModIdxCell(.KList),initLabelDepthCell(.KList),initLabelIdsCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCurFrameCell{},R} (
        LblinitCurFrameCell{}(),
        Lbl'-LT-'curFrame'-GT-'{}(LblinitLocalsCell{}(),LblinitLocalIdsCell{}(),LblinitCurModIdxCell{}(),LblinitLabelDepthCell{}(),LblinitLabelIdsCell{}())),
      \top{R}()))
  [initializer{}()]

// rule initCurModIdxCell(.KList)=>`<curModIdx>`(`.Int_WASM-DATA_OptionalInt`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCurModIdxCell{},R} (
        LblinitCurModIdxCell{}(),
        Lbl'-LT-'curModIdx'-GT-'{}(Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())),
      \top{R}()))
  [initializer{}()]

// rule initDeterministicMemoryGrowthCell(.KList)=>`<deterministicMemoryGrowth>`(#token("true","Bool")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeterministicMemoryGrowthCell{},R} (
        LblinitDeterministicMemoryGrowthCell{}(),
        Lbl'-LT-'deterministicMemoryGrowth'-GT-'{}(\dv{SortBool{}}("true"))),
      \top{R}()))
  [initializer{}()]

// rule initExportsCell(.KList)=>`<exports>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortExportsCell{},R} (
        LblinitExportsCell{}(),
        Lbl'-LT-'exports'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initFAddrCell(.KList)=>`<fAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFAddrCell{},R} (
        LblinitFAddrCell{}(),
        Lbl'-LT-'fAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initFCodeCell(.KList)=>`<fCode>`(inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFCodeCell{},R} (
        LblinitFCodeCell{}(),
        Lbl'-LT-'fCode'-GT-'{}(inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()))),
      \top{R}()))
  [initializer{}()]

// rule initFLocalCell(.KList)=>`<fLocal>`(`.Type_WASM-DATA_Type`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFLocalCell{},R} (
        LblinitFLocalCell{}(),
        Lbl'-LT-'fLocal'-GT-'{}(Lbl'Stop'Type'Unds'WASM-DATA'Unds'Type{}())),
      \top{R}()))
  [initializer{}()]

// rule initFModInstCell(.KList)=>`<fModInst>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFModInstCell{},R} (
        LblinitFModInstCell{}(),
        Lbl'-LT-'fModInst'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initFTypeCell(.KList)=>`<fType>`(`.Type_WASM-DATA_Type`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFTypeCell{},R} (
        LblinitFTypeCell{}(),
        Lbl'-LT-'fType'-GT-'{}(Lbl'Stop'Type'Unds'WASM-DATA'Unds'Type{}())),
      \top{R}()))
  [initializer{}()]

// rule initFuncAddrsCell(.KList)=>`<funcAddrs>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncAddrsCell{},R} (
        LblinitFuncAddrsCell{}(),
        Lbl'-LT-'funcAddrs'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initFuncDefCell(.KList)=>`FuncDefCellMapItem`(initFAddrCell(.KList),`<funcDef>`(initFAddrCell(.KList),initFCodeCell(.KList),initFTypeCell(.KList),initFLocalCell(.KList),initFModInstCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncDefCellMap{},R} (
        LblinitFuncDefCell{}(),
        LblFuncDefCellMapItem{}(LblinitFAddrCell{}(),Lbl'-LT-'funcDef'-GT-'{}(LblinitFAddrCell{}(),LblinitFCodeCell{}(),LblinitFTypeCell{}(),LblinitFLocalCell{}(),LblinitFModInstCell{}()))),
      \top{R}()))
  [initializer{}()]

// rule initFuncIdsCell(.KList)=>`<funcIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncIdsCell{},R} (
        LblinitFuncIdsCell{}(),
        Lbl'-LT-'funcIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initFuncsCell(.KList)=>`<funcs>`(`.FuncDefCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncsCell{},R} (
        LblinitFuncsCell{}(),
        Lbl'-LT-'funcs'-GT-'{}(Lbl'Stop'FuncDefCellMap{}())),
      \top{R}()))
  [initializer{}()]

// rule initGAddrCell(.KList)=>`<gAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGAddrCell{},R} (
        LblinitGAddrCell{}(),
        Lbl'-LT-'gAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initGMutCell(.KList)=>`<gMut>`(`.Mut_WASM-DATA_Mut`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGMutCell{},R} (
        LblinitGMutCell{}(),
        Lbl'-LT-'gMut'-GT-'{}(Lbl'Stop'Mut'Unds'WASM-DATA'Unds'Mut{}())),
      \top{R}()))
  [initializer{}()]

// rule initGValueCell(.KList)=>`<gValue>`(`undefined_WASM-DATA_Val`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGValueCell{},R} (
        LblinitGValueCell{}(),
        Lbl'-LT-'gValue'-GT-'{}(Lblundefined'Unds'WASM-DATA'Unds'Val{}())),
      \top{R}()))
  [initializer{}()]

// rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedCounterCell{},R} (
        LblinitGeneratedCounterCell{}(),
        Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initGeneratedTopCell(Init)=>`<generatedTop>`(initWasmCell(Init),initGeneratedCounterCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedTopCell{},R} (
        LblinitGeneratedTopCell{}(VarInit:SortMap{}),
        Lbl'-LT-'generatedTop'-GT-'{}(LblinitWasmCell{}(VarInit:SortMap{}),LblinitGeneratedCounterCell{}())),
      \top{R}()))
  [initializer{}()]

// rule initGlobIdsCell(.KList)=>`<globIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobIdsCell{},R} (
        LblinitGlobIdsCell{}(),
        Lbl'-LT-'globIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initGlobalAddrsCell(.KList)=>`<globalAddrs>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalAddrsCell{},R} (
        LblinitGlobalAddrsCell{}(),
        Lbl'-LT-'globalAddrs'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initGlobalInstCell(.KList)=>`GlobalInstCellMapItem`(initGAddrCell(.KList),`<globalInst>`(initGAddrCell(.KList),initGValueCell(.KList),initGMutCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalInstCellMap{},R} (
        LblinitGlobalInstCell{}(),
        LblGlobalInstCellMapItem{}(LblinitGAddrCell{}(),Lbl'-LT-'globalInst'-GT-'{}(LblinitGAddrCell{}(),LblinitGValueCell{}(),LblinitGMutCell{}()))),
      \top{R}()))
  [initializer{}()]

// rule initGlobalsCell(.KList)=>`<globals>`(`.GlobalInstCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalsCell{},R} (
        LblinitGlobalsCell{}(),
        Lbl'-LT-'globals'-GT-'{}(Lbl'Stop'GlobalInstCellMap{}())),
      \top{R}()))
  [initializer{}()]

// rule initKCell(Init)=>`<k>`(inj{Stmts,KItem}(`project:Stmts`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$PGM","KConfigVar")))))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKCell{},R} (
        LblinitKCell{}(VarInit:SortMap{}),
        Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmts{}, SortKItem{}}(Lblproject'Coln'Stmts{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$PGM"))),dotk{}()))),dotk{}()))),
      \top{R}()))
  [initializer{}()]

// rule initLabelDepthCell(.KList)=>`<labelDepth>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLabelDepthCell{},R} (
        LblinitLabelDepthCell{}(),
        Lbl'-LT-'labelDepth'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initLabelIdsCell(.KList)=>`<labelIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLabelIdsCell{},R} (
        LblinitLabelIdsCell{}(),
        Lbl'-LT-'labelIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initLocalIdsCell(.KList)=>`<localIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalIdsCell{},R} (
        LblinitLocalIdsCell{}(),
        Lbl'-LT-'localIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initLocalsCell(.KList)=>`<locals>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalsCell{},R} (
        LblinitLocalsCell{}(),
        Lbl'-LT-'locals'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initMAddrCell(.KList)=>`<mAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMAddrCell{},R} (
        LblinitMAddrCell{}(),
        Lbl'-LT-'mAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initMainStoreCell(.KList)=>`<mainStore>`(initFuncsCell(.KList),initNextFuncAddrCell(.KList),initTabsCell(.KList),initNextTabAddrCell(.KList),initMemsCell(.KList),initNextMemAddrCell(.KList),initGlobalsCell(.KList),initNextGlobAddrCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMainStoreCell{},R} (
        LblinitMainStoreCell{}(),
        Lbl'-LT-'mainStore'-GT-'{}(LblinitFuncsCell{}(),LblinitNextFuncAddrCell{}(),LblinitTabsCell{}(),LblinitNextTabAddrCell{}(),LblinitMemsCell{}(),LblinitNextMemAddrCell{}(),LblinitGlobalsCell{}(),LblinitNextGlobAddrCell{}())),
      \top{R}()))
  [initializer{}()]

// rule initMdataCell(.KList)=>`<mdata>`(`ByteMap<|_|>_WASM-DATA_ByteMap_Map`(`.Map`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMdataCell{},R} (
        LblinitMdataCell{}(),
        Lbl'-LT-'mdata'-GT-'{}(LblByteMap'-LT-PipeUndsPipe-GT-Unds'WASM-DATA'Unds'ByteMap'Unds'Map{}(Lbl'Stop'Map{}()))),
      \top{R}()))
  [initializer{}()]

// rule initMemAddrsCell(.KList)=>`<memAddrs>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemAddrsCell{},R} (
        LblinitMemAddrsCell{}(),
        Lbl'-LT-'memAddrs'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initMemIdsCell(.KList)=>`<memIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemIdsCell{},R} (
        LblinitMemIdsCell{}(),
        Lbl'-LT-'memIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initMemInstCell(.KList)=>`MemInstCellMapItem`(initMAddrCell(.KList),`<memInst>`(initMAddrCell(.KList),initMmaxCell(.KList),initMsizeCell(.KList),initMdataCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemInstCellMap{},R} (
        LblinitMemInstCell{}(),
        LblMemInstCellMapItem{}(LblinitMAddrCell{}(),Lbl'-LT-'memInst'-GT-'{}(LblinitMAddrCell{}(),LblinitMmaxCell{}(),LblinitMsizeCell{}(),LblinitMdataCell{}()))),
      \top{R}()))
  [initializer{}()]

// rule initMemsCell(.KList)=>`<mems>`(`.MemInstCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemsCell{},R} (
        LblinitMemsCell{}(),
        Lbl'-LT-'mems'-GT-'{}(Lbl'Stop'MemInstCellMap{}())),
      \top{R}()))
  [initializer{}()]

// rule initMmaxCell(.KList)=>`<mmax>`(`.Int_WASM-DATA_OptionalInt`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMmaxCell{},R} (
        LblinitMmaxCell{}(),
        Lbl'-LT-'mmax'-GT-'{}(Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())),
      \top{R}()))
  [initializer{}()]

// rule initModIdxCell(.KList)=>`<modIdx>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModIdxCell{},R} (
        LblinitModIdxCell{}(),
        Lbl'-LT-'modIdx'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initModuleIdsCell(.KList)=>`<moduleIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleIdsCell{},R} (
        LblinitModuleIdsCell{}(),
        Lbl'-LT-'moduleIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initModuleInstCell(.KList)=>`ModuleInstCellMapItem`(initModIdxCell(.KList),`<moduleInst>`(initModIdxCell(.KList),initExportsCell(.KList),initTypeIdsCell(.KList),initTypesCell(.KList),initNextTypeIdxCell(.KList),initFuncIdsCell(.KList),initFuncAddrsCell(.KList),initNextFuncIdxCell(.KList),initTabIdsCell(.KList),initTabAddrsCell(.KList),initMemIdsCell(.KList),initMemAddrsCell(.KList),initGlobIdsCell(.KList),initGlobalAddrsCell(.KList),initNextGlobIdxCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleInstCellMap{},R} (
        LblinitModuleInstCell{}(),
        LblModuleInstCellMapItem{}(LblinitModIdxCell{}(),Lbl'-LT-'moduleInst'-GT-'{}(LblinitModIdxCell{}(),LblinitExportsCell{}(),LblinitTypeIdsCell{}(),LblinitTypesCell{}(),LblinitNextTypeIdxCell{}(),LblinitFuncIdsCell{}(),LblinitFuncAddrsCell{}(),LblinitNextFuncIdxCell{}(),LblinitTabIdsCell{}(),LblinitTabAddrsCell{}(),LblinitMemIdsCell{}(),LblinitMemAddrsCell{}(),LblinitGlobIdsCell{}(),LblinitGlobalAddrsCell{}(),LblinitNextGlobIdxCell{}()))),
      \top{R}()))
  [initializer{}()]

// rule initModuleInstancesCell(.KList)=>`<moduleInstances>`(`.ModuleInstCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleInstancesCell{},R} (
        LblinitModuleInstancesCell{}(),
        Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Stop'ModuleInstCellMap{}())),
      \top{R}()))
  [initializer{}()]

// rule initModuleRegistryCell(.KList)=>`<moduleRegistry>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleRegistryCell{},R} (
        LblinitModuleRegistryCell{}(),
        Lbl'-LT-'moduleRegistry'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initMsizeCell(.KList)=>`<msize>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMsizeCell{},R} (
        LblinitMsizeCell{}(),
        Lbl'-LT-'msize'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextFreshIdCell(.KList)=>`<nextFreshId>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFreshIdCell{},R} (
        LblinitNextFreshIdCell{}(),
        Lbl'-LT-'nextFreshId'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextFuncAddrCell(.KList)=>`<nextFuncAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFuncAddrCell{},R} (
        LblinitNextFuncAddrCell{}(),
        Lbl'-LT-'nextFuncAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextFuncIdxCell(.KList)=>`<nextFuncIdx>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFuncIdxCell{},R} (
        LblinitNextFuncIdxCell{}(),
        Lbl'-LT-'nextFuncIdx'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextGlobAddrCell(.KList)=>`<nextGlobAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextGlobAddrCell{},R} (
        LblinitNextGlobAddrCell{}(),
        Lbl'-LT-'nextGlobAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextGlobIdxCell(.KList)=>`<nextGlobIdx>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextGlobIdxCell{},R} (
        LblinitNextGlobIdxCell{}(),
        Lbl'-LT-'nextGlobIdx'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextMemAddrCell(.KList)=>`<nextMemAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextMemAddrCell{},R} (
        LblinitNextMemAddrCell{}(),
        Lbl'-LT-'nextMemAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextModuleIdxCell(.KList)=>`<nextModuleIdx>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextModuleIdxCell{},R} (
        LblinitNextModuleIdxCell{}(),
        Lbl'-LT-'nextModuleIdx'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextTabAddrCell(.KList)=>`<nextTabAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextTabAddrCell{},R} (
        LblinitNextTabAddrCell{}(),
        Lbl'-LT-'nextTabAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initNextTypeIdxCell(.KList)=>`<nextTypeIdx>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextTypeIdxCell{},R} (
        LblinitNextTypeIdxCell{}(),
        Lbl'-LT-'nextTypeIdx'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initTAddrCell(.KList)=>`<tAddr>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTAddrCell{},R} (
        LblinitTAddrCell{}(),
        Lbl'-LT-'tAddr'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initTabAddrsCell(.KList)=>`<tabAddrs>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabAddrsCell{},R} (
        LblinitTabAddrsCell{}(),
        Lbl'-LT-'tabAddrs'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initTabIdsCell(.KList)=>`<tabIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabIdsCell{},R} (
        LblinitTabIdsCell{}(),
        Lbl'-LT-'tabIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initTabInstCell(.KList)=>`TabInstCellMapItem`(initTAddrCell(.KList),`<tabInst>`(initTAddrCell(.KList),initTmaxCell(.KList),initTsizeCell(.KList),initTdataCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabInstCellMap{},R} (
        LblinitTabInstCell{}(),
        LblTabInstCellMapItem{}(LblinitTAddrCell{}(),Lbl'-LT-'tabInst'-GT-'{}(LblinitTAddrCell{}(),LblinitTmaxCell{}(),LblinitTsizeCell{}(),LblinitTdataCell{}()))),
      \top{R}()))
  [initializer{}()]

// rule initTabsCell(.KList)=>`<tabs>`(`.TabInstCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabsCell{},R} (
        LblinitTabsCell{}(),
        Lbl'-LT-'tabs'-GT-'{}(Lbl'Stop'TabInstCellMap{}())),
      \top{R}()))
  [initializer{}()]

// rule initTdataCell(.KList)=>`<tdata>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTdataCell{},R} (
        LblinitTdataCell{}(),
        Lbl'-LT-'tdata'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initTmaxCell(.KList)=>`<tmax>`(`.Int_WASM-DATA_OptionalInt`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTmaxCell{},R} (
        LblinitTmaxCell{}(),
        Lbl'-LT-'tmax'-GT-'{}(Lbl'Stop'Int'Unds'WASM-DATA'Unds'OptionalInt{}())),
      \top{R}()))
  [initializer{}()]

// rule initTsizeCell(.KList)=>`<tsize>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTsizeCell{},R} (
        LblinitTsizeCell{}(),
        Lbl'-LT-'tsize'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initTypeIdsCell(.KList)=>`<typeIds>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeIdsCell{},R} (
        LblinitTypeIdsCell{}(),
        Lbl'-LT-'typeIds'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initTypesCell(.KList)=>`<types>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypesCell{},R} (
        LblinitTypesCell{}(),
        Lbl'-LT-'types'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initValstackCell(.KList)=>`<valstack>`(`.ValStack_WASM-DATA_ValStack`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValstackCell{},R} (
        LblinitValstackCell{}(),
        Lbl'-LT-'valstack'-GT-'{}(Lbl'Stop'ValStack'Unds'WASM-DATA'Unds'ValStack{}())),
      \top{R}()))
  [initializer{}()]

// rule initWasmCell(Init)=>`<wasm>`(initKCell(Init),initValstackCell(.KList),initCurFrameCell(.KList),initModuleRegistryCell(.KList),initModuleIdsCell(.KList),initModuleInstancesCell(.KList),initNextModuleIdxCell(.KList),initMainStoreCell(.KList),initDeterministicMemoryGrowthCell(.KList),initNextFreshIdCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWasmCell{},R} (
        LblinitWasmCell{}(VarInit:SortMap{}),
        Lbl'-LT-'wasm'-GT-'{}(LblinitKCell{}(VarInit:SortMap{}),LblinitValstackCell{}(),LblinitCurFrameCell{}(),LblinitModuleRegistryCell{}(),LblinitModuleIdsCell{}(),LblinitModuleInstancesCell{}(),LblinitNextModuleIdxCell{}(),LblinitMainStoreCell{}(),LblinitDeterministicMemoryGrowthCell{}(),LblinitNextFreshIdCell{}())),
      \top{R}()))
  [initializer{}()]

// rule inj{WasmIntToken,Int}(WINT)=>`#parseWasmInt(_)_WASM-DATA_Int_String`(`replaceAll(_,_,_)_STRING_String_String_String_String`(`#parseWasmIntToken(_)_WASM-DATA_String_WasmIntToken`(WINT),#token("\"_\"","String"),#token("\"\"","String"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ad709648dedaae769919bfc4ef7d1e852d2658e320394ac4744c415eb70ac8da) contentStartColumn(10) contentStartLine(219) macro() org.kframework.attributes.Location(Location(219,10,219,91)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
// rule `is#Layout`(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:Sort'Hash'Layout{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{Sort'Hash'Layout{}, SortKItem{}}(Var'Unds'1:Sort'Hash'Layout{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        Lblis'Hash'Layout{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `is#Layout`(inj{#Layout,KItem}(#Layout))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lblis'Hash'Layout{}(kseq{}(inj{Sort'Hash'Layout{}, SortKItem{}}(Var'Hash'Layout:Sort'Hash'Layout{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAValType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortAValType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAValType{}, SortKItem{}}(Var'Unds'1:SortAValType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAValType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAValType(inj{AValType,KItem}(AValType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAValType{}(kseq{}(inj{SortAValType{}, SortKItem{}}(VarAValType:SortAValType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAlignArg(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortAlignArg{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAlignArg{}, SortKItem{}}(Var'Unds'0:SortAlignArg{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAlignArg{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAlignArg(inj{AlignArg,KItem}(AlignArg))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAlignArg{}(kseq{}(inj{SortAlignArg{}, SortKItem{}}(VarAlignArg:SortAlignArg{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAllocatedKind(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortAllocatedKind{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAllocatedKind{}, SortKItem{}}(Var'Unds'0:SortAllocatedKind{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAllocatedKind{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAllocatedKind(inj{AllocatedKind,KItem}(AllocatedKind))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAllocatedKind{}(kseq{}(inj{SortAllocatedKind{}, SortKItem{}}(VarAllocatedKind:SortAllocatedKind{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBlockInstr(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortBlockInstr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBlockInstr{}, SortKItem{}}(Var'Unds'1:SortBlockInstr{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBlockInstr{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBlockInstr(inj{BlockInstr,KItem}(BlockInstr))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBlockInstr{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(VarBlockInstr:SortBlockInstr{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBool(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortBool{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'0:SortBool{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBool{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBool(inj{Bool,KItem}(Bool))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBool{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isByteMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortByteMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortByteMap{}, SortKItem{}}(Var'Unds'0:SortByteMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisByteMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isByteMap(inj{ByteMap,KItem}(ByteMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisByteMap{}(kseq{}(inj{SortByteMap{}, SortKItem{}}(VarByteMap:SortByteMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBytes(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortBytes{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBytes{}, SortKItem{}}(Var'Unds'1:SortBytes{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBytes{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBytes(inj{Bytes,KItem}(Bytes))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBytes{}(kseq{}(inj{SortBytes{}, SortKItem{}}(VarBytes:SortBytes{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCell{}, SortKItem{}}(Var'Unds'1:SortCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCell(inj{Cell,KItem}(Cell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCell{}(kseq{}(inj{SortCell{}, SortKItem{}}(VarCell:SortCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCurFrameCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCurFrameCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCurFrameCell{}, SortKItem{}}(Var'Unds'0:SortCurFrameCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCurFrameCell(inj{CurFrameCell,KItem}(CurFrameCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCell{}(kseq{}(inj{SortCurFrameCell{}, SortKItem{}}(VarCurFrameCell:SortCurFrameCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCurFrameCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCurFrameCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCurFrameCellFragment{}, SortKItem{}}(Var'Unds'1:SortCurFrameCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCurFrameCellFragment(inj{CurFrameCellFragment,KItem}(CurFrameCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCellFragment{}(kseq{}(inj{SortCurFrameCellFragment{}, SortKItem{}}(VarCurFrameCellFragment:SortCurFrameCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCurFrameCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCurFrameCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCurFrameCellOpt{}, SortKItem{}}(Var'Unds'1:SortCurFrameCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCurFrameCellOpt(inj{CurFrameCellOpt,KItem}(CurFrameCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurFrameCellOpt{}(kseq{}(inj{SortCurFrameCellOpt{}, SortKItem{}}(VarCurFrameCellOpt:SortCurFrameCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCurModIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCurModIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCurModIdxCell{}, SortKItem{}}(Var'Unds'1:SortCurModIdxCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurModIdxCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCurModIdxCell(inj{CurModIdxCell,KItem}(CurModIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurModIdxCell{}(kseq{}(inj{SortCurModIdxCell{}, SortKItem{}}(VarCurModIdxCell:SortCurModIdxCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCurModIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCurModIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCurModIdxCellOpt{}, SortKItem{}}(Var'Unds'0:SortCurModIdxCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurModIdxCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCurModIdxCellOpt(inj{CurModIdxCellOpt,KItem}(CurModIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCurModIdxCellOpt{}(kseq{}(inj{SortCurModIdxCellOpt{}, SortKItem{}}(VarCurModIdxCellOpt:SortCurModIdxCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCvtOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCvtOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCvtOp{}, SortKItem{}}(Var'Unds'0:SortCvtOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCvtOp(inj{CvtOp,KItem}(CvtOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtOp{}(kseq{}(inj{SortCvtOp{}, SortKItem{}}(VarCvtOp:SortCvtOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCvtf32Op(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCvtf32Op{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCvtf32Op{}, SortKItem{}}(Var'Unds'1:SortCvtf32Op{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtf32Op{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCvtf32Op(inj{Cvtf32Op,KItem}(Cvtf32Op))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtf32Op{}(kseq{}(inj{SortCvtf32Op{}, SortKItem{}}(VarCvtf32Op:SortCvtf32Op{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCvtf64Op(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCvtf64Op{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCvtf64Op{}, SortKItem{}}(Var'Unds'1:SortCvtf64Op{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtf64Op{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCvtf64Op(inj{Cvtf64Op,KItem}(Cvtf64Op))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvtf64Op{}(kseq{}(inj{SortCvtf64Op{}, SortKItem{}}(VarCvtf64Op:SortCvtf64Op{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCvti32Op(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCvti32Op{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCvti32Op{}, SortKItem{}}(Var'Unds'0:SortCvti32Op{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvti32Op{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCvti32Op(inj{Cvti32Op,KItem}(Cvti32Op))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvti32Op{}(kseq{}(inj{SortCvti32Op{}, SortKItem{}}(VarCvti32Op:SortCvti32Op{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCvti64Op(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCvti64Op{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCvti64Op{}, SortKItem{}}(Var'Unds'0:SortCvti64Op{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvti64Op{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCvti64Op(inj{Cvti64Op,KItem}(Cvti64Op))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCvti64Op{}(kseq{}(inj{SortCvti64Op{}, SortKItem{}}(VarCvti64Op:SortCvti64Op{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDataDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDataDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDataDefn{}, SortKItem{}}(Var'Unds'1:SortDataDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDataDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDataDefn(inj{DataDefn,KItem}(DataDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDataDefn{}(kseq{}(inj{SortDataDefn{}, SortKItem{}}(VarDataDefn:SortDataDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDataString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDataString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDataString{}, SortKItem{}}(Var'Unds'1:SortDataString{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDataString{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDataString(inj{DataString,KItem}(DataString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDataString{}(kseq{}(inj{SortDataString{}, SortKItem{}}(VarDataString:SortDataString{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDefn{}, SortKItem{}}(Var'Unds'0:SortDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDefn(inj{Defn,KItem}(Defn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefn{}(kseq{}(inj{SortDefn{}, SortKItem{}}(VarDefn:SortDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDefns(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDefns{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDefns{}, SortKItem{}}(Var'Unds'1:SortDefns{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefns{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDefns(inj{Defns,KItem}(Defns))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefns{}(kseq{}(inj{SortDefns{}, SortKItem{}}(VarDefns:SortDefns{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDeterministicMemoryGrowthCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDeterministicMemoryGrowthCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDeterministicMemoryGrowthCell{}, SortKItem{}}(Var'Unds'1:SortDeterministicMemoryGrowthCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeterministicMemoryGrowthCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDeterministicMemoryGrowthCell(inj{DeterministicMemoryGrowthCell,KItem}(DeterministicMemoryGrowthCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeterministicMemoryGrowthCell{}(kseq{}(inj{SortDeterministicMemoryGrowthCell{}, SortKItem{}}(VarDeterministicMemoryGrowthCell:SortDeterministicMemoryGrowthCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDeterministicMemoryGrowthCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortDeterministicMemoryGrowthCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}}(Var'Unds'0:SortDeterministicMemoryGrowthCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeterministicMemoryGrowthCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDeterministicMemoryGrowthCellOpt(inj{DeterministicMemoryGrowthCellOpt,KItem}(DeterministicMemoryGrowthCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeterministicMemoryGrowthCellOpt{}(kseq{}(inj{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}}(VarDeterministicMemoryGrowthCellOpt:SortDeterministicMemoryGrowthCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isElemDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortElemDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortElemDefn{}, SortKItem{}}(Var'Unds'1:SortElemDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisElemDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isElemDefn(inj{ElemDefn,KItem}(ElemDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisElemDefn{}(kseq{}(inj{SortElemDefn{}, SortKItem{}}(VarElemDefn:SortElemDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isElemSegment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortElemSegment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortElemSegment{}, SortKItem{}}(Var'Unds'1:SortElemSegment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisElemSegment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isElemSegment(inj{ElemSegment,KItem}(ElemSegment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisElemSegment{}(kseq{}(inj{SortElemSegment{}, SortKItem{}}(VarElemSegment:SortElemSegment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isEmptyStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortEmptyStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortEmptyStmt{}, SortKItem{}}(Var'Unds'1:SortEmptyStmt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEmptyStmt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isEmptyStmt(inj{EmptyStmt,KItem}(EmptyStmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEmptyStmt{}(kseq{}(inj{SortEmptyStmt{}, SortKItem{}}(VarEmptyStmt:SortEmptyStmt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isEmptyStmts(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortEmptyStmts{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortEmptyStmts{}, SortKItem{}}(Var'Unds'0:SortEmptyStmts{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEmptyStmts{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isEmptyStmts(inj{EmptyStmts,KItem}(EmptyStmts))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEmptyStmts{}(kseq{}(inj{SortEmptyStmts{}, SortKItem{}}(VarEmptyStmts:SortEmptyStmts{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isEndianness(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortEndianness{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortEndianness{}, SortKItem{}}(Var'Unds'1:SortEndianness{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEndianness{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isEndianness(inj{Endianness,KItem}(Endianness))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEndianness{}(kseq{}(inj{SortEndianness{}, SortKItem{}}(VarEndianness:SortEndianness{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isExportDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortExportDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortExportDefn{}, SortKItem{}}(Var'Unds'1:SortExportDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isExportDefn(inj{ExportDefn,KItem}(ExportDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportDefn{}(kseq{}(inj{SortExportDefn{}, SortKItem{}}(VarExportDefn:SortExportDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isExportsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortExportsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortExportsCell{}, SortKItem{}}(Var'Unds'0:SortExportsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isExportsCell(inj{ExportsCell,KItem}(ExportsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportsCell{}(kseq{}(inj{SortExportsCell{}, SortKItem{}}(VarExportsCell:SortExportsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isExportsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortExportsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortExportsCellOpt{}, SortKItem{}}(Var'Unds'1:SortExportsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isExportsCellOpt(inj{ExportsCellOpt,KItem}(ExportsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExportsCellOpt{}(kseq{}(inj{SortExportsCellOpt{}, SortKItem{}}(VarExportsCellOpt:SortExportsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isExternval(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortExternval{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortExternval{}, SortKItem{}}(Var'Unds'0:SortExternval{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExternval{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isExternval(inj{Externval,KItem}(Externval))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExternval{}(kseq{}(inj{SortExternval{}, SortKItem{}}(VarExternval:SortExternval{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFAddrCell{}, SortKItem{}}(Var'Unds'1:SortFAddrCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFAddrCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFAddrCell(inj{FAddrCell,KItem}(FAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFAddrCell{}(kseq{}(inj{SortFAddrCell{}, SortKItem{}}(VarFAddrCell:SortFAddrCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortFAddrCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFAddrCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFAddrCellOpt(inj{FAddrCellOpt,KItem}(FAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFAddrCellOpt{}(kseq{}(inj{SortFAddrCellOpt{}, SortKItem{}}(VarFAddrCellOpt:SortFAddrCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFBinOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFBinOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFBinOp{}, SortKItem{}}(Var'Unds'1:SortFBinOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFBinOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFBinOp(inj{FBinOp,KItem}(FBinOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFBinOp{}(kseq{}(inj{SortFBinOp{}, SortKItem{}}(VarFBinOp:SortFBinOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFCodeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFCodeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFCodeCell{}, SortKItem{}}(Var'Unds'1:SortFCodeCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFCodeCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFCodeCell(inj{FCodeCell,KItem}(FCodeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFCodeCell{}(kseq{}(inj{SortFCodeCell{}, SortKItem{}}(VarFCodeCell:SortFCodeCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFCodeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFCodeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFCodeCellOpt{}, SortKItem{}}(Var'Unds'1:SortFCodeCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFCodeCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFCodeCellOpt(inj{FCodeCellOpt,KItem}(FCodeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFCodeCellOpt{}(kseq{}(inj{SortFCodeCellOpt{}, SortKItem{}}(VarFCodeCellOpt:SortFCodeCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFLocalCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFLocalCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFLocalCell{}, SortKItem{}}(Var'Unds'1:SortFLocalCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFLocalCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFLocalCell(inj{FLocalCell,KItem}(FLocalCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFLocalCell{}(kseq{}(inj{SortFLocalCell{}, SortKItem{}}(VarFLocalCell:SortFLocalCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFLocalCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFLocalCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFLocalCellOpt{}, SortKItem{}}(Var'Unds'0:SortFLocalCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFLocalCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFLocalCellOpt(inj{FLocalCellOpt,KItem}(FLocalCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFLocalCellOpt{}(kseq{}(inj{SortFLocalCellOpt{}, SortKItem{}}(VarFLocalCellOpt:SortFLocalCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFModInstCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFModInstCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFModInstCell{}, SortKItem{}}(Var'Unds'1:SortFModInstCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFModInstCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFModInstCell(inj{FModInstCell,KItem}(FModInstCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFModInstCell{}(kseq{}(inj{SortFModInstCell{}, SortKItem{}}(VarFModInstCell:SortFModInstCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFModInstCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFModInstCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFModInstCellOpt{}, SortKItem{}}(Var'Unds'1:SortFModInstCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFModInstCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFModInstCellOpt(inj{FModInstCellOpt,KItem}(FModInstCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFModInstCellOpt{}(kseq{}(inj{SortFModInstCellOpt{}, SortKItem{}}(VarFModInstCellOpt:SortFModInstCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFRelOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFRelOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFRelOp{}, SortKItem{}}(Var'Unds'0:SortFRelOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFRelOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFRelOp(inj{FRelOp,KItem}(FRelOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFRelOp{}(kseq{}(inj{SortFRelOp{}, SortKItem{}}(VarFRelOp:SortFRelOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFTypeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFTypeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFTypeCell{}, SortKItem{}}(Var'Unds'0:SortFTypeCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFTypeCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFTypeCell(inj{FTypeCell,KItem}(FTypeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFTypeCell{}(kseq{}(inj{SortFTypeCell{}, SortKItem{}}(VarFTypeCell:SortFTypeCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFTypeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFTypeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFTypeCellOpt{}, SortKItem{}}(Var'Unds'0:SortFTypeCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFTypeCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFTypeCellOpt(inj{FTypeCellOpt,KItem}(FTypeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFTypeCellOpt{}(kseq{}(inj{SortFTypeCellOpt{}, SortKItem{}}(VarFTypeCellOpt:SortFTypeCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFUnOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFUnOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFUnOp{}, SortKItem{}}(Var'Unds'0:SortFUnOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFUnOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFUnOp(inj{FUnOp,KItem}(FUnOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFUnOp{}(kseq{}(inj{SortFUnOp{}, SortKItem{}}(VarFUnOp:SortFUnOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFVal(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFVal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFVal{}, SortKItem{}}(Var'Unds'0:SortFVal{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFVal{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFVal(inj{FVal,KItem}(FVal))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFVal{}(kseq{}(inj{SortFVal{}, SortKItem{}}(VarFVal:SortFVal{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFValType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFValType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFValType{}, SortKItem{}}(Var'Unds'1:SortFValType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFValType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFValType(inj{FValType,KItem}(FValType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFValType{}(kseq{}(inj{SortFValType{}, SortKItem{}}(VarFValType:SortFValType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFloat(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFloat{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFloat{}, SortKItem{}}(Var'Unds'1:SortFloat{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFloat{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFloat(inj{Float,KItem}(Float))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFloat{}(kseq{}(inj{SortFloat{}, SortKItem{}}(VarFloat:SortFloat{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFoldedInstr(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFoldedInstr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Var'Unds'0:SortFoldedInstr{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFoldedInstr{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFoldedInstr(inj{FoldedInstr,KItem}(FoldedInstr))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFoldedInstr{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(VarFoldedInstr:SortFoldedInstr{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFrame(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFrame{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFrame{}, SortKItem{}}(Var'Unds'0:SortFrame{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFrame{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFrame(inj{Frame,KItem}(Frame))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFrame{}(kseq{}(inj{SortFrame{}, SortKItem{}}(VarFrame:SortFrame{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncAddrsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncAddrsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncAddrsCell{}, SortKItem{}}(Var'Unds'1:SortFuncAddrsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncAddrsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncAddrsCell(inj{FuncAddrsCell,KItem}(FuncAddrsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncAddrsCell{}(kseq{}(inj{SortFuncAddrsCell{}, SortKItem{}}(VarFuncAddrsCell:SortFuncAddrsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncAddrsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncAddrsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncAddrsCellOpt{}, SortKItem{}}(Var'Unds'0:SortFuncAddrsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncAddrsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncAddrsCellOpt(inj{FuncAddrsCellOpt,KItem}(FuncAddrsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncAddrsCellOpt{}(kseq{}(inj{SortFuncAddrsCellOpt{}, SortKItem{}}(VarFuncAddrsCellOpt:SortFuncAddrsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncDefCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncDefCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncDefCell{}, SortKItem{}}(Var'Unds'0:SortFuncDefCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncDefCell(inj{FuncDefCell,KItem}(FuncDefCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCell{}(kseq{}(inj{SortFuncDefCell{}, SortKItem{}}(VarFuncDefCell:SortFuncDefCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncDefCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncDefCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncDefCellFragment{}, SortKItem{}}(Var'Unds'0:SortFuncDefCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncDefCellFragment(inj{FuncDefCellFragment,KItem}(FuncDefCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCellFragment{}(kseq{}(inj{SortFuncDefCellFragment{}, SortKItem{}}(VarFuncDefCellFragment:SortFuncDefCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncDefCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncDefCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncDefCellMap{}, SortKItem{}}(Var'Unds'0:SortFuncDefCellMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCellMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncDefCellMap(inj{FuncDefCellMap,KItem}(FuncDefCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefCellMap{}(kseq{}(inj{SortFuncDefCellMap{}, SortKItem{}}(VarFuncDefCellMap:SortFuncDefCellMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncDefn{}, SortKItem{}}(Var'Unds'0:SortFuncDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncDefn(inj{FuncDefn,KItem}(FuncDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncDefn{}(kseq{}(inj{SortFuncDefn{}, SortKItem{}}(VarFuncDefn:SortFuncDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncIdsCell{}, SortKItem{}}(Var'Unds'0:SortFuncIdsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncIdsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncIdsCell(inj{FuncIdsCell,KItem}(FuncIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncIdsCell{}(kseq{}(inj{SortFuncIdsCell{}, SortKItem{}}(VarFuncIdsCell:SortFuncIdsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncIdsCellOpt{}, SortKItem{}}(Var'Unds'1:SortFuncIdsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncIdsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncIdsCellOpt(inj{FuncIdsCellOpt,KItem}(FuncIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncIdsCellOpt{}(kseq{}(inj{SortFuncIdsCellOpt{}, SortKItem{}}(VarFuncIdsCellOpt:SortFuncIdsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncSpec(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncSpec{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncSpec{}, SortKItem{}}(Var'Unds'1:SortFuncSpec{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncSpec{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncSpec(inj{FuncSpec,KItem}(FuncSpec))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncSpec{}(kseq{}(inj{SortFuncSpec{}, SortKItem{}}(VarFuncSpec:SortFuncSpec{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncType{}, SortKItem{}}(Var'Unds'0:SortFuncType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncType(inj{FuncType,KItem}(FuncType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncType{}(kseq{}(inj{SortFuncType{}, SortKItem{}}(VarFuncType:SortFuncType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncsCell{}, SortKItem{}}(Var'Unds'1:SortFuncsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncsCell(inj{FuncsCell,KItem}(FuncsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCell{}(kseq{}(inj{SortFuncsCell{}, SortKItem{}}(VarFuncsCell:SortFuncsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortFuncsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncsCellFragment{}, SortKItem{}}(Var'Unds'0:SortFuncsCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncsCellFragment(inj{FuncsCellFragment,KItem}(FuncsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCellFragment{}(kseq{}(inj{SortFuncsCellFragment{}, SortKItem{}}(VarFuncsCellFragment:SortFuncsCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFuncsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFuncsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFuncsCellOpt{}, SortKItem{}}(Var'Unds'1:SortFuncsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFuncsCellOpt(inj{FuncsCellOpt,KItem}(FuncsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFuncsCellOpt{}(kseq{}(inj{SortFuncsCellOpt{}, SortKItem{}}(VarFuncsCellOpt:SortFuncsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGAddrCell{}, SortKItem{}}(Var'Unds'1:SortGAddrCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGAddrCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGAddrCell(inj{GAddrCell,KItem}(GAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGAddrCell{}(kseq{}(inj{SortGAddrCell{}, SortKItem{}}(VarGAddrCell:SortGAddrCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortGAddrCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGAddrCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGAddrCellOpt(inj{GAddrCellOpt,KItem}(GAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGAddrCellOpt{}(kseq{}(inj{SortGAddrCellOpt{}, SortKItem{}}(VarGAddrCellOpt:SortGAddrCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGMutCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGMutCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGMutCell{}, SortKItem{}}(Var'Unds'1:SortGMutCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGMutCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGMutCell(inj{GMutCell,KItem}(GMutCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGMutCell{}(kseq{}(inj{SortGMutCell{}, SortKItem{}}(VarGMutCell:SortGMutCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGMutCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGMutCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGMutCellOpt{}, SortKItem{}}(Var'Unds'1:SortGMutCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGMutCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGMutCellOpt(inj{GMutCellOpt,KItem}(GMutCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGMutCellOpt{}(kseq{}(inj{SortGMutCellOpt{}, SortKItem{}}(VarGMutCellOpt:SortGMutCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGValueCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGValueCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGValueCell{}, SortKItem{}}(Var'Unds'0:SortGValueCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGValueCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGValueCell(inj{GValueCell,KItem}(GValueCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGValueCell{}(kseq{}(inj{SortGValueCell{}, SortKItem{}}(VarGValueCell:SortGValueCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGValueCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGValueCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGValueCellOpt{}, SortKItem{}}(Var'Unds'0:SortGValueCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGValueCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGValueCellOpt(inj{GValueCellOpt,KItem}(GValueCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGValueCellOpt{}(kseq{}(inj{SortGValueCellOpt{}, SortKItem{}}(VarGValueCellOpt:SortGValueCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedCounterCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGeneratedCounterCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(Var'Unds'0:SortGeneratedCounterCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedCounterCell(inj{GeneratedCounterCell,KItem}(GeneratedCounterCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCell{}(kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedCounterCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGeneratedCounterCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(Var'Unds'0:SortGeneratedCounterCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedCounterCellOpt(inj{GeneratedCounterCellOpt,KItem}(GeneratedCounterCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCellOpt{}(kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarGeneratedCounterCellOpt:SortGeneratedCounterCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedTopCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGeneratedTopCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(Var'Unds'1:SortGeneratedTopCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedTopCell(inj{GeneratedTopCell,KItem}(GeneratedTopCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCell{}(kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedTopCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGeneratedTopCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(Var'Unds'0:SortGeneratedTopCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedTopCellFragment(inj{GeneratedTopCellFragment,KItem}(GeneratedTopCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCellFragment{}(kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobIdsCell{}, SortKItem{}}(Var'Unds'1:SortGlobIdsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobIdsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobIdsCell(inj{GlobIdsCell,KItem}(GlobIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobIdsCell{}(kseq{}(inj{SortGlobIdsCell{}, SortKItem{}}(VarGlobIdsCell:SortGlobIdsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobIdsCellOpt{}, SortKItem{}}(Var'Unds'1:SortGlobIdsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobIdsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobIdsCellOpt(inj{GlobIdsCellOpt,KItem}(GlobIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobIdsCellOpt{}(kseq{}(inj{SortGlobIdsCellOpt{}, SortKItem{}}(VarGlobIdsCellOpt:SortGlobIdsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalAddrsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalAddrsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalAddrsCell{}, SortKItem{}}(Var'Unds'1:SortGlobalAddrsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalAddrsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalAddrsCell(inj{GlobalAddrsCell,KItem}(GlobalAddrsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalAddrsCell{}(kseq{}(inj{SortGlobalAddrsCell{}, SortKItem{}}(VarGlobalAddrsCell:SortGlobalAddrsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalAddrsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGlobalAddrsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalAddrsCellOpt{}, SortKItem{}}(Var'Unds'0:SortGlobalAddrsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalAddrsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalAddrsCellOpt(inj{GlobalAddrsCellOpt,KItem}(GlobalAddrsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalAddrsCellOpt{}(kseq{}(inj{SortGlobalAddrsCellOpt{}, SortKItem{}}(VarGlobalAddrsCellOpt:SortGlobalAddrsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(Var'Unds'1:SortGlobalDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalDefn(inj{GlobalDefn,KItem}(GlobalDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalDefn{}(kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(VarGlobalDefn:SortGlobalDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalInstCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalInstCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalInstCell{}, SortKItem{}}(Var'Unds'1:SortGlobalInstCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalInstCell(inj{GlobalInstCell,KItem}(GlobalInstCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCell{}(kseq{}(inj{SortGlobalInstCell{}, SortKItem{}}(VarGlobalInstCell:SortGlobalInstCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalInstCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalInstCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalInstCellFragment{}, SortKItem{}}(Var'Unds'1:SortGlobalInstCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalInstCellFragment(inj{GlobalInstCellFragment,KItem}(GlobalInstCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCellFragment{}(kseq{}(inj{SortGlobalInstCellFragment{}, SortKItem{}}(VarGlobalInstCellFragment:SortGlobalInstCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalInstCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGlobalInstCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalInstCellMap{}, SortKItem{}}(Var'Unds'0:SortGlobalInstCellMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCellMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalInstCellMap(inj{GlobalInstCellMap,KItem}(GlobalInstCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalInstCellMap{}(kseq{}(inj{SortGlobalInstCellMap{}, SortKItem{}}(VarGlobalInstCellMap:SortGlobalInstCellMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalSpec(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGlobalSpec{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalSpec{}, SortKItem{}}(Var'Unds'0:SortGlobalSpec{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalSpec{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalSpec(inj{GlobalSpec,KItem}(GlobalSpec))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalSpec{}(kseq{}(inj{SortGlobalSpec{}, SortKItem{}}(VarGlobalSpec:SortGlobalSpec{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGlobalType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalType{}, SortKItem{}}(Var'Unds'0:SortGlobalType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalType(inj{GlobalType,KItem}(GlobalType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalType{}(kseq{}(inj{SortGlobalType{}, SortKItem{}}(VarGlobalType:SortGlobalType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalsCell{}, SortKItem{}}(Var'Unds'1:SortGlobalsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalsCell(inj{GlobalsCell,KItem}(GlobalsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCell{}(kseq{}(inj{SortGlobalsCell{}, SortKItem{}}(VarGlobalsCell:SortGlobalsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGlobalsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalsCellFragment{}, SortKItem{}}(Var'Unds'1:SortGlobalsCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalsCellFragment(inj{GlobalsCellFragment,KItem}(GlobalsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCellFragment{}(kseq{}(inj{SortGlobalsCellFragment{}, SortKItem{}}(VarGlobalsCellFragment:SortGlobalsCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGlobalsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGlobalsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGlobalsCellOpt{}, SortKItem{}}(Var'Unds'0:SortGlobalsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGlobalsCellOpt(inj{GlobalsCellOpt,KItem}(GlobalsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGlobalsCellOpt{}(kseq{}(inj{SortGlobalsCellOpt{}, SortKItem{}}(VarGlobalsCellOpt:SortGlobalsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIBinOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortIBinOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIBinOp{}, SortKItem{}}(Var'Unds'0:SortIBinOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIBinOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIBinOp(inj{IBinOp,KItem}(IBinOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIBinOp{}(kseq{}(inj{SortIBinOp{}, SortKItem{}}(VarIBinOp:SortIBinOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIRelOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIRelOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIRelOp{}, SortKItem{}}(Var'Unds'1:SortIRelOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIRelOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIRelOp(inj{IRelOp,KItem}(IRelOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIRelOp{}(kseq{}(inj{SortIRelOp{}, SortKItem{}}(VarIRelOp:SortIRelOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIUnOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortIUnOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIUnOp{}, SortKItem{}}(Var'Unds'0:SortIUnOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIUnOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIUnOp(inj{IUnOp,KItem}(IUnOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIUnOp{}(kseq{}(inj{SortIUnOp{}, SortKItem{}}(VarIUnOp:SortIUnOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIVal(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIVal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIVal{}, SortKItem{}}(Var'Unds'1:SortIVal{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIVal{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIVal(inj{IVal,KItem}(IVal))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIVal{}(kseq{}(inj{SortIVal{}, SortKItem{}}(VarIVal:SortIVal{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIValType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIValType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIValType{}, SortKItem{}}(Var'Unds'1:SortIValType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIValType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIValType(inj{IValType,KItem}(IValType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIValType{}(kseq{}(inj{SortIValType{}, SortKItem{}}(VarIValType:SortIValType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIdentifier(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIdentifier{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIdentifier{}, SortKItem{}}(Var'Unds'1:SortIdentifier{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdentifier{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIdentifier(inj{Identifier,KItem}(Identifier))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdentifier{}(kseq{}(inj{SortIdentifier{}, SortKItem{}}(VarIdentifier:SortIdentifier{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIdentifierToken(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIdentifierToken{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIdentifierToken{}, SortKItem{}}(Var'Unds'1:SortIdentifierToken{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdentifierToken{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIdentifierToken(inj{IdentifierToken,KItem}(IdentifierToken))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIdentifierToken{}(kseq{}(inj{SortIdentifierToken{}, SortKItem{}}(VarIdentifierToken:SortIdentifierToken{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isImportDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortImportDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortImportDefn{}, SortKItem{}}(Var'Unds'1:SortImportDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisImportDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isImportDefn(inj{ImportDefn,KItem}(ImportDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisImportDefn{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(VarImportDefn:SortImportDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isImportDesc(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortImportDesc{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortImportDesc{}, SortKItem{}}(Var'Unds'1:SortImportDesc{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisImportDesc{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isImportDesc(inj{ImportDesc,KItem}(ImportDesc))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisImportDesc{}(kseq{}(inj{SortImportDesc{}, SortKItem{}}(VarImportDesc:SortImportDesc{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIndex(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIndex{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIndex{}, SortKItem{}}(Var'Unds'1:SortIndex{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIndex{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIndex(inj{Index,KItem}(Index))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIndex{}(kseq{}(inj{SortIndex{}, SortKItem{}}(VarIndex:SortIndex{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `isInfinite(_)_FLOAT_Bool_Float`(F)=>`_orBool__BOOL_Bool_Bool_Bool`(`_>Float__FLOAT_Bool_Float_Float`(F,`maxValueFloat(_,_)_FLOAT_Float_Int_Int`(`precisionFloat(_)_FLOAT_Int_Float`(F),`exponentBitsFloat(_)_FLOAT_Int_Float`(F))),`_<Float__FLOAT_Bool_Float_Float`(F,`--Float__FLOAT_Float_Float`(`maxValueFloat(_,_)_FLOAT_Float_Int_Int`(`precisionFloat(_)_FLOAT_Int_Float`(F),`exponentBitsFloat(_)_FLOAT_Int_Float`(F))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2080e6371cbdc73fece92b02273ed06b11d3f9f3608badcb49dd8e7a219a4c65) contentStartColumn(8) contentStartLine(558) org.kframework.attributes.Location(Location(558,8,558,173)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInfinite'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Unds-GT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF:SortFloat{},LblmaxValueFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int{}(LblprecisionFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}),LblexponentBitsFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}))),Lbl'Unds-LT-'Float'UndsUnds'FLOAT'Unds'Bool'Unds'Float'Unds'Float{}(VarF:SortFloat{},Lbl--Float'UndsUnds'FLOAT'Unds'Float'Unds'Float{}(LblmaxValueFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Int'Unds'Int{}(LblprecisionFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{}),LblexponentBitsFloat'LParUndsRParUnds'FLOAT'Unds'Int'Unds'Float{}(VarF:SortFloat{})))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("558"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(558,8,558,173)"), UNIQUE'Unds'ID{}("2080e6371cbdc73fece92b02273ed06b11d3f9f3608badcb49dd8e7a219a4c65")]

// rule isInlineExport(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortInlineExport{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortInlineExport{}, SortKItem{}}(Var'Unds'0:SortInlineExport{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInlineExport{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInlineExport(inj{InlineExport,KItem}(InlineExport))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInlineExport{}(kseq{}(inj{SortInlineExport{}, SortKItem{}}(VarInlineExport:SortInlineExport{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInlineImport(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortInlineImport{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortInlineImport{}, SortKItem{}}(Var'Unds'0:SortInlineImport{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInlineImport{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInlineImport(inj{InlineImport,KItem}(InlineImport))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInlineImport{}(kseq{}(inj{SortInlineImport{}, SortKItem{}}(VarInlineImport:SortInlineImport{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInstr(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortInstr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortInstr{}, SortKItem{}}(Var'Unds'0:SortInstr{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInstr{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInstr(inj{Instr,KItem}(Instr))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInstr{}(kseq{}(inj{SortInstr{}, SortKItem{}}(VarInstr:SortInstr{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInstrs(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortInstrs{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortInstrs{}, SortKItem{}}(Var'Unds'1:SortInstrs{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInstrs{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInstrs(inj{Instrs,KItem}(Instrs))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInstrs{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarInstrs:SortInstrs{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'0:SortInt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInt(inj{Int,KItem}(Int))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInt{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isK(K)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisK{}(VarK:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKCell{}, SortKItem{}}(Var'Unds'1:SortKCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKCell(inj{KCell,KItem}(KCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCell{}(kseq{}(inj{SortKCell{}, SortKItem{}}(VarKCell:SortKCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKCellOpt{}, SortKItem{}}(Var'Unds'1:SortKCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKCellOpt(inj{KCellOpt,KItem}(KCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCellOpt{}(kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarKCellOpt:SortKCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKConfigVar(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKConfigVar{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKConfigVar{}, SortKItem{}}(Var'Unds'1:SortKConfigVar{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKConfigVar{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKConfigVar(inj{KConfigVar,KItem}(KConfigVar))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKConfigVar{}(kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortKItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(Var'Unds'0:SortKItem{},dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKItem{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKItem(KItem)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKItem{}(kseq{}(VarKItem:SortKItem{},dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLabel(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLabel{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLabel{}, SortKItem{}}(Var'Unds'1:SortLabel{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabel{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLabel(inj{Label,KItem}(Label))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabel{}(kseq{}(inj{SortLabel{}, SortKItem{}}(VarLabel:SortLabel{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLabelDepthCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLabelDepthCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLabelDepthCell{}, SortKItem{}}(Var'Unds'1:SortLabelDepthCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabelDepthCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLabelDepthCell(inj{LabelDepthCell,KItem}(LabelDepthCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabelDepthCell{}(kseq{}(inj{SortLabelDepthCell{}, SortKItem{}}(VarLabelDepthCell:SortLabelDepthCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLabelDepthCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLabelDepthCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLabelDepthCellOpt{}, SortKItem{}}(Var'Unds'1:SortLabelDepthCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabelDepthCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLabelDepthCellOpt(inj{LabelDepthCellOpt,KItem}(LabelDepthCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabelDepthCellOpt{}(kseq{}(inj{SortLabelDepthCellOpt{}, SortKItem{}}(VarLabelDepthCellOpt:SortLabelDepthCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLabelIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortLabelIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLabelIdsCell{}, SortKItem{}}(Var'Unds'0:SortLabelIdsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabelIdsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLabelIdsCell(inj{LabelIdsCell,KItem}(LabelIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabelIdsCell{}(kseq{}(inj{SortLabelIdsCell{}, SortKItem{}}(VarLabelIdsCell:SortLabelIdsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLabelIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortLabelIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLabelIdsCellOpt{}, SortKItem{}}(Var'Unds'0:SortLabelIdsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabelIdsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLabelIdsCellOpt(inj{LabelIdsCellOpt,KItem}(LabelIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLabelIdsCellOpt{}(kseq{}(inj{SortLabelIdsCellOpt{}, SortKItem{}}(VarLabelIdsCellOpt:SortLabelIdsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLimits(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortLimits{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLimits{}, SortKItem{}}(Var'Unds'0:SortLimits{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLimits{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLimits(inj{Limits,KItem}(Limits))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLimits{}(kseq{}(inj{SortLimits{}, SortKItem{}}(VarLimits:SortLimits{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortList{}, SortKItem{}}(Var'Unds'0:SortList{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisList{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isList(inj{List,KItem}(List))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisList{}(kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLoadOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortLoadOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLoadOp{}, SortKItem{}}(Var'Unds'0:SortLoadOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLoadOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLoadOp(inj{LoadOp,KItem}(LoadOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLoadOp{}(kseq{}(inj{SortLoadOp{}, SortKItem{}}(VarLoadOp:SortLoadOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLoadOpM(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLoadOpM{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLoadOpM{}, SortKItem{}}(Var'Unds'1:SortLoadOpM{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLoadOpM{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLoadOpM(inj{LoadOpM,KItem}(LoadOpM))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLoadOpM{}(kseq{}(inj{SortLoadOpM{}, SortKItem{}}(VarLoadOpM:SortLoadOpM{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalDecl(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocalDecl{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLocalDecl{}, SortKItem{}}(Var'Unds'1:SortLocalDecl{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalDecl{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalDecl(inj{LocalDecl,KItem}(LocalDecl))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalDecl{}(kseq{}(inj{SortLocalDecl{}, SortKItem{}}(VarLocalDecl:SortLocalDecl{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalDecls(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortLocalDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLocalDecls{}, SortKItem{}}(Var'Unds'0:SortLocalDecls{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalDecls{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalDecls(inj{LocalDecls,KItem}(LocalDecls))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalDecls{}(kseq{}(inj{SortLocalDecls{}, SortKItem{}}(VarLocalDecls:SortLocalDecls{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocalIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLocalIdsCell{}, SortKItem{}}(Var'Unds'1:SortLocalIdsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalIdsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalIdsCell(inj{LocalIdsCell,KItem}(LocalIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalIdsCell{}(kseq{}(inj{SortLocalIdsCell{}, SortKItem{}}(VarLocalIdsCell:SortLocalIdsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocalIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLocalIdsCellOpt{}, SortKItem{}}(Var'Unds'1:SortLocalIdsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalIdsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalIdsCellOpt(inj{LocalIdsCellOpt,KItem}(LocalIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalIdsCellOpt{}(kseq{}(inj{SortLocalIdsCellOpt{}, SortKItem{}}(VarLocalIdsCellOpt:SortLocalIdsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocalsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLocalsCell{}, SortKItem{}}(Var'Unds'1:SortLocalsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalsCell(inj{LocalsCell,KItem}(LocalsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalsCell{}(kseq{}(inj{SortLocalsCell{}, SortKItem{}}(VarLocalsCell:SortLocalsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLocalsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortLocalsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLocalsCellOpt{}, SortKItem{}}(Var'Unds'1:SortLocalsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLocalsCellOpt(inj{LocalsCellOpt,KItem}(LocalsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLocalsCellOpt{}(kseq{}(inj{SortLocalsCellOpt{}, SortKItem{}}(VarLocalsCellOpt:SortLocalsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMAddrCell{}, SortKItem{}}(Var'Unds'0:SortMAddrCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMAddrCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMAddrCell(inj{MAddrCell,KItem}(MAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMAddrCell{}(kseq{}(inj{SortMAddrCell{}, SortKItem{}}(VarMAddrCell:SortMAddrCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortMAddrCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMAddrCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMAddrCellOpt(inj{MAddrCellOpt,KItem}(MAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMAddrCellOpt{}(kseq{}(inj{SortMAddrCellOpt{}, SortKItem{}}(VarMAddrCellOpt:SortMAddrCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMInt{}, SortKItem{}}(Var'Unds'1:SortMInt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMInt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMInt(inj{MInt,KItem}(MInt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMInt{}(kseq{}(inj{SortMInt{}, SortKItem{}}(VarMInt:SortMInt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMainStoreCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMainStoreCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMainStoreCell{}, SortKItem{}}(Var'Unds'0:SortMainStoreCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMainStoreCell(inj{MainStoreCell,KItem}(MainStoreCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCell{}(kseq{}(inj{SortMainStoreCell{}, SortKItem{}}(VarMainStoreCell:SortMainStoreCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMainStoreCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMainStoreCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMainStoreCellFragment{}, SortKItem{}}(Var'Unds'1:SortMainStoreCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMainStoreCellFragment(inj{MainStoreCellFragment,KItem}(MainStoreCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCellFragment{}(kseq{}(inj{SortMainStoreCellFragment{}, SortKItem{}}(VarMainStoreCellFragment:SortMainStoreCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMainStoreCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMainStoreCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMainStoreCellOpt{}, SortKItem{}}(Var'Unds'1:SortMainStoreCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMainStoreCellOpt(inj{MainStoreCellOpt,KItem}(MainStoreCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMainStoreCellOpt{}(kseq{}(inj{SortMainStoreCellOpt{}, SortKItem{}}(VarMainStoreCellOpt:SortMainStoreCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMap{}, SortKItem{}}(Var'Unds'1:SortMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMap(inj{Map,KItem}(Map))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMap{}(kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMdataCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMdataCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMdataCell{}, SortKItem{}}(Var'Unds'1:SortMdataCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMdataCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMdataCell(inj{MdataCell,KItem}(MdataCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMdataCell{}(kseq{}(inj{SortMdataCell{}, SortKItem{}}(VarMdataCell:SortMdataCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMdataCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMdataCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMdataCellOpt{}, SortKItem{}}(Var'Unds'1:SortMdataCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMdataCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMdataCellOpt(inj{MdataCellOpt,KItem}(MdataCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMdataCellOpt{}(kseq{}(inj{SortMdataCellOpt{}, SortKItem{}}(VarMdataCellOpt:SortMdataCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemAddrsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemAddrsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemAddrsCell{}, SortKItem{}}(Var'Unds'0:SortMemAddrsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemAddrsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemAddrsCell(inj{MemAddrsCell,KItem}(MemAddrsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemAddrsCell{}(kseq{}(inj{SortMemAddrsCell{}, SortKItem{}}(VarMemAddrsCell:SortMemAddrsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemAddrsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemAddrsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemAddrsCellOpt{}, SortKItem{}}(Var'Unds'1:SortMemAddrsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemAddrsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemAddrsCellOpt(inj{MemAddrsCellOpt,KItem}(MemAddrsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemAddrsCellOpt{}(kseq{}(inj{SortMemAddrsCellOpt{}, SortKItem{}}(VarMemAddrsCellOpt:SortMemAddrsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemArg(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemArg{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemArg{}, SortKItem{}}(Var'Unds'0:SortMemArg{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemArg{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemArg(inj{MemArg,KItem}(MemArg))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemArg{}(kseq{}(inj{SortMemArg{}, SortKItem{}}(VarMemArg:SortMemArg{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemIdsCell{}, SortKItem{}}(Var'Unds'0:SortMemIdsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemIdsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemIdsCell(inj{MemIdsCell,KItem}(MemIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemIdsCell{}(kseq{}(inj{SortMemIdsCell{}, SortKItem{}}(VarMemIdsCell:SortMemIdsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemIdsCellOpt{}, SortKItem{}}(Var'Unds'0:SortMemIdsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemIdsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemIdsCellOpt(inj{MemIdsCellOpt,KItem}(MemIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemIdsCellOpt{}(kseq{}(inj{SortMemIdsCellOpt{}, SortKItem{}}(VarMemIdsCellOpt:SortMemIdsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemInstCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemInstCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemInstCell{}, SortKItem{}}(Var'Unds'0:SortMemInstCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemInstCell(inj{MemInstCell,KItem}(MemInstCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCell{}(kseq{}(inj{SortMemInstCell{}, SortKItem{}}(VarMemInstCell:SortMemInstCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemInstCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemInstCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemInstCellFragment{}, SortKItem{}}(Var'Unds'1:SortMemInstCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemInstCellFragment(inj{MemInstCellFragment,KItem}(MemInstCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCellFragment{}(kseq{}(inj{SortMemInstCellFragment{}, SortKItem{}}(VarMemInstCellFragment:SortMemInstCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemInstCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemInstCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemInstCellMap{}, SortKItem{}}(Var'Unds'1:SortMemInstCellMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCellMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemInstCellMap(inj{MemInstCellMap,KItem}(MemInstCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemInstCellMap{}(kseq{}(inj{SortMemInstCellMap{}, SortKItem{}}(VarMemInstCellMap:SortMemInstCellMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemType{}, SortKItem{}}(Var'Unds'1:SortMemType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemType(inj{MemType,KItem}(MemType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemType{}(kseq{}(inj{SortMemType{}, SortKItem{}}(VarMemType:SortMemType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemoryDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemoryDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(Var'Unds'1:SortMemoryDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemoryDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemoryDefn(inj{MemoryDefn,KItem}(MemoryDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemoryDefn{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(VarMemoryDefn:SortMemoryDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemorySpec(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemorySpec{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemorySpec{}, SortKItem{}}(Var'Unds'1:SortMemorySpec{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemorySpec{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemorySpec(inj{MemorySpec,KItem}(MemorySpec))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemorySpec{}(kseq{}(inj{SortMemorySpec{}, SortKItem{}}(VarMemorySpec:SortMemorySpec{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMemsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemsCell{}, SortKItem{}}(Var'Unds'1:SortMemsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemsCell(inj{MemsCell,KItem}(MemsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCell{}(kseq{}(inj{SortMemsCell{}, SortKItem{}}(VarMemsCell:SortMemsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemsCellFragment{}, SortKItem{}}(Var'Unds'0:SortMemsCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemsCellFragment(inj{MemsCellFragment,KItem}(MemsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCellFragment{}(kseq{}(inj{SortMemsCellFragment{}, SortKItem{}}(VarMemsCellFragment:SortMemsCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMemsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMemsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMemsCellOpt{}, SortKItem{}}(Var'Unds'0:SortMemsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMemsCellOpt(inj{MemsCellOpt,KItem}(MemsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMemsCellOpt{}(kseq{}(inj{SortMemsCellOpt{}, SortKItem{}}(VarMemsCellOpt:SortMemsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMmaxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMmaxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMmaxCell{}, SortKItem{}}(Var'Unds'0:SortMmaxCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMmaxCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMmaxCell(inj{MmaxCell,KItem}(MmaxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMmaxCell{}(kseq{}(inj{SortMmaxCell{}, SortKItem{}}(VarMmaxCell:SortMmaxCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMmaxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMmaxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMmaxCellOpt{}, SortKItem{}}(Var'Unds'1:SortMmaxCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMmaxCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMmaxCellOpt(inj{MmaxCellOpt,KItem}(MmaxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMmaxCellOpt{}(kseq{}(inj{SortMmaxCellOpt{}, SortKItem{}}(VarMmaxCellOpt:SortMmaxCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModIdxCell{}, SortKItem{}}(Var'Unds'1:SortModIdxCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModIdxCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModIdxCell(inj{ModIdxCell,KItem}(ModIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModIdxCell{}(kseq{}(inj{SortModIdxCell{}, SortKItem{}}(VarModIdxCell:SortModIdxCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModIdxCellOpt{}, SortKItem{}}(Var'Unds'1:SortModIdxCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModIdxCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModIdxCellOpt(inj{ModIdxCellOpt,KItem}(ModIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModIdxCellOpt{}(kseq{}(inj{SortModIdxCellOpt{}, SortKItem{}}(VarModIdxCellOpt:SortModIdxCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleDecl(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleDecl{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleDecl{}, SortKItem{}}(Var'Unds'1:SortModuleDecl{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleDecl{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleDecl(inj{ModuleDecl,KItem}(ModuleDecl))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleDecl{}(kseq{}(inj{SortModuleDecl{}, SortKItem{}}(VarModuleDecl:SortModuleDecl{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleIdsCell{}, SortKItem{}}(Var'Unds'1:SortModuleIdsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleIdsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleIdsCell(inj{ModuleIdsCell,KItem}(ModuleIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleIdsCell{}(kseq{}(inj{SortModuleIdsCell{}, SortKItem{}}(VarModuleIdsCell:SortModuleIdsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleIdsCellOpt{}, SortKItem{}}(Var'Unds'0:SortModuleIdsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleIdsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleIdsCellOpt(inj{ModuleIdsCellOpt,KItem}(ModuleIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleIdsCellOpt{}(kseq{}(inj{SortModuleIdsCellOpt{}, SortKItem{}}(VarModuleIdsCellOpt:SortModuleIdsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleInstCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleInstCell{}, SortKItem{}}(Var'Unds'1:SortModuleInstCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstCell(inj{ModuleInstCell,KItem}(ModuleInstCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCell{}(kseq{}(inj{SortModuleInstCell{}, SortKItem{}}(VarModuleInstCell:SortModuleInstCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleInstCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleInstCellFragment{}, SortKItem{}}(Var'Unds'1:SortModuleInstCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstCellFragment(inj{ModuleInstCellFragment,KItem}(ModuleInstCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCellFragment{}(kseq{}(inj{SortModuleInstCellFragment{}, SortKItem{}}(VarModuleInstCellFragment:SortModuleInstCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleInstCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleInstCellMap{}, SortKItem{}}(Var'Unds'0:SortModuleInstCellMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCellMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstCellMap(inj{ModuleInstCellMap,KItem}(ModuleInstCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstCellMap{}(kseq{}(inj{SortModuleInstCellMap{}, SortKItem{}}(VarModuleInstCellMap:SortModuleInstCellMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstancesCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleInstancesCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleInstancesCell{}, SortKItem{}}(Var'Unds'0:SortModuleInstancesCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstancesCell(inj{ModuleInstancesCell,KItem}(ModuleInstancesCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCell{}(kseq{}(inj{SortModuleInstancesCell{}, SortKItem{}}(VarModuleInstancesCell:SortModuleInstancesCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstancesCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleInstancesCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleInstancesCellFragment{}, SortKItem{}}(Var'Unds'1:SortModuleInstancesCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstancesCellFragment(inj{ModuleInstancesCellFragment,KItem}(ModuleInstancesCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCellFragment{}(kseq{}(inj{SortModuleInstancesCellFragment{}, SortKItem{}}(VarModuleInstancesCellFragment:SortModuleInstancesCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleInstancesCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleInstancesCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleInstancesCellOpt{}, SortKItem{}}(Var'Unds'0:SortModuleInstancesCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleInstancesCellOpt(inj{ModuleInstancesCellOpt,KItem}(ModuleInstancesCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleInstancesCellOpt{}(kseq{}(inj{SortModuleInstancesCellOpt{}, SortKItem{}}(VarModuleInstancesCellOpt:SortModuleInstancesCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleRegistryCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleRegistryCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleRegistryCell{}, SortKItem{}}(Var'Unds'1:SortModuleRegistryCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleRegistryCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleRegistryCell(inj{ModuleRegistryCell,KItem}(ModuleRegistryCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleRegistryCell{}(kseq{}(inj{SortModuleRegistryCell{}, SortKItem{}}(VarModuleRegistryCell:SortModuleRegistryCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleRegistryCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModuleRegistryCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleRegistryCellOpt{}, SortKItem{}}(Var'Unds'0:SortModuleRegistryCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleRegistryCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleRegistryCellOpt(inj{ModuleRegistryCellOpt,KItem}(ModuleRegistryCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleRegistryCellOpt{}(kseq{}(inj{SortModuleRegistryCellOpt{}, SortKItem{}}(VarModuleRegistryCellOpt:SortModuleRegistryCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMsizeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMsizeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMsizeCell{}, SortKItem{}}(Var'Unds'0:SortMsizeCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMsizeCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMsizeCell(inj{MsizeCell,KItem}(MsizeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMsizeCell{}(kseq{}(inj{SortMsizeCell{}, SortKItem{}}(VarMsizeCell:SortMsizeCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMsizeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortMsizeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMsizeCellOpt{}, SortKItem{}}(Var'Unds'0:SortMsizeCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMsizeCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMsizeCellOpt(inj{MsizeCellOpt,KItem}(MsizeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMsizeCellOpt{}(kseq{}(inj{SortMsizeCellOpt{}, SortKItem{}}(VarMsizeCellOpt:SortMsizeCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMut(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMut{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMut{}, SortKItem{}}(Var'Unds'1:SortMut{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMut{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMut(inj{Mut,KItem}(Mut))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMut{}(kseq{}(inj{SortMut{}, SortKItem{}}(VarMut:SortMut{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNValType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortNValType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNValType{}, SortKItem{}}(Var'Unds'0:SortNValType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNValType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNValType(inj{NValType,KItem}(NValType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNValType{}(kseq{}(inj{SortNValType{}, SortKItem{}}(VarNValType:SortNValType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextFreshIdCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextFreshIdCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextFreshIdCell{}, SortKItem{}}(Var'Unds'1:SortNextFreshIdCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFreshIdCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextFreshIdCell(inj{NextFreshIdCell,KItem}(NextFreshIdCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFreshIdCell{}(kseq{}(inj{SortNextFreshIdCell{}, SortKItem{}}(VarNextFreshIdCell:SortNextFreshIdCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextFreshIdCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextFreshIdCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextFreshIdCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextFreshIdCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFreshIdCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextFreshIdCellOpt(inj{NextFreshIdCellOpt,KItem}(NextFreshIdCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFreshIdCellOpt{}(kseq{}(inj{SortNextFreshIdCellOpt{}, SortKItem{}}(VarNextFreshIdCellOpt:SortNextFreshIdCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextFuncAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortNextFuncAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextFuncAddrCell{}, SortKItem{}}(Var'Unds'0:SortNextFuncAddrCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncAddrCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextFuncAddrCell(inj{NextFuncAddrCell,KItem}(NextFuncAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncAddrCell{}(kseq{}(inj{SortNextFuncAddrCell{}, SortKItem{}}(VarNextFuncAddrCell:SortNextFuncAddrCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextFuncAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextFuncAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextFuncAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextFuncAddrCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncAddrCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextFuncAddrCellOpt(inj{NextFuncAddrCellOpt,KItem}(NextFuncAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncAddrCellOpt{}(kseq{}(inj{SortNextFuncAddrCellOpt{}, SortKItem{}}(VarNextFuncAddrCellOpt:SortNextFuncAddrCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextFuncIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextFuncIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextFuncIdxCell{}, SortKItem{}}(Var'Unds'1:SortNextFuncIdxCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncIdxCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextFuncIdxCell(inj{NextFuncIdxCell,KItem}(NextFuncIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncIdxCell{}(kseq{}(inj{SortNextFuncIdxCell{}, SortKItem{}}(VarNextFuncIdxCell:SortNextFuncIdxCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextFuncIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortNextFuncIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextFuncIdxCellOpt{}, SortKItem{}}(Var'Unds'0:SortNextFuncIdxCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncIdxCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextFuncIdxCellOpt(inj{NextFuncIdxCellOpt,KItem}(NextFuncIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextFuncIdxCellOpt{}(kseq{}(inj{SortNextFuncIdxCellOpt{}, SortKItem{}}(VarNextFuncIdxCellOpt:SortNextFuncIdxCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextGlobAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextGlobAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextGlobAddrCell{}, SortKItem{}}(Var'Unds'1:SortNextGlobAddrCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobAddrCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextGlobAddrCell(inj{NextGlobAddrCell,KItem}(NextGlobAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobAddrCell{}(kseq{}(inj{SortNextGlobAddrCell{}, SortKItem{}}(VarNextGlobAddrCell:SortNextGlobAddrCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextGlobAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextGlobAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextGlobAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextGlobAddrCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobAddrCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextGlobAddrCellOpt(inj{NextGlobAddrCellOpt,KItem}(NextGlobAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobAddrCellOpt{}(kseq{}(inj{SortNextGlobAddrCellOpt{}, SortKItem{}}(VarNextGlobAddrCellOpt:SortNextGlobAddrCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextGlobIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextGlobIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextGlobIdxCell{}, SortKItem{}}(Var'Unds'1:SortNextGlobIdxCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobIdxCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextGlobIdxCell(inj{NextGlobIdxCell,KItem}(NextGlobIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobIdxCell{}(kseq{}(inj{SortNextGlobIdxCell{}, SortKItem{}}(VarNextGlobIdxCell:SortNextGlobIdxCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextGlobIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortNextGlobIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextGlobIdxCellOpt{}, SortKItem{}}(Var'Unds'0:SortNextGlobIdxCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobIdxCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextGlobIdxCellOpt(inj{NextGlobIdxCellOpt,KItem}(NextGlobIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextGlobIdxCellOpt{}(kseq{}(inj{SortNextGlobIdxCellOpt{}, SortKItem{}}(VarNextGlobIdxCellOpt:SortNextGlobIdxCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextMemAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextMemAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextMemAddrCell{}, SortKItem{}}(Var'Unds'1:SortNextMemAddrCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextMemAddrCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextMemAddrCell(inj{NextMemAddrCell,KItem}(NextMemAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextMemAddrCell{}(kseq{}(inj{SortNextMemAddrCell{}, SortKItem{}}(VarNextMemAddrCell:SortNextMemAddrCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextMemAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextMemAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextMemAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextMemAddrCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextMemAddrCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextMemAddrCellOpt(inj{NextMemAddrCellOpt,KItem}(NextMemAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextMemAddrCellOpt{}(kseq{}(inj{SortNextMemAddrCellOpt{}, SortKItem{}}(VarNextMemAddrCellOpt:SortNextMemAddrCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextModuleIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextModuleIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextModuleIdxCell{}, SortKItem{}}(Var'Unds'1:SortNextModuleIdxCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextModuleIdxCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextModuleIdxCell(inj{NextModuleIdxCell,KItem}(NextModuleIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextModuleIdxCell{}(kseq{}(inj{SortNextModuleIdxCell{}, SortKItem{}}(VarNextModuleIdxCell:SortNextModuleIdxCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextModuleIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextModuleIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextModuleIdxCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextModuleIdxCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextModuleIdxCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextModuleIdxCellOpt(inj{NextModuleIdxCellOpt,KItem}(NextModuleIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextModuleIdxCellOpt{}(kseq{}(inj{SortNextModuleIdxCellOpt{}, SortKItem{}}(VarNextModuleIdxCellOpt:SortNextModuleIdxCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextTabAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextTabAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextTabAddrCell{}, SortKItem{}}(Var'Unds'1:SortNextTabAddrCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTabAddrCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextTabAddrCell(inj{NextTabAddrCell,KItem}(NextTabAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTabAddrCell{}(kseq{}(inj{SortNextTabAddrCell{}, SortKItem{}}(VarNextTabAddrCell:SortNextTabAddrCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextTabAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextTabAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextTabAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextTabAddrCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTabAddrCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextTabAddrCellOpt(inj{NextTabAddrCellOpt,KItem}(NextTabAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTabAddrCellOpt{}(kseq{}(inj{SortNextTabAddrCellOpt{}, SortKItem{}}(VarNextTabAddrCellOpt:SortNextTabAddrCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextTypeIdxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextTypeIdxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextTypeIdxCell{}, SortKItem{}}(Var'Unds'1:SortNextTypeIdxCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTypeIdxCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextTypeIdxCell(inj{NextTypeIdxCell,KItem}(NextTypeIdxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTypeIdxCell{}(kseq{}(inj{SortNextTypeIdxCell{}, SortKItem{}}(VarNextTypeIdxCell:SortNextTypeIdxCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNextTypeIdxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNextTypeIdxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNextTypeIdxCellOpt{}, SortKItem{}}(Var'Unds'1:SortNextTypeIdxCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTypeIdxCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNextTypeIdxCellOpt(inj{NextTypeIdxCellOpt,KItem}(NextTypeIdxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNextTypeIdxCellOpt{}(kseq{}(inj{SortNextTypeIdxCellOpt{}, SortKItem{}}(VarNextTypeIdxCellOpt:SortNextTypeIdxCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNumber(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNumber{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNumber{}, SortKItem{}}(Var'Unds'1:SortNumber{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNumber{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNumber(inj{Number,KItem}(Number))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNumber{}(kseq{}(inj{SortNumber{}, SortKItem{}}(VarNumber:SortNumber{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isOffset(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortOffset{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortOffset{}, SortKItem{}}(Var'Unds'1:SortOffset{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOffset{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isOffset(inj{Offset,KItem}(Offset))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOffset{}(kseq{}(inj{SortOffset{}, SortKItem{}}(VarOffset:SortOffset{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isOffsetArg(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortOffsetArg{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortOffsetArg{}, SortKItem{}}(Var'Unds'1:SortOffsetArg{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOffsetArg{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isOffsetArg(inj{OffsetArg,KItem}(OffsetArg))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOffsetArg{}(kseq{}(inj{SortOffsetArg{}, SortKItem{}}(VarOffsetArg:SortOffsetArg{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isOptionalId(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortOptionalId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortOptionalId{}, SortKItem{}}(Var'Unds'1:SortOptionalId{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOptionalId{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isOptionalId(inj{OptionalId,KItem}(OptionalId))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOptionalId{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarOptionalId:SortOptionalId{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isOptionalInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortOptionalInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortOptionalInt{}, SortKItem{}}(Var'Unds'1:SortOptionalInt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOptionalInt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isOptionalInt(inj{OptionalInt,KItem}(OptionalInt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOptionalInt{}(kseq{}(inj{SortOptionalInt{}, SortKItem{}}(VarOptionalInt:SortOptionalInt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isPlainInstr(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortPlainInstr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortPlainInstr{}, SortKItem{}}(Var'Unds'1:SortPlainInstr{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPlainInstr{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isPlainInstr(inj{PlainInstr,KItem}(PlainInstr))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPlainInstr{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(VarPlainInstr:SortPlainInstr{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortSet{}, SortKItem{}}(Var'Unds'1:SortSet{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSet{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSet(inj{Set,KItem}(Set))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSet{}(kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isSignedness(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortSignedness{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortSignedness{}, SortKItem{}}(Var'Unds'1:SortSignedness{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSignedness{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSignedness(inj{Signedness,KItem}(Signedness))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSignedness{}(kseq{}(inj{SortSignedness{}, SortKItem{}}(VarSignedness:SortSignedness{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStartDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortStartDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStartDefn{}, SortKItem{}}(Var'Unds'0:SortStartDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStartDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStartDefn(inj{StartDefn,KItem}(StartDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStartDefn{}(kseq{}(inj{SortStartDefn{}, SortKItem{}}(VarStartDefn:SortStartDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStmt{}, SortKItem{}}(Var'Unds'1:SortStmt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStmt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStmt(inj{Stmt,KItem}(Stmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStmt{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarStmt:SortStmt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStmts(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortStmts{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStmts{}, SortKItem{}}(Var'Unds'1:SortStmts{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStmts{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStmts(inj{Stmts,KItem}(Stmts))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStmts{}(kseq{}(inj{SortStmts{}, SortKItem{}}(VarStmts:SortStmts{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStoreOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortStoreOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStoreOp{}, SortKItem{}}(Var'Unds'1:SortStoreOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStoreOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStoreOp(inj{StoreOp,KItem}(StoreOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStoreOp{}(kseq{}(inj{SortStoreOp{}, SortKItem{}}(VarStoreOp:SortStoreOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStoreOpM(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortStoreOpM{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStoreOpM{}, SortKItem{}}(Var'Unds'0:SortStoreOpM{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStoreOpM{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStoreOpM(inj{StoreOpM,KItem}(StoreOpM))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStoreOpM{}(kseq{}(inj{SortStoreOpM{}, SortKItem{}}(VarStoreOpM:SortStoreOpM{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'1:SortString{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisString{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isString(inj{String,KItem}(String))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisString{}(kseq{}(inj{SortString{}, SortKItem{}}(VarString:SortString{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTAddrCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTAddrCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTAddrCell{}, SortKItem{}}(Var'Unds'0:SortTAddrCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTAddrCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTAddrCell(inj{TAddrCell,KItem}(TAddrCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTAddrCell{}(kseq{}(inj{SortTAddrCell{}, SortKItem{}}(VarTAddrCell:SortTAddrCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTAddrCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTAddrCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTAddrCellOpt{}, SortKItem{}}(Var'Unds'1:SortTAddrCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTAddrCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTAddrCellOpt(inj{TAddrCellOpt,KItem}(TAddrCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTAddrCellOpt{}(kseq{}(inj{SortTAddrCellOpt{}, SortKItem{}}(VarTAddrCellOpt:SortTAddrCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabAddrsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTabAddrsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabAddrsCell{}, SortKItem{}}(Var'Unds'0:SortTabAddrsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabAddrsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabAddrsCell(inj{TabAddrsCell,KItem}(TabAddrsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabAddrsCell{}(kseq{}(inj{SortTabAddrsCell{}, SortKItem{}}(VarTabAddrsCell:SortTabAddrsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabAddrsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTabAddrsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabAddrsCellOpt{}, SortKItem{}}(Var'Unds'1:SortTabAddrsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabAddrsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabAddrsCellOpt(inj{TabAddrsCellOpt,KItem}(TabAddrsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabAddrsCellOpt{}(kseq{}(inj{SortTabAddrsCellOpt{}, SortKItem{}}(VarTabAddrsCellOpt:SortTabAddrsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTabIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabIdsCell{}, SortKItem{}}(Var'Unds'0:SortTabIdsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabIdsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabIdsCell(inj{TabIdsCell,KItem}(TabIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabIdsCell{}(kseq{}(inj{SortTabIdsCell{}, SortKItem{}}(VarTabIdsCell:SortTabIdsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTabIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabIdsCellOpt{}, SortKItem{}}(Var'Unds'1:SortTabIdsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabIdsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabIdsCellOpt(inj{TabIdsCellOpt,KItem}(TabIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabIdsCellOpt{}(kseq{}(inj{SortTabIdsCellOpt{}, SortKItem{}}(VarTabIdsCellOpt:SortTabIdsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabInstCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTabInstCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabInstCell{}, SortKItem{}}(Var'Unds'0:SortTabInstCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabInstCell(inj{TabInstCell,KItem}(TabInstCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCell{}(kseq{}(inj{SortTabInstCell{}, SortKItem{}}(VarTabInstCell:SortTabInstCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabInstCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTabInstCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabInstCellFragment{}, SortKItem{}}(Var'Unds'1:SortTabInstCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabInstCellFragment(inj{TabInstCellFragment,KItem}(TabInstCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCellFragment{}(kseq{}(inj{SortTabInstCellFragment{}, SortKItem{}}(VarTabInstCellFragment:SortTabInstCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabInstCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTabInstCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabInstCellMap{}, SortKItem{}}(Var'Unds'0:SortTabInstCellMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCellMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabInstCellMap(inj{TabInstCellMap,KItem}(TabInstCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabInstCellMap{}(kseq{}(inj{SortTabInstCellMap{}, SortKItem{}}(VarTabInstCellMap:SortTabInstCellMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTableDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTableDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTableDefn{}, SortKItem{}}(Var'Unds'0:SortTableDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTableDefn(inj{TableDefn,KItem}(TableDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableDefn{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(VarTableDefn:SortTableDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTableElemType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTableElemType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTableElemType{}, SortKItem{}}(Var'Unds'0:SortTableElemType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableElemType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTableElemType(inj{TableElemType,KItem}(TableElemType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableElemType{}(kseq{}(inj{SortTableElemType{}, SortKItem{}}(VarTableElemType:SortTableElemType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTableSpec(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTableSpec{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTableSpec{}, SortKItem{}}(Var'Unds'1:SortTableSpec{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableSpec{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTableSpec(inj{TableSpec,KItem}(TableSpec))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableSpec{}(kseq{}(inj{SortTableSpec{}, SortKItem{}}(VarTableSpec:SortTableSpec{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTableType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTableType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTableType{}, SortKItem{}}(Var'Unds'0:SortTableType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTableType(inj{TableType,KItem}(TableType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTableType{}(kseq{}(inj{SortTableType{}, SortKItem{}}(VarTableType:SortTableType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTabsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabsCell{}, SortKItem{}}(Var'Unds'0:SortTabsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabsCell(inj{TabsCell,KItem}(TabsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCell{}(kseq{}(inj{SortTabsCell{}, SortKItem{}}(VarTabsCell:SortTabsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTabsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabsCellFragment{}, SortKItem{}}(Var'Unds'0:SortTabsCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabsCellFragment(inj{TabsCellFragment,KItem}(TabsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCellFragment{}(kseq{}(inj{SortTabsCellFragment{}, SortKItem{}}(VarTabsCellFragment:SortTabsCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTabsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTabsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTabsCellOpt{}, SortKItem{}}(Var'Unds'1:SortTabsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTabsCellOpt(inj{TabsCellOpt,KItem}(TabsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTabsCellOpt{}(kseq{}(inj{SortTabsCellOpt{}, SortKItem{}}(VarTabsCellOpt:SortTabsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTdataCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTdataCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTdataCell{}, SortKItem{}}(Var'Unds'0:SortTdataCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTdataCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTdataCell(inj{TdataCell,KItem}(TdataCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTdataCell{}(kseq{}(inj{SortTdataCell{}, SortKItem{}}(VarTdataCell:SortTdataCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTdataCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTdataCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTdataCellOpt{}, SortKItem{}}(Var'Unds'1:SortTdataCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTdataCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTdataCellOpt(inj{TdataCellOpt,KItem}(TdataCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTdataCellOpt{}(kseq{}(inj{SortTdataCellOpt{}, SortKItem{}}(VarTdataCellOpt:SortTdataCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTestOp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTestOp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTestOp{}, SortKItem{}}(Var'Unds'1:SortTestOp{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTestOp{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTestOp(inj{TestOp,KItem}(TestOp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTestOp{}(kseq{}(inj{SortTestOp{}, SortKItem{}}(VarTestOp:SortTestOp{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTextFormatGlobalType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTextFormatGlobalType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTextFormatGlobalType{}, SortKItem{}}(Var'Unds'1:SortTextFormatGlobalType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTextFormatGlobalType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTextFormatGlobalType(inj{TextFormatGlobalType,KItem}(TextFormatGlobalType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTextFormatGlobalType{}(kseq{}(inj{SortTextFormatGlobalType{}, SortKItem{}}(VarTextFormatGlobalType:SortTextFormatGlobalType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTmaxCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTmaxCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTmaxCell{}, SortKItem{}}(Var'Unds'0:SortTmaxCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTmaxCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTmaxCell(inj{TmaxCell,KItem}(TmaxCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTmaxCell{}(kseq{}(inj{SortTmaxCell{}, SortKItem{}}(VarTmaxCell:SortTmaxCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTmaxCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTmaxCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTmaxCellOpt{}, SortKItem{}}(Var'Unds'0:SortTmaxCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTmaxCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTmaxCellOpt(inj{TmaxCellOpt,KItem}(TmaxCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTmaxCellOpt{}(kseq{}(inj{SortTmaxCellOpt{}, SortKItem{}}(VarTmaxCellOpt:SortTmaxCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTsizeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTsizeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTsizeCell{}, SortKItem{}}(Var'Unds'1:SortTsizeCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTsizeCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTsizeCell(inj{TsizeCell,KItem}(TsizeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTsizeCell{}(kseq{}(inj{SortTsizeCell{}, SortKItem{}}(VarTsizeCell:SortTsizeCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTsizeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTsizeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTsizeCellOpt{}, SortKItem{}}(Var'Unds'1:SortTsizeCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTsizeCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTsizeCellOpt(inj{TsizeCellOpt,KItem}(TsizeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTsizeCellOpt{}(kseq{}(inj{SortTsizeCellOpt{}, SortKItem{}}(VarTsizeCellOpt:SortTsizeCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortType{}, SortKItem{}}(Var'Unds'1:SortType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isType(inj{Type,KItem}(Type))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisType{}(kseq{}(inj{SortType{}, SortKItem{}}(VarType:SortType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeDecl(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTypeDecl{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypeDecl{}, SortKItem{}}(Var'Unds'1:SortTypeDecl{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDecl{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeDecl(inj{TypeDecl,KItem}(TypeDecl))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDecl{}(kseq{}(inj{SortTypeDecl{}, SortKItem{}}(VarTypeDecl:SortTypeDecl{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeDecls(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTypeDecls{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypeDecls{}, SortKItem{}}(Var'Unds'0:SortTypeDecls{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDecls{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeDecls(inj{TypeDecls,KItem}(TypeDecls))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDecls{}(kseq{}(inj{SortTypeDecls{}, SortKItem{}}(VarTypeDecls:SortTypeDecls{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeDefn(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTypeDefn{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypeDefn{}, SortKItem{}}(Var'Unds'1:SortTypeDefn{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDefn{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeDefn(inj{TypeDefn,KItem}(TypeDefn))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeDefn{}(kseq{}(inj{SortTypeDefn{}, SortKItem{}}(VarTypeDefn:SortTypeDefn{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeIdsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTypeIdsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypeIdsCell{}, SortKItem{}}(Var'Unds'1:SortTypeIdsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeIdsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeIdsCell(inj{TypeIdsCell,KItem}(TypeIdsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeIdsCell{}(kseq{}(inj{SortTypeIdsCell{}, SortKItem{}}(VarTypeIdsCell:SortTypeIdsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeIdsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTypeIdsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypeIdsCellOpt{}, SortKItem{}}(Var'Unds'1:SortTypeIdsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeIdsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeIdsCellOpt(inj{TypeIdsCellOpt,KItem}(TypeIdsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeIdsCellOpt{}(kseq{}(inj{SortTypeIdsCellOpt{}, SortKItem{}}(VarTypeIdsCellOpt:SortTypeIdsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeKeyWord(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTypeKeyWord{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypeKeyWord{}, SortKItem{}}(Var'Unds'1:SortTypeKeyWord{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeKeyWord{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeKeyWord(inj{TypeKeyWord,KItem}(TypeKeyWord))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeKeyWord{}(kseq{}(inj{SortTypeKeyWord{}, SortKItem{}}(VarTypeKeyWord:SortTypeKeyWord{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypeUse(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTypeUse{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypeUse{}, SortKItem{}}(Var'Unds'0:SortTypeUse{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeUse{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypeUse(inj{TypeUse,KItem}(TypeUse))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypeUse{}(kseq{}(inj{SortTypeUse{}, SortKItem{}}(VarTypeUse:SortTypeUse{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypesCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTypesCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypesCell{}, SortKItem{}}(Var'Unds'0:SortTypesCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypesCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypesCell(inj{TypesCell,KItem}(TypesCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypesCell{}(kseq{}(inj{SortTypesCell{}, SortKItem{}}(VarTypesCell:SortTypesCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTypesCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTypesCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTypesCellOpt{}, SortKItem{}}(Var'Unds'0:SortTypesCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypesCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTypesCellOpt(inj{TypesCellOpt,KItem}(TypesCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTypesCellOpt{}(kseq{}(inj{SortTypesCellOpt{}, SortKItem{}}(VarTypesCellOpt:SortTypesCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isVal(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortVal{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortVal{}, SortKItem{}}(Var'Unds'1:SortVal{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVal{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isVal(inj{Val,KItem}(Val))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVal{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarVal:SortVal{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isValStack(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortValStack{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortValStack{}, SortKItem{}}(Var'Unds'1:SortValStack{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValStack{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isValStack(inj{ValStack,KItem}(ValStack))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValStack{}(kseq{}(inj{SortValStack{}, SortKItem{}}(VarValStack:SortValStack{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isValType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortValType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortValType{}, SortKItem{}}(Var'Unds'1:SortValType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isValType(inj{ValType,KItem}(ValType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValType{}(kseq{}(inj{SortValType{}, SortKItem{}}(VarValType:SortValType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isValTypes(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortValTypes{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortValTypes{}, SortKItem{}}(Var'Unds'1:SortValTypes{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValTypes{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isValTypes(inj{ValTypes,KItem}(ValTypes))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValTypes{}(kseq{}(inj{SortValTypes{}, SortKItem{}}(VarValTypes:SortValTypes{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isValstackCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortValstackCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortValstackCell{}, SortKItem{}}(Var'Unds'1:SortValstackCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValstackCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isValstackCell(inj{ValstackCell,KItem}(ValstackCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValstackCell{}(kseq{}(inj{SortValstackCell{}, SortKItem{}}(VarValstackCell:SortValstackCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isValstackCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortValstackCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortValstackCellOpt{}, SortKItem{}}(Var'Unds'0:SortValstackCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValstackCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isValstackCellOpt(inj{ValstackCellOpt,KItem}(ValstackCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisValstackCellOpt{}(kseq{}(inj{SortValstackCellOpt{}, SortKItem{}}(VarValstackCellOpt:SortValstackCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isVecType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortVecType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortVecType{}, SortKItem{}}(Var'Unds'0:SortVecType{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVecType{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isVecType(inj{VecType,KItem}(VecType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVecType{}(kseq{}(inj{SortVecType{}, SortKItem{}}(VarVecType:SortVecType{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortWasmCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortWasmCell{}, SortKItem{}}(Var'Unds'0:SortWasmCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmCell(inj{WasmCell,KItem}(WasmCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCell{}(kseq{}(inj{SortWasmCell{}, SortKItem{}}(VarWasmCell:SortWasmCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortWasmCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortWasmCellFragment{}, SortKItem{}}(Var'Unds'0:SortWasmCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmCellFragment(inj{WasmCellFragment,KItem}(WasmCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCellFragment{}(kseq{}(inj{SortWasmCellFragment{}, SortKItem{}}(VarWasmCellFragment:SortWasmCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortWasmCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortWasmCellOpt{}, SortKItem{}}(Var'Unds'1:SortWasmCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmCellOpt(inj{WasmCellOpt,KItem}(WasmCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmCellOpt{}(kseq{}(inj{SortWasmCellOpt{}, SortKItem{}}(VarWasmCellOpt:SortWasmCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmIntToken(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortWasmIntToken{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortWasmIntToken{}, SortKItem{}}(Var'Unds'0:SortWasmIntToken{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmIntToken{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmIntToken(inj{WasmIntToken,KItem}(WasmIntToken))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmIntToken{}(kseq{}(inj{SortWasmIntToken{}, SortKItem{}}(VarWasmIntToken:SortWasmIntToken{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortWasmString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortWasmString{}, SortKItem{}}(Var'Unds'1:SortWasmString{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmString{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmString(inj{WasmString,KItem}(WasmString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmString{}(kseq{}(inj{SortWasmString{}, SortKItem{}}(VarWasmString:SortWasmString{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isWasmStringToken(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortWasmStringToken{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortWasmStringToken{}, SortKItem{}}(Var'Unds'1:SortWasmStringToken{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmStringToken{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isWasmStringToken(inj{WasmStringToken,KItem}(WasmStringToken))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisWasmStringToken{}(kseq{}(inj{SortWasmStringToken{}, SortKItem{}}(VarWasmStringToken:SortWasmStringToken{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I1 requires `_<=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(38650d96d25c007c33eb715dd4181e4a42c220f5e5176d70f1681d38a912778c) contentStartColumn(8) contentStartLine(475) org.kframework.attributes.Location(Location(475,8,475,57)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        VarI1:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("475"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(475,8,475,57)"), UNIQUE'Unds'ID{}("38650d96d25c007c33eb715dd4181e4a42c220f5e5176d70f1681d38a912778c")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I2 requires `_>=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(ed79be21493dc628c839ab8c3af1a0a402499df0f71a6d5566fdf35fdd7b16c4) contentStartColumn(8) contentStartLine(476) org.kframework.attributes.Location(Location(476,8,476,57)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        VarI2:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("476"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(476,8,476,57)"), UNIQUE'Unds'ID{}("ed79be21493dc628c839ab8c3af1a0a402499df0f71a6d5566fdf35fdd7b16c4")]

// rule `notBool_`(#token("true","Bool") #as _1)=>#token("false","Bool") requires _1 ensures _1 [UNIQUE_ID(de18dba5cb1b6e56941a63279edb1d16da29d7a997a3e82cbc2b81b066eadf47) contentStartColumn(8) contentStartLine(327) org.kframework.attributes.Location(Location(327,8,327,29)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        LblnotBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{})),
        \dv{SortBool{}}("false")),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("327"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(327,8,327,29)"), UNIQUE'Unds'ID{}("de18dba5cb1b6e56941a63279edb1d16da29d7a997a3e82cbc2b81b066eadf47")]

// rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dbe4d83961158619e994f90623f08be11020d80c56685ef1ec2dd2b15760c474) contentStartColumn(8) contentStartLine(328) org.kframework.attributes.Location(Location(328,8,328,29)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblnotBool'Unds'{}(\dv{SortBool{}}("false")),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("328"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(328,8,328,29)"), UNIQUE'Unds'ID{}("dbe4d83961158619e994f90623f08be11020d80c56685ef1ec2dd2b15760c474")]

// rule `project:AValType`(inj{AValType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAValType{},R} (
        Lblproject'Coln'AValType{}(kseq{}(inj{SortAValType{}, SortKItem{}}(VarK:SortAValType{}),dotk{}())),
        VarK:SortAValType{}),
      \top{R}()))
  [projection{}()]

// rule `project:AlignArg`(inj{AlignArg,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAlignArg{},R} (
        Lblproject'Coln'AlignArg{}(kseq{}(inj{SortAlignArg{}, SortKItem{}}(VarK:SortAlignArg{}),dotk{}())),
        VarK:SortAlignArg{}),
      \top{R}()))
  [projection{}()]

// rule `project:AllocatedKind`(inj{AllocatedKind,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAllocatedKind{},R} (
        Lblproject'Coln'AllocatedKind{}(kseq{}(inj{SortAllocatedKind{}, SortKItem{}}(VarK:SortAllocatedKind{}),dotk{}())),
        VarK:SortAllocatedKind{}),
      \top{R}()))
  [projection{}()]

// rule `project:BlockInstr`(inj{BlockInstr,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBlockInstr{},R} (
        Lblproject'Coln'BlockInstr{}(kseq{}(inj{SortBlockInstr{}, SortKItem{}}(VarK:SortBlockInstr{}),dotk{}())),
        VarK:SortBlockInstr{}),
      \top{R}()))
  [projection{}()]

// rule `project:Bool`(inj{Bool,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lblproject'Coln'Bool{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarK:SortBool{}),dotk{}())),
        VarK:SortBool{}),
      \top{R}()))
  [projection{}()]

// rule `project:ByteMap`(inj{ByteMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortByteMap{},R} (
        Lblproject'Coln'ByteMap{}(kseq{}(inj{SortByteMap{}, SortKItem{}}(VarK:SortByteMap{}),dotk{}())),
        VarK:SortByteMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:Bytes`(inj{Bytes,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBytes{},R} (
        Lblproject'Coln'Bytes{}(kseq{}(inj{SortBytes{}, SortKItem{}}(VarK:SortBytes{}),dotk{}())),
        VarK:SortBytes{}),
      \top{R}()))
  [projection{}()]

// rule `project:Cell`(inj{Cell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCell{},R} (
        Lblproject'Coln'Cell{}(kseq{}(inj{SortCell{}, SortKItem{}}(VarK:SortCell{}),dotk{}())),
        VarK:SortCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:CurFrameCell`(inj{CurFrameCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCurFrameCell{},R} (
        Lblproject'Coln'CurFrameCell{}(kseq{}(inj{SortCurFrameCell{}, SortKItem{}}(VarK:SortCurFrameCell{}),dotk{}())),
        VarK:SortCurFrameCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:CurFrameCellFragment`(inj{CurFrameCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCurFrameCellFragment{},R} (
        Lblproject'Coln'CurFrameCellFragment{}(kseq{}(inj{SortCurFrameCellFragment{}, SortKItem{}}(VarK:SortCurFrameCellFragment{}),dotk{}())),
        VarK:SortCurFrameCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:CurFrameCellOpt`(inj{CurFrameCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCurFrameCellOpt{},R} (
        Lblproject'Coln'CurFrameCellOpt{}(kseq{}(inj{SortCurFrameCellOpt{}, SortKItem{}}(VarK:SortCurFrameCellOpt{}),dotk{}())),
        VarK:SortCurFrameCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:CurModIdxCell`(inj{CurModIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCurModIdxCell{},R} (
        Lblproject'Coln'CurModIdxCell{}(kseq{}(inj{SortCurModIdxCell{}, SortKItem{}}(VarK:SortCurModIdxCell{}),dotk{}())),
        VarK:SortCurModIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:CurModIdxCellOpt`(inj{CurModIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCurModIdxCellOpt{},R} (
        Lblproject'Coln'CurModIdxCellOpt{}(kseq{}(inj{SortCurModIdxCellOpt{}, SortKItem{}}(VarK:SortCurModIdxCellOpt{}),dotk{}())),
        VarK:SortCurModIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:CvtOp`(inj{CvtOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCvtOp{},R} (
        Lblproject'Coln'CvtOp{}(kseq{}(inj{SortCvtOp{}, SortKItem{}}(VarK:SortCvtOp{}),dotk{}())),
        VarK:SortCvtOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:Cvtf32Op`(inj{Cvtf32Op,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCvtf32Op{},R} (
        Lblproject'Coln'Cvtf32Op{}(kseq{}(inj{SortCvtf32Op{}, SortKItem{}}(VarK:SortCvtf32Op{}),dotk{}())),
        VarK:SortCvtf32Op{}),
      \top{R}()))
  [projection{}()]

// rule `project:Cvtf64Op`(inj{Cvtf64Op,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCvtf64Op{},R} (
        Lblproject'Coln'Cvtf64Op{}(kseq{}(inj{SortCvtf64Op{}, SortKItem{}}(VarK:SortCvtf64Op{}),dotk{}())),
        VarK:SortCvtf64Op{}),
      \top{R}()))
  [projection{}()]

// rule `project:Cvti32Op`(inj{Cvti32Op,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCvti32Op{},R} (
        Lblproject'Coln'Cvti32Op{}(kseq{}(inj{SortCvti32Op{}, SortKItem{}}(VarK:SortCvti32Op{}),dotk{}())),
        VarK:SortCvti32Op{}),
      \top{R}()))
  [projection{}()]

// rule `project:Cvti64Op`(inj{Cvti64Op,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCvti64Op{},R} (
        Lblproject'Coln'Cvti64Op{}(kseq{}(inj{SortCvti64Op{}, SortKItem{}}(VarK:SortCvti64Op{}),dotk{}())),
        VarK:SortCvti64Op{}),
      \top{R}()))
  [projection{}()]

// rule `project:DataDefn`(inj{DataDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDataDefn{},R} (
        Lblproject'Coln'DataDefn{}(kseq{}(inj{SortDataDefn{}, SortKItem{}}(VarK:SortDataDefn{}),dotk{}())),
        VarK:SortDataDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:DataString`(inj{DataString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDataString{},R} (
        Lblproject'Coln'DataString{}(kseq{}(inj{SortDataString{}, SortKItem{}}(VarK:SortDataString{}),dotk{}())),
        VarK:SortDataString{}),
      \top{R}()))
  [projection{}()]

// rule `project:Defn`(inj{Defn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefn{},R} (
        Lblproject'Coln'Defn{}(kseq{}(inj{SortDefn{}, SortKItem{}}(VarK:SortDefn{}),dotk{}())),
        VarK:SortDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:Defns`(inj{Defns,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'Defns{}(kseq{}(inj{SortDefns{}, SortKItem{}}(VarK:SortDefns{}),dotk{}())),
        VarK:SortDefns{}),
      \top{R}()))
  [projection{}()]

// rule `project:DeterministicMemoryGrowthCell`(inj{DeterministicMemoryGrowthCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeterministicMemoryGrowthCell{},R} (
        Lblproject'Coln'DeterministicMemoryGrowthCell{}(kseq{}(inj{SortDeterministicMemoryGrowthCell{}, SortKItem{}}(VarK:SortDeterministicMemoryGrowthCell{}),dotk{}())),
        VarK:SortDeterministicMemoryGrowthCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:DeterministicMemoryGrowthCellOpt`(inj{DeterministicMemoryGrowthCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeterministicMemoryGrowthCellOpt{},R} (
        Lblproject'Coln'DeterministicMemoryGrowthCellOpt{}(kseq{}(inj{SortDeterministicMemoryGrowthCellOpt{}, SortKItem{}}(VarK:SortDeterministicMemoryGrowthCellOpt{}),dotk{}())),
        VarK:SortDeterministicMemoryGrowthCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ElemDefn`(inj{ElemDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortElemDefn{},R} (
        Lblproject'Coln'ElemDefn{}(kseq{}(inj{SortElemDefn{}, SortKItem{}}(VarK:SortElemDefn{}),dotk{}())),
        VarK:SortElemDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:ElemSegment`(inj{ElemSegment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortElemSegment{},R} (
        Lblproject'Coln'ElemSegment{}(kseq{}(inj{SortElemSegment{}, SortKItem{}}(VarK:SortElemSegment{}),dotk{}())),
        VarK:SortElemSegment{}),
      \top{R}()))
  [projection{}()]

// rule `project:EmptyStmt`(inj{EmptyStmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortEmptyStmt{},R} (
        Lblproject'Coln'EmptyStmt{}(kseq{}(inj{SortEmptyStmt{}, SortKItem{}}(VarK:SortEmptyStmt{}),dotk{}())),
        VarK:SortEmptyStmt{}),
      \top{R}()))
  [projection{}()]

// rule `project:EmptyStmts`(inj{EmptyStmts,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortEmptyStmts{},R} (
        Lblproject'Coln'EmptyStmts{}(kseq{}(inj{SortEmptyStmts{}, SortKItem{}}(VarK:SortEmptyStmts{}),dotk{}())),
        VarK:SortEmptyStmts{}),
      \top{R}()))
  [projection{}()]

// rule `project:Endianness`(inj{Endianness,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortEndianness{},R} (
        Lblproject'Coln'Endianness{}(kseq{}(inj{SortEndianness{}, SortKItem{}}(VarK:SortEndianness{}),dotk{}())),
        VarK:SortEndianness{}),
      \top{R}()))
  [projection{}()]

// rule `project:ExportDefn`(inj{ExportDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortExportDefn{},R} (
        Lblproject'Coln'ExportDefn{}(kseq{}(inj{SortExportDefn{}, SortKItem{}}(VarK:SortExportDefn{}),dotk{}())),
        VarK:SortExportDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:ExportsCell`(inj{ExportsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortExportsCell{},R} (
        Lblproject'Coln'ExportsCell{}(kseq{}(inj{SortExportsCell{}, SortKItem{}}(VarK:SortExportsCell{}),dotk{}())),
        VarK:SortExportsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ExportsCellOpt`(inj{ExportsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortExportsCellOpt{},R} (
        Lblproject'Coln'ExportsCellOpt{}(kseq{}(inj{SortExportsCellOpt{}, SortKItem{}}(VarK:SortExportsCellOpt{}),dotk{}())),
        VarK:SortExportsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Externval`(inj{Externval,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortExternval{},R} (
        Lblproject'Coln'Externval{}(kseq{}(inj{SortExternval{}, SortKItem{}}(VarK:SortExternval{}),dotk{}())),
        VarK:SortExternval{}),
      \top{R}()))
  [projection{}()]

// rule `project:FAddrCell`(inj{FAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFAddrCell{},R} (
        Lblproject'Coln'FAddrCell{}(kseq{}(inj{SortFAddrCell{}, SortKItem{}}(VarK:SortFAddrCell{}),dotk{}())),
        VarK:SortFAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FAddrCellOpt`(inj{FAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFAddrCellOpt{},R} (
        Lblproject'Coln'FAddrCellOpt{}(kseq{}(inj{SortFAddrCellOpt{}, SortKItem{}}(VarK:SortFAddrCellOpt{}),dotk{}())),
        VarK:SortFAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FBinOp`(inj{FBinOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFBinOp{},R} (
        Lblproject'Coln'FBinOp{}(kseq{}(inj{SortFBinOp{}, SortKItem{}}(VarK:SortFBinOp{}),dotk{}())),
        VarK:SortFBinOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:FCodeCell`(inj{FCodeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFCodeCell{},R} (
        Lblproject'Coln'FCodeCell{}(kseq{}(inj{SortFCodeCell{}, SortKItem{}}(VarK:SortFCodeCell{}),dotk{}())),
        VarK:SortFCodeCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FCodeCellOpt`(inj{FCodeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFCodeCellOpt{},R} (
        Lblproject'Coln'FCodeCellOpt{}(kseq{}(inj{SortFCodeCellOpt{}, SortKItem{}}(VarK:SortFCodeCellOpt{}),dotk{}())),
        VarK:SortFCodeCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FLocalCell`(inj{FLocalCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFLocalCell{},R} (
        Lblproject'Coln'FLocalCell{}(kseq{}(inj{SortFLocalCell{}, SortKItem{}}(VarK:SortFLocalCell{}),dotk{}())),
        VarK:SortFLocalCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FLocalCellOpt`(inj{FLocalCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFLocalCellOpt{},R} (
        Lblproject'Coln'FLocalCellOpt{}(kseq{}(inj{SortFLocalCellOpt{}, SortKItem{}}(VarK:SortFLocalCellOpt{}),dotk{}())),
        VarK:SortFLocalCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FModInstCell`(inj{FModInstCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFModInstCell{},R} (
        Lblproject'Coln'FModInstCell{}(kseq{}(inj{SortFModInstCell{}, SortKItem{}}(VarK:SortFModInstCell{}),dotk{}())),
        VarK:SortFModInstCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FModInstCellOpt`(inj{FModInstCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFModInstCellOpt{},R} (
        Lblproject'Coln'FModInstCellOpt{}(kseq{}(inj{SortFModInstCellOpt{}, SortKItem{}}(VarK:SortFModInstCellOpt{}),dotk{}())),
        VarK:SortFModInstCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FRelOp`(inj{FRelOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFRelOp{},R} (
        Lblproject'Coln'FRelOp{}(kseq{}(inj{SortFRelOp{}, SortKItem{}}(VarK:SortFRelOp{}),dotk{}())),
        VarK:SortFRelOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:FTypeCell`(inj{FTypeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFTypeCell{},R} (
        Lblproject'Coln'FTypeCell{}(kseq{}(inj{SortFTypeCell{}, SortKItem{}}(VarK:SortFTypeCell{}),dotk{}())),
        VarK:SortFTypeCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FTypeCellOpt`(inj{FTypeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFTypeCellOpt{},R} (
        Lblproject'Coln'FTypeCellOpt{}(kseq{}(inj{SortFTypeCellOpt{}, SortKItem{}}(VarK:SortFTypeCellOpt{}),dotk{}())),
        VarK:SortFTypeCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FUnOp`(inj{FUnOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFUnOp{},R} (
        Lblproject'Coln'FUnOp{}(kseq{}(inj{SortFUnOp{}, SortKItem{}}(VarK:SortFUnOp{}),dotk{}())),
        VarK:SortFUnOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:FVal`(inj{FVal,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFVal{},R} (
        Lblproject'Coln'FVal{}(kseq{}(inj{SortFVal{}, SortKItem{}}(VarK:SortFVal{}),dotk{}())),
        VarK:SortFVal{}),
      \top{R}()))
  [projection{}()]

// rule `project:FValType`(inj{FValType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFValType{},R} (
        Lblproject'Coln'FValType{}(kseq{}(inj{SortFValType{}, SortKItem{}}(VarK:SortFValType{}),dotk{}())),
        VarK:SortFValType{}),
      \top{R}()))
  [projection{}()]

// rule `project:Float`(inj{Float,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFloat{},R} (
        Lblproject'Coln'Float{}(kseq{}(inj{SortFloat{}, SortKItem{}}(VarK:SortFloat{}),dotk{}())),
        VarK:SortFloat{}),
      \top{R}()))
  [projection{}()]

// rule `project:FoldedInstr`(inj{FoldedInstr,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFoldedInstr{},R} (
        Lblproject'Coln'FoldedInstr{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(VarK:SortFoldedInstr{}),dotk{}())),
        VarK:SortFoldedInstr{}),
      \top{R}()))
  [projection{}()]

// rule `project:Frame`(inj{Frame,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFrame{},R} (
        Lblproject'Coln'Frame{}(kseq{}(inj{SortFrame{}, SortKItem{}}(VarK:SortFrame{}),dotk{}())),
        VarK:SortFrame{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncAddrsCell`(inj{FuncAddrsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncAddrsCell{},R} (
        Lblproject'Coln'FuncAddrsCell{}(kseq{}(inj{SortFuncAddrsCell{}, SortKItem{}}(VarK:SortFuncAddrsCell{}),dotk{}())),
        VarK:SortFuncAddrsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncAddrsCellOpt`(inj{FuncAddrsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncAddrsCellOpt{},R} (
        Lblproject'Coln'FuncAddrsCellOpt{}(kseq{}(inj{SortFuncAddrsCellOpt{}, SortKItem{}}(VarK:SortFuncAddrsCellOpt{}),dotk{}())),
        VarK:SortFuncAddrsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncDefCell`(inj{FuncDefCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncDefCell{},R} (
        Lblproject'Coln'FuncDefCell{}(kseq{}(inj{SortFuncDefCell{}, SortKItem{}}(VarK:SortFuncDefCell{}),dotk{}())),
        VarK:SortFuncDefCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncDefCellFragment`(inj{FuncDefCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncDefCellFragment{},R} (
        Lblproject'Coln'FuncDefCellFragment{}(kseq{}(inj{SortFuncDefCellFragment{}, SortKItem{}}(VarK:SortFuncDefCellFragment{}),dotk{}())),
        VarK:SortFuncDefCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncDefCellMap`(inj{FuncDefCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncDefCellMap{},R} (
        Lblproject'Coln'FuncDefCellMap{}(kseq{}(inj{SortFuncDefCellMap{}, SortKItem{}}(VarK:SortFuncDefCellMap{}),dotk{}())),
        VarK:SortFuncDefCellMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncDefn`(inj{FuncDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncDefn{},R} (
        Lblproject'Coln'FuncDefn{}(kseq{}(inj{SortFuncDefn{}, SortKItem{}}(VarK:SortFuncDefn{}),dotk{}())),
        VarK:SortFuncDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncIdsCell`(inj{FuncIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncIdsCell{},R} (
        Lblproject'Coln'FuncIdsCell{}(kseq{}(inj{SortFuncIdsCell{}, SortKItem{}}(VarK:SortFuncIdsCell{}),dotk{}())),
        VarK:SortFuncIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncIdsCellOpt`(inj{FuncIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncIdsCellOpt{},R} (
        Lblproject'Coln'FuncIdsCellOpt{}(kseq{}(inj{SortFuncIdsCellOpt{}, SortKItem{}}(VarK:SortFuncIdsCellOpt{}),dotk{}())),
        VarK:SortFuncIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncSpec`(inj{FuncSpec,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncSpec{},R} (
        Lblproject'Coln'FuncSpec{}(kseq{}(inj{SortFuncSpec{}, SortKItem{}}(VarK:SortFuncSpec{}),dotk{}())),
        VarK:SortFuncSpec{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncType`(inj{FuncType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncType{},R} (
        Lblproject'Coln'FuncType{}(kseq{}(inj{SortFuncType{}, SortKItem{}}(VarK:SortFuncType{}),dotk{}())),
        VarK:SortFuncType{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncsCell`(inj{FuncsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncsCell{},R} (
        Lblproject'Coln'FuncsCell{}(kseq{}(inj{SortFuncsCell{}, SortKItem{}}(VarK:SortFuncsCell{}),dotk{}())),
        VarK:SortFuncsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncsCellFragment`(inj{FuncsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncsCellFragment{},R} (
        Lblproject'Coln'FuncsCellFragment{}(kseq{}(inj{SortFuncsCellFragment{}, SortKItem{}}(VarK:SortFuncsCellFragment{}),dotk{}())),
        VarK:SortFuncsCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:FuncsCellOpt`(inj{FuncsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncsCellOpt{},R} (
        Lblproject'Coln'FuncsCellOpt{}(kseq{}(inj{SortFuncsCellOpt{}, SortKItem{}}(VarK:SortFuncsCellOpt{}),dotk{}())),
        VarK:SortFuncsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GAddrCell`(inj{GAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGAddrCell{},R} (
        Lblproject'Coln'GAddrCell{}(kseq{}(inj{SortGAddrCell{}, SortKItem{}}(VarK:SortGAddrCell{}),dotk{}())),
        VarK:SortGAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GAddrCellOpt`(inj{GAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGAddrCellOpt{},R} (
        Lblproject'Coln'GAddrCellOpt{}(kseq{}(inj{SortGAddrCellOpt{}, SortKItem{}}(VarK:SortGAddrCellOpt{}),dotk{}())),
        VarK:SortGAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GMutCell`(inj{GMutCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGMutCell{},R} (
        Lblproject'Coln'GMutCell{}(kseq{}(inj{SortGMutCell{}, SortKItem{}}(VarK:SortGMutCell{}),dotk{}())),
        VarK:SortGMutCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GMutCellOpt`(inj{GMutCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGMutCellOpt{},R} (
        Lblproject'Coln'GMutCellOpt{}(kseq{}(inj{SortGMutCellOpt{}, SortKItem{}}(VarK:SortGMutCellOpt{}),dotk{}())),
        VarK:SortGMutCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GValueCell`(inj{GValueCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGValueCell{},R} (
        Lblproject'Coln'GValueCell{}(kseq{}(inj{SortGValueCell{}, SortKItem{}}(VarK:SortGValueCell{}),dotk{}())),
        VarK:SortGValueCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GValueCellOpt`(inj{GValueCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGValueCellOpt{},R} (
        Lblproject'Coln'GValueCellOpt{}(kseq{}(inj{SortGValueCellOpt{}, SortKItem{}}(VarK:SortGValueCellOpt{}),dotk{}())),
        VarK:SortGValueCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedCounterCell`(inj{GeneratedCounterCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedCounterCell{},R} (
        Lblproject'Coln'GeneratedCounterCell{}(kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarK:SortGeneratedCounterCell{}),dotk{}())),
        VarK:SortGeneratedCounterCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedCounterCellOpt`(inj{GeneratedCounterCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedCounterCellOpt{},R} (
        Lblproject'Coln'GeneratedCounterCellOpt{}(kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarK:SortGeneratedCounterCellOpt{}),dotk{}())),
        VarK:SortGeneratedCounterCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedTopCell`(inj{GeneratedTopCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedTopCell{},R} (
        Lblproject'Coln'GeneratedTopCell{}(kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarK:SortGeneratedTopCell{}),dotk{}())),
        VarK:SortGeneratedTopCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedTopCellFragment`(inj{GeneratedTopCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedTopCellFragment{},R} (
        Lblproject'Coln'GeneratedTopCellFragment{}(kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarK:SortGeneratedTopCellFragment{}),dotk{}())),
        VarK:SortGeneratedTopCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobIdsCell`(inj{GlobIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobIdsCell{},R} (
        Lblproject'Coln'GlobIdsCell{}(kseq{}(inj{SortGlobIdsCell{}, SortKItem{}}(VarK:SortGlobIdsCell{}),dotk{}())),
        VarK:SortGlobIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobIdsCellOpt`(inj{GlobIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobIdsCellOpt{},R} (
        Lblproject'Coln'GlobIdsCellOpt{}(kseq{}(inj{SortGlobIdsCellOpt{}, SortKItem{}}(VarK:SortGlobIdsCellOpt{}),dotk{}())),
        VarK:SortGlobIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalAddrsCell`(inj{GlobalAddrsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalAddrsCell{},R} (
        Lblproject'Coln'GlobalAddrsCell{}(kseq{}(inj{SortGlobalAddrsCell{}, SortKItem{}}(VarK:SortGlobalAddrsCell{}),dotk{}())),
        VarK:SortGlobalAddrsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalAddrsCellOpt`(inj{GlobalAddrsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalAddrsCellOpt{},R} (
        Lblproject'Coln'GlobalAddrsCellOpt{}(kseq{}(inj{SortGlobalAddrsCellOpt{}, SortKItem{}}(VarK:SortGlobalAddrsCellOpt{}),dotk{}())),
        VarK:SortGlobalAddrsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalDefn`(inj{GlobalDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalDefn{},R} (
        Lblproject'Coln'GlobalDefn{}(kseq{}(inj{SortGlobalDefn{}, SortKItem{}}(VarK:SortGlobalDefn{}),dotk{}())),
        VarK:SortGlobalDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalInstCell`(inj{GlobalInstCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalInstCell{},R} (
        Lblproject'Coln'GlobalInstCell{}(kseq{}(inj{SortGlobalInstCell{}, SortKItem{}}(VarK:SortGlobalInstCell{}),dotk{}())),
        VarK:SortGlobalInstCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalInstCellFragment`(inj{GlobalInstCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalInstCellFragment{},R} (
        Lblproject'Coln'GlobalInstCellFragment{}(kseq{}(inj{SortGlobalInstCellFragment{}, SortKItem{}}(VarK:SortGlobalInstCellFragment{}),dotk{}())),
        VarK:SortGlobalInstCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalInstCellMap`(inj{GlobalInstCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalInstCellMap{},R} (
        Lblproject'Coln'GlobalInstCellMap{}(kseq{}(inj{SortGlobalInstCellMap{}, SortKItem{}}(VarK:SortGlobalInstCellMap{}),dotk{}())),
        VarK:SortGlobalInstCellMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalSpec`(inj{GlobalSpec,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalSpec{},R} (
        Lblproject'Coln'GlobalSpec{}(kseq{}(inj{SortGlobalSpec{}, SortKItem{}}(VarK:SortGlobalSpec{}),dotk{}())),
        VarK:SortGlobalSpec{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalType`(inj{GlobalType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalType{},R} (
        Lblproject'Coln'GlobalType{}(kseq{}(inj{SortGlobalType{}, SortKItem{}}(VarK:SortGlobalType{}),dotk{}())),
        VarK:SortGlobalType{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalsCell`(inj{GlobalsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalsCell{},R} (
        Lblproject'Coln'GlobalsCell{}(kseq{}(inj{SortGlobalsCell{}, SortKItem{}}(VarK:SortGlobalsCell{}),dotk{}())),
        VarK:SortGlobalsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalsCellFragment`(inj{GlobalsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalsCellFragment{},R} (
        Lblproject'Coln'GlobalsCellFragment{}(kseq{}(inj{SortGlobalsCellFragment{}, SortKItem{}}(VarK:SortGlobalsCellFragment{}),dotk{}())),
        VarK:SortGlobalsCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:GlobalsCellOpt`(inj{GlobalsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGlobalsCellOpt{},R} (
        Lblproject'Coln'GlobalsCellOpt{}(kseq{}(inj{SortGlobalsCellOpt{}, SortKItem{}}(VarK:SortGlobalsCellOpt{}),dotk{}())),
        VarK:SortGlobalsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:IBinOp`(inj{IBinOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIBinOp{},R} (
        Lblproject'Coln'IBinOp{}(kseq{}(inj{SortIBinOp{}, SortKItem{}}(VarK:SortIBinOp{}),dotk{}())),
        VarK:SortIBinOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:IRelOp`(inj{IRelOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIRelOp{},R} (
        Lblproject'Coln'IRelOp{}(kseq{}(inj{SortIRelOp{}, SortKItem{}}(VarK:SortIRelOp{}),dotk{}())),
        VarK:SortIRelOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:IUnOp`(inj{IUnOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIUnOp{},R} (
        Lblproject'Coln'IUnOp{}(kseq{}(inj{SortIUnOp{}, SortKItem{}}(VarK:SortIUnOp{}),dotk{}())),
        VarK:SortIUnOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:IVal`(inj{IVal,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIVal{},R} (
        Lblproject'Coln'IVal{}(kseq{}(inj{SortIVal{}, SortKItem{}}(VarK:SortIVal{}),dotk{}())),
        VarK:SortIVal{}),
      \top{R}()))
  [projection{}()]

// rule `project:IValType`(inj{IValType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIValType{},R} (
        Lblproject'Coln'IValType{}(kseq{}(inj{SortIValType{}, SortKItem{}}(VarK:SortIValType{}),dotk{}())),
        VarK:SortIValType{}),
      \top{R}()))
  [projection{}()]

// rule `project:Identifier`(inj{Identifier,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIdentifier{},R} (
        Lblproject'Coln'Identifier{}(kseq{}(inj{SortIdentifier{}, SortKItem{}}(VarK:SortIdentifier{}),dotk{}())),
        VarK:SortIdentifier{}),
      \top{R}()))
  [projection{}()]

// rule `project:IdentifierToken`(inj{IdentifierToken,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIdentifierToken{},R} (
        Lblproject'Coln'IdentifierToken{}(kseq{}(inj{SortIdentifierToken{}, SortKItem{}}(VarK:SortIdentifierToken{}),dotk{}())),
        VarK:SortIdentifierToken{}),
      \top{R}()))
  [projection{}()]

// rule `project:ImportDefn`(inj{ImportDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortImportDefn{},R} (
        Lblproject'Coln'ImportDefn{}(kseq{}(inj{SortImportDefn{}, SortKItem{}}(VarK:SortImportDefn{}),dotk{}())),
        VarK:SortImportDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:ImportDesc`(inj{ImportDesc,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortImportDesc{},R} (
        Lblproject'Coln'ImportDesc{}(kseq{}(inj{SortImportDesc{}, SortKItem{}}(VarK:SortImportDesc{}),dotk{}())),
        VarK:SortImportDesc{}),
      \top{R}()))
  [projection{}()]

// rule `project:Index`(inj{Index,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIndex{},R} (
        Lblproject'Coln'Index{}(kseq{}(inj{SortIndex{}, SortKItem{}}(VarK:SortIndex{}),dotk{}())),
        VarK:SortIndex{}),
      \top{R}()))
  [projection{}()]

// rule `project:InlineExport`(inj{InlineExport,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInlineExport{},R} (
        Lblproject'Coln'InlineExport{}(kseq{}(inj{SortInlineExport{}, SortKItem{}}(VarK:SortInlineExport{}),dotk{}())),
        VarK:SortInlineExport{}),
      \top{R}()))
  [projection{}()]

// rule `project:InlineImport`(inj{InlineImport,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInlineImport{},R} (
        Lblproject'Coln'InlineImport{}(kseq{}(inj{SortInlineImport{}, SortKItem{}}(VarK:SortInlineImport{}),dotk{}())),
        VarK:SortInlineImport{}),
      \top{R}()))
  [projection{}()]

// rule `project:Instr`(inj{Instr,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstr{},R} (
        Lblproject'Coln'Instr{}(kseq{}(inj{SortInstr{}, SortKItem{}}(VarK:SortInstr{}),dotk{}())),
        VarK:SortInstr{}),
      \top{R}()))
  [projection{}()]

// rule `project:Instrs`(inj{Instrs,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInstrs{},R} (
        Lblproject'Coln'Instrs{}(kseq{}(inj{SortInstrs{}, SortKItem{}}(VarK:SortInstrs{}),dotk{}())),
        VarK:SortInstrs{}),
      \top{R}()))
  [projection{}()]

// rule `project:Int`(inj{Int,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lblproject'Coln'Int{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarK:SortInt{}),dotk{}())),
        VarK:SortInt{}),
      \top{R}()))
  [projection{}()]

// rule `project:KCell`(inj{KCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKCell{},R} (
        Lblproject'Coln'KCell{}(kseq{}(inj{SortKCell{}, SortKItem{}}(VarK:SortKCell{}),dotk{}())),
        VarK:SortKCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:KCellOpt`(inj{KCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKCellOpt{},R} (
        Lblproject'Coln'KCellOpt{}(kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarK:SortKCellOpt{}),dotk{}())),
        VarK:SortKCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKItem{},R} (
        Lblproject'Coln'KItem{}(kseq{}(VarK:SortKItem{},dotk{}())),
        VarK:SortKItem{}),
      \top{R}()))
  [projection{}()]

// rule `project:Label`(inj{Label,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLabel{},R} (
        Lblproject'Coln'Label{}(kseq{}(inj{SortLabel{}, SortKItem{}}(VarK:SortLabel{}),dotk{}())),
        VarK:SortLabel{}),
      \top{R}()))
  [projection{}()]

// rule `project:LabelDepthCell`(inj{LabelDepthCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLabelDepthCell{},R} (
        Lblproject'Coln'LabelDepthCell{}(kseq{}(inj{SortLabelDepthCell{}, SortKItem{}}(VarK:SortLabelDepthCell{}),dotk{}())),
        VarK:SortLabelDepthCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:LabelDepthCellOpt`(inj{LabelDepthCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLabelDepthCellOpt{},R} (
        Lblproject'Coln'LabelDepthCellOpt{}(kseq{}(inj{SortLabelDepthCellOpt{}, SortKItem{}}(VarK:SortLabelDepthCellOpt{}),dotk{}())),
        VarK:SortLabelDepthCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:LabelIdsCell`(inj{LabelIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLabelIdsCell{},R} (
        Lblproject'Coln'LabelIdsCell{}(kseq{}(inj{SortLabelIdsCell{}, SortKItem{}}(VarK:SortLabelIdsCell{}),dotk{}())),
        VarK:SortLabelIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:LabelIdsCellOpt`(inj{LabelIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLabelIdsCellOpt{},R} (
        Lblproject'Coln'LabelIdsCellOpt{}(kseq{}(inj{SortLabelIdsCellOpt{}, SortKItem{}}(VarK:SortLabelIdsCellOpt{}),dotk{}())),
        VarK:SortLabelIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Limits`(inj{Limits,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLimits{},R} (
        Lblproject'Coln'Limits{}(kseq{}(inj{SortLimits{}, SortKItem{}}(VarK:SortLimits{}),dotk{}())),
        VarK:SortLimits{}),
      \top{R}()))
  [projection{}()]

// rule `project:List`(inj{List,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortList{},R} (
        Lblproject'Coln'List{}(kseq{}(inj{SortList{}, SortKItem{}}(VarK:SortList{}),dotk{}())),
        VarK:SortList{}),
      \top{R}()))
  [projection{}()]

// rule `project:LoadOp`(inj{LoadOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLoadOp{},R} (
        Lblproject'Coln'LoadOp{}(kseq{}(inj{SortLoadOp{}, SortKItem{}}(VarK:SortLoadOp{}),dotk{}())),
        VarK:SortLoadOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:LoadOpM`(inj{LoadOpM,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLoadOpM{},R} (
        Lblproject'Coln'LoadOpM{}(kseq{}(inj{SortLoadOpM{}, SortKItem{}}(VarK:SortLoadOpM{}),dotk{}())),
        VarK:SortLoadOpM{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalDecl`(inj{LocalDecl,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalDecl{},R} (
        Lblproject'Coln'LocalDecl{}(kseq{}(inj{SortLocalDecl{}, SortKItem{}}(VarK:SortLocalDecl{}),dotk{}())),
        VarK:SortLocalDecl{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalDecls`(inj{LocalDecls,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalDecls{},R} (
        Lblproject'Coln'LocalDecls{}(kseq{}(inj{SortLocalDecls{}, SortKItem{}}(VarK:SortLocalDecls{}),dotk{}())),
        VarK:SortLocalDecls{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalIdsCell`(inj{LocalIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalIdsCell{},R} (
        Lblproject'Coln'LocalIdsCell{}(kseq{}(inj{SortLocalIdsCell{}, SortKItem{}}(VarK:SortLocalIdsCell{}),dotk{}())),
        VarK:SortLocalIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalIdsCellOpt`(inj{LocalIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalIdsCellOpt{},R} (
        Lblproject'Coln'LocalIdsCellOpt{}(kseq{}(inj{SortLocalIdsCellOpt{}, SortKItem{}}(VarK:SortLocalIdsCellOpt{}),dotk{}())),
        VarK:SortLocalIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalsCell`(inj{LocalsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalsCell{},R} (
        Lblproject'Coln'LocalsCell{}(kseq{}(inj{SortLocalsCell{}, SortKItem{}}(VarK:SortLocalsCell{}),dotk{}())),
        VarK:SortLocalsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:LocalsCellOpt`(inj{LocalsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLocalsCellOpt{},R} (
        Lblproject'Coln'LocalsCellOpt{}(kseq{}(inj{SortLocalsCellOpt{}, SortKItem{}}(VarK:SortLocalsCellOpt{}),dotk{}())),
        VarK:SortLocalsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MAddrCell`(inj{MAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMAddrCell{},R} (
        Lblproject'Coln'MAddrCell{}(kseq{}(inj{SortMAddrCell{}, SortKItem{}}(VarK:SortMAddrCell{}),dotk{}())),
        VarK:SortMAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MAddrCellOpt`(inj{MAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMAddrCellOpt{},R} (
        Lblproject'Coln'MAddrCellOpt{}(kseq{}(inj{SortMAddrCellOpt{}, SortKItem{}}(VarK:SortMAddrCellOpt{}),dotk{}())),
        VarK:SortMAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MInt`(inj{MInt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMInt{},R} (
        Lblproject'Coln'MInt{}(kseq{}(inj{SortMInt{}, SortKItem{}}(VarK:SortMInt{}),dotk{}())),
        VarK:SortMInt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MainStoreCell`(inj{MainStoreCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMainStoreCell{},R} (
        Lblproject'Coln'MainStoreCell{}(kseq{}(inj{SortMainStoreCell{}, SortKItem{}}(VarK:SortMainStoreCell{}),dotk{}())),
        VarK:SortMainStoreCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MainStoreCellFragment`(inj{MainStoreCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMainStoreCellFragment{},R} (
        Lblproject'Coln'MainStoreCellFragment{}(kseq{}(inj{SortMainStoreCellFragment{}, SortKItem{}}(VarK:SortMainStoreCellFragment{}),dotk{}())),
        VarK:SortMainStoreCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:MainStoreCellOpt`(inj{MainStoreCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMainStoreCellOpt{},R} (
        Lblproject'Coln'MainStoreCellOpt{}(kseq{}(inj{SortMainStoreCellOpt{}, SortKItem{}}(VarK:SortMainStoreCellOpt{}),dotk{}())),
        VarK:SortMainStoreCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Map`(inj{Map,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMap{},R} (
        Lblproject'Coln'Map{}(kseq{}(inj{SortMap{}, SortKItem{}}(VarK:SortMap{}),dotk{}())),
        VarK:SortMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:MdataCell`(inj{MdataCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMdataCell{},R} (
        Lblproject'Coln'MdataCell{}(kseq{}(inj{SortMdataCell{}, SortKItem{}}(VarK:SortMdataCell{}),dotk{}())),
        VarK:SortMdataCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MdataCellOpt`(inj{MdataCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMdataCellOpt{},R} (
        Lblproject'Coln'MdataCellOpt{}(kseq{}(inj{SortMdataCellOpt{}, SortKItem{}}(VarK:SortMdataCellOpt{}),dotk{}())),
        VarK:SortMdataCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemAddrsCell`(inj{MemAddrsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemAddrsCell{},R} (
        Lblproject'Coln'MemAddrsCell{}(kseq{}(inj{SortMemAddrsCell{}, SortKItem{}}(VarK:SortMemAddrsCell{}),dotk{}())),
        VarK:SortMemAddrsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemAddrsCellOpt`(inj{MemAddrsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemAddrsCellOpt{},R} (
        Lblproject'Coln'MemAddrsCellOpt{}(kseq{}(inj{SortMemAddrsCellOpt{}, SortKItem{}}(VarK:SortMemAddrsCellOpt{}),dotk{}())),
        VarK:SortMemAddrsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemArg`(inj{MemArg,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemArg{},R} (
        Lblproject'Coln'MemArg{}(kseq{}(inj{SortMemArg{}, SortKItem{}}(VarK:SortMemArg{}),dotk{}())),
        VarK:SortMemArg{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemIdsCell`(inj{MemIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemIdsCell{},R} (
        Lblproject'Coln'MemIdsCell{}(kseq{}(inj{SortMemIdsCell{}, SortKItem{}}(VarK:SortMemIdsCell{}),dotk{}())),
        VarK:SortMemIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemIdsCellOpt`(inj{MemIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemIdsCellOpt{},R} (
        Lblproject'Coln'MemIdsCellOpt{}(kseq{}(inj{SortMemIdsCellOpt{}, SortKItem{}}(VarK:SortMemIdsCellOpt{}),dotk{}())),
        VarK:SortMemIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemInstCell`(inj{MemInstCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemInstCell{},R} (
        Lblproject'Coln'MemInstCell{}(kseq{}(inj{SortMemInstCell{}, SortKItem{}}(VarK:SortMemInstCell{}),dotk{}())),
        VarK:SortMemInstCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemInstCellFragment`(inj{MemInstCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemInstCellFragment{},R} (
        Lblproject'Coln'MemInstCellFragment{}(kseq{}(inj{SortMemInstCellFragment{}, SortKItem{}}(VarK:SortMemInstCellFragment{}),dotk{}())),
        VarK:SortMemInstCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemInstCellMap`(inj{MemInstCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemInstCellMap{},R} (
        Lblproject'Coln'MemInstCellMap{}(kseq{}(inj{SortMemInstCellMap{}, SortKItem{}}(VarK:SortMemInstCellMap{}),dotk{}())),
        VarK:SortMemInstCellMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemType`(inj{MemType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemType{},R} (
        Lblproject'Coln'MemType{}(kseq{}(inj{SortMemType{}, SortKItem{}}(VarK:SortMemType{}),dotk{}())),
        VarK:SortMemType{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemoryDefn`(inj{MemoryDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemoryDefn{},R} (
        Lblproject'Coln'MemoryDefn{}(kseq{}(inj{SortMemoryDefn{}, SortKItem{}}(VarK:SortMemoryDefn{}),dotk{}())),
        VarK:SortMemoryDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemorySpec`(inj{MemorySpec,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemorySpec{},R} (
        Lblproject'Coln'MemorySpec{}(kseq{}(inj{SortMemorySpec{}, SortKItem{}}(VarK:SortMemorySpec{}),dotk{}())),
        VarK:SortMemorySpec{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemsCell`(inj{MemsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemsCell{},R} (
        Lblproject'Coln'MemsCell{}(kseq{}(inj{SortMemsCell{}, SortKItem{}}(VarK:SortMemsCell{}),dotk{}())),
        VarK:SortMemsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemsCellFragment`(inj{MemsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemsCellFragment{},R} (
        Lblproject'Coln'MemsCellFragment{}(kseq{}(inj{SortMemsCellFragment{}, SortKItem{}}(VarK:SortMemsCellFragment{}),dotk{}())),
        VarK:SortMemsCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:MemsCellOpt`(inj{MemsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMemsCellOpt{},R} (
        Lblproject'Coln'MemsCellOpt{}(kseq{}(inj{SortMemsCellOpt{}, SortKItem{}}(VarK:SortMemsCellOpt{}),dotk{}())),
        VarK:SortMemsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MmaxCell`(inj{MmaxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMmaxCell{},R} (
        Lblproject'Coln'MmaxCell{}(kseq{}(inj{SortMmaxCell{}, SortKItem{}}(VarK:SortMmaxCell{}),dotk{}())),
        VarK:SortMmaxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MmaxCellOpt`(inj{MmaxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMmaxCellOpt{},R} (
        Lblproject'Coln'MmaxCellOpt{}(kseq{}(inj{SortMmaxCellOpt{}, SortKItem{}}(VarK:SortMmaxCellOpt{}),dotk{}())),
        VarK:SortMmaxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModIdxCell`(inj{ModIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModIdxCell{},R} (
        Lblproject'Coln'ModIdxCell{}(kseq{}(inj{SortModIdxCell{}, SortKItem{}}(VarK:SortModIdxCell{}),dotk{}())),
        VarK:SortModIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModIdxCellOpt`(inj{ModIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModIdxCellOpt{},R} (
        Lblproject'Coln'ModIdxCellOpt{}(kseq{}(inj{SortModIdxCellOpt{}, SortKItem{}}(VarK:SortModIdxCellOpt{}),dotk{}())),
        VarK:SortModIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleDecl`(inj{ModuleDecl,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        Lblproject'Coln'ModuleDecl{}(kseq{}(inj{SortModuleDecl{}, SortKItem{}}(VarK:SortModuleDecl{}),dotk{}())),
        VarK:SortModuleDecl{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleIdsCell`(inj{ModuleIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleIdsCell{},R} (
        Lblproject'Coln'ModuleIdsCell{}(kseq{}(inj{SortModuleIdsCell{}, SortKItem{}}(VarK:SortModuleIdsCell{}),dotk{}())),
        VarK:SortModuleIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleIdsCellOpt`(inj{ModuleIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleIdsCellOpt{},R} (
        Lblproject'Coln'ModuleIdsCellOpt{}(kseq{}(inj{SortModuleIdsCellOpt{}, SortKItem{}}(VarK:SortModuleIdsCellOpt{}),dotk{}())),
        VarK:SortModuleIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstCell`(inj{ModuleInstCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleInstCell{},R} (
        Lblproject'Coln'ModuleInstCell{}(kseq{}(inj{SortModuleInstCell{}, SortKItem{}}(VarK:SortModuleInstCell{}),dotk{}())),
        VarK:SortModuleInstCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstCellFragment`(inj{ModuleInstCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleInstCellFragment{},R} (
        Lblproject'Coln'ModuleInstCellFragment{}(kseq{}(inj{SortModuleInstCellFragment{}, SortKItem{}}(VarK:SortModuleInstCellFragment{}),dotk{}())),
        VarK:SortModuleInstCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstCellMap`(inj{ModuleInstCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleInstCellMap{},R} (
        Lblproject'Coln'ModuleInstCellMap{}(kseq{}(inj{SortModuleInstCellMap{}, SortKItem{}}(VarK:SortModuleInstCellMap{}),dotk{}())),
        VarK:SortModuleInstCellMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstancesCell`(inj{ModuleInstancesCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleInstancesCell{},R} (
        Lblproject'Coln'ModuleInstancesCell{}(kseq{}(inj{SortModuleInstancesCell{}, SortKItem{}}(VarK:SortModuleInstancesCell{}),dotk{}())),
        VarK:SortModuleInstancesCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstancesCellFragment`(inj{ModuleInstancesCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleInstancesCellFragment{},R} (
        Lblproject'Coln'ModuleInstancesCellFragment{}(kseq{}(inj{SortModuleInstancesCellFragment{}, SortKItem{}}(VarK:SortModuleInstancesCellFragment{}),dotk{}())),
        VarK:SortModuleInstancesCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleInstancesCellOpt`(inj{ModuleInstancesCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleInstancesCellOpt{},R} (
        Lblproject'Coln'ModuleInstancesCellOpt{}(kseq{}(inj{SortModuleInstancesCellOpt{}, SortKItem{}}(VarK:SortModuleInstancesCellOpt{}),dotk{}())),
        VarK:SortModuleInstancesCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleRegistryCell`(inj{ModuleRegistryCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleRegistryCell{},R} (
        Lblproject'Coln'ModuleRegistryCell{}(kseq{}(inj{SortModuleRegistryCell{}, SortKItem{}}(VarK:SortModuleRegistryCell{}),dotk{}())),
        VarK:SortModuleRegistryCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleRegistryCellOpt`(inj{ModuleRegistryCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleRegistryCellOpt{},R} (
        Lblproject'Coln'ModuleRegistryCellOpt{}(kseq{}(inj{SortModuleRegistryCellOpt{}, SortKItem{}}(VarK:SortModuleRegistryCellOpt{}),dotk{}())),
        VarK:SortModuleRegistryCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:MsizeCell`(inj{MsizeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMsizeCell{},R} (
        Lblproject'Coln'MsizeCell{}(kseq{}(inj{SortMsizeCell{}, SortKItem{}}(VarK:SortMsizeCell{}),dotk{}())),
        VarK:SortMsizeCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:MsizeCellOpt`(inj{MsizeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMsizeCellOpt{},R} (
        Lblproject'Coln'MsizeCellOpt{}(kseq{}(inj{SortMsizeCellOpt{}, SortKItem{}}(VarK:SortMsizeCellOpt{}),dotk{}())),
        VarK:SortMsizeCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Mut`(inj{Mut,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMut{},R} (
        Lblproject'Coln'Mut{}(kseq{}(inj{SortMut{}, SortKItem{}}(VarK:SortMut{}),dotk{}())),
        VarK:SortMut{}),
      \top{R}()))
  [projection{}()]

// rule `project:NValType`(inj{NValType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNValType{},R} (
        Lblproject'Coln'NValType{}(kseq{}(inj{SortNValType{}, SortKItem{}}(VarK:SortNValType{}),dotk{}())),
        VarK:SortNValType{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextFreshIdCell`(inj{NextFreshIdCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFreshIdCell{},R} (
        Lblproject'Coln'NextFreshIdCell{}(kseq{}(inj{SortNextFreshIdCell{}, SortKItem{}}(VarK:SortNextFreshIdCell{}),dotk{}())),
        VarK:SortNextFreshIdCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextFreshIdCellOpt`(inj{NextFreshIdCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFreshIdCellOpt{},R} (
        Lblproject'Coln'NextFreshIdCellOpt{}(kseq{}(inj{SortNextFreshIdCellOpt{}, SortKItem{}}(VarK:SortNextFreshIdCellOpt{}),dotk{}())),
        VarK:SortNextFreshIdCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextFuncAddrCell`(inj{NextFuncAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFuncAddrCell{},R} (
        Lblproject'Coln'NextFuncAddrCell{}(kseq{}(inj{SortNextFuncAddrCell{}, SortKItem{}}(VarK:SortNextFuncAddrCell{}),dotk{}())),
        VarK:SortNextFuncAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextFuncAddrCellOpt`(inj{NextFuncAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFuncAddrCellOpt{},R} (
        Lblproject'Coln'NextFuncAddrCellOpt{}(kseq{}(inj{SortNextFuncAddrCellOpt{}, SortKItem{}}(VarK:SortNextFuncAddrCellOpt{}),dotk{}())),
        VarK:SortNextFuncAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextFuncIdxCell`(inj{NextFuncIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFuncIdxCell{},R} (
        Lblproject'Coln'NextFuncIdxCell{}(kseq{}(inj{SortNextFuncIdxCell{}, SortKItem{}}(VarK:SortNextFuncIdxCell{}),dotk{}())),
        VarK:SortNextFuncIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextFuncIdxCellOpt`(inj{NextFuncIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextFuncIdxCellOpt{},R} (
        Lblproject'Coln'NextFuncIdxCellOpt{}(kseq{}(inj{SortNextFuncIdxCellOpt{}, SortKItem{}}(VarK:SortNextFuncIdxCellOpt{}),dotk{}())),
        VarK:SortNextFuncIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextGlobAddrCell`(inj{NextGlobAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextGlobAddrCell{},R} (
        Lblproject'Coln'NextGlobAddrCell{}(kseq{}(inj{SortNextGlobAddrCell{}, SortKItem{}}(VarK:SortNextGlobAddrCell{}),dotk{}())),
        VarK:SortNextGlobAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextGlobAddrCellOpt`(inj{NextGlobAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextGlobAddrCellOpt{},R} (
        Lblproject'Coln'NextGlobAddrCellOpt{}(kseq{}(inj{SortNextGlobAddrCellOpt{}, SortKItem{}}(VarK:SortNextGlobAddrCellOpt{}),dotk{}())),
        VarK:SortNextGlobAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextGlobIdxCell`(inj{NextGlobIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextGlobIdxCell{},R} (
        Lblproject'Coln'NextGlobIdxCell{}(kseq{}(inj{SortNextGlobIdxCell{}, SortKItem{}}(VarK:SortNextGlobIdxCell{}),dotk{}())),
        VarK:SortNextGlobIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextGlobIdxCellOpt`(inj{NextGlobIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextGlobIdxCellOpt{},R} (
        Lblproject'Coln'NextGlobIdxCellOpt{}(kseq{}(inj{SortNextGlobIdxCellOpt{}, SortKItem{}}(VarK:SortNextGlobIdxCellOpt{}),dotk{}())),
        VarK:SortNextGlobIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextMemAddrCell`(inj{NextMemAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextMemAddrCell{},R} (
        Lblproject'Coln'NextMemAddrCell{}(kseq{}(inj{SortNextMemAddrCell{}, SortKItem{}}(VarK:SortNextMemAddrCell{}),dotk{}())),
        VarK:SortNextMemAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextMemAddrCellOpt`(inj{NextMemAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextMemAddrCellOpt{},R} (
        Lblproject'Coln'NextMemAddrCellOpt{}(kseq{}(inj{SortNextMemAddrCellOpt{}, SortKItem{}}(VarK:SortNextMemAddrCellOpt{}),dotk{}())),
        VarK:SortNextMemAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextModuleIdxCell`(inj{NextModuleIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextModuleIdxCell{},R} (
        Lblproject'Coln'NextModuleIdxCell{}(kseq{}(inj{SortNextModuleIdxCell{}, SortKItem{}}(VarK:SortNextModuleIdxCell{}),dotk{}())),
        VarK:SortNextModuleIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextModuleIdxCellOpt`(inj{NextModuleIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextModuleIdxCellOpt{},R} (
        Lblproject'Coln'NextModuleIdxCellOpt{}(kseq{}(inj{SortNextModuleIdxCellOpt{}, SortKItem{}}(VarK:SortNextModuleIdxCellOpt{}),dotk{}())),
        VarK:SortNextModuleIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextTabAddrCell`(inj{NextTabAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextTabAddrCell{},R} (
        Lblproject'Coln'NextTabAddrCell{}(kseq{}(inj{SortNextTabAddrCell{}, SortKItem{}}(VarK:SortNextTabAddrCell{}),dotk{}())),
        VarK:SortNextTabAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextTabAddrCellOpt`(inj{NextTabAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextTabAddrCellOpt{},R} (
        Lblproject'Coln'NextTabAddrCellOpt{}(kseq{}(inj{SortNextTabAddrCellOpt{}, SortKItem{}}(VarK:SortNextTabAddrCellOpt{}),dotk{}())),
        VarK:SortNextTabAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextTypeIdxCell`(inj{NextTypeIdxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextTypeIdxCell{},R} (
        Lblproject'Coln'NextTypeIdxCell{}(kseq{}(inj{SortNextTypeIdxCell{}, SortKItem{}}(VarK:SortNextTypeIdxCell{}),dotk{}())),
        VarK:SortNextTypeIdxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NextTypeIdxCellOpt`(inj{NextTypeIdxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNextTypeIdxCellOpt{},R} (
        Lblproject'Coln'NextTypeIdxCellOpt{}(kseq{}(inj{SortNextTypeIdxCellOpt{}, SortKItem{}}(VarK:SortNextTypeIdxCellOpt{}),dotk{}())),
        VarK:SortNextTypeIdxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Number`(inj{Number,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNumber{},R} (
        Lblproject'Coln'Number{}(kseq{}(inj{SortNumber{}, SortKItem{}}(VarK:SortNumber{}),dotk{}())),
        VarK:SortNumber{}),
      \top{R}()))
  [projection{}()]

// rule `project:Offset`(inj{Offset,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortOffset{},R} (
        Lblproject'Coln'Offset{}(kseq{}(inj{SortOffset{}, SortKItem{}}(VarK:SortOffset{}),dotk{}())),
        VarK:SortOffset{}),
      \top{R}()))
  [projection{}()]

// rule `project:OffsetArg`(inj{OffsetArg,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortOffsetArg{},R} (
        Lblproject'Coln'OffsetArg{}(kseq{}(inj{SortOffsetArg{}, SortKItem{}}(VarK:SortOffsetArg{}),dotk{}())),
        VarK:SortOffsetArg{}),
      \top{R}()))
  [projection{}()]

// rule `project:OptionalId`(inj{OptionalId,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortOptionalId{},R} (
        Lblproject'Coln'OptionalId{}(kseq{}(inj{SortOptionalId{}, SortKItem{}}(VarK:SortOptionalId{}),dotk{}())),
        VarK:SortOptionalId{}),
      \top{R}()))
  [projection{}()]

// rule `project:OptionalInt`(inj{OptionalInt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortOptionalInt{},R} (
        Lblproject'Coln'OptionalInt{}(kseq{}(inj{SortOptionalInt{}, SortKItem{}}(VarK:SortOptionalInt{}),dotk{}())),
        VarK:SortOptionalInt{}),
      \top{R}()))
  [projection{}()]

// rule `project:PlainInstr`(inj{PlainInstr,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPlainInstr{},R} (
        Lblproject'Coln'PlainInstr{}(kseq{}(inj{SortPlainInstr{}, SortKItem{}}(VarK:SortPlainInstr{}),dotk{}())),
        VarK:SortPlainInstr{}),
      \top{R}()))
  [projection{}()]

// rule `project:Set`(inj{Set,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        Lblproject'Coln'Set{}(kseq{}(inj{SortSet{}, SortKItem{}}(VarK:SortSet{}),dotk{}())),
        VarK:SortSet{}),
      \top{R}()))
  [projection{}()]

// rule `project:Signedness`(inj{Signedness,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSignedness{},R} (
        Lblproject'Coln'Signedness{}(kseq{}(inj{SortSignedness{}, SortKItem{}}(VarK:SortSignedness{}),dotk{}())),
        VarK:SortSignedness{}),
      \top{R}()))
  [projection{}()]

// rule `project:StartDefn`(inj{StartDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStartDefn{},R} (
        Lblproject'Coln'StartDefn{}(kseq{}(inj{SortStartDefn{}, SortKItem{}}(VarK:SortStartDefn{}),dotk{}())),
        VarK:SortStartDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:Stmt`(inj{Stmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStmt{},R} (
        Lblproject'Coln'Stmt{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarK:SortStmt{}),dotk{}())),
        VarK:SortStmt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Stmts`(inj{Stmts,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStmts{},R} (
        Lblproject'Coln'Stmts{}(kseq{}(inj{SortStmts{}, SortKItem{}}(VarK:SortStmts{}),dotk{}())),
        VarK:SortStmts{}),
      \top{R}()))
  [projection{}()]

// rule `project:StoreOp`(inj{StoreOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStoreOp{},R} (
        Lblproject'Coln'StoreOp{}(kseq{}(inj{SortStoreOp{}, SortKItem{}}(VarK:SortStoreOp{}),dotk{}())),
        VarK:SortStoreOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:StoreOpM`(inj{StoreOpM,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStoreOpM{},R} (
        Lblproject'Coln'StoreOpM{}(kseq{}(inj{SortStoreOpM{}, SortKItem{}}(VarK:SortStoreOpM{}),dotk{}())),
        VarK:SortStoreOpM{}),
      \top{R}()))
  [projection{}()]

// rule `project:String`(inj{String,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lblproject'Coln'String{}(kseq{}(inj{SortString{}, SortKItem{}}(VarK:SortString{}),dotk{}())),
        VarK:SortString{}),
      \top{R}()))
  [projection{}()]

// rule `project:TAddrCell`(inj{TAddrCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTAddrCell{},R} (
        Lblproject'Coln'TAddrCell{}(kseq{}(inj{SortTAddrCell{}, SortKItem{}}(VarK:SortTAddrCell{}),dotk{}())),
        VarK:SortTAddrCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TAddrCellOpt`(inj{TAddrCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTAddrCellOpt{},R} (
        Lblproject'Coln'TAddrCellOpt{}(kseq{}(inj{SortTAddrCellOpt{}, SortKItem{}}(VarK:SortTAddrCellOpt{}),dotk{}())),
        VarK:SortTAddrCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabAddrsCell`(inj{TabAddrsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabAddrsCell{},R} (
        Lblproject'Coln'TabAddrsCell{}(kseq{}(inj{SortTabAddrsCell{}, SortKItem{}}(VarK:SortTabAddrsCell{}),dotk{}())),
        VarK:SortTabAddrsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabAddrsCellOpt`(inj{TabAddrsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabAddrsCellOpt{},R} (
        Lblproject'Coln'TabAddrsCellOpt{}(kseq{}(inj{SortTabAddrsCellOpt{}, SortKItem{}}(VarK:SortTabAddrsCellOpt{}),dotk{}())),
        VarK:SortTabAddrsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabIdsCell`(inj{TabIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabIdsCell{},R} (
        Lblproject'Coln'TabIdsCell{}(kseq{}(inj{SortTabIdsCell{}, SortKItem{}}(VarK:SortTabIdsCell{}),dotk{}())),
        VarK:SortTabIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabIdsCellOpt`(inj{TabIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabIdsCellOpt{},R} (
        Lblproject'Coln'TabIdsCellOpt{}(kseq{}(inj{SortTabIdsCellOpt{}, SortKItem{}}(VarK:SortTabIdsCellOpt{}),dotk{}())),
        VarK:SortTabIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabInstCell`(inj{TabInstCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabInstCell{},R} (
        Lblproject'Coln'TabInstCell{}(kseq{}(inj{SortTabInstCell{}, SortKItem{}}(VarK:SortTabInstCell{}),dotk{}())),
        VarK:SortTabInstCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabInstCellFragment`(inj{TabInstCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabInstCellFragment{},R} (
        Lblproject'Coln'TabInstCellFragment{}(kseq{}(inj{SortTabInstCellFragment{}, SortKItem{}}(VarK:SortTabInstCellFragment{}),dotk{}())),
        VarK:SortTabInstCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabInstCellMap`(inj{TabInstCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabInstCellMap{},R} (
        Lblproject'Coln'TabInstCellMap{}(kseq{}(inj{SortTabInstCellMap{}, SortKItem{}}(VarK:SortTabInstCellMap{}),dotk{}())),
        VarK:SortTabInstCellMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:TableDefn`(inj{TableDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTableDefn{},R} (
        Lblproject'Coln'TableDefn{}(kseq{}(inj{SortTableDefn{}, SortKItem{}}(VarK:SortTableDefn{}),dotk{}())),
        VarK:SortTableDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:TableElemType`(inj{TableElemType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTableElemType{},R} (
        Lblproject'Coln'TableElemType{}(kseq{}(inj{SortTableElemType{}, SortKItem{}}(VarK:SortTableElemType{}),dotk{}())),
        VarK:SortTableElemType{}),
      \top{R}()))
  [projection{}()]

// rule `project:TableSpec`(inj{TableSpec,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTableSpec{},R} (
        Lblproject'Coln'TableSpec{}(kseq{}(inj{SortTableSpec{}, SortKItem{}}(VarK:SortTableSpec{}),dotk{}())),
        VarK:SortTableSpec{}),
      \top{R}()))
  [projection{}()]

// rule `project:TableType`(inj{TableType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTableType{},R} (
        Lblproject'Coln'TableType{}(kseq{}(inj{SortTableType{}, SortKItem{}}(VarK:SortTableType{}),dotk{}())),
        VarK:SortTableType{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabsCell`(inj{TabsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabsCell{},R} (
        Lblproject'Coln'TabsCell{}(kseq{}(inj{SortTabsCell{}, SortKItem{}}(VarK:SortTabsCell{}),dotk{}())),
        VarK:SortTabsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabsCellFragment`(inj{TabsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabsCellFragment{},R} (
        Lblproject'Coln'TabsCellFragment{}(kseq{}(inj{SortTabsCellFragment{}, SortKItem{}}(VarK:SortTabsCellFragment{}),dotk{}())),
        VarK:SortTabsCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:TabsCellOpt`(inj{TabsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTabsCellOpt{},R} (
        Lblproject'Coln'TabsCellOpt{}(kseq{}(inj{SortTabsCellOpt{}, SortKItem{}}(VarK:SortTabsCellOpt{}),dotk{}())),
        VarK:SortTabsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TdataCell`(inj{TdataCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTdataCell{},R} (
        Lblproject'Coln'TdataCell{}(kseq{}(inj{SortTdataCell{}, SortKItem{}}(VarK:SortTdataCell{}),dotk{}())),
        VarK:SortTdataCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TdataCellOpt`(inj{TdataCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTdataCellOpt{},R} (
        Lblproject'Coln'TdataCellOpt{}(kseq{}(inj{SortTdataCellOpt{}, SortKItem{}}(VarK:SortTdataCellOpt{}),dotk{}())),
        VarK:SortTdataCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TestOp`(inj{TestOp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTestOp{},R} (
        Lblproject'Coln'TestOp{}(kseq{}(inj{SortTestOp{}, SortKItem{}}(VarK:SortTestOp{}),dotk{}())),
        VarK:SortTestOp{}),
      \top{R}()))
  [projection{}()]

// rule `project:TextFormatGlobalType`(inj{TextFormatGlobalType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTextFormatGlobalType{},R} (
        Lblproject'Coln'TextFormatGlobalType{}(kseq{}(inj{SortTextFormatGlobalType{}, SortKItem{}}(VarK:SortTextFormatGlobalType{}),dotk{}())),
        VarK:SortTextFormatGlobalType{}),
      \top{R}()))
  [projection{}()]

// rule `project:TmaxCell`(inj{TmaxCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTmaxCell{},R} (
        Lblproject'Coln'TmaxCell{}(kseq{}(inj{SortTmaxCell{}, SortKItem{}}(VarK:SortTmaxCell{}),dotk{}())),
        VarK:SortTmaxCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TmaxCellOpt`(inj{TmaxCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTmaxCellOpt{},R} (
        Lblproject'Coln'TmaxCellOpt{}(kseq{}(inj{SortTmaxCellOpt{}, SortKItem{}}(VarK:SortTmaxCellOpt{}),dotk{}())),
        VarK:SortTmaxCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TsizeCell`(inj{TsizeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTsizeCell{},R} (
        Lblproject'Coln'TsizeCell{}(kseq{}(inj{SortTsizeCell{}, SortKItem{}}(VarK:SortTsizeCell{}),dotk{}())),
        VarK:SortTsizeCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TsizeCellOpt`(inj{TsizeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTsizeCellOpt{},R} (
        Lblproject'Coln'TsizeCellOpt{}(kseq{}(inj{SortTsizeCellOpt{}, SortKItem{}}(VarK:SortTsizeCellOpt{}),dotk{}())),
        VarK:SortTsizeCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Type`(inj{Type,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortType{},R} (
        Lblproject'Coln'Type{}(kseq{}(inj{SortType{}, SortKItem{}}(VarK:SortType{}),dotk{}())),
        VarK:SortType{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeDecl`(inj{TypeDecl,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeDecl{},R} (
        Lblproject'Coln'TypeDecl{}(kseq{}(inj{SortTypeDecl{}, SortKItem{}}(VarK:SortTypeDecl{}),dotk{}())),
        VarK:SortTypeDecl{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeDecls`(inj{TypeDecls,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeDecls{},R} (
        Lblproject'Coln'TypeDecls{}(kseq{}(inj{SortTypeDecls{}, SortKItem{}}(VarK:SortTypeDecls{}),dotk{}())),
        VarK:SortTypeDecls{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeDefn`(inj{TypeDefn,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeDefn{},R} (
        Lblproject'Coln'TypeDefn{}(kseq{}(inj{SortTypeDefn{}, SortKItem{}}(VarK:SortTypeDefn{}),dotk{}())),
        VarK:SortTypeDefn{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeIdsCell`(inj{TypeIdsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeIdsCell{},R} (
        Lblproject'Coln'TypeIdsCell{}(kseq{}(inj{SortTypeIdsCell{}, SortKItem{}}(VarK:SortTypeIdsCell{}),dotk{}())),
        VarK:SortTypeIdsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeIdsCellOpt`(inj{TypeIdsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeIdsCellOpt{},R} (
        Lblproject'Coln'TypeIdsCellOpt{}(kseq{}(inj{SortTypeIdsCellOpt{}, SortKItem{}}(VarK:SortTypeIdsCellOpt{}),dotk{}())),
        VarK:SortTypeIdsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeKeyWord`(inj{TypeKeyWord,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeKeyWord{},R} (
        Lblproject'Coln'TypeKeyWord{}(kseq{}(inj{SortTypeKeyWord{}, SortKItem{}}(VarK:SortTypeKeyWord{}),dotk{}())),
        VarK:SortTypeKeyWord{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypeUse`(inj{TypeUse,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypeUse{},R} (
        Lblproject'Coln'TypeUse{}(kseq{}(inj{SortTypeUse{}, SortKItem{}}(VarK:SortTypeUse{}),dotk{}())),
        VarK:SortTypeUse{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypesCell`(inj{TypesCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypesCell{},R} (
        Lblproject'Coln'TypesCell{}(kseq{}(inj{SortTypesCell{}, SortKItem{}}(VarK:SortTypesCell{}),dotk{}())),
        VarK:SortTypesCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:TypesCellOpt`(inj{TypesCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTypesCellOpt{},R} (
        Lblproject'Coln'TypesCellOpt{}(kseq{}(inj{SortTypesCellOpt{}, SortKItem{}}(VarK:SortTypesCellOpt{}),dotk{}())),
        VarK:SortTypesCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Val`(inj{Val,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVal{},R} (
        Lblproject'Coln'Val{}(kseq{}(inj{SortVal{}, SortKItem{}}(VarK:SortVal{}),dotk{}())),
        VarK:SortVal{}),
      \top{R}()))
  [projection{}()]

// rule `project:ValStack`(inj{ValStack,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValStack{},R} (
        Lblproject'Coln'ValStack{}(kseq{}(inj{SortValStack{}, SortKItem{}}(VarK:SortValStack{}),dotk{}())),
        VarK:SortValStack{}),
      \top{R}()))
  [projection{}()]

// rule `project:ValType`(inj{ValType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValType{},R} (
        Lblproject'Coln'ValType{}(kseq{}(inj{SortValType{}, SortKItem{}}(VarK:SortValType{}),dotk{}())),
        VarK:SortValType{}),
      \top{R}()))
  [projection{}()]

// rule `project:ValTypes`(inj{ValTypes,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        Lblproject'Coln'ValTypes{}(kseq{}(inj{SortValTypes{}, SortKItem{}}(VarK:SortValTypes{}),dotk{}())),
        VarK:SortValTypes{}),
      \top{R}()))
  [projection{}()]

// rule `project:ValstackCell`(inj{ValstackCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValstackCell{},R} (
        Lblproject'Coln'ValstackCell{}(kseq{}(inj{SortValstackCell{}, SortKItem{}}(VarK:SortValstackCell{}),dotk{}())),
        VarK:SortValstackCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ValstackCellOpt`(inj{ValstackCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValstackCellOpt{},R} (
        Lblproject'Coln'ValstackCellOpt{}(kseq{}(inj{SortValstackCellOpt{}, SortKItem{}}(VarK:SortValstackCellOpt{}),dotk{}())),
        VarK:SortValstackCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:VecType`(inj{VecType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVecType{},R} (
        Lblproject'Coln'VecType{}(kseq{}(inj{SortVecType{}, SortKItem{}}(VarK:SortVecType{}),dotk{}())),
        VarK:SortVecType{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmCell`(inj{WasmCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWasmCell{},R} (
        Lblproject'Coln'WasmCell{}(kseq{}(inj{SortWasmCell{}, SortKItem{}}(VarK:SortWasmCell{}),dotk{}())),
        VarK:SortWasmCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmCellFragment`(inj{WasmCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWasmCellFragment{},R} (
        Lblproject'Coln'WasmCellFragment{}(kseq{}(inj{SortWasmCellFragment{}, SortKItem{}}(VarK:SortWasmCellFragment{}),dotk{}())),
        VarK:SortWasmCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmCellOpt`(inj{WasmCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWasmCellOpt{},R} (
        Lblproject'Coln'WasmCellOpt{}(kseq{}(inj{SortWasmCellOpt{}, SortKItem{}}(VarK:SortWasmCellOpt{}),dotk{}())),
        VarK:SortWasmCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmIntToken`(inj{WasmIntToken,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWasmIntToken{},R} (
        Lblproject'Coln'WasmIntToken{}(kseq{}(inj{SortWasmIntToken{}, SortKItem{}}(VarK:SortWasmIntToken{}),dotk{}())),
        VarK:SortWasmIntToken{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmString`(inj{WasmString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWasmString{},R} (
        Lblproject'Coln'WasmString{}(kseq{}(inj{SortWasmString{}, SortKItem{}}(VarK:SortWasmString{}),dotk{}())),
        VarK:SortWasmString{}),
      \top{R}()))
  [projection{}()]

// rule `project:WasmStringToken`(inj{WasmStringToken,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortWasmStringToken{},R} (
        Lblproject'Coln'WasmStringToken{}(kseq{}(inj{SortWasmStringToken{}, SortKItem{}}(VarK:SortWasmStringToken{}),dotk{}())),
        VarK:SortWasmStringToken{}),
      \top{R}()))
  [projection{}()]

// rule `project:sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns:allocs`(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(K0,K1,K2,K3,K4,K5,K6,K7))=>K4 requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'allocs{}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarK0:SortOptionalId{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{})),
        VarK4:SortDefns{}),
      \top{R}()))
  []

// rule `project:sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns:exports`(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(K0,K1,K2,K3,K4,K5,K6,K7))=>K5 requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'exports{}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarK0:SortOptionalId{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{})),
        VarK5:SortDefns{}),
      \top{R}()))
  []

// rule `project:sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns:funcsGlobals`(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(K0,K1,K2,K3,K4,K5,K6,K7))=>K3 requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'funcsGlobals{}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarK0:SortOptionalId{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{})),
        VarK3:SortDefns{}),
      \top{R}()))
  []

// rule `project:sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns:id`(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(K0,K1,K2,K3,K4,K5,K6,K7))=>K0 requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortOptionalId{},R} (
        Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'id{}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarK0:SortOptionalId{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{})),
        VarK0:SortOptionalId{}),
      \top{R}()))
  []

// rule `project:sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns:importDefns`(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(K0,K1,K2,K3,K4,K5,K6,K7))=>K2 requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'importDefns{}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarK0:SortOptionalId{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{})),
        VarK2:SortDefns{}),
      \top{R}()))
  []

// rule `project:sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns:inits`(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(K0,K1,K2,K3,K4,K5,K6,K7))=>K6 requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'inits{}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarK0:SortOptionalId{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{})),
        VarK6:SortDefns{}),
      \top{R}()))
  []

// rule `project:sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns:start`(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(K0,K1,K2,K3,K4,K5,K6,K7))=>K7 requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'start{}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarK0:SortOptionalId{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{})),
        VarK7:SortDefns{}),
      \top{R}()))
  []

// rule `project:sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns:types`(`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(K0,K1,K2,K3,K4,K5,K6,K7))=>K1 requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefns{},R} (
        Lblproject'Coln'sortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Coln'types{}(LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarK0:SortOptionalId{},VarK1:SortDefns{},VarK2:SortDefns{},VarK3:SortDefns{},VarK4:SortDefns{},VarK5:SortDefns{},VarK6:SortDefns{},VarK7:SortDefns{})),
        VarK1:SortDefns{}),
      \top{R}()))
  []

// rule `replace(_,_,_,_)_STRING_String_String_String_String_Int`(Source,ToReplace,Replacement,Count)=>`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING_String_String_String_String_Int`(`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING_Int_String`(ToReplace)),`lengthString(_)_STRING_Int_String`(Source)),ToReplace,Replacement,`_-Int_`(Count,#token("1","Int")))) requires `_>Int_`(Count,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(b3981a47a7a07dd2dfde8ebb3ce68e70d6c5156c17d5c09d66b69ea0e87e0fc7) contentStartColumn(8) contentStartLine(644) org.kframework.attributes.Location(Location(644,8,647,30)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},VarCount:SortInt{}),
        Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToReplace:SortString{},VarReplacement:SortString{},Lbl'Unds'-Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("644"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(644,8,647,30)"), UNIQUE'Unds'ID{}("b3981a47a7a07dd2dfde8ebb3ce68e70d6c5156c17d5c09d66b69ea0e87e0fc7")]

// rule `replace(_,_,_,_)_STRING_String_String_String_String_Int`(Source,_0,_1,#token("0","Int"))=>Source requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2e9795f7b294b7323b7f94a3bf4f1e087cb354583562eeef3dc19404700a9842) contentStartColumn(8) contentStartLine(648) org.kframework.attributes.Location(Location(648,8,648,49)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},Var'Unds'0:SortString{},Var'Unds'1:SortString{},\dv{SortInt{}}("0")),
        VarSource:SortString{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("648"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(648,8,648,49)"), UNIQUE'Unds'ID{}("2e9795f7b294b7323b7f94a3bf4f1e087cb354583562eeef3dc19404700a9842")]

// rule `replaceAll(_,_,_)_STRING_String_String_String_String`(Source,ToReplace,Replacement)=>`replace(_,_,_,_)_STRING_String_String_String_String_Int`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING_Int_String_String`(Source,ToReplace)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2131063d78b401e8a24c24b15e0e699b923c56e90f2a19d1bb495d839d0b7839) contentStartColumn(8) contentStartLine(649) org.kframework.attributes.Location(Location(649,8,649,154)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{}),
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("649"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(649,8,649,154)"), UNIQUE'Unds'ID{}("2131063d78b401e8a24c24b15e0e699b923c56e90f2a19d1bb495d839d0b7839")]

// rule `replaceFirst(_,_,_)_STRING_String_String_String_String`(Source,ToReplace,Replacement)=>`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING_Int_String`(ToReplace)),`lengthString(_)_STRING_Int_String`(Source))) requires `_>=Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(39191889a120cf96dbb556bc016de17e654b155631892bfbdd3bac9737b6ed8d) contentStartColumn(8) contentStartLine(637) org.kframework.attributes.Location(Location(637,8,639,66)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{}),
        Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarSource:SortString{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("637"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(637,8,639,66)"), UNIQUE'Unds'ID{}("39191889a120cf96dbb556bc016de17e654b155631892bfbdd3bac9737b6ed8d")]

// rule `replaceFirst(_,_,_)_STRING_String_String_String_String`(Source,ToReplace,_0)=>Source requires `_<Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(16736238f7cc0d390af2ede3c6b2c558825a4e3886423d22ebadf36e7a6719cc) contentStartColumn(8) contentStartLine(640) org.kframework.attributes.Location(Location(640,8,641,57)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{},Var'Unds'0:SortString{}),
        VarSource:SortString{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("640"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(640,8,641,57)"), UNIQUE'Unds'ID{}("16736238f7cc0d390af2ede3c6b2c558825a4e3886423d22ebadf36e7a6719cc")]

// rule `rfindChar(_,_,_)_STRING_Int_String_String_Int`(S1,S2,I)=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`rfindString(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`rfindChar(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING_Int_String`(S2)),I)) requires `_=/=String__STRING_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(0cc10e4d97a5f59dbff5a408dd91a50a37b30f9d6c8cddf135d58308b14dc956) contentStartColumn(8) contentStartLine(629) org.kframework.attributes.Location(Location(629,8,629,182)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},VarS2:SortString{},VarI:SortInt{}),
        LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("629"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(629,8,629,182)"), UNIQUE'Unds'ID{}("0cc10e4d97a5f59dbff5a408dd91a50a37b30f9d6c8cddf135d58308b14dc956")]

// rule `rfindChar(_,_,_)_STRING_Int_String_String_Int`(_0,#token("\"\"","String"),_1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(60f67db6063490c1850c8b9f1b0e73e5a3fcba11fc6a2f020e382010ab4c4a2d) contentStartColumn(8) contentStartLine(630) org.kframework.attributes.Location(Location(630,8,630,33)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(Var'Unds'0:SortString{},\dv{SortString{}}(""),Var'Unds'1:SortInt{}),
        \dv{SortInt{}}("-1")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("630"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(630,8,630,33)"), UNIQUE'Unds'ID{}("60f67db6063490c1850c8b9f1b0e73e5a3fcba11fc6a2f020e382010ab4c4a2d")]

// rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))),`_<<Int_`(#token("1","Int"),LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(29482d9e60834a65e556af057119896573413bf32b20b7340707b02780d5895c) contentStartColumn(8) contentStartLine(465) org.kframework.attributes.Location(Location(465,8,465,164)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),
        Lbl'Unds'-Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("465"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(465,8,465,164)"), UNIQUE'Unds'ID{}("29482d9e60834a65e556af057119896573413bf32b20b7340707b02780d5895c")]

// rule `sortModule(_,_)_WASM_ModuleDecl_Defns_OptionalId`(DEFNS,OID)=>`#sortModule(_,_)_WASM_ModuleDecl_Defns_ModuleDecl`(`#reverse(_,_)_WASM_Defns_Defns_Defns`(DEFNS,inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))),`sortedModule(_,_,_,_,_,_,_,_)_WASM_ModuleDecl_OptionalId_Defns_Defns_Defns_Defns_Defns_Defns_Defns`(OID,inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)),inj{EmptyStmts,Defns}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList)))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(104d7e698b517bcab69e27cf4ba878d00a7f6819d606c58467cde45ad8116f26) contentStartColumn(10) contentStartLine(1477) org.kframework.attributes.Location(Location(1477,10,1477,220)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleDecl{},R} (
        LblsortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'OptionalId{}(VarDEFNS:SortDefns{},VarOID:SortOptionalId{}),
        Lbl'Hash'sortModule'LParUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'Defns'Unds'ModuleDecl{}(Lbl'Hash'reverse'LParUndsCommUndsRParUnds'WASM'Unds'Defns'Unds'Defns'Unds'Defns{}(VarDEFNS:SortDefns{},inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())),LblsortedModule'LParUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsCommUndsRParUnds'WASM'Unds'ModuleDecl'Unds'OptionalId'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns'Unds'Defns{}(VarOID:SortOptionalId{},inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()),inj{SortEmptyStmts{}, SortDefns{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/wasm.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1477"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1477,10,1477,220)"), UNIQUE'Unds'ID{}("104d7e698b517bcab69e27cf4ba878d00a7f6819d606c58467cde45ad8116f26")]

// rule `sqrtFloat(_)_FLOAT_Float_Float`(F)=>`rootFloat(_,_)_FLOAT_Float_Float_Int`(F,#token("2","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dea1f8d43e5a778fff5752c3f97f48e5d9bc7b5d2c2c6f84ee645cbe6322a437) contentStartColumn(8) contentStartLine(556) org.kframework.attributes.Location(Location(556,8,556,45)) org.kframework.attributes.Source(Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFloat{},R} (
        LblsqrtFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{}),
        LblrootFloat'LParUndsCommUndsRParUnds'FLOAT'Unds'Float'Unds'Float'Unds'Int{}(VarF:SortFloat{},\dv{SortInt{}}("2"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/nix/store/6bdlqz9i63j2h8c5zg0xfhsqijaxvsiz-k-5.0.0-f84831e97/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("556"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(556,8,556,45)"), UNIQUE'Unds'ID{}("dea1f8d43e5a778fff5752c3f97f48e5d9bc7b5d2c2c6f84ee645cbe6322a437")]

// rule `truncFloat(_)_WASM-NUMERIC_Float_Float`(F)=>`ceilFloat(_)_FLOAT_Float_Float`(F) requires `signFloat(_)_FLOAT_Bool_Float`(F) ensures #token("true","Bool") [UNIQUE_ID(6876495c0ebdacb7ebb4109713e19b34be838b196727578c4fdcdb854ec7efe0) contentStartColumn(10) contentStartLine(70) org.kframework.attributes.Location(Location(70,10,70,74)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortFloat{},R} (
        LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}),
        LblceilFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("70"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(70,10,70,74)"), UNIQUE'Unds'ID{}("6876495c0ebdacb7ebb4109713e19b34be838b196727578c4fdcdb854ec7efe0")]

// rule `truncFloat(_)_WASM-NUMERIC_Float_Float`(F)=>`floorFloat(_)_FLOAT_Float_Float`(F) requires `notBool_`(`signFloat(_)_FLOAT_Bool_Float`(F)) ensures #token("true","Bool") [UNIQUE_ID(7860613f7a87774b931b277926982a589ae4505fbc46c78ee0ab87a70fdca87e) contentStartColumn(10) contentStartLine(69) org.kframework.attributes.Location(Location(69,10,69,74)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblsignFloat'LParUndsRParUnds'FLOAT'Unds'Bool'Unds'Float{}(VarF:SortFloat{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortFloat{},R} (
        LbltruncFloat'LParUndsRParUnds'WASM-NUMERIC'Unds'Float'Unds'Float{}(VarF:SortFloat{}),
        LblfloorFloat'LParUndsRParUnds'FLOAT'Unds'Float'Unds'Float{}(VarF:SortFloat{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/numeric.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("69"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(69,10,69,74)"), UNIQUE'Unds'ID{}("7860613f7a87774b931b277926982a589ae4505fbc46c78ee0ab87a70fdca87e")]

// rule `unescape(_)_WASM-DATA_String_String`(S)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,#token("1","Int"),#token("\"\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d011975958c3040759e6aa964b6236f814c03395e983e930e86365358e716f6e) contentStartColumn(10) contentStartLine(382) org.kframework.attributes.Location(Location(382,10,382,52)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsRParUnds'WASM-DATA'Unds'String'Unds'String{}(VarS:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},\dv{SortInt{}}("1"),\dv{SortString{}}(""))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("382"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(382,10,382,52)"), UNIQUE'Unds'ID{}("d011975958c3040759e6aa964b6236f814c03395e983e930e86365358e716f6e")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>SB requires `_==Int_`(IDX,`_-Int_`(`lengthString(_)_STRING_Int_String`(S),#token("1","Int"))) ensures #token("true","Bool") [UNIQUE_ID(65b5d65292863401ca17758f840ee339c5daa29771cf63be52270258377b9ad6) contentStartColumn(10) contentStartLine(383) org.kframework.attributes.Location(Location(383,10,383,94)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("1"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        VarSB:SortString{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("383"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,10,383,94)"), UNIQUE'Unds'ID{}("65b5d65292863401ca17758f840ee339c5daa29771cf63be52270258377b9ad6")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("1","Int")),`_+String__STRING_String_String_String`(SB,`substrString(_,_,_)_STRING_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int"))))) requires `_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING_Int_String`(S),#token("1","Int"))),`_=/=K_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(2b5c8d5c4ed04704d2d9e9d3196423c5c6d30b9e78184783ffe54cc1c2968a4f) contentStartColumn(10) contentStartLine(390) org.kframework.attributes.Location(Location(390,10,392,58)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("1"))),Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("390"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(390,10,392,58)"), UNIQUE'Unds'ID{}("2b5c8d5c4ed04704d2d9e9d3196423c5c6d30b9e78184783ffe54cc1c2968a4f")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING_String_String_String`(SB,`chrChar(_)_STRING_String_Int`(`String2Base(_,_)_STRING_Int_String_Int`(#token("\"09\"","String"),#token("16","Int"))))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"t\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(a3b30148a27409de13017415016da5f38872cb113f1d679d5dea8d780314b411) contentStartColumn(10) contentStartLine(402) org.kframework.attributes.Location(Location(402,10,405,63)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("t")),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblchrChar'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(LblString2Base'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'Int{}(\dv{SortString{}}("09"),\dv{SortInt{}}("16")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("402"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(402,10,405,63)"), UNIQUE'Unds'ID{}("a3b30148a27409de13017415016da5f38872cb113f1d679d5dea8d780314b411")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING_String_String_String`(SB,`chrChar(_)_STRING_String_Int`(`String2Base(_,_)_STRING_Int_String_Int`(#token("\"0A\"","String"),#token("16","Int"))))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"n\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(0bf2b119764d9ae16e53f88b3b0c63224450252801119b59c42e62033d83df52) contentStartColumn(10) contentStartLine(406) org.kframework.attributes.Location(Location(406,10,409,63)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("n")),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblchrChar'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(LblString2Base'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'Int{}(\dv{SortString{}}("0A"),\dv{SortInt{}}("16")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("406"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(406,10,409,63)"), UNIQUE'Unds'ID{}("0bf2b119764d9ae16e53f88b3b0c63224450252801119b59c42e62033d83df52")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING_String_String_String`(SB,`chrChar(_)_STRING_String_Int`(`String2Base(_,_)_STRING_Int_String_Int`(#token("\"0D\"","String"),#token("16","Int"))))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"r\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(24583adc946ebca505fe0ce220e1870b0d6adb4c9086ddba247f2da317b520eb) contentStartColumn(10) contentStartLine(410) org.kframework.attributes.Location(Location(410,10,413,63)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("r")),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblchrChar'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(LblString2Base'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'Int{}(\dv{SortString{}}("0D"),\dv{SortInt{}}("16")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("410"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(410,10,413,63)"), UNIQUE'Unds'ID{}("24583adc946ebca505fe0ce220e1870b0d6adb4c9086ddba247f2da317b520eb")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING_String_String_String`(SB,`chrChar(_)_STRING_String_Int`(`String2Base(_,_)_STRING_Int_String_Int`(#token("\"22\"","String"),#token("16","Int"))))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"\\\"\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(8bad2b24789b5fa3ca10ec561201baef0c31a9a236ed88da6a888b7230f0fffd) contentStartColumn(10) contentStartLine(414) org.kframework.attributes.Location(Location(414,10,417,64)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\"")),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblchrChar'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(LblString2Base'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'Int{}(\dv{SortString{}}("22"),\dv{SortInt{}}("16")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("414"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(414,10,417,64)"), UNIQUE'Unds'ID{}("8bad2b24789b5fa3ca10ec561201baef0c31a9a236ed88da6a888b7230f0fffd")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING_String_String_String`(SB,`chrChar(_)_STRING_String_Int`(`String2Base(_,_)_STRING_Int_String_Int`(#token("\"27\"","String"),#token("16","Int"))))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"'\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(5e2be2c920e6fb9204c067a3837d6a0e1a886eaafa4fd38edeb3862a8940f6fa) contentStartColumn(10) contentStartLine(418) org.kframework.attributes.Location(Location(418,10,421,63)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("'")),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblchrChar'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(LblString2Base'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'Int{}(\dv{SortString{}}("27"),\dv{SortInt{}}("16")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("418"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(418,10,421,63)"), UNIQUE'Unds'ID{}("5e2be2c920e6fb9204c067a3837d6a0e1a886eaafa4fd38edeb3862a8940f6fa")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("2","Int")),`_+String__STRING_String_String_String`(SB,`chrChar(_)_STRING_String_Int`(`String2Base(_,_)_STRING_Int_String_Int`(#token("\"5C\"","String"),#token("16","Int"))))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING_Int_String`(S),#token("2","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(424df399ba631f5b4a74ea614c70d7395b676f27d18e43d4953a6b7cf7141a98) contentStartColumn(10) contentStartLine(422) org.kframework.attributes.Location(Location(422,10,425,64)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("2"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")),Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblchrChar'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(LblString2Base'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'Int{}(\dv{SortString{}}("5C"),\dv{SortInt{}}("16")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("422"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(422,10,425,64)"), UNIQUE'Unds'ID{}("424df399ba631f5b4a74ea614c70d7395b676f27d18e43d4953a6b7cf7141a98")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(IDX,#token("3","Int")),`_+String__STRING_String_String_String`(SB,`chrChar(_)_STRING_String_Int`(`String2Base(_,_)_STRING_Int_String_Int`(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("3","Int"))),#token("16","Int"))))) requires `_andBool_`(`_andBool_`(`_<Int_`(IDX,`_-Int_`(`lengthString(_)_STRING_Int_String`(S),#token("3","Int"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String")))),`_=/=Int_`(`findChar(_,_,_)_STRING_Int_String_String_Int`(#token("\"0123456789abcdefABCDEF\"","String"),`substrString(_,_,_)_STRING_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int"))),#token("0","Int")),#token("-1","Int"))) ensures #token("true","Bool") [UNIQUE_ID(ba0f234282e9fa86a85121e657506b9ea4c46aab6c9442939355b281b04da7d7) contentStartColumn(10) contentStartLine(393) org.kframework.attributes.Location(Location(393,10,396,107)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarIDX:SortInt{},Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS:SortString{}),\dv{SortInt{}}("3"))),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}()))),Lbl'UndsEqlsSlshEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(\dv{SortString{}}("0123456789abcdefABCDEF"),LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2"))),\dv{SortInt{}}("0")),\dv{SortInt{}}("-1"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("3")),Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblchrChar'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(LblString2Base'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("3"))),\dv{SortInt{}}("16")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("393"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(393,10,396,107)"), UNIQUE'Unds'ID{}("ba0f234282e9fa86a85121e657506b9ea4c46aab6c9442939355b281b04da7d7")]

// rule `unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,IDX,SB)=>`unescape(_,_,_)_WASM-DATA_String_String_Int_String`(S,`_+Int_`(`#idxCloseBracket(_,_)_WASM-DATA_Int_String_Int`(S,IDX),#token("1","Int")),`_+String__STRING_String_String_String`(SB,`Bytes2String(_)_BYTES-HOOKED_String_Bytes`(`#encodeUTF8(_,_)_WASM-DATA_Bytes_Int_Endianness`(`String2Base(_,_)_STRING_Int_String_Int`(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,`_+Int_`(IDX,#token("3","Int")),`#idxCloseBracket(_,_)_WASM-DATA_Int_String_Int`(S,`_+Int_`(IDX,#token("3","Int")))),#token("16","Int")),bigEndianBytes(.KList))))) requires `_andBool_`(`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,IDX,`_+Int_`(IDX,#token("1","Int")))),inj{String,KItem}(#token("\"\\\\\"","String"))),`_==K_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(S,`_+Int_`(IDX,#token("1","Int")),`_+Int_`(IDX,#token("2","Int")))),inj{String,KItem}(#token("\"u\"","String")))) ensures #token("true","Bool") [UNIQUE_ID(5507e8df1f2deb6c3474ef54f655cf530c7c304fd37de0777111bd2ca5108be4) contentStartColumn(10) contentStartLine(447) org.kframework.attributes.Location(Location(447,10,449,63)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("\\")),dotk{}())),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("1")),Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("2")))),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("u")),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},VarIDX:SortInt{},VarSB:SortString{}),
        Lblunescape'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'String'Unds'String'Unds'Int'Unds'String{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(VarS:SortString{},VarIDX:SortInt{}),\dv{SortInt{}}("1")),Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarSB:SortString{},LblBytes2String'LParUndsRParUnds'BYTES-HOOKED'Unds'String'Unds'Bytes{}(Lbl'Hash'encodeUTF8'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Bytes'Unds'Int'Unds'Endianness{}(LblString2Base'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("3")),Lbl'Hash'idxCloseBracket'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'String'Unds'Int{}(VarS:SortString{},Lbl'UndsPlus'Int'Unds'{}(VarIDX:SortInt{},\dv{SortInt{}}("3")))),\dv{SortInt{}}("16")),LblbigEndianBytes{}()))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("447"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(447,10,449,63)"), UNIQUE'Unds'ID{}("5507e8df1f2deb6c3474ef54f655cf530c7c304fd37de0777111bd2ca5108be4")]

// rule `unnameFuncType(_)_WASM-DATA_FuncType_FuncType`(`_->__WASM-DATA_FuncType_VecType_VecType`(`[_]_WASM-DATA_VecType_ValTypes`(V1),`[_]_WASM-DATA_VecType_ValTypes`(V2) #as _3))=>`_->__WASM-DATA_FuncType_VecType_VecType`(`[_]_WASM-DATA_VecType_ValTypes`(`unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(V1)),_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(52ea02e71b6b37690c0b28467893c3dea715bbdbc9f71ac83d0e41b2d90f1256) contentStartColumn(10) contentStartLine(142) org.kframework.attributes.Location(Location(142,10,142,80)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFuncType{},R} (
        LblunnameFuncType'LParUndsRParUnds'WASM-DATA'Unds'FuncType'Unds'FuncType{}(Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarV1:SortValTypes{}),\and{SortVecType{}}(Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(VarV2:SortValTypes{}),Var'Unds'3:SortVecType{}))),
        Lbl'Unds'-'-GT-UndsUnds'WASM-DATA'Unds'FuncType'Unds'VecType'Unds'VecType{}(Lbl'LSqBUndsRSqBUnds'WASM-DATA'Unds'VecType'Unds'ValTypes{}(LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(VarV1:SortValTypes{})),Var'Unds'3:SortVecType{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("142"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(142,10,142,80)"), UNIQUE'Unds'ID{}("52ea02e71b6b37690c0b28467893c3dea715bbdbc9f71ac83d0e41b2d90f1256")]

// rule `unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(`.List{"___WASM-DATA_ValTypes_ValType_ValTypes"}_ValTypes`(.KList) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17b02068abbea17ee0ac23d7f6ab461af6e7ec47c567ee9086dad73dc3ce57cf) contentStartColumn(10) contentStartLine(150) org.kframework.attributes.Location(Location(150,10,150,55)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(\and{SortValTypes{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes'QuotRBraUnds'ValTypes{}(),Var'Unds'1:SortValTypes{})),
        Var'Unds'1:SortValTypes{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("150"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(150,10,150,55)"), UNIQUE'Unds'ID{}("17b02068abbea17ee0ac23d7f6ab461af6e7ec47c567ee9086dad73dc3ce57cf")]

// rule `unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{AValType,ValType}(V) #as _2,VS))=>`___WASM-DATA_ValTypes_ValType_ValTypes`(_2,`unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(VS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(329252fc53392f091a4bc1d7dc186321117d717e07dcdeea598e6161dea53eb0) contentStartColumn(10) contentStartLine(151) org.kframework.attributes.Location(Location(151,10,151,69)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(\and{SortValType{}}(inj{SortAValType{}, SortValType{}}(VarV:SortAValType{}),Var'Unds'2:SortValType{}),VarVS:SortValTypes{})),
        Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(Var'Unds'2:SortValType{},LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(VarVS:SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("151"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(151,10,151,69)"), UNIQUE'Unds'ID{}("329252fc53392f091a4bc1d7dc186321117d717e07dcdeea598e6161dea53eb0")]

// rule `unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{NValType,ValType}(`{__}_WASM-DATA_NValType_Identifier_AValType`(ID,V)),VS))=>`___WASM-DATA_ValTypes_ValType_ValTypes`(inj{AValType,ValType}(V),`unnameValTypes(_)_WASM-DATA_ValTypes_ValTypes`(VS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6f365b31daf4f82551e6c931030733a6198393040139d41cd0f832cc47e5d76f) contentStartColumn(10) contentStartLine(152) org.kframework.attributes.Location(Location(152,10,152,69)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortValTypes{},R} (
        LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortNValType{}, SortValType{}}(Lbl'LBraUndsUndsRBraUnds'WASM-DATA'Unds'NValType'Unds'Identifier'Unds'AValType{}(VarID:SortIdentifier{},VarV:SortAValType{})),VarVS:SortValTypes{})),
        Lbl'UndsUndsUnds'WASM-DATA'Unds'ValTypes'Unds'ValType'Unds'ValTypes{}(inj{SortAValType{}, SortValType{}}(VarV:SortAValType{}),LblunnameValTypes'LParUndsRParUnds'WASM-DATA'Unds'ValTypes'Unds'ValTypes{}(VarVS:SortValTypes{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/data.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("152"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(152,10,152,69)"), UNIQUE'Unds'ID{}("6f365b31daf4f82551e6c931030733a6198393040139d41cd0f832cc47e5d76f")]

endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(8,1,312,9)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)")]
