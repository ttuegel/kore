[]
module MEMORY-CONCRETE-TYPE-SPEC

// imports
import KWASM-LEMMAS []


// claims
// rule `#wrap(_,_)_WASM-DATA_Int_Int_Int`(WIDTH,N)=>`_modInt_`(N,`_<<Int_`(#token("1","Int"),WIDTH)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(339) org.kframework.attributes.Location(Location(339,10,339,53)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'wrap'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'Int'Unds'Int{}(VarWIDTH:SortInt{},VarN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(VarN:SortInt{},Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarWIDTH:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}(), org'Stop'kframework'Stop'definition'Stop'Production{}(), contentStartLine{}(), contentStartColumn{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}(), simplification{}()]

// rule `<generatedTop>`(`<wasm>`(`<k>`(inj{FoldedInstr,KItem}(`(__)_WASM-TEXT_FoldedInstr_PlainInstr_Instrs`(`_.__WASM_PlainInstr_IValType_StoreOpM`(`i64_WASM-DATA_IValType`(.KList),inj{StoreOp,StoreOpM}(`store16_WASM_StoreOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(_)_WASM-TEXT_FoldedInstr_PlainInstr`(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),ADDR))),`___WASM_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(__)_WASM-TEXT_FoldedInstr_PlainInstr_Instrs`(`_.__WASM_PlainInstr_IValType_LoadOpM`(`i64_WASM-DATA_IValType`(.KList),inj{LoadOp,LoadOpM}(`load32_u_WASM_LoadOp`(.KList))),`___WASM_Instrs_Instr_Instrs`(inj{FoldedInstr,Instr}(`(_)_WASM-TEXT_FoldedInstr_PlainInstr`(`_.const__WASM_PlainInstr_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),ADDR))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))),inj{EmptyStmts,Instrs}(`.List{"___WASM_EmptyStmts_EmptyStmt_EmptyStmts"}_EmptyStmts`(.KList))))))~>DotVar2),_24,`<curFrame>`(_7,_8,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_9,_10),_25,_26,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(MEMADDR))),_21,_22,_23)),DotVar7)),_27,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(MEMADDR),`<memInst>`(`<mAddr>`(MEMADDR),DotVar5,`<msize>`(SIZE),`<mdata>`(BM))),DotVar4)),_4,_5,_6),_28,_29),DotVar0)=>`<generatedTop>`(`<wasm>`(`<k>`(DotVar2),_24,`<curFrame>`(_7,_8,`<curModIdx>`(inj{Int,OptionalInt}(CUR)),_9,_10),_25,_26,`<moduleInstances>`(`_ModuleInstCellMap_`(`ModuleInstCellMapItem`(`<modIdx>`(CUR),`<moduleInst>`(`<modIdx>`(CUR),_11,_12,_13,_14,_15,_16,_17,_18,_19,_20,`<memAddrs>`(`_|->_`(inj{Int,KItem}(#token("0","Int")),inj{Int,KItem}(MEMADDR))),_21,_22,_23)),DotVar7)),_27,`<mainStore>`(_0,_1,_2,_3,`<mems>`(`_MemInstCellMap_`(`MemInstCellMapItem`(`<mAddr>`(MEMADDR),`<memInst>`(`<mAddr>`(MEMADDR),DotVar5,`<msize>`(SIZE),`<mdata>`(BM))),DotVar4)),_4,_5,_6),_28,_29),DotVar0) requires `_andBool_`(`_andBool_`(`_<=Int_`(`_+Int_`(ADDR,`#numBytes(_)_WASM-DATA_Int_IValType`(`i64_WASM-DATA_IValType`(.KList))),`_*Int_`(SIZE,`#pageSize()_WASM_Int`(.KList))),`#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(BM)),`#inUnsignedRange(_,_)_KWASM-LEMMAS_Bool_IValType_Int`(`i32_WASM-DATA_IValType`(.KList),ADDR)) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(6) org.kframework.attributes.Location(Location(6,10,23,44)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/tests/proofs/memory-concrete-type-spec.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  claim{} \implies{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(VarADDR:SortInt{},Lbl'Hash'numBytes'LParUndsRParUnds'WASM-DATA'Unds'Int'Unds'IValType{}(Lbli64'Unds'WASM-DATA'Unds'IValType{}())),Lbl'UndsStar'Int'Unds'{}(VarSIZE:SortInt{},Lbl'Hash'pageSize'LParRParUnds'WASM'Unds'Int{}())),Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(VarBM:SortByteMap{})),Lbl'Hash'inUnsignedRange'LParUndsCommUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarADDR:SortInt{})),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFoldedInstr{}, SortKItem{}}(Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'StoreOpM{}(Lbli64'Unds'WASM-DATA'Unds'IValType{}(),inj{SortStoreOp{}, SortStoreOpM{}}(Lblstore16'Unds'WASM'Unds'StoreOp{}())),Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarADDR:SortInt{}))),Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr'Unds'Instrs{}(Lbl'UndsStopUndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'LoadOpM{}(Lbli64'Unds'WASM-DATA'Unds'IValType{}(),inj{SortLoadOp{}, SortLoadOpM{}}(Lblload32'Unds'u'Unds'WASM'Unds'LoadOp{}())),Lbl'UndsUndsUnds'WASM'Unds'Instrs'Unds'Instr'Unds'Instrs{}(inj{SortFoldedInstr{}, SortInstr{}}(Lbl'LParUndsRParUnds'WASM-TEXT'Unds'FoldedInstr'Unds'PlainInstr{}(Lbl'UndsStop'const'UndsUnds'WASM'Unds'PlainInstr'Unds'IValType'Unds'Int{}(Lbli32'Unds'WASM-DATA'Unds'IValType{}(),VarADDR:SortInt{}))),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}())))),inj{SortEmptyStmts{}, SortInstrs{}}(Lbl'Stop'List'LBraQuotUndsUndsUnds'WASM'Unds'EmptyStmts'Unds'EmptyStmt'Unds'EmptyStmts'QuotRBraUnds'EmptyStmts{}()))))),VarDotVar2:SortK{})),Var'Unds'24:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'9:SortLabelDepthCell{},Var'Unds'10:SortLabelIdsCell{}),Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Var'Unds'20:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarMEMADDR:SortInt{}))),Var'Unds'21:SortGlobIdsCell{},Var'Unds'22:SortGlobalAddrsCell{},Var'Unds'23:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'27:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarMEMADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarMEMADDR:SortInt{}),VarDotVar5:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Lbl'-LT-'mdata'-GT-'{}(VarBM:SortByteMap{}))),VarDotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{})), weakExistsFinally{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'wasm'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'24:SortValstackCell{},Lbl'-LT-'curFrame'-GT-'{}(Var'Unds'7:SortLocalsCell{},Var'Unds'8:SortLocalIdsCell{},Lbl'-LT-'curModIdx'-GT-'{}(inj{SortInt{}, SortOptionalInt{}}(VarCUR:SortInt{})),Var'Unds'9:SortLabelDepthCell{},Var'Unds'10:SortLabelIdsCell{}),Var'Unds'25:SortModuleRegistryCell{},Var'Unds'26:SortModuleIdsCell{},Lbl'-LT-'moduleInstances'-GT-'{}(Lbl'Unds'ModuleInstCellMap'Unds'{}(LblModuleInstCellMapItem{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Lbl'-LT-'moduleInst'-GT-'{}(Lbl'-LT-'modIdx'-GT-'{}(VarCUR:SortInt{}),Var'Unds'11:SortExportsCell{},Var'Unds'12:SortTypeIdsCell{},Var'Unds'13:SortTypesCell{},Var'Unds'14:SortNextTypeIdxCell{},Var'Unds'15:SortFuncIdsCell{},Var'Unds'16:SortFuncAddrsCell{},Var'Unds'17:SortNextFuncIdxCell{},Var'Unds'18:SortTabIdsCell{},Var'Unds'19:SortTabAddrsCell{},Var'Unds'20:SortMemIdsCell{},Lbl'-LT-'memAddrs'-GT-'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortInt{}, SortKItem{}}(\dv{SortInt{}}("0")),inj{SortInt{}, SortKItem{}}(VarMEMADDR:SortInt{}))),Var'Unds'21:SortGlobIdsCell{},Var'Unds'22:SortGlobalAddrsCell{},Var'Unds'23:SortNextGlobIdxCell{})),VarDotVar7:SortModuleInstCellMap{})),Var'Unds'27:SortNextModuleIdxCell{},Lbl'-LT-'mainStore'-GT-'{}(Var'Unds'0:SortFuncsCell{},Var'Unds'1:SortNextFuncAddrCell{},Var'Unds'2:SortTabsCell{},Var'Unds'3:SortNextTabAddrCell{},Lbl'-LT-'mems'-GT-'{}(Lbl'Unds'MemInstCellMap'Unds'{}(LblMemInstCellMapItem{}(Lbl'-LT-'mAddr'-GT-'{}(VarMEMADDR:SortInt{}),Lbl'-LT-'memInst'-GT-'{}(Lbl'-LT-'mAddr'-GT-'{}(VarMEMADDR:SortInt{}),VarDotVar5:SortMmaxCell{},Lbl'-LT-'msize'-GT-'{}(VarSIZE:SortInt{}),Lbl'-LT-'mdata'-GT-'{}(VarBM:SortByteMap{}))),VarDotVar4:SortMemInstCellMap{})),Var'Unds'4:SortNextMemAddrCell{},Var'Unds'5:SortGlobalsCell{},Var'Unds'6:SortNextGlobAddrCell{}),Var'Unds'28:SortDeterministicMemoryGrowthCell{},Var'Unds'29:SortNextFreshIdCell{}),VarDotVar0:SortGeneratedCounterCell{}))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}(), org'Stop'kframework'Stop'definition'Stop'Production{}(), contentStartLine{}(), contentStartColumn{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}()]

// rule `#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,START,WIDTH)=>`_+Int_`(`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BM,START),`_*Int_`(`#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,`_+Int_`(START,#token("1","Int")),`_-Int_`(WIDTH,#token("1","Int"))),#token("256","Int"))) requires `_andBool_`(`_>Int_`(WIDTH,#token("0","Int")),`#isByteMap(_)_KWASM-LEMMAS_Bool_ByteMap`(BM)) ensures `_andBool_`(`_<=Int_`(#token("0","Int"),`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BM,START)),`_<Int_`(`#get(_,_)_WASM-DATA_Int_ByteMap_Int`(BM,START),#token("256","Int"))) [contentStartColumn(10) contentStartLine(332) org.kframework.attributes.Location(Location(332,10,336,40)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K "ensures" K [klabel(#ruleRequiresEnsures) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("0")),Lbl'Hash'isByteMap'LParUndsRParUnds'KWASM-LEMMAS'Unds'Bool'Unds'ByteMap{}(VarBM:SortByteMap{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarSTART:SortInt{},VarWIDTH:SortInt{}),
        Lbl'UndsPlus'Int'Unds'{}(Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBM:SortByteMap{},VarSTART:SortInt{}),Lbl'UndsStar'Int'Unds'{}(Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},Lbl'UndsPlus'Int'Unds'{}(VarSTART:SortInt{},\dv{SortInt{}}("1")),Lbl'Unds'-Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("1"))),\dv{SortInt{}}("256")))),
      \equals{SortBool{},R}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds-LT-Eqls'Int'Unds'{}(\dv{SortInt{}}("0"),Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBM:SortByteMap{},VarSTART:SortInt{})),Lbl'Unds-LT-'Int'Unds'{}(Lbl'Hash'get'LParUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int{}(VarBM:SortByteMap{},VarSTART:SortInt{}),\dv{SortInt{}}("256"))),
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}(), org'Stop'kframework'Stop'definition'Stop'Production{}(), contentStartLine{}(), contentStartColumn{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}(), simplification{}()]

// rule `#getRange(_,_,_)_WASM-DATA_Int_ByteMap_Int_Int`(BM,START,WIDTH)=>#token("0","Int") requires `notBool_`(`_>Int_`(WIDTH,#token("0","Int"))) ensures #token("true","Bool") [contentStartColumn(10) contentStartLine(329) org.kframework.attributes.Location(Location(329,10,330,38)) org.kframework.attributes.Source(Source(/home/ttuegel/wasm-semantics/.build/defn/haskell/kwasm-lemmas.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()]) simplification()]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'Unds-GT-'Int'Unds'{}(VarWIDTH:SortInt{},\dv{SortInt{}}("0"))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'getRange'LParUndsCommUndsCommUndsRParUnds'WASM-DATA'Unds'Int'Unds'ByteMap'Unds'Int'Unds'Int{}(VarBM:SortByteMap{},VarSTART:SortInt{},VarWIDTH:SortInt{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}(), org'Stop'kframework'Stop'definition'Stop'Production{}(), contentStartLine{}(), contentStartColumn{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}(), simplification{}()]

endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}()]
