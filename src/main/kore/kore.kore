[]
module kore
    symbol #nilCharList{}() : #CharList{} []
    symbol #consCharList{}(#Char{}, #CharList{}) : #CharList{} []
    symbol #appendCharList{}(#CharList{}, #CharList{}) : #CharList{} []
    symbol #inCharList{#sp}(#Char{}, #CharList{}) : #sp []
    symbol #deleteCharList{}(#Char{}, #CharList{}) : #CharList{} []
    axiom {#sp} \forall{#sp}(#s:#Char{}, \not{#sp}(#inCharList{#sp}(#s:#Char{}, #nilCharList{}()))) []
    axiom {#esp, #sp} \forall{#esp}(#s':#Char{}, \forall{#esp}(#s:#Char{}, \forall{#esp}(#S:#CharList{}, \equals{#sp, #esp}(#inCharList{#sp}(#s:#Char{}, #consCharList{}(#s':#Char{}, #S:#CharList{})), \or{#sp}(\equals{#Char{}, #sp}(#s:#Char{}, #s':#Char{}), #inCharList{#sp}(#s:#Char{}, #S:#CharList{})))))) []
    axiom {#esp} \forall{#esp}(#S:#CharList{}, \equals{#CharList{}, #esp}(#appendCharList{}(#nilCharList{}(), #S:#CharList{}), #S:#CharList{})) []
    axiom {#esp} \forall{#esp}(#s:#Char{}, \forall{#esp}(#S':#CharList{}, \forall{#esp}(#S:#CharList{}, \equals{#CharList{}, #esp}(#appendCharList{}(#consCharList{}(#s:#Char{}, #S':#CharList{}), #S:#CharList{}), #consCharList{}(#s:#Char{}, #appendCharList{}(#S':#CharList{}, #S:#CharList{})))))) []
    axiom {#esp} \forall{#esp}(#s:#Char{}, \equals{#CharList{}, #esp}(#deleteCharList{}(#s:#Char{}, #nilCharList{}()), #nilCharList{}())) []
    axiom {#esp} \forall{#esp}(#s':#Char{}, \forall{#esp}(#s:#Char{}, \forall{#esp}(#S:#CharList{}, \equals{#CharList{}, #esp}(#deleteCharList{}(#s:#Char{}, #consCharList{}(#s':#Char{}, #S:#CharList{})), \or{#CharList{}}(\and{#CharList{}}(\equals{#Char{}, #CharList{}}(#s:#Char{}, #s':#Char{}), #deleteCharList{}(#s:#Char{}, #S:#CharList{})), \and{#CharList{}}(\not{#CharList{}}(\equals{#Char{}, #CharList{}}(#s:#Char{}, #s':#Char{})), #consCharList{}(#s':#Char{}, #deleteCharList{}(#s:#Char{}, #S:#CharList{})))))))) []
    symbol #nilSortList{}() : #SortList{} []
    symbol #consSortList{}(#Sort{}, #SortList{}) : #SortList{} []
    symbol #appendSortList{}(#SortList{}, #SortList{}) : #SortList{} []
    symbol #inSortList{#sp}(#Sort{}, #SortList{}) : #sp []
    symbol #deleteSortList{}(#Sort{}, #SortList{}) : #SortList{} []
    axiom {#sp} \forall{#sp}(#s:#Sort{}, \not{#sp}(#inSortList{#sp}(#s:#Sort{}, #nilSortList{}()))) []
    axiom {#esp, #sp} \forall{#esp}(#s':#Sort{}, \forall{#esp}(#s:#Sort{}, \forall{#esp}(#S:#SortList{}, \equals{#sp, #esp}(#inSortList{#sp}(#s:#Sort{}, #consSortList{}(#s':#Sort{}, #S:#SortList{})), \or{#sp}(\equals{#Sort{}, #sp}(#s:#Sort{}, #s':#Sort{}), #inSortList{#sp}(#s:#Sort{}, #S:#SortList{})))))) []
    axiom {#esp} \forall{#esp}(#S:#SortList{}, \equals{#SortList{}, #esp}(#appendSortList{}(#nilSortList{}(), #S:#SortList{}), #S:#SortList{})) []
    axiom {#esp} \forall{#esp}(#s:#Sort{}, \forall{#esp}(#S':#SortList{}, \forall{#esp}(#S:#SortList{}, \equals{#SortList{}, #esp}(#appendSortList{}(#consSortList{}(#s:#Sort{}, #S':#SortList{}), #S:#SortList{}), #consSortList{}(#s:#Sort{}, #appendSortList{}(#S':#SortList{}, #S:#SortList{})))))) []
    axiom {#esp} \forall{#esp}(#s:#Sort{}, \equals{#SortList{}, #esp}(#deleteSortList{}(#s:#Sort{}, #nilSortList{}()), #nilSortList{}())) []
    axiom {#esp} \forall{#esp}(#s':#Sort{}, \forall{#esp}(#s:#Sort{}, \forall{#esp}(#S:#SortList{}, \equals{#SortList{}, #esp}(#deleteSortList{}(#s:#Sort{}, #consSortList{}(#s':#Sort{}, #S:#SortList{})), \or{#SortList{}}(\and{#SortList{}}(\equals{#Sort{}, #SortList{}}(#s:#Sort{}, #s':#Sort{}), #deleteSortList{}(#s:#Sort{}, #S:#SortList{})), \and{#SortList{}}(\not{#SortList{}}(\equals{#Sort{}, #SortList{}}(#s:#Sort{}, #s':#Sort{})), #consSortList{}(#s':#Sort{}, #deleteSortList{}(#s:#Sort{}, #S:#SortList{})))))))) []
    symbol #nilSymbolList{}() : #SymbolList{} []
    symbol #consSymbolList{}(#Symbol{}, #SymbolList{}) : #SymbolList{} []
    symbol #appendSymbolList{}(#SymbolList{}, #SymbolList{}) : #SymbolList{} []
    symbol #inSymbolList{#sp}(#Symbol{}, #SymbolList{}) : #sp []
    symbol #deleteSymbolList{}(#Symbol{}, #SymbolList{}) : #SymbolList{} []
    axiom {#sp} \forall{#sp}(#s:#Symbol{}, \not{#sp}(#inSymbolList{#sp}(#s:#Symbol{}, #nilSymbolList{}()))) []
    axiom {#esp, #sp} \forall{#esp}(#s':#Symbol{}, \forall{#esp}(#s:#Symbol{}, \forall{#esp}(#S:#SymbolList{}, \equals{#sp, #esp}(#inSymbolList{#sp}(#s:#Symbol{}, #consSymbolList{}(#s':#Symbol{}, #S:#SymbolList{})), \or{#sp}(\equals{#Symbol{}, #sp}(#s:#Symbol{}, #s':#Symbol{}), #inSymbolList{#sp}(#s:#Symbol{}, #S:#SymbolList{})))))) []
    axiom {#esp} \forall{#esp}(#S:#SymbolList{}, \equals{#SymbolList{}, #esp}(#appendSymbolList{}(#nilSymbolList{}(), #S:#SymbolList{}), #S:#SymbolList{})) []
    axiom {#esp} \forall{#esp}(#s:#Symbol{}, \forall{#esp}(#S':#SymbolList{}, \forall{#esp}(#S:#SymbolList{}, \equals{#SymbolList{}, #esp}(#appendSymbolList{}(#consSymbolList{}(#s:#Symbol{}, #S':#SymbolList{}), #S:#SymbolList{}), #consSymbolList{}(#s:#Symbol{}, #appendSymbolList{}(#S':#SymbolList{}, #S:#SymbolList{})))))) []
    axiom {#esp} \forall{#esp}(#s:#Symbol{}, \equals{#SymbolList{}, #esp}(#deleteSymbolList{}(#s:#Symbol{}, #nilSymbolList{}()), #nilSymbolList{}())) []
    axiom {#esp} \forall{#esp}(#s':#Symbol{}, \forall{#esp}(#s:#Symbol{}, \forall{#esp}(#S:#SymbolList{}, \equals{#SymbolList{}, #esp}(#deleteSymbolList{}(#s:#Symbol{}, #consSymbolList{}(#s':#Symbol{}, #S:#SymbolList{})), \or{#SymbolList{}}(\and{#SymbolList{}}(\equals{#Symbol{}, #SymbolList{}}(#s:#Symbol{}, #s':#Symbol{}), #deleteSymbolList{}(#s:#Symbol{}, #S:#SymbolList{})), \and{#SymbolList{}}(\not{#SymbolList{}}(\equals{#Symbol{}, #SymbolList{}}(#s:#Symbol{}, #s':#Symbol{})), #consSymbolList{}(#s':#Symbol{}, #deleteSymbolList{}(#s:#Symbol{}, #S:#SymbolList{})))))))) []
    symbol #nilVariableList{}() : #VariableList{} []
    symbol #consVariableList{}(#Variable{}, #VariableList{}) : #VariableList{} []
    symbol #appendVariableList{}(#VariableList{}, #VariableList{}) : #VariableList{} []
    symbol #inVariableList{#sp}(#Variable{}, #VariableList{}) : #sp []
    symbol #deleteVariableList{}(#Variable{}, #VariableList{}) : #VariableList{} []
    axiom {#sp} \forall{#sp}(#s:#Variable{}, \not{#sp}(#inVariableList{#sp}(#s:#Variable{}, #nilVariableList{}()))) []
    axiom {#esp, #sp} \forall{#esp}(#s':#Variable{}, \forall{#esp}(#s:#Variable{}, \forall{#esp}(#S:#VariableList{}, \equals{#sp, #esp}(#inVariableList{#sp}(#s:#Variable{}, #consVariableList{}(#s':#Variable{}, #S:#VariableList{})), \or{#sp}(\equals{#Variable{}, #sp}(#s:#Variable{}, #s':#Variable{}), #inVariableList{#sp}(#s:#Variable{}, #S:#VariableList{})))))) []
    axiom {#esp} \forall{#esp}(#S:#VariableList{}, \equals{#VariableList{}, #esp}(#appendVariableList{}(#nilVariableList{}(), #S:#VariableList{}), #S:#VariableList{})) []
    axiom {#esp} \forall{#esp}(#s:#Variable{}, \forall{#esp}(#S':#VariableList{}, \forall{#esp}(#S:#VariableList{}, \equals{#VariableList{}, #esp}(#appendVariableList{}(#consVariableList{}(#s:#Variable{}, #S':#VariableList{}), #S:#VariableList{}), #consVariableList{}(#s:#Variable{}, #appendVariableList{}(#S':#VariableList{}, #S:#VariableList{})))))) []
    axiom {#esp} \forall{#esp}(#s:#Variable{}, \equals{#VariableList{}, #esp}(#deleteVariableList{}(#s:#Variable{}, #nilVariableList{}()), #nilVariableList{}())) []
    axiom {#esp} \forall{#esp}(#s':#Variable{}, \forall{#esp}(#s:#Variable{}, \forall{#esp}(#S:#VariableList{}, \equals{#VariableList{}, #esp}(#deleteVariableList{}(#s:#Variable{}, #consVariableList{}(#s':#Variable{}, #S:#VariableList{})), \or{#VariableList{}}(\and{#VariableList{}}(\equals{#Variable{}, #VariableList{}}(#s:#Variable{}, #s':#Variable{}), #deleteVariableList{}(#s:#Variable{}, #S:#VariableList{})), \and{#VariableList{}}(\not{#VariableList{}}(\equals{#Variable{}, #VariableList{}}(#s:#Variable{}, #s':#Variable{})), #consVariableList{}(#s':#Variable{}, #deleteVariableList{}(#s:#Variable{}, #S:#VariableList{})))))))) []
    symbol #nilPatternList{}() : #PatternList{} []
    symbol #consPatternList{}(#Pattern{}, #PatternList{}) : #PatternList{} []
    symbol #appendPatternList{}(#PatternList{}, #PatternList{}) : #PatternList{} []
    symbol #inPatternList{#sp}(#Pattern{}, #PatternList{}) : #sp []
    symbol #deletePatternList{}(#Pattern{}, #PatternList{}) : #PatternList{} []
    axiom {#sp} \forall{#sp}(#s:#Pattern{}, \not{#sp}(#inPatternList{#sp}(#s:#Pattern{}, #nilPatternList{}()))) []
    axiom {#esp, #sp} \forall{#esp}(#s':#Pattern{}, \forall{#esp}(#s:#Pattern{}, \forall{#esp}(#S:#PatternList{}, \equals{#sp, #esp}(#inPatternList{#sp}(#s:#Pattern{}, #consPatternList{}(#s':#Pattern{}, #S:#PatternList{})), \or{#sp}(\equals{#Pattern{}, #sp}(#s:#Pattern{}, #s':#Pattern{}), #inPatternList{#sp}(#s:#Pattern{}, #S:#PatternList{})))))) []
    axiom {#esp} \forall{#esp}(#S:#PatternList{}, \equals{#PatternList{}, #esp}(#appendPatternList{}(#nilPatternList{}(), #S:#PatternList{}), #S:#PatternList{})) []
    axiom {#esp} \forall{#esp}(#s:#Pattern{}, \forall{#esp}(#S':#PatternList{}, \forall{#esp}(#S:#PatternList{}, \equals{#PatternList{}, #esp}(#appendPatternList{}(#consPatternList{}(#s:#Pattern{}, #S':#PatternList{}), #S:#PatternList{}), #consPatternList{}(#s:#Pattern{}, #appendPatternList{}(#S':#PatternList{}, #S:#PatternList{})))))) []
    axiom {#esp} \forall{#esp}(#s:#Pattern{}, \equals{#PatternList{}, #esp}(#deletePatternList{}(#s:#Pattern{}, #nilPatternList{}()), #nilPatternList{}())) []
    axiom {#esp} \forall{#esp}(#s':#Pattern{}, \forall{#esp}(#s:#Pattern{}, \forall{#esp}(#S:#PatternList{}, \equals{#PatternList{}, #esp}(#deletePatternList{}(#s:#Pattern{}, #consPatternList{}(#s':#Pattern{}, #S:#PatternList{})), \or{#PatternList{}}(\and{#PatternList{}}(\equals{#Pattern{}, #PatternList{}}(#s:#Pattern{}, #s':#Pattern{}), #deletePatternList{}(#s:#Pattern{}, #S:#PatternList{})), \and{#PatternList{}}(\not{#PatternList{}}(\equals{#Pattern{}, #PatternList{}}(#s:#Pattern{}, #s':#Pattern{})), #consPatternList{}(#s':#Pattern{}, #deletePatternList{}(#s:#Pattern{}, #S:#PatternList{})))))))) []
    symbol #epsilon{}() : #CharList{} []
    axiom {#esp} \equals{#CharList{}, #esp}(#epsilon{}(), #nilCharList{}()) []
    symbol #sort{}(#CharList{}, #SortList{}) : #Sort{} []
    symbol #symbol{}(#CharList{}, #SortList{}, #SortList{}, #Sort{}) : #Symbol{} []
    symbol #getArgumentSorts{}(#Symbol{}) : #SortList{} []
    axiom {#esp} \forall{#esp}(#s:#Sort{}, \forall{#esp}(#f:#CharList{}, \forall{#esp}(#S':#SortList{}, \forall{#esp}(#S:#SortList{}, \equals{#SortList{}, #esp}(#getArgumentSorts{}(#symbol{}(#f:#CharList{}, #S:#SortList{}, #S':#SortList{}, #s:#Sort{})), #S':#SortList{}))))) []
    symbol #getReturnSort{}(#Symbol{}) : #Sort{} []
    axiom {#esp} \forall{#esp}(#s:#Sort{}, \forall{#esp}(#f:#CharList{}, \forall{#esp}(#S':#SortList{}, \forall{#esp}(#S:#SortList{}, \equals{#Sort{}, #esp}(#getReturnSort{}(#symbol{}(#f:#CharList{}, #S:#SortList{}, #S':#SortList{}, #s:#Sort{})), #s:#Sort{}))))) []
    symbol #variable{}(#CharList{}, #Sort{}) : #Variable{} []
    symbol #application{}(#Symbol{}, #PatternList{}) : #Pattern{} []
    symbol #\and{}(#Sort{}, #Pattern{}, #Pattern{}) : #Pattern{} []
    symbol #\not{}(#Sort{}, #Pattern{}) : #Pattern{} []
    symbol #\exists{}(#Sort{}, #Variable{}, #Pattern{}) : #Pattern{} []
    symbol #variableAsPattern{}(#Variable{}) : #Pattern{} []
    axiom {#sp} \forall{#sp}(#v2:#Variable{}, \forall{#sp}(#v1:#Variable{}, \implies{#sp}(\not{#sp}(\equals{#Variable{}, #sp}(#v1:#Variable{}, #v2:#Variable{})), \not{#sp}(\equals{#Pattern{}, #sp}(#variableAsPattern{}(#v1:#Variable{}), #variableAsPattern{}(#v2:#Variable{})))))) []
    symbol #variablePattern{}(#CharList{}, #Sort{}) : #Pattern{} []
    axiom {#esp} \forall{#esp}(#x:#CharList{}, \forall{#esp}(#s:#Sort{}, \equals{#Pattern{}, #esp}(#variablePattern{}(#x:#CharList{}, #s:#Sort{}), #variableAsPattern{}(#variable{}(#x:#CharList{}, #s:#Sort{}))))) []
    symbol #\or{}(#Sort{}, #Pattern{}, #Pattern{}) : #Pattern{} []
    symbol #\implies{}(#Sort{}, #Pattern{}, #Pattern{}) : #Pattern{} []
    symbol #\iff{}(#Sort{}, #Pattern{}, #Pattern{}) : #Pattern{} []
    symbol #\forall{}(#Sort{}, #Variable{}, #Pattern{}) : #Pattern{} []
    symbol #\ceil{}(#Sort{}, #Sort{}, #Pattern{}) : #Pattern{} []
    symbol #\floor{}(#Sort{}, #Sort{}, #Pattern{}) : #Pattern{} []
    symbol #\equals{}(#Sort{}, #Sort{}, #Pattern{}, #Pattern{}) : #Pattern{} []
    symbol #\in{}(#Sort{}, #Sort{}, #Pattern{}, #Pattern{}) : #Pattern{} []
    symbol #\top{}(#Sort{}) : #Pattern{} []
    symbol #\bottom{}(#Sort{}) : #Pattern{} []
    axiom {#esp} \forall{#esp}(#s:#Sort{}, \forall{#esp}(#psi:#Pattern{}, \forall{#esp}(#phi:#Pattern{}, \equals{#Pattern{}, #esp}(#\or{}(#s:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{}), #\not{}(#s:#Sort{}, #\and{}(#s:#Sort{}, #\not{}(#s:#Sort{}, #phi:#Pattern{}), #\not{}(#s:#Sort{}, #psi:#Pattern{}))))))) []
    axiom {#esp} \forall{#esp}(#s:#Sort{}, \forall{#esp}(#psi:#Pattern{}, \forall{#esp}(#phi:#Pattern{}, \equals{#Pattern{}, #esp}(#\implies{}(#s:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{}), #\or{}(#s:#Sort{}, #\not{}(#s:#Sort{}, #phi:#Pattern{}), #psi:#Pattern{}))))) []
    axiom {#esp} \forall{#esp}(#s:#Sort{}, \forall{#esp}(#psi:#Pattern{}, \forall{#esp}(#phi:#Pattern{}, \equals{#Pattern{}, #esp}(#\iff{}(#s:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{}), #\and{}(#s:#Sort{}, #\implies{}(#s:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{}), #\implies{}(#s:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{})))))) []
    axiom {#esp} \forall{#esp}(#v:#Variable{}, \forall{#esp}(#s:#Sort{}, \forall{#esp}(#phi:#Pattern{}, \equals{#Pattern{}, #esp}(#\forall{}(#s:#Sort{}, #v:#Variable{}, #phi:#Pattern{}), #\not{}(#s:#Sort{}, #\exists{}(#s:#Sort{}, #v:#Variable{}, #\not{}(#s:#Sort{}, #phi:#Pattern{}))))))) []
    axiom {#esp} \forall{#esp}(#s2:#Sort{}, \forall{#esp}(#s1:#Sort{}, \forall{#esp}(#phi:#Pattern{}, \equals{#Pattern{}, #esp}(#\ceil{}(#s1:#Sort{}, #s2:#Sort{}, #phi:#Pattern{}), #application{}(#`ceil{}(#s1:#Sort{}, #s2:#Sort{}), #consPatternList{}(#phi:#Pattern{}, #nilPatternList{}())))))) []
    axiom {#esp} \forall{#esp}(#s2:#Sort{}, \forall{#esp}(#s1:#Sort{}, \forall{#esp}(#phi:#Pattern{}, \equals{#Pattern{}, #esp}(#\floor{}(#s1:#Sort{}, #s2:#Sort{}, #phi:#Pattern{}), #\not{}(#s2:#Sort{}, #\ceil{}(#s1:#Sort{}, #s2:#Sort{}, #\not{}(#s1:#Sort{}, #phi:#Pattern{}))))))) []
    axiom {#esp} \forall{#esp}(#s2:#Sort{}, \forall{#esp}(#s1:#Sort{}, \forall{#esp}(#psi:#Pattern{}, \forall{#esp}(#phi:#Pattern{}, \equals{#Pattern{}, #esp}(#\equals{}(#s1:#Sort{}, #s2:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{}), #\floor{}(#s1:#Sort{}, #s2:#Sort{}, #\iff{}(#s1:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{}))))))) []
    axiom {#esp} \forall{#esp}(#s2:#Sort{}, \forall{#esp}(#s1:#Sort{}, \forall{#esp}(#psi:#Pattern{}, \forall{#esp}(#phi:#Pattern{}, \equals{#Pattern{}, #esp}(#\in{}(#s1:#Sort{}, #s2:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{}), #\ceil{}(#s1:#Sort{}, #s2:#Sort{}, #\and{}(#s1:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{}))))))) []
    axiom {#esp} \forall{#esp}(#x:#CharList{}, \forall{#esp}(#s:#Sort{}, \equals{#Pattern{}, #esp}(#\top{}(#s:#Sort{}), #\exists{}(#s:#Sort{}, #variable{}(#x:#CharList{}, #s:#Sort{}), #variableAsPattern{}(#variable{}(#x:#CharList{}, #s:#Sort{})))))) []
    axiom {#esp} \forall{#esp}(#s:#Sort{}, \equals{#Pattern{}, #esp}(#\bottom{}(#s:#Sort{}), #\not{}(#s:#Sort{}, #\top{}(#s:#Sort{})))) []
    symbol #getFV{}(#Pattern{}) : #VariableList{} []
    symbol #getFVFromPatterns{}(#PatternList{}) : #VariableList{} []
    axiom {#esp} \forall{#esp}(#v:#Variable{}, \equals{#VariableList{}, #esp}(#getFV{}(#variableAsPattern{}(#v:#Variable{})), #consVariableList{}(#v:#Variable{}, #nilVariableList{}()))) []
    axiom {#esp} \forall{#esp}(#sigma:#Symbol{}, \forall{#esp}(#L:#PatternList{}, \equals{#VariableList{}, #esp}(#getFV{}(#application{}(#sigma:#Symbol{}, #L:#PatternList{})), #getFVFromPatterns{}(#L:#PatternList{})))) []
    axiom {#esp} \forall{#esp}(#s:#Sort{}, \forall{#esp}(#psi:#Pattern{}, \forall{#esp}(#phi:#Pattern{}, \equals{#VariableList{}, #esp}(#getFV{}(#\and{}(#s:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{})), #appendVariableList{}(#getFV{}(#phi:#Pattern{}), #getFV{}(#psi:#Pattern{})))))) []
    axiom {#esp} \forall{#esp}(#s:#Sort{}, \forall{#esp}(#phi:#Pattern{}, \equals{#VariableList{}, #esp}(#getFV{}(#\not{}(#s:#Sort{}, #phi:#Pattern{})), #getFV{}(#phi:#Pattern{})))) []
    axiom {#esp} \forall{#esp}(#v:#Variable{}, \forall{#esp}(#s:#Sort{}, \forall{#esp}(#phi:#Pattern{}, \equals{#VariableList{}, #esp}(#getFV{}(#\exists{}(#s:#Sort{}, #v:#Variable{}, #phi:#Pattern{})), #deleteVariableList{}(#v:#Variable{}, #getFV{}(#phi:#Pattern{})))))) []
    axiom {#esp} \equals{#VariableList{}, #esp}(#getFVFromPatterns{}(#nilPatternList{}()), #nilVariableList{}()) []
    axiom {#esp} \forall{#esp}(#phi:#Pattern{}, \forall{#esp}(#L:#PatternList{}, \equals{#VariableList{}, #esp}(#getFVFromPatterns{}(#consPatternList{}(#phi:#Pattern{}, #L:#PatternList{})), #appendVariableList{}(#getFV{}(#phi:#Pattern{}), #getFVFromPatterns{}(#L:#PatternList{}))))) []
    symbol #occursFree{#sp}(#Variable{}, #Pattern{}) : #sp []
    axiom {#esp, #sp} \forall{#esp}(#v:#Variable{}, \forall{#esp}(#phi:#Pattern{}, \equals{#sp, #esp}(#occursFree{#sp}(#v:#Variable{}, #phi:#Pattern{}), #inVariableList{#sp}(#v:#Variable{}, #getFV{}(#phi:#Pattern{}))))) []
    symbol #freshName{}(#PatternList{}) : #CharList{} []
    axiom {#sp} \forall{#sp}(#s:#Sort{}, \forall{#sp}(#L:#PatternList{}, \not{#sp}(#inVariableList{#sp}(#variable{}(#freshName{}(#L:#PatternList{}), #s:#Sort{}), #getFVFromPatterns{}(#L:#PatternList{}))))) []
    symbol #substitute{}(#Pattern{}, #Pattern{}, #Variable{}) : #Pattern{} []
    symbol #substitutePatterns{}(#PatternList{}, #Pattern{}, #Variable{}) : #PatternList{} []
    axiom {#esp} \forall{#esp}(#v:#Variable{}, \forall{#esp}(#u:#Variable{}, \forall{#esp}(#psi:#Pattern{}, \equals{#Pattern{}, #esp}(#substitute{}(#variableAsPattern{}(#u:#Variable{}), #psi:#Pattern{}, #v:#Variable{}), \or{#Pattern{}}(\and{#Pattern{}}(\equals{#Variable{}, #Pattern{}}(#u:#Variable{}, #v:#Variable{}), #psi:#Pattern{}), \and{#Pattern{}}(\not{#Pattern{}}(\equals{#Variable{}, #Pattern{}}(#u:#Variable{}, #v:#Variable{})), #variableAsPattern{}(#u:#Variable{}))))))) []
    axiom {#esp} \forall{#esp}(#v:#Variable{}, \forall{#esp}(#sigma:#Symbol{}, \forall{#esp}(#psi:#Pattern{}, \forall{#esp}(#L:#PatternList{}, \equals{#Pattern{}, #esp}(#substitute{}(#application{}(#sigma:#Symbol{}, #L:#PatternList{}), #psi:#Pattern{}, #v:#Variable{}), #application{}(#sigma:#Symbol{}, #substitutePatterns{}(#L:#PatternList{}, #psi:#Pattern{}, #v:#Variable{}))))))) []
    axiom {#esp} \forall{#esp}(#v:#Variable{}, \forall{#esp}(#s:#Sort{}, \forall{#esp}(#psi:#Pattern{}, \forall{#esp}(#phi2:#Pattern{}, \forall{#esp}(#phi1:#Pattern{}, \equals{#Pattern{}, #esp}(#substitute{}(#\or{}(#s:#Sort{}, #phi1:#Pattern{}, #phi2:#Pattern{}), #psi:#Pattern{}, #v:#Variable{}), #\or{}(#s:#Sort{}, #substitute{}(#phi1:#Pattern{}, #psi:#Pattern{}, #v:#Variable{}), #substitute{}(#phi2:#Pattern{}, #psi:#Pattern{}, #v:#Variable{})))))))) []
    axiom {#esp} \forall{#esp}(#v:#Variable{}, \forall{#esp}(#s:#Sort{}, \forall{#esp}(#psi:#Pattern{}, \forall{#esp}(#phi:#Pattern{}, \equals{#Pattern{}, #esp}(#substitute{}(#\not{}(#s:#Sort{}, #phi:#Pattern{}), #psi:#Pattern{}, #v:#Variable{}), #\not{}(#s:#Sort{}, #substitute{}(#phi:#Pattern{}, #psi:#Pattern{}, #v:#Variable{}))))))) []
    axiom {#esp} \forall{#esp}(#x:#CharList{}, \forall{#esp}(#v:#Variable{}, \forall{#esp}(#s':#Sort{}, \forall{#esp}(#s:#Sort{}, \forall{#esp}(#psi:#Pattern{}, \forall{#esp}(#phi:#Pattern{}, \equals{#Pattern{}, #esp}(#substitute{}(#\exists{}(#s':#Sort{}, #variable{}(#x:#CharList{}, #s:#Sort{}), #phi:#Pattern{}), #psi:#Pattern{}, #v:#Variable{}), \exists{#Pattern{}}(#x':#CharList{}, \and{#Pattern{}}(\equals{#CharList{}, #Pattern{}}(#x':#CharList{}, #freshName{}(#consPatternList{}(#phi:#Pattern{}, #consPatternList{}(#psi:#Pattern{}, #consPatternList{}(#variableAsPattern{}(#v:#Variable{}), #nilPatternList{}()))))), #\exists{}(#s':#Sort{}, #variable{}(#x':#CharList{}, #s:#Sort{}), #substitute{}(#substitute{}(#phi:#Pattern{}, #variableAsPattern{}(#variable{}(#x':#CharList{}, #s:#Sort{})), #variable{}(#x:#CharList{}, #s:#Sort{})), #psi:#Pattern{}, #v:#Variable{}))))))))))) []
    axiom {#esp} \forall{#esp}(#v:#Variable{}, \forall{#esp}(#psi:#Pattern{}, \equals{#PatternList{}, #esp}(#substitutePatterns{}(#nilPatternList{}(), #psi:#Pattern{}, #v:#Variable{}), #nilPatternList{}()))) []
    axiom {#esp} \forall{#esp}(#v:#Variable{}, \forall{#esp}(#psi:#Pattern{}, \forall{#esp}(#phi:#Pattern{}, \forall{#esp}(#L:#PatternList{}, \equals{#PatternList{}, #esp}(#substitutePatterns{}(#consPatternList{}(#phi:#Pattern{}, #L:#PatternList{}), #psi:#Pattern{}, #v:#Variable{}), #consPatternList{}(#substitute{}(#phi:#Pattern{}, #psi:#Pattern{}, #v:#Variable{}), #substitutePatterns{}(#L:#PatternList{}, #psi:#Pattern{}, #v:#Variable{}))))))) []
    axiom {#sp} \forall{#sp}(#v2:#Variable{}, \forall{#sp}(#v1:#Variable{}, \forall{#sp}(#u:#Variable{}, \forall{#sp}(#s:#Sort{}, \forall{#sp}(#phi:#Pattern{}, \implies{#sp}(\and{#sp}(\not{#sp}(#occursFree{#sp}(#v1:#Variable{}, #phi:#Pattern{})), \not{#sp}(#occursFree{#sp}(#v2:#Variable{}, #phi:#Pattern{}))), \equals{#Pattern{}, #sp}(#\exists{}(#s:#Sort{}, #v1:#Variable{}, #substitute{}(#phi:#Pattern{}, #variableAsPattern{}(#v1:#Variable{}), #u:#Variable{})), #\exists{}(#s:#Sort{}, #v2:#Variable{}, #substitute{}(#phi:#Pattern{}, #variableAsPattern{}(#v2:#Variable{}), #u:#Variable{}))))))))) []
    symbol #sortDeclared{#sp}(#Sort{}) : #sp []
    symbol #symbolDeclared{#sp}(#Symbol{}) : #sp []
    symbol #axiomDeclared{#sp}(#Pattern{}) : #sp []
    symbol #sortsDeclared{#sp}(#SortList{}) : #sp []
    axiom {#sp} #sortsDeclared{#sp}(#nilSortList{}()) []
    axiom {#esp, #sp} \forall{#esp}(#s:#Sort{}, \forall{#esp}(#S:#SortList{}, \equals{#sp, #esp}(#sortsDeclared{#sp}(#consSortList{}(#s:#Sort{}, #S:#SortList{})), \and{#sp}(#sortDeclared{#sp}(#s:#Sort{}), #sortsDeclared{#sp}(#S:#SortList{}))))) []
    axiom {#sp} \forall{#sp}(#s2:#Sort{}, \forall{#sp}(#s1:#Sort{}, \implies{#sp}(\and{#sp}(#sortDeclared{#sp}(#s1:#Sort{}), #sortDeclared{#sp}(#s2:#Sort{})), #symbolDeclared{#sp}(#`ceil{}(#s1:#Sort{}, #s2:#Sort{}))))) []
    symbol #wellFormed{#sp}(#Pattern{}) : #sp []
    symbol #wellFormedPatterns{#sp}(#PatternList{}) : #sp []
    axiom {#sp} #wellFormedPatterns{#sp}(#nilPatternList{}()) []
    axiom {#esp, #sp} \forall{#esp}(#phi:#Pattern{}, \forall{#esp}(#L:#PatternList{}, \equals{#sp, #esp}(#wellFormedPatterns{#sp}(#consPatternList{}(#phi:#Pattern{}, #L:#PatternList{})), \and{#sp}(#wellFormed{#sp}(#phi:#Pattern{}), #wellFormedPatterns{#sp}(#L:#PatternList{}))))) []
    symbol #getSort{}(#Pattern{}) : #Sort{} []
    symbol #getSortsFromPatterns{}(#PatternList{}) : #SortList{} []
    axiom {#esp} \equals{#SortList{}, #esp}(#getSortsFromPatterns{}(#nilPatternList{}()), #nilSortList{}()) []
    axiom {#esp} \forall{#esp}(#phi:#Pattern{}, \forall{#esp}(#L:#PatternList{}, \equals{#SortList{}, #esp}(#getSortsFromPatterns{}(#consPatternList{}(#phi:#Pattern{}, #L:#PatternList{})), #consSortList{}(#getSort{}(#phi:#Pattern{}), #getSortsFromPatterns{}(#L:#PatternList{}))))) []
    axiom {#esp, #sp} \forall{#esp}(#x:#CharList{}, \forall{#esp}(#s:#Sort{}, \equals{#sp, #esp}(#wellFormed{#sp}(#variableAsPattern{}(#variable{}(#x:#CharList{}, #s:#Sort{}))), #sortDeclared{#sp}(#s:#Sort{})))) []
    axiom {#esp, #sp} \forall{#esp}(#sigma:#Symbol{}, \forall{#esp}(#L:#PatternList{}, \equals{#sp, #esp}(#wellFormed{#sp}(#application{}(#sigma:#Symbol{}, #L:#PatternList{})), \and{#sp}(\and{#sp}(#symbolDeclared{#sp}(#sigma:#Symbol{}), #wellFormedPatterns{#sp}(#L:#PatternList{})), \and{#sp}(#sortDeclared{#sp}(#getReturnSort{}(#sigma:#Symbol{})), \equals{#SortList{}, #sp}(#getSortsFromPatterns{}(#L:#PatternList{}), #getArgumentSorts{}(#sigma:#Symbol{}))))))) []
    axiom {#esp, #sp} \forall{#esp}(#s:#Sort{}, \forall{#esp}(#psi:#Pattern{}, \forall{#esp}(#phi:#Pattern{}, \equals{#sp, #esp}(#wellFormed{#sp}(#\and{}(#s:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{})), \and{#sp}(\and{#sp}(#wellFormed{#sp}(#phi:#Pattern{}), #wellFormed{#sp}(#psi:#Pattern{})), \and{#sp}(\equals{#Sort{}, #sp}(#getSort{}(#phi:#Pattern{}), #s:#Sort{}), \equals{#Sort{}, #sp}(#getSort{}(#psi:#Pattern{}), #s:#Sort{}))))))) []
    axiom {#esp, #sp} \forall{#esp}(#s:#Sort{}, \forall{#esp}(#psi:#Pattern{}, \forall{#esp}(#phi:#Pattern{}, \equals{#sp, #esp}(#wellFormed{#sp}(#\not{}(#s:#Sort{}, #phi:#Pattern{})), \and{#sp}(#wellFormed{#sp}(#phi:#Pattern{}), \equals{#Sort{}, #sp}(#getSort{}(#psi:#Pattern{}), #s:#Sort{})))))) []
    axiom {#esp, #sp} \forall{#esp}(#v:#Variable{}, \forall{#esp}(#s:#Sort{}, \forall{#esp}(#psi:#Pattern{}, \forall{#esp}(#phi:#Pattern{}, \equals{#sp, #esp}(#wellFormed{#sp}(#\exists{}(#s:#Sort{}, #v:#Variable{}, #phi:#Pattern{})), \and{#sp}(#wellFormed{#sp}(#variableAsPattern{}(#v:#Variable{})), \and{#sp}(#wellFormed{#sp}(#phi:#Pattern{}), \equals{#Sort{}, #sp}(#getSort{}(#psi:#Pattern{}), #s:#Sort{})))))))) []
    axiom {#esp, #sp} \forall{#esp}(#x:#CharList{}, \forall{#esp}(#s:#Sort{}, \equals{#Sort{}, #esp}(#getSort{}(#variableAsPattern{}(#variable{}(#x:#CharList{}, #s:#Sort{}))), \and{#Sort{}}(#wellFormed{#Sort{}}(#variableAsPattern{}(#variable{}(#x:#CharList{}, #s:#Sort{}))), #s:#Sort{})))) []
    axiom {#esp, #sp} \forall{#esp}(#sigma:#Symbol{}, \forall{#esp}(#s:#Sort{}, \forall{#esp}(#L:#PatternList{}, \equals{#Sort{}, #esp}(#getSort{}(#application{}(#sigma:#Symbol{}, #L:#PatternList{})), \and{#Sort{}}(#wellFormed{#Sort{}}(#application{}(#sigma:#Symbol{}, #L:#PatternList{})), #s:#Sort{}))))) []
    axiom {#esp, #sp} \forall{#esp}(#s:#Sort{}, \forall{#esp}(#psi:#Pattern{}, \forall{#esp}(#phi:#Pattern{}, \equals{#Sort{}, #esp}(#getSort{}(#\and{}(#s:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{})), \and{#Sort{}}(#wellFormed{#Sort{}}(#\and{}(#s:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{})), #s:#Sort{}))))) []
    axiom {#esp, #sp} \forall{#esp}(#s:#Sort{}, \forall{#esp}(#phi:#Pattern{}, \equals{#Sort{}, #esp}(#getSort{}(#\not{}(#s:#Sort{}, #phi:#Pattern{})), \and{#Sort{}}(#wellFormed{#Sort{}}(#\not{}(#s:#Sort{}, #phi:#Pattern{})), #s:#Sort{})))) []
    axiom {#esp, #sp} \forall{#esp}(#v:#Variable{}, \forall{#esp}(#s:#Sort{}, \forall{#esp}(#phi:#Pattern{}, \equals{#Sort{}, #esp}(#getSort{}(#\exists{}(#s:#Sort{}, #v:#Variable{}, #phi:#Pattern{})), \and{#Sort{}}(#wellFormed{#Sort{}}(#\exists{}(#s:#Sort{}, #v:#Variable{}, #phi:#Pattern{})), #s:#Sort{}))))) []
    symbol #provable{#sp}(#Pattern{}) : #sp []
    axiom {#sp} \forall{#sp}(#s:#Sort{}, \forall{#sp}(#psi:#Pattern{}, \forall{#sp}(#phi:#Pattern{}, \implies{#sp}(#wellFormed{#sp}(#\implies{}(#s:#Sort{}, #phi:#Pattern{}, #\implies{}(#s:#Sort{}, #psi:#Pattern{}, #phi:#Pattern{}))), #provable{#sp}(#\implies{}(#s:#Sort{}, #phi:#Pattern{}, #\implies{}(#s:#Sort{}, #psi:#Pattern{}, #phi:#Pattern{}))))))) []
    axiom {#sp} \forall{#sp}(#s:#Sort{}, \forall{#sp}(#phi3:#Pattern{}, \forall{#sp}(#phi2:#Pattern{}, \forall{#sp}(#phi1:#Pattern{}, \implies{#sp}(#wellFormed{#sp}(#\implies{}(#s:#Sort{}, #\implies{}(#s:#Sort{}, #phi1:#Pattern{}, #\implies{}(#s:#Sort{}, #phi2:#Pattern{}, #phi3:#Pattern{})), #\implies{}(#s:#Sort{}, #\implies{}(#s:#Sort{}, #phi1:#Pattern{}, #phi2:#Pattern{}), #\implies{}(#s:#Sort{}, #phi1:#Pattern{}, #phi3:#Pattern{})))), #provable{#sp}(#\implies{}(#s:#Sort{}, #\implies{}(#s:#Sort{}, #phi1:#Pattern{}, #\implies{}(#s:#Sort{}, #phi2:#Pattern{}, #phi3:#Pattern{})), #\implies{}(#s:#Sort{}, #\implies{}(#s:#Sort{}, #phi1:#Pattern{}, #phi2:#Pattern{}), #\implies{}(#s:#Sort{}, #phi1:#Pattern{}, #phi3:#Pattern{}))))))))) []
    axiom {#sp} \forall{#sp}(#s:#Sort{}, \forall{#sp}(#psi:#Pattern{}, \forall{#sp}(#phi:#Pattern{}, \implies{#sp}(#wellFormed{#sp}(#\implies{}(#s:#Sort{}, #\implies{}(#s:#Sort{}, #\not{}(#s:#Sort{}, #psi:#Pattern{}), #\not{}(#s:#Sort{}, #phi:#Pattern{})), #\implies{}(#s:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{}))), #provable{#sp}(#\implies{}(#s:#Sort{}, #\implies{}(#s:#Sort{}, #\not{}(#s:#Sort{}, #psi:#Pattern{}), #\not{}(#s:#Sort{}, #phi:#Pattern{})), #\implies{}(#s:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{}))))))) []
    axiom {#sp} \forall{#sp}(#s:#Sort{}, \forall{#sp}(#psi:#Pattern{}, \forall{#sp}(#phi:#Pattern{}, \implies{#sp}(\and{#sp}(#wellFormed{#sp}(#phi:#Pattern{}), \and{#sp}(#wellFormed{#sp}(#psi:#Pattern{}), #wellFormed{#sp}(#\implies{}(#s:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{})))), \implies{#sp}(\and{#sp}(#provable{#sp}(#phi:#Pattern{}), #provable{#sp}(#\implies{}(#s:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{}))), #provable{#sp}(#psi:#Pattern{})))))) []
    axiom {#sp} \forall{#sp}(#v:#Variable{}, \forall{#sp}(#s:#Sort{}, \forall{#sp}(#psi:#Pattern{}, \forall{#sp}(#phi:#Pattern{}, \implies{#sp}(\and{#sp}(#wellFormed{#sp}(#variableAsPattern{}(#v:#Variable{})), \and{#sp}(#wellFormed{#sp}(#phi:#Pattern{}), #wellFormed{#sp}(#\forall{}(#s:#Sort{}, #v:#Variable{}, #\implies{}(#s:#Sort{}, #\implies{}(#s:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{}), #\implies{}(#s:#Sort{}, #phi:#Pattern{}, #\forall{}(#s:#Sort{}, #v:#Variable{}, #psi:#Pattern{}))))))), \implies{#sp}(\not{#sp}(#occursFree{#sp}(#v:#Variable{}, #phi:#Pattern{})), #provable{#sp}(#\forall{}(#s:#Sort{}, #v:#Variable{}, #\implies{}(#s:#Sort{}, #\implies{}(#s:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{}), #\implies{}(#s:#Sort{}, #phi:#Pattern{}, #\forall{}(#s:#Sort{}, #v:#Variable{}, #psi:#Pattern{}))))))))))) []
    axiom {#sp} \forall{#sp}(#v:#Variable{}, \forall{#sp}(#s:#Sort{}, \forall{#sp}(#phi:#Pattern{}, \implies{#sp}(\and{#sp}(#wellFormed{#sp}(#phi:#Pattern{}), #wellFormed{#sp}(#\forall{}(#s:#Sort{}, #v:#Variable{}, #phi:#Pattern{}))), \implies{#sp}(#provable{#sp}(#phi:#Pattern{}), #provable{#sp}(#\forall{}(#s:#Sort{}, #v:#Variable{}, #phi:#Pattern{}))))))) []
    axiom {#sp} \forall{#sp}(#v:#Variable{}, \forall{#sp}(#u:#Variable{}, \forall{#sp}(#s2:#Sort{}, \forall{#sp}(#s1:#Sort{}, \forall{#sp}(#psi:#Pattern{}, \forall{#sp}(#phi:#Pattern{}, \implies{#sp}(\and{#sp}(#wellFormed{#sp}(#psi:#Pattern{}), #wellFormed{#sp}(#\implies{}(#s2:#Sort{}, #\and{}(#s2:#Sort{}, #\exists{}(#s2:#Sort{}, #u:#Variable{}, #\equals{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#u:#Variable{}), #psi:#Pattern{})), #\forall{}(#s2:#Sort{}, #v:#Variable{}, #phi:#Pattern{})), #substitute{}(#phi:#Pattern{}, #psi:#Pattern{}, #v:#Variable{})))), \implies{#sp}(#occursFree{#sp}(#u:#Variable{}, #phi:#Pattern{}), #provable{#sp}(#\implies{}(#s2:#Sort{}, #\and{}(#s2:#Sort{}, #\exists{}(#s2:#Sort{}, #u:#Variable{}, #\equals{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#u:#Variable{}), #psi:#Pattern{})), #\forall{}(#s2:#Sort{}, #v:#Variable{}, #phi:#Pattern{})), #substitute{}(#phi:#Pattern{}, #psi:#Pattern{}, #v:#Variable{}))))))))))) []
    axiom {#sp} \forall{#sp}(#v:#Pattern{}, \forall{#sp}(#u:#Variable{}, \forall{#sp}(#s2:#Sort{}, \forall{#sp}(#s1:#Sort{}, \implies{#sp}(#wellFormed{#sp}(#\exists{}(#s2:#Sort{}, #u:#Variable{}, #\equals{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#u:#Variable{}), #v:#Pattern{}))), #provable{#sp}(#\exists{}(#s2:#Sort{}, #u:#Variable{}, #\equals{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#u:#Variable{}), #v:#Pattern{})))))))) []
    axiom {#sp} \forall{#sp}(#s2:#Sort{}, \forall{#sp}(#s1:#Sort{}, \forall{#sp}(#phi:#Pattern{}, \implies{#sp}(#wellFormed{#sp}(#\equals{}(#s1:#Sort{}, #s2:#Sort{}, #phi:#Pattern{}, #phi:#Pattern{})), #provable{#sp}(#\equals{}(#s1:#Sort{}, #s2:#Sort{}, #phi:#Pattern{}, #phi:#Pattern{})))))) []
    axiom {#sp} \forall{#sp}(#v:#Variable{}, \forall{#sp}(#s2:#Sort{}, \forall{#sp}(#s1:#Sort{}, \forall{#sp}(#psi:#Pattern{}, \forall{#sp}(#phi2:#Pattern{}, \forall{#sp}(#phi1:#Pattern{}, \implies{#sp}(#wellFormed{#sp}(#\implies{}(#s2:#Sort{}, #\equals{}(#s1:#Sort{}, #s2:#Sort{}, #phi1:#Pattern{}, #phi2:#Pattern{}), #\implies{}(#s2:#Sort{}, #substitute{}(#psi:#Pattern{}, #phi1:#Pattern{}, #v:#Variable{}), #substitute{}(#psi:#Pattern{}, #phi2:#Pattern{}, #v:#Variable{})))), #provable{#sp}(#\implies{}(#s2:#Sort{}, #\equals{}(#s1:#Sort{}, #s2:#Sort{}, #phi1:#Pattern{}, #phi2:#Pattern{}), #\implies{}(#s2:#Sort{}, #substitute{}(#psi:#Pattern{}, #phi1:#Pattern{}, #v:#Variable{}), #substitute{}(#psi:#Pattern{}, #phi2:#Pattern{}, #v:#Variable{}))))))))))) []
    axiom {#sp} \forall{#sp}(#x:#CharList{}, \forall{#sp}(#s':#Sort{}, \forall{#sp}(#s:#Sort{}, \implies{#sp}(#wellFormed{#sp}(#\ceil{}(#s:#Sort{}, #s':#Sort{}, #variableAsPattern{}(#variable{}(#x:#CharList{}, #s:#Sort{})))), #provable{#sp}(#\ceil{}(#s:#Sort{}, #s':#Sort{}, #variableAsPattern{}(#variable{}(#x:#CharList{}, #s:#Sort{})))))))) []
    axiom {#sp} \forall{#sp}(#v:#Variable{}, \forall{#sp}(#s2:#Sort{}, \forall{#sp}(#s1:#Sort{}, \forall{#sp}(#phi:#Pattern{}, \implies{#sp}(\and{#sp}(#wellFormed{#sp}(#phi:#Pattern{}), \and{#sp}(#wellFormed{#sp}(#variableAsPattern{}(#v:#Variable{})), #wellFormed{#sp}(#\in{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#v:#Variable{}), #phi:#Pattern{})))), \implies{#sp}(\and{#sp}(#provable{#sp}(#phi:#Pattern{}), \not{#sp}(#occursFree{#sp}(#v:#Variable{}, #phi:#Pattern{}))), #provable{#sp}(#\in{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#v:#Variable{}), #phi:#Pattern{})))))))) []
    axiom {#sp} \forall{#sp}(#v:#Variable{}, \forall{#sp}(#s2:#Sort{}, \forall{#sp}(#s1:#Sort{}, \forall{#sp}(#phi:#Pattern{}, \implies{#sp}(\and{#sp}(#wellFormed{#sp}(#phi:#Pattern{}), \and{#sp}(#wellFormed{#sp}(#variableAsPattern{}(#v:#Variable{})), #wellFormed{#sp}(#\in{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#v:#Variable{}), #phi:#Pattern{})))), \implies{#sp}(\and{#sp}(#provable{#sp}(#\in{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#v:#Variable{}), #phi:#Pattern{})), \not{#sp}(#occursFree{#sp}(#v:#Variable{}, #phi:#Pattern{}))), #provable{#sp}(#phi:#Pattern{}))))))) []
    axiom {#sp} \forall{#sp}(#v:#Pattern{}, \forall{#sp}(#u:#Pattern{}, \forall{#sp}(#s3:#Sort{}, \forall{#sp}(#s2:#Sort{}, \forall{#sp}(#s1:#Sort{}, \implies{#sp}(#wellFormed{#sp}(#\equals{}(#s2:#Sort{}, #s3:#Sort{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #v:#Pattern{}, #u:#Pattern{}), #\equals{}(#s1:#Sort{}, #s2:#Sort{}, #v:#Pattern{}, #u:#Pattern{}))), #provable{#sp}(#\equals{}(#s2:#Sort{}, #s3:#Sort{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #v:#Pattern{}, #u:#Pattern{}), #\equals{}(#s1:#Sort{}, #s2:#Sort{}, #v:#Pattern{}, #u:#Pattern{}))))))))) []
    axiom {#sp} \forall{#sp}(#v:#Pattern{}, \forall{#sp}(#s3:#Sort{}, \forall{#sp}(#s2:#Sort{}, \forall{#sp}(#s1:#Sort{}, \forall{#sp}(#psi:#Pattern{}, \forall{#sp}(#phi:#Pattern{}, \implies{#sp}(#wellFormed{#sp}(#\equals{}(#s2:#Sort{}, #s3:#Sort{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #v:#Pattern{}, #\and{}(#s1:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{})), #\and{}(#s2:#Sort{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #v:#Pattern{}, #phi:#Pattern{}), #\in{}(#s1:#Sort{}, #s2:#Sort{}, #v:#Pattern{}, #psi:#Pattern{})))), #provable{#sp}(#\equals{}(#s2:#Sort{}, #s3:#Sort{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #v:#Pattern{}, #\and{}(#s1:#Sort{}, #phi:#Pattern{}, #psi:#Pattern{})), #\and{}(#s2:#Sort{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #v:#Pattern{}, #phi:#Pattern{}), #\in{}(#s1:#Sort{}, #s2:#Sort{}, #v:#Pattern{}, #psi:#Pattern{}))))))))))) []
    axiom {#sp} \forall{#sp}(#v:#Pattern{}, \forall{#sp}(#s3:#Sort{}, \forall{#sp}(#s2:#Sort{}, \forall{#sp}(#s1:#Sort{}, \forall{#sp}(#phi:#Pattern{}, \implies{#sp}(#wellFormed{#sp}(#\equals{}(#s2:#Sort{}, #s3:#Sort{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #v:#Pattern{}, #\not{}(#s1:#Sort{}, #phi:#Pattern{})), #\not{}(#s2:#Sort{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #v:#Pattern{}, #phi:#Pattern{})))), #provable{#sp}(#\equals{}(#s2:#Sort{}, #s3:#Sort{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #v:#Pattern{}, #\not{}(#s1:#Sort{}, #phi:#Pattern{})), #\not{}(#s2:#Sort{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #v:#Pattern{}, #phi:#Pattern{})))))))))) []
    axiom {#sp} \forall{#sp}(#v:#Variable{}, \forall{#sp}(#u:#Variable{}, \forall{#sp}(#s3:#Sort{}, \forall{#sp}(#s2:#Sort{}, \forall{#sp}(#s1:#Sort{}, \forall{#sp}(#phi:#Pattern{}, \implies{#sp}(\and{#sp}(#wellFormed{#sp}(#variableAsPattern{}(#u:#Variable{})), \and{#sp}(#wellFormed{#sp}(#variableAsPattern{}(#v:#Variable{})), #wellFormed{#sp}(#\equals{}(#s2:#Sort{}, #s3:#Sort{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#v:#Variable{}), #\forall{}(#s1:#Sort{}, #u:#Variable{}, #phi:#Pattern{})), #\forall{}(#s2:#Sort{}, #u:#Variable{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#v:#Variable{}), #phi:#Pattern{})))))), \implies{#sp}(\not{#sp}(\equals{#Variable{}, #sp}(#u:#Variable{}, #v:#Variable{})), #provable{#sp}(#\equals{}(#s2:#Sort{}, #s3:#Sort{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#v:#Variable{}), #\forall{}(#s1:#Sort{}, #u:#Variable{}, #phi:#Pattern{})), #\forall{}(#s2:#Sort{}, #u:#Variable{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#v:#Variable{}), #phi:#Pattern{})))))))))))) []
    axiom {#sp} \forall{#sp}(#v:#Variable{}, \forall{#sp}(#u:#Variable{}, \forall{#sp}(#sigma:#Symbol{}, \forall{#sp}(#s3:#Sort{}, \forall{#sp}(#s2:#Sort{}, \forall{#sp}(#s1:#Sort{}, \forall{#sp}(#phii:#Pattern{}, \forall{#sp}(#R:#PatternList{}, \forall{#sp}(#L:#PatternList{}, \implies{#sp}(\and{#sp}(\and{#sp}(#wellFormed{#sp}(#variableAsPattern{}(#u:#Variable{})), #wellFormed{#sp}(#variableAsPattern{}(#v:#Variable{}))), \and{#sp}(#wellFormed{#sp}(#application{}(#sigma:#Symbol{}, #appendPatternList{}(#L:#PatternList{}, #consPatternList{}(#phii:#Pattern{}, #R:#PatternList{})))), #wellFormed{#sp}(#\equals{}(#s2:#Sort{}, #s3:#Sort{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#v:#Variable{}), #application{}(#sigma:#Symbol{}, #appendPatternList{}(#L:#PatternList{}, #consPatternList{}(#phii:#Pattern{}, #R:#PatternList{})))), #\exists{}(#s2:#Sort{}, #u:#Variable{}, #\and{}(#s2:#Sort{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#u:#Variable{}), #phii:#Pattern{}), #\in{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#v:#Variable{}), #application{}(#sigma:#Symbol{}, #appendPatternList{}(#L:#PatternList{}, #consPatternList{}(#variableAsPattern{}(#u:#Variable{}), #R:#PatternList{})))))))))), \implies{#sp}(\and{#sp}(\not{#sp}(\equals{#Variable{}, #sp}(#u:#Variable{}, #v:#Variable{})), \not{#sp}(#occursFree{#sp}(#u:#Variable{}, #application{}(#sigma:#Symbol{}, #appendPatternList{}(#L:#PatternList{}, #consPatternList{}(#phii:#Pattern{}, #R:#PatternList{})))))), #provable{#sp}(#\equals{}(#s2:#Sort{}, #s3:#Sort{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#v:#Variable{}), #application{}(#sigma:#Symbol{}, #appendPatternList{}(#L:#PatternList{}, #consPatternList{}(#phii:#Pattern{}, #R:#PatternList{})))), #\exists{}(#s2:#Sort{}, #u:#Variable{}, #\and{}(#s2:#Sort{}, #\in{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#u:#Variable{}), #phii:#Pattern{}), #\in{}(#s1:#Sort{}, #s2:#Sort{}, #variableAsPattern{}(#v:#Variable{}), #application{}(#sigma:#Symbol{}, #appendPatternList{}(#L:#PatternList{}, #consPatternList{}(#variableAsPattern{}(#u:#Variable{}), #R:#PatternList{}))))))))))))))))))) []
    axiom {#sp} \forall{#sp}(#phi:#Pattern{}, \implies{#sp}(#wellFormed{#sp}(#phi:#Pattern{}), \implies{#sp}(#axiomDeclared{#sp}(#phi:#Pattern{}), #provable{#sp}(#phi:#Pattern{})))) []
    symbol #`ceil{}(#Sort{}, #Sort{}) : #Symbol{} []
    axiom {#esp} \forall{#esp}(#s':#Sort{}, \forall{#esp}(#s:#Sort{}, \equals{#Symbol{}, #esp}(#`ceil{}(#s:#Sort{}, #s':#Sort{}), #symbol{}("ceil", #consSortList{}(#s:#Sort{}, #consSortList{}(#s':#Sort{}, #nilSortList{}())), #consSortList{}(#s:#Sort{}, #nilSortList{}()), #s':#Sort{})))) []
endmodule
[]