Definition
    { definitionAttributes = Attributes []
    , definitionModules =
        [ Module
            { moduleName = ModuleName "TEST-PATTERN-4"
            , moduleSentences =
                [ MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        KorePattern
                            { getKorePattern = CofreeT
                                { runCofreeT = Identity
                                    { runIdentity = () :< UnifiedObjectPattern (OrPattern Or
                                        { orSort =
                                            SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                        , orFirst =
                                            CofreeT
                                                { runCofreeT = Identity
                                                    { runIdentity = () :< UnifiedObjectPattern (VariablePattern Variable
                                                        { variableName = (Id "X" AstLocationNone) :: Id Object
                                                        , variableSort =
                                                            SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                        })
                                                    }
                                                }
                                        , orSecond =
                                            CofreeT
                                                { runCofreeT = Identity
                                                    { runIdentity = () :< UnifiedObjectPattern (VariablePattern Variable
                                                        { variableName = (Id "X" AstLocationNone) :: Id Object
                                                        , variableSort =
                                                            SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                        })
                                                    }
                                                }
                                        })
                                    }
                                }
                            }
                    , sentenceAxiomAttributes = Attributes []
                    })
                ]
            , moduleAttributes = Attributes []
            }
        ]
    }