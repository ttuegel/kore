Definition
    { definitionAttributes = Attributes []
    , definitionModules =
        [ Module
            { moduleName = ModuleName "TEST-ALIAS-10"
            , moduleSentences =
                [ ObjectSentence (SentenceAliasSentence SentenceAlias
                    { sentenceAliasAlias =
                        Alias
                            { aliasConstructor = (Id "f" AstLocationNone) :: Id Object
                            , aliasParams =
                                [ SortVariable ((Id "s" AstLocationNone) :: Id Object)
                                ]
                            }
                    , sentenceAliasSorts = []
                    , sentenceAliasReturnSort =
                        SortVariableSort (SortVariable ((Id "s" AstLocationNone) :: Id Object))
                    , sentenceAliasLeftPattern =
                        ApplicationPattern Application
                            { applicationSymbolOrAlias =
                                SymbolOrAlias
                                    { symbolOrAliasConstructor = (Id "f" AstLocationNone) :: Id Object
                                    , symbolOrAliasParams =
                                        [ SortVariableSort (SortVariable ((Id "s" AstLocationNone) :: Id Object))
                                        ]
                                    }
                            , applicationChildren = []
                            }
                    , sentenceAliasRightPattern =
                        DomainValuePattern DomainValue
                            { domainValueSort =
                                SortVariableSort (SortVariable ((Id "s" AstLocationNone) :: Id Object))
                            , domainValueChild =
                                BuiltinDomainString (Fix (StringLiteralPattern (StringLiteral "f")))
                            }
                    , sentenceAliasAttributes = Attributes []
                    })
                ]
            , moduleAttributes = Attributes []
            }
        ]
    }