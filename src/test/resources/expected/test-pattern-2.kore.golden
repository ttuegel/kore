Definition
    { definitionAttributes = Attributes []
    , definitionModules =
        [ Module
            { moduleName = ModuleName "TEST-PATTERN-2"
            , moduleSentences =
                [ MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        KorePattern
                            { getKorePattern = CofreeT
                                { runCofreeT = Identity
                                    { runIdentity = () :< UnifiedObjectPattern (BottomPattern (Bottom (SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object)))))
                                    }
                                }
                            }
                    , sentenceAxiomAttributes = Attributes []
                    })
                ]
            , moduleAttributes = Attributes []
            }
        ]
    }