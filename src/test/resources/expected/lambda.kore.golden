Definition
    { definitionAttributes = Attributes []
    , definitionModules =
        [ Module
            { moduleName = ModuleName "LAMBDA"
            , moduleSentences =
                [ ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = (Id "Exp" AstLocationNone) :: Id Object
                    , sentenceSortParameters = []
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = (Id "lambda0" AstLocationNone) :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = (Id "Exp" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            , sortAttributes =
                                Attribute.Sort
                                    { hook = Attribute.Hook Nothing
                                    , smtlib = Attribute.Smtlib Nothing
                                    }
                            }
                        , SortActualSort SortActual
                            { sortActualName = (Id "Exp" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            , sortAttributes =
                                Attribute.Sort
                                    { hook = Attribute.Hook Nothing
                                    , smtlib = Attribute.Smtlib Nothing
                                    }
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = (Id "Exp" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            , sortAttributes =
                                Attribute.Sort
                                    { hook = Attribute.Hook Nothing
                                    , smtlib = Attribute.Smtlib Nothing
                                    }
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = (Id "app" AstLocationNone) :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = (Id "Exp" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            , sortAttributes =
                                Attribute.Sort
                                    { hook = Attribute.Hook Nothing
                                    , smtlib = Attribute.Smtlib Nothing
                                    }
                            }
                        , SortActualSort SortActual
                            { sortActualName = (Id "Exp" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            , sortAttributes =
                                Attribute.Sort
                                    { hook = Attribute.Hook Nothing
                                    , smtlib = Attribute.Smtlib Nothing
                                    }
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = (Id "Exp" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            , sortAttributes =
                                Attribute.Sort
                                    { hook = Attribute.Hook Nothing
                                    , smtlib = Attribute.Smtlib Nothing
                                    }
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = (Id "lambda" AstLocationNone) :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = (Id "Exp" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            , sortAttributes =
                                Attribute.Sort
                                    { hook = Attribute.Hook Nothing
                                    , smtlib = Attribute.Smtlib Nothing
                                    }
                            }
                        , SortActualSort SortActual
                            { sortActualName = (Id "Exp" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            , sortAttributes =
                                Attribute.Sort
                                    { hook = Attribute.Hook Nothing
                                    , smtlib = Attribute.Smtlib Nothing
                                    }
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = (Id "Exp" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            , sortAttributes =
                                Attribute.Sort
                                    { hook = Attribute.Hook Nothing
                                    , smtlib = Attribute.Smtlib Nothing
                                    }
                            }
                    , sentenceSymbolAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedObject (SortVariable ((Id "R" AstLocationNone) :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        KorePattern
                            { getKorePattern = CofreeT
                                { runCofreeT = Identity
                                    { runIdentity = UnifiedObject Null :< UnifiedObjectPattern (EqualsPattern Equals
                                        { equalsOperandSort =
                                            SortActualSort SortActual
                                                { sortActualName = (Id "Exp" AstLocationNone) :: Id Object
                                                , sortActualSorts = []
                                                , sortAttributes =
                                                    Attribute.Sort
                                                        { hook = Attribute.Hook Nothing
                                                        , smtlib = Attribute.Smtlib Nothing
                                                        }
                                                }
                                        , equalsResultSort =
                                            SortVariableSort (SortVariable ((Id "R" AstLocationNone) :: Id Object))
                                        , equalsFirst =
                                            CofreeT
                                                { runCofreeT = Identity
                                                    { runIdentity = UnifiedObject Null :< UnifiedObjectPattern (ApplicationPattern Application
                                                        { applicationSymbolOrAlias =
                                                            SymbolOrAlias
                                                                { symbolOrAliasConstructor = (Id "lambda" AstLocationNone) :: Id Object
                                                                , symbolOrAliasParams = []
                                                                }
                                                        , applicationChildren =
                                                            [ CofreeT
                                                                { runCofreeT = Identity
                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                                        { applicationSymbolOrAlias =
                                                                            SymbolOrAlias
                                                                                { symbolOrAliasConstructor = (Id "#variableAsPattern" AstLocationNone) :: Id Meta
                                                                                , symbolOrAliasParams = []
                                                                                }
                                                                        , applicationChildren =
                                                                            [ CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                        { variableName = (Id "#X" AstLocationNone) :: Id Meta
                                                                                        , variableCounter = Nothing
                                                                                        , variableSort =
                                                                                            SortActualSort SortActual
                                                                                                { sortActualName = (Id "#Variable" AstLocationNone) :: Id Meta
                                                                                                , sortActualSorts = []
                                                                                                , sortAttributes =
                                                                                                    Attribute.Sort
                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                        }
                                                                                                }
                                                                                        })
                                                                                    }
                                                                                }
                                                                            ]
                                                                        })
                                                                    }
                                                                }
                                                            , CofreeT
                                                                { runCofreeT = Identity
                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                        { variableName = (Id "#E" AstLocationNone) :: Id Meta
                                                                        , variableCounter = Nothing
                                                                        , variableSort =
                                                                            SortActualSort SortActual
                                                                                { sortActualName = (Id "#Pattern" AstLocationNone) :: Id Meta
                                                                                , sortActualSorts = []
                                                                                , sortAttributes =
                                                                                    Attribute.Sort
                                                                                        { hook = Attribute.Hook Nothing
                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                        }
                                                                                }
                                                                        })
                                                                    }
                                                                }
                                                            ]
                                                        })
                                                    }
                                                }
                                        , equalsSecond =
                                            CofreeT
                                                { runCofreeT = Identity
                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                        { applicationSymbolOrAlias =
                                                            SymbolOrAlias
                                                                { symbolOrAliasConstructor = (Id "#\exists" AstLocationNone) :: Id Meta
                                                                , symbolOrAliasParams = []
                                                                }
                                                        , applicationChildren =
                                                            [ CofreeT
                                                                { runCofreeT = Identity
                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                        { variableName = (Id "#Exp" AstLocationNone) :: Id Meta
                                                                        , variableCounter = Nothing
                                                                        , variableSort =
                                                                            SortActualSort SortActual
                                                                                { sortActualName = (Id "#Sort" AstLocationNone) :: Id Meta
                                                                                , sortActualSorts = []
                                                                                , sortAttributes =
                                                                                    Attribute.Sort
                                                                                        { hook = Attribute.Hook Nothing
                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                        }
                                                                                }
                                                                        })
                                                                    }
                                                                }
                                                            , CofreeT
                                                                { runCofreeT = Identity
                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                        { variableName = (Id "#X" AstLocationNone) :: Id Meta
                                                                        , variableCounter = Nothing
                                                                        , variableSort =
                                                                            SortActualSort SortActual
                                                                                { sortActualName = (Id "#Variable" AstLocationNone) :: Id Meta
                                                                                , sortActualSorts = []
                                                                                , sortAttributes =
                                                                                    Attribute.Sort
                                                                                        { hook = Attribute.Hook Nothing
                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                        }
                                                                                }
                                                                        })
                                                                    }
                                                                }
                                                            , CofreeT
                                                                { runCofreeT = Identity
                                                                    { runIdentity = UnifiedObject Null :< UnifiedObjectPattern (ApplicationPattern Application
                                                                        { applicationSymbolOrAlias =
                                                                            SymbolOrAlias
                                                                                { symbolOrAliasConstructor = (Id "lambda0" AstLocationNone) :: Id Object
                                                                                , symbolOrAliasParams = []
                                                                                }
                                                                        , applicationChildren =
                                                                            [ CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                                                        { applicationSymbolOrAlias =
                                                                                            SymbolOrAlias
                                                                                                { symbolOrAliasConstructor = (Id "#variableAsPattern" AstLocationNone) :: Id Meta
                                                                                                , symbolOrAliasParams = []
                                                                                                }
                                                                                        , applicationChildren =
                                                                                            [ CofreeT
                                                                                                { runCofreeT = Identity
                                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                                        { variableName = (Id "#X" AstLocationNone) :: Id Meta
                                                                                                        , variableCounter = Nothing
                                                                                                        , variableSort =
                                                                                                            SortActualSort SortActual
                                                                                                                { sortActualName = (Id "#Variable" AstLocationNone) :: Id Meta
                                                                                                                , sortActualSorts = []
                                                                                                                , sortAttributes =
                                                                                                                    Attribute.Sort
                                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                                        }
                                                                                                                }
                                                                                                        })
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        })
                                                                                    }
                                                                                }
                                                                            , CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                        { variableName = (Id "#E" AstLocationNone) :: Id Meta
                                                                                        , variableCounter = Nothing
                                                                                        , variableSort =
                                                                                            SortActualSort SortActual
                                                                                                { sortActualName = (Id "#Pattern" AstLocationNone) :: Id Meta
                                                                                                , sortActualSorts = []
                                                                                                , sortAttributes =
                                                                                                    Attribute.Sort
                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                        }
                                                                                                }
                                                                                        })
                                                                                    }
                                                                                }
                                                                            ]
                                                                        })
                                                                    }
                                                                }
                                                            ]
                                                        })
                                                    }
                                                }
                                        })
                                    }
                                }
                            }
                    , sentenceAxiomAttributes = Attributes []
                    })
                , MetaSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = (Id "#isExp" AstLocationNone) :: Id Meta
                            , symbolParams =
                                [ SortVariable ((Id "#S" AstLocationNone) :: Id Meta)
                                ]
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = (Id "#Pattern" AstLocationNone) :: Id Meta
                            , sortActualSorts = []
                            , sortAttributes =
                                Attribute.Sort
                                    { hook = Attribute.Hook Nothing
                                    , smtlib = Attribute.Smtlib Nothing
                                    }
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                    , sentenceSymbolAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedMeta (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                        , UnifiedMeta (SortVariable ((Id "#R" AstLocationNone) :: Id Meta))
                        ]
                    , sentenceAxiomPattern =
                        KorePattern
                            { getKorePattern = CofreeT
                                { runCofreeT = Identity
                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (EqualsPattern Equals
                                        { equalsOperandSort =
                                            SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                                        , equalsResultSort =
                                            SortVariableSort (SortVariable ((Id "#R" AstLocationNone) :: Id Meta))
                                        , equalsFirst =
                                            CofreeT
                                                { runCofreeT = Identity
                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                        { applicationSymbolOrAlias =
                                                            SymbolOrAlias
                                                                { symbolOrAliasConstructor = (Id "#isExp" AstLocationNone) :: Id Meta
                                                                , symbolOrAliasParams =
                                                                    [ SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                                                                    ]
                                                                }
                                                        , applicationChildren =
                                                            [ CofreeT
                                                                { runCofreeT = Identity
                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                                        { applicationSymbolOrAlias =
                                                                            SymbolOrAlias
                                                                                { symbolOrAliasConstructor = (Id "#variableAsPattern" AstLocationNone) :: Id Meta
                                                                                , symbolOrAliasParams = []
                                                                                }
                                                                        , applicationChildren =
                                                                            [ CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                                                        { applicationSymbolOrAlias =
                                                                                            SymbolOrAlias
                                                                                                { symbolOrAliasConstructor = (Id "#variable" AstLocationNone) :: Id Meta
                                                                                                , symbolOrAliasParams = []
                                                                                                }
                                                                                        , applicationChildren =
                                                                                            [ CofreeT
                                                                                                { runCofreeT = Identity
                                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                                        { variableName = (Id "#NAME" AstLocationNone) :: Id Meta
                                                                                                        , variableCounter = Nothing
                                                                                                        , variableSort =
                                                                                                            SortActualSort SortActual
                                                                                                                { sortActualName = (Id "#CharList" AstLocationNone) :: Id Meta
                                                                                                                , sortActualSorts = []
                                                                                                                , sortAttributes =
                                                                                                                    Attribute.Sort
                                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                                        }
                                                                                                                }
                                                                                                        })
                                                                                                    }
                                                                                                }
                                                                                            , CofreeT
                                                                                                { runCofreeT = Identity
                                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                                        { variableName = (Id "#SORT" AstLocationNone) :: Id Meta
                                                                                                        , variableCounter = Nothing
                                                                                                        , variableSort =
                                                                                                            SortActualSort SortActual
                                                                                                                { sortActualName = (Id "#Sort" AstLocationNone) :: Id Meta
                                                                                                                , sortActualSorts = []
                                                                                                                , sortAttributes =
                                                                                                                    Attribute.Sort
                                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                                        }
                                                                                                                }
                                                                                                        })
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        })
                                                                                    }
                                                                                }
                                                                            ]
                                                                        })
                                                                    }
                                                                }
                                                            ]
                                                        })
                                                    }
                                                }
                                        , equalsSecond =
                                            CofreeT
                                                { runCofreeT = Identity
                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (EqualsPattern Equals
                                                        { equalsOperandSort =
                                                            SortActualSort SortActual
                                                                { sortActualName = (Id "#Sort" AstLocationNone) :: Id Meta
                                                                , sortActualSorts = []
                                                                , sortAttributes =
                                                                    Attribute.Sort
                                                                        { hook = Attribute.Hook Nothing
                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                        }
                                                                }
                                                        , equalsResultSort =
                                                            SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                                                        , equalsFirst =
                                                            CofreeT
                                                                { runCofreeT = Identity
                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                        { variableName = (Id "#SORT" AstLocationNone) :: Id Meta
                                                                        , variableCounter = Nothing
                                                                        , variableSort =
                                                                            SortActualSort SortActual
                                                                                { sortActualName = (Id "#Sort" AstLocationNone) :: Id Meta
                                                                                , sortActualSorts = []
                                                                                , sortAttributes =
                                                                                    Attribute.Sort
                                                                                        { hook = Attribute.Hook Nothing
                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                        }
                                                                                }
                                                                        })
                                                                    }
                                                                }
                                                        , equalsSecond =
                                                            CofreeT
                                                                { runCofreeT = Identity
                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                                        { applicationSymbolOrAlias =
                                                                            SymbolOrAlias
                                                                                { symbolOrAliasConstructor = (Id "#`Exp" AstLocationNone) :: Id Meta
                                                                                , symbolOrAliasParams = []
                                                                                }
                                                                        , applicationChildren = []
                                                                        })
                                                                    }
                                                                }
                                                        })
                                                    }
                                                }
                                        })
                                    }
                                }
                            }
                    , sentenceAxiomAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedMeta (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                        , UnifiedMeta (SortVariable ((Id "#R" AstLocationNone) :: Id Meta))
                        ]
                    , sentenceAxiomPattern =
                        KorePattern
                            { getKorePattern = CofreeT
                                { runCofreeT = Identity
                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (EqualsPattern Equals
                                        { equalsOperandSort =
                                            SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                                        , equalsResultSort =
                                            SortVariableSort (SortVariable ((Id "#R" AstLocationNone) :: Id Meta))
                                        , equalsFirst =
                                            CofreeT
                                                { runCofreeT = Identity
                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                        { applicationSymbolOrAlias =
                                                            SymbolOrAlias
                                                                { symbolOrAliasConstructor = (Id "#isExp" AstLocationNone) :: Id Meta
                                                                , symbolOrAliasParams =
                                                                    [ SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                                                                    ]
                                                                }
                                                        , applicationChildren =
                                                            [ CofreeT
                                                                { runCofreeT = Identity
                                                                    { runIdentity = UnifiedObject Null :< UnifiedObjectPattern (ApplicationPattern Application
                                                                        { applicationSymbolOrAlias =
                                                                            SymbolOrAlias
                                                                                { symbolOrAliasConstructor = (Id "app" AstLocationNone) :: Id Object
                                                                                , symbolOrAliasParams = []
                                                                                }
                                                                        , applicationChildren =
                                                                            [ CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                        { variableName = (Id "#E1" AstLocationNone) :: Id Meta
                                                                                        , variableCounter = Nothing
                                                                                        , variableSort =
                                                                                            SortActualSort SortActual
                                                                                                { sortActualName = (Id "#Pattern" AstLocationNone) :: Id Meta
                                                                                                , sortActualSorts = []
                                                                                                , sortAttributes =
                                                                                                    Attribute.Sort
                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                        }
                                                                                                }
                                                                                        })
                                                                                    }
                                                                                }
                                                                            , CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                        { variableName = (Id "#E2" AstLocationNone) :: Id Meta
                                                                                        , variableCounter = Nothing
                                                                                        , variableSort =
                                                                                            SortActualSort SortActual
                                                                                                { sortActualName = (Id "#Pattern" AstLocationNone) :: Id Meta
                                                                                                , sortActualSorts = []
                                                                                                , sortAttributes =
                                                                                                    Attribute.Sort
                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                        }
                                                                                                }
                                                                                        })
                                                                                    }
                                                                                }
                                                                            ]
                                                                        })
                                                                    }
                                                                }
                                                            ]
                                                        })
                                                    }
                                                }
                                        , equalsSecond =
                                            CofreeT
                                                { runCofreeT = Identity
                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (AndPattern And
                                                        { andSort =
                                                            SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                                                        , andFirst =
                                                            CofreeT
                                                                { runCofreeT = Identity
                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                                        { applicationSymbolOrAlias =
                                                                            SymbolOrAlias
                                                                                { symbolOrAliasConstructor = (Id "#isExp" AstLocationNone) :: Id Meta
                                                                                , symbolOrAliasParams =
                                                                                    [ SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                                                                                    ]
                                                                                }
                                                                        , applicationChildren =
                                                                            [ CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                        { variableName = (Id "#E1" AstLocationNone) :: Id Meta
                                                                                        , variableCounter = Nothing
                                                                                        , variableSort =
                                                                                            SortActualSort SortActual
                                                                                                { sortActualName = (Id "#Pattern" AstLocationNone) :: Id Meta
                                                                                                , sortActualSorts = []
                                                                                                , sortAttributes =
                                                                                                    Attribute.Sort
                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                        }
                                                                                                }
                                                                                        })
                                                                                    }
                                                                                }
                                                                            ]
                                                                        })
                                                                    }
                                                                }
                                                        , andSecond =
                                                            CofreeT
                                                                { runCofreeT = Identity
                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                                        { applicationSymbolOrAlias =
                                                                            SymbolOrAlias
                                                                                { symbolOrAliasConstructor = (Id "#isExp" AstLocationNone) :: Id Meta
                                                                                , symbolOrAliasParams =
                                                                                    [ SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                                                                                    ]
                                                                                }
                                                                        , applicationChildren =
                                                                            [ CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                        { variableName = (Id "#E2" AstLocationNone) :: Id Meta
                                                                                        , variableCounter = Nothing
                                                                                        , variableSort =
                                                                                            SortActualSort SortActual
                                                                                                { sortActualName = (Id "#Pattern" AstLocationNone) :: Id Meta
                                                                                                , sortActualSorts = []
                                                                                                , sortAttributes =
                                                                                                    Attribute.Sort
                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                        }
                                                                                                }
                                                                                        })
                                                                                    }
                                                                                }
                                                                            ]
                                                                        })
                                                                    }
                                                                }
                                                        })
                                                    }
                                                }
                                        })
                                    }
                                }
                            }
                    , sentenceAxiomAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedMeta (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                        , UnifiedMeta (SortVariable ((Id "#R" AstLocationNone) :: Id Meta))
                        ]
                    , sentenceAxiomPattern =
                        KorePattern
                            { getKorePattern = CofreeT
                                { runCofreeT = Identity
                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (EqualsPattern Equals
                                        { equalsOperandSort =
                                            SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                                        , equalsResultSort =
                                            SortVariableSort (SortVariable ((Id "#R" AstLocationNone) :: Id Meta))
                                        , equalsFirst =
                                            CofreeT
                                                { runCofreeT = Identity
                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                        { applicationSymbolOrAlias =
                                                            SymbolOrAlias
                                                                { symbolOrAliasConstructor = (Id "#isExp" AstLocationNone) :: Id Meta
                                                                , symbolOrAliasParams =
                                                                    [ SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                                                                    ]
                                                                }
                                                        , applicationChildren =
                                                            [ CofreeT
                                                                { runCofreeT = Identity
                                                                    { runIdentity = UnifiedObject Null :< UnifiedObjectPattern (ApplicationPattern Application
                                                                        { applicationSymbolOrAlias =
                                                                            SymbolOrAlias
                                                                                { symbolOrAliasConstructor = (Id "lambda" AstLocationNone) :: Id Object
                                                                                , symbolOrAliasParams = []
                                                                                }
                                                                        , applicationChildren =
                                                                            [ CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                                                        { applicationSymbolOrAlias =
                                                                                            SymbolOrAlias
                                                                                                { symbolOrAliasConstructor = (Id "#variableAsPattern" AstLocationNone) :: Id Meta
                                                                                                , symbolOrAliasParams = []
                                                                                                }
                                                                                        , applicationChildren =
                                                                                            [ CofreeT
                                                                                                { runCofreeT = Identity
                                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                                                                        { applicationSymbolOrAlias =
                                                                                                            SymbolOrAlias
                                                                                                                { symbolOrAliasConstructor = (Id "#variable" AstLocationNone) :: Id Meta
                                                                                                                , symbolOrAliasParams = []
                                                                                                                }
                                                                                                        , applicationChildren =
                                                                                                            [ CofreeT
                                                                                                                { runCofreeT = Identity
                                                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                                                        { variableName = (Id "#NAME" AstLocationNone) :: Id Meta
                                                                                                                        , variableCounter = Nothing
                                                                                                                        , variableSort =
                                                                                                                            SortActualSort SortActual
                                                                                                                                { sortActualName = (Id "#CharList" AstLocationNone) :: Id Meta
                                                                                                                                , sortActualSorts = []
                                                                                                                                , sortAttributes =
                                                                                                                                    Attribute.Sort
                                                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                                                        }
                                                                                                                                }
                                                                                                                        })
                                                                                                                    }
                                                                                                                }
                                                                                                            , CofreeT
                                                                                                                { runCofreeT = Identity
                                                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                                                        { variableName = (Id "#SORT" AstLocationNone) :: Id Meta
                                                                                                                        , variableCounter = Nothing
                                                                                                                        , variableSort =
                                                                                                                            SortActualSort SortActual
                                                                                                                                { sortActualName = (Id "#Sort" AstLocationNone) :: Id Meta
                                                                                                                                , sortActualSorts = []
                                                                                                                                , sortAttributes =
                                                                                                                                    Attribute.Sort
                                                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                                                        }
                                                                                                                                }
                                                                                                                        })
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        })
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        })
                                                                                    }
                                                                                }
                                                                            , CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                        { variableName = (Id "#E" AstLocationNone) :: Id Meta
                                                                                        , variableCounter = Nothing
                                                                                        , variableSort =
                                                                                            SortActualSort SortActual
                                                                                                { sortActualName = (Id "#Pattern" AstLocationNone) :: Id Meta
                                                                                                , sortActualSorts = []
                                                                                                , sortAttributes =
                                                                                                    Attribute.Sort
                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                        }
                                                                                                }
                                                                                        })
                                                                                    }
                                                                                }
                                                                            ]
                                                                        })
                                                                    }
                                                                }
                                                            ]
                                                        })
                                                    }
                                                }
                                        , equalsSecond =
                                            CofreeT
                                                { runCofreeT = Identity
                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (AndPattern And
                                                        { andSort =
                                                            SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                                                        , andFirst =
                                                            CofreeT
                                                                { runCofreeT = Identity
                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (EqualsPattern Equals
                                                                        { equalsOperandSort =
                                                                            SortActualSort SortActual
                                                                                { sortActualName = (Id "#Sort" AstLocationNone) :: Id Meta
                                                                                , sortActualSorts = []
                                                                                , sortAttributes =
                                                                                    Attribute.Sort
                                                                                        { hook = Attribute.Hook Nothing
                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                        }
                                                                                }
                                                                        , equalsResultSort =
                                                                            SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                                                                        , equalsFirst =
                                                                            CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                        { variableName = (Id "#SORT" AstLocationNone) :: Id Meta
                                                                                        , variableCounter = Nothing
                                                                                        , variableSort =
                                                                                            SortActualSort SortActual
                                                                                                { sortActualName = (Id "#Sort" AstLocationNone) :: Id Meta
                                                                                                , sortActualSorts = []
                                                                                                , sortAttributes =
                                                                                                    Attribute.Sort
                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                        }
                                                                                                }
                                                                                        })
                                                                                    }
                                                                                }
                                                                        , equalsSecond =
                                                                            CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                                                        { applicationSymbolOrAlias =
                                                                                            SymbolOrAlias
                                                                                                { symbolOrAliasConstructor = (Id "#`Exp" AstLocationNone) :: Id Meta
                                                                                                , symbolOrAliasParams = []
                                                                                                }
                                                                                        , applicationChildren = []
                                                                                        })
                                                                                    }
                                                                                }
                                                                        })
                                                                    }
                                                                }
                                                        , andSecond =
                                                            CofreeT
                                                                { runCofreeT = Identity
                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                                        { applicationSymbolOrAlias =
                                                                            SymbolOrAlias
                                                                                { symbolOrAliasConstructor = (Id "#isExp" AstLocationNone) :: Id Meta
                                                                                , symbolOrAliasParams =
                                                                                    [ SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                                                                                    ]
                                                                                }
                                                                        , applicationChildren =
                                                                            [ CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                        { variableName = (Id "#E" AstLocationNone) :: Id Meta
                                                                                        , variableCounter = Nothing
                                                                                        , variableSort =
                                                                                            SortActualSort SortActual
                                                                                                { sortActualName = (Id "#Pattern" AstLocationNone) :: Id Meta
                                                                                                , sortActualSorts = []
                                                                                                , sortAttributes =
                                                                                                    Attribute.Sort
                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                        }
                                                                                                }
                                                                                        })
                                                                                    }
                                                                                }
                                                                            ]
                                                                        })
                                                                    }
                                                                }
                                                        })
                                                    }
                                                }
                                        })
                                    }
                                }
                            }
                    , sentenceAxiomAttributes = Attributes []
                    })
                , MetaSentence (SentenceAxiomSentence SentenceAxiom
                    { sentenceAxiomParameters =
                        [ UnifiedMeta (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                        , UnifiedObject (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                        ]
                    , sentenceAxiomPattern =
                        KorePattern
                            { getKorePattern = CofreeT
                                { runCofreeT = Identity
                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ImpliesPattern Implies
                                        { impliesSort =
                                            SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                                        , impliesFirst =
                                            CofreeT
                                                { runCofreeT = Identity
                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                        { applicationSymbolOrAlias =
                                                            SymbolOrAlias
                                                                { symbolOrAliasConstructor = (Id "#isExp" AstLocationNone) :: Id Meta
                                                                , symbolOrAliasParams =
                                                                    [ SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                                                                    ]
                                                                }
                                                        , applicationChildren =
                                                            [ CofreeT
                                                                { runCofreeT = Identity
                                                                    { runIdentity = UnifiedObject Null :< UnifiedObjectPattern (ApplicationPattern Application
                                                                        { applicationSymbolOrAlias =
                                                                            SymbolOrAlias
                                                                                { symbolOrAliasConstructor = (Id "app" AstLocationNone) :: Id Object
                                                                                , symbolOrAliasParams = []
                                                                                }
                                                                        , applicationChildren =
                                                                            [ CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedObject Null :< UnifiedObjectPattern (ApplicationPattern Application
                                                                                        { applicationSymbolOrAlias =
                                                                                            SymbolOrAlias
                                                                                                { symbolOrAliasConstructor = (Id "lambda" AstLocationNone) :: Id Object
                                                                                                , symbolOrAliasParams = []
                                                                                                }
                                                                                        , applicationChildren =
                                                                                            [ CofreeT
                                                                                                { runCofreeT = Identity
                                                                                                    { runIdentity = UnifiedObject Null :< UnifiedObjectPattern (VariablePattern Variable
                                                                                                        { variableName = (Id "X" AstLocationNone) :: Id Object
                                                                                                        , variableCounter = Nothing
                                                                                                        , variableSort =
                                                                                                            SortActualSort SortActual
                                                                                                                { sortActualName = (Id "Exp" AstLocationNone) :: Id Object
                                                                                                                , sortActualSorts = []
                                                                                                                , sortAttributes =
                                                                                                                    Attribute.Sort
                                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                                        }
                                                                                                                }
                                                                                                        })
                                                                                                    }
                                                                                                }
                                                                                            , CofreeT
                                                                                                { runCofreeT = Identity
                                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                                        { variableName = (Id "#E" AstLocationNone) :: Id Meta
                                                                                                        , variableCounter = Nothing
                                                                                                        , variableSort =
                                                                                                            SortActualSort SortActual
                                                                                                                { sortActualName = (Id "#Pattern" AstLocationNone) :: Id Meta
                                                                                                                , sortActualSorts = []
                                                                                                                , sortAttributes =
                                                                                                                    Attribute.Sort
                                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                                        }
                                                                                                                }
                                                                                                        })
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        })
                                                                                    }
                                                                                }
                                                                            , CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                        { variableName = (Id "#E'" AstLocationNone) :: Id Meta
                                                                                        , variableCounter = Nothing
                                                                                        , variableSort =
                                                                                            SortActualSort SortActual
                                                                                                { sortActualName = (Id "#Pattern" AstLocationNone) :: Id Meta
                                                                                                , sortActualSorts = []
                                                                                                , sortAttributes =
                                                                                                    Attribute.Sort
                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                        }
                                                                                                }
                                                                                        })
                                                                                    }
                                                                                }
                                                                            ]
                                                                        })
                                                                    }
                                                                }
                                                            ]
                                                        })
                                                    }
                                                }
                                        , impliesSecond =
                                            CofreeT
                                                { runCofreeT = Identity
                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                        { applicationSymbolOrAlias =
                                                            SymbolOrAlias
                                                                { symbolOrAliasConstructor = (Id "#provable" AstLocationNone) :: Id Meta
                                                                , symbolOrAliasParams =
                                                                    [ SortVariableSort (SortVariable ((Id "#S" AstLocationNone) :: Id Meta))
                                                                    ]
                                                                }
                                                        , applicationChildren =
                                                            [ CofreeT
                                                                { runCofreeT = Identity
                                                                    { runIdentity = UnifiedObject Null :< UnifiedObjectPattern (EqualsPattern Equals
                                                                        { equalsOperandSort =
                                                                            SortActualSort SortActual
                                                                                { sortActualName = (Id "Exp" AstLocationNone) :: Id Object
                                                                                , sortActualSorts = []
                                                                                , sortAttributes =
                                                                                    Attribute.Sort
                                                                                        { hook = Attribute.Hook Nothing
                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                        }
                                                                                }
                                                                        , equalsResultSort =
                                                                            SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                                                        , equalsFirst =
                                                                            CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedObject Null :< UnifiedObjectPattern (ApplicationPattern Application
                                                                                        { applicationSymbolOrAlias =
                                                                                            SymbolOrAlias
                                                                                                { symbolOrAliasConstructor = (Id "app" AstLocationNone) :: Id Object
                                                                                                , symbolOrAliasParams = []
                                                                                                }
                                                                                        , applicationChildren =
                                                                                            [ CofreeT
                                                                                                { runCofreeT = Identity
                                                                                                    { runIdentity = UnifiedObject Null :< UnifiedObjectPattern (ApplicationPattern Application
                                                                                                        { applicationSymbolOrAlias =
                                                                                                            SymbolOrAlias
                                                                                                                { symbolOrAliasConstructor = (Id "lambda" AstLocationNone) :: Id Object
                                                                                                                , symbolOrAliasParams = []
                                                                                                                }
                                                                                                        , applicationChildren =
                                                                                                            [ CofreeT
                                                                                                                { runCofreeT = Identity
                                                                                                                    { runIdentity = UnifiedObject Null :< UnifiedObjectPattern (VariablePattern Variable
                                                                                                                        { variableName = (Id "X" AstLocationNone) :: Id Object
                                                                                                                        , variableCounter = Nothing
                                                                                                                        , variableSort =
                                                                                                                            SortActualSort SortActual
                                                                                                                                { sortActualName = (Id "Exp" AstLocationNone) :: Id Object
                                                                                                                                , sortActualSorts = []
                                                                                                                                , sortAttributes =
                                                                                                                                    Attribute.Sort
                                                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                                                        }
                                                                                                                                }
                                                                                                                        })
                                                                                                                    }
                                                                                                                }
                                                                                                            , CofreeT
                                                                                                                { runCofreeT = Identity
                                                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                                                        { variableName = (Id "#E" AstLocationNone) :: Id Meta
                                                                                                                        , variableCounter = Nothing
                                                                                                                        , variableSort =
                                                                                                                            SortActualSort SortActual
                                                                                                                                { sortActualName = (Id "#Pattern" AstLocationNone) :: Id Meta
                                                                                                                                , sortActualSorts = []
                                                                                                                                , sortAttributes =
                                                                                                                                    Attribute.Sort
                                                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                                                        }
                                                                                                                                }
                                                                                                                        })
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        })
                                                                                                    }
                                                                                                }
                                                                                            , CofreeT
                                                                                                { runCofreeT = Identity
                                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                                        { variableName = (Id "#E'" AstLocationNone) :: Id Meta
                                                                                                        , variableCounter = Nothing
                                                                                                        , variableSort =
                                                                                                            SortActualSort SortActual
                                                                                                                { sortActualName = (Id "#Pattern" AstLocationNone) :: Id Meta
                                                                                                                , sortActualSorts = []
                                                                                                                , sortAttributes =
                                                                                                                    Attribute.Sort
                                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                                        }
                                                                                                                }
                                                                                                        })
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        })
                                                                                    }
                                                                                }
                                                                        , equalsSecond =
                                                                            CofreeT
                                                                                { runCofreeT = Identity
                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                                                        { applicationSymbolOrAlias =
                                                                                            SymbolOrAlias
                                                                                                { symbolOrAliasConstructor = (Id "#substitute" AstLocationNone) :: Id Meta
                                                                                                , symbolOrAliasParams = []
                                                                                                }
                                                                                        , applicationChildren =
                                                                                            [ CofreeT
                                                                                                { runCofreeT = Identity
                                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                                        { variableName = (Id "#E" AstLocationNone) :: Id Meta
                                                                                                        , variableCounter = Nothing
                                                                                                        , variableSort =
                                                                                                            SortActualSort SortActual
                                                                                                                { sortActualName = (Id "#Pattern" AstLocationNone) :: Id Meta
                                                                                                                , sortActualSorts = []
                                                                                                                , sortAttributes =
                                                                                                                    Attribute.Sort
                                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                                        }
                                                                                                                }
                                                                                                        })
                                                                                                    }
                                                                                                }
                                                                                            , CofreeT
                                                                                                { runCofreeT = Identity
                                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (VariablePattern Variable
                                                                                                        { variableName = (Id "#E'" AstLocationNone) :: Id Meta
                                                                                                        , variableCounter = Nothing
                                                                                                        , variableSort =
                                                                                                            SortActualSort SortActual
                                                                                                                { sortActualName = (Id "#Pattern" AstLocationNone) :: Id Meta
                                                                                                                , sortActualSorts = []
                                                                                                                , sortAttributes =
                                                                                                                    Attribute.Sort
                                                                                                                        { hook = Attribute.Hook Nothing
                                                                                                                        , smtlib = Attribute.Smtlib Nothing
                                                                                                                        }
                                                                                                                }
                                                                                                        })
                                                                                                    }
                                                                                                }
                                                                                            , CofreeT
                                                                                                { runCofreeT = Identity
                                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                                                                        { applicationSymbolOrAlias =
                                                                                                            SymbolOrAlias
                                                                                                                { symbolOrAliasConstructor = (Id "#variable" AstLocationNone) :: Id Meta
                                                                                                                , symbolOrAliasParams = []
                                                                                                                }
                                                                                                        , applicationChildren =
                                                                                                            [ CofreeT
                                                                                                                { runCofreeT = Identity
                                                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (StringLiteralPattern (StringLiteral "X"))
                                                                                                                    }
                                                                                                                }
                                                                                                            , CofreeT
                                                                                                                { runCofreeT = Identity
                                                                                                                    { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (ApplicationPattern Application
                                                                                                                        { applicationSymbolOrAlias =
                                                                                                                            SymbolOrAlias
                                                                                                                                { symbolOrAliasConstructor = (Id "#`Exp" AstLocationNone) :: Id Meta
                                                                                                                                , symbolOrAliasParams = []
                                                                                                                                }
                                                                                                                        , applicationChildren = []
                                                                                                                        })
                                                                                                                    }
                                                                                                                }
                                                                                                            ]
                                                                                                        })
                                                                                                    }
                                                                                                }
                                                                                            ]
                                                                                        })
                                                                                    }
                                                                                }
                                                                        })
                                                                    }
                                                                }
                                                            ]
                                                        })
                                                    }
                                                }
                                        })
                                    }
                                }
                            }
                    , sentenceAxiomAttributes = Attributes []
                    })
                ]
            , moduleAttributes = Attributes []
            }
        ]
    }