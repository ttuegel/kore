Definition
    { definitionAttributes = Attributes []
    , definitionModules =
        [ Module
            { moduleName = ModuleName "TEST-ALIAS-11"
            , moduleSentences =
                [ ObjectSentence (SentenceAliasSentence SentenceAlias
                    { sentenceAliasAlias =
                        Alias
                            { aliasConstructor = (Id "f" AstLocationNone) :: Id Object
                            , aliasParams =
                                [ SortVariable ((Id "s" AstLocationNone) :: Id Object)
                                ]
                            }
                    , sentenceAliasSorts =
                        [ SortVariableSort (SortVariable ((Id "s" AstLocationNone) :: Id Object))
                        , SortVariableSort (SortVariable ((Id "s" AstLocationNone) :: Id Object))
                        ]
                    , sentenceAliasReturnSort =
                        SortVariableSort (SortVariable ((Id "s" AstLocationNone) :: Id Object))
                    , sentenceAliasLeftPattern =
                        ApplicationPattern Application
                            { applicationSymbolOrAlias =
                                SymbolOrAlias
                                    { symbolOrAliasConstructor = (Id "f" AstLocationNone) :: Id Object
                                    , symbolOrAliasParams =
                                        [ SortVariableSort (SortVariable ((Id "s" AstLocationNone) :: Id Object))
                                        ]
                                    }
                            , applicationChildren =
                                [ KorePattern
                                    { getKorePattern = CofreeT
                                        { runCofreeT = Identity
                                            { runIdentity = () :< UnifiedObjectPattern (VariablePattern Variable
                                                { variableName = (Id "a" AstLocationNone) :: Id Object
                                                , variableSort =
                                                    SortVariableSort (SortVariable ((Id "s" AstLocationNone) :: Id Object))
                                                })
                                            }
                                        }
                                    }
                                , KorePattern
                                    { getKorePattern = CofreeT
                                        { runCofreeT = Identity
                                            { runIdentity = () :< UnifiedObjectPattern (VariablePattern Variable
                                                { variableName = (Id "b" AstLocationNone) :: Id Object
                                                , variableSort =
                                                    SortVariableSort (SortVariable ((Id "s" AstLocationNone) :: Id Object))
                                                })
                                            }
                                        }
                                    }
                                ]
                            }
                    , sentenceAliasRightPattern =
                        RewritesPattern Rewrites
                            { rewritesSort =
                                SortVariableSort (SortVariable ((Id "s" AstLocationNone) :: Id Object))
                            , rewritesFirst =
                                KorePattern
                                    { getKorePattern = CofreeT
                                        { runCofreeT = Identity
                                            { runIdentity = () :< UnifiedObjectPattern (VariablePattern Variable
                                                { variableName = (Id "a" AstLocationNone) :: Id Object
                                                , variableSort =
                                                    SortVariableSort (SortVariable ((Id "s" AstLocationNone) :: Id Object))
                                                })
                                            }
                                        }
                                    }
                            , rewritesSecond =
                                KorePattern
                                    { getKorePattern = CofreeT
                                        { runCofreeT = Identity
                                            { runIdentity = () :< UnifiedObjectPattern (VariablePattern Variable
                                                { variableName = (Id "b" AstLocationNone) :: Id Object
                                                , variableSort =
                                                    SortVariableSort (SortVariable ((Id "s" AstLocationNone) :: Id Object))
                                                })
                                            }
                                        }
                                    }
                            }
                    , sentenceAliasAttributes = Attributes []
                    })
                ]
            , moduleAttributes = Attributes []
            }
        ]
    }