Definition
    { definitionAttributes = Attributes []
    , definitionModules =
        [ Module
            { moduleName = ModuleName "TEST-ALIAS-7"
            , moduleSentences =
                [ ObjectSentence (SentenceSortSentence SentenceSort
                    { sentenceSortName = (Id "Nat" AstLocationNone) :: Id Object
                    , sentenceSortParameters = []
                    , sentenceSortAttributes = Attributes []
                    })
                , ObjectSentence (SentenceSymbolSentence SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = (Id "g" AstLocationNone) :: Id Object
                            , symbolParams =
                                [ SortVariable ((Id "S" AstLocationNone) :: Id Object)
                                ]
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = (Id "Nat" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                    , sentenceSymbolAttributes = Attributes []
                    })
                , ObjectSentence (SentenceAliasSentence SentenceAlias
                    { sentenceAliasAlias =
                        Alias
                            { aliasConstructor = (Id "f" AstLocationNone) :: Id Object
                            , aliasParams =
                                [ SortVariable ((Id "S" AstLocationNone) :: Id Object)
                                ]
                            }
                    , sentenceAliasSorts =
                        [ SortActualSort SortActual
                            { sortActualName = (Id "Nat" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            }
                        ]
                    , sentenceAliasReturnSort =
                        SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                    , sentenceAliasLeftPattern =
                        ApplicationPattern Application
                            { applicationSymbolOrAlias =
                                SymbolOrAlias
                                    { symbolOrAliasConstructor = (Id "f" AstLocationNone) :: Id Object
                                    , symbolOrAliasParams =
                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                        ]
                                    }
                            , applicationChildren =
                                [ KorePattern
                                    { getKorePattern = CofreeT
                                        { runCofreeT = Identity
                                            { runIdentity = () :< UnifiedObjectPattern (VariablePattern Variable
                                                { variableName = (Id "N" AstLocationNone) :: Id Object
                                                , variableSort =
                                                    SortActualSort SortActual
                                                        { sortActualName = (Id "Nat" AstLocationNone) :: Id Object
                                                        , sortActualSorts = []
                                                        }
                                                })
                                            }
                                        }
                                    }
                                ]
                            }
                    , sentenceAliasRightPattern =
                        ApplicationPattern Application
                            { applicationSymbolOrAlias =
                                SymbolOrAlias
                                    { symbolOrAliasConstructor = (Id "g" AstLocationNone) :: Id Object
                                    , symbolOrAliasParams =
                                        [ SortVariableSort (SortVariable ((Id "S" AstLocationNone) :: Id Object))
                                        ]
                                    }
                            , applicationChildren =
                                [ KorePattern
                                    { getKorePattern = CofreeT
                                        { runCofreeT = Identity
                                            { runIdentity = () :< UnifiedObjectPattern (VariablePattern Variable
                                                { variableName = (Id "N" AstLocationNone) :: Id Object
                                                , variableSort =
                                                    SortActualSort SortActual
                                                        { sortActualName = (Id "Nat" AstLocationNone) :: Id Object
                                                        , sortActualSorts = []
                                                        }
                                                })
                                            }
                                        }
                                    }
                                ]
                            }
                    , sentenceAliasAttributes = Attributes []
                    })
                ]
            , moduleAttributes = Attributes []
            }
        ]
    }