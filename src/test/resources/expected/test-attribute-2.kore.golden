Definition
    { definitionAttributes = Attributes []
    , definitionModules =
        [ Module
            { moduleName = ModuleName "TEST-ATTRIBUTE-2"
            , moduleSentences =
                [ ObjectSentence (SentenceHookSentence (SentenceHookedSort SentenceSort
                    { sentenceSortName = (Id "Nat" AstLocationNone) :: Id Object
                    , sentenceSortParameters = []
                    , sentenceSortAttributes =
                        Attributes 
                            [ KorePattern
                                { getKorePattern = CofreeT
                                    { runCofreeT = Identity
                                        { runIdentity = UnifiedObject Null :< UnifiedObjectPattern (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id "hook" AstLocationNone) :: Id Object
                                                    , symbolOrAliasParams = []
                                                    }
                                            , applicationChildren =
                                                [ CofreeT
                                                    { runCofreeT = Identity
                                                        { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (StringLiteralPattern (StringLiteral "NAT.Nat"))
                                                        }
                                                    }
                                                ]
                                            })
                                        }
                                    }
                                }
                            ]
                    }))
                , ObjectSentence (SentenceHookSentence (SentenceHookedSymbol SentenceSymbol
                    { sentenceSymbolSymbol =
                        Symbol
                            { symbolConstructor = (Id "plus" AstLocationNone) :: Id Object
                            , symbolParams = []
                            }
                    , sentenceSymbolSorts =
                        [ SortActualSort SortActual
                            { sortActualName = (Id "Nat" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            , sortAttributes =
                                Attribute.Sort
                                    { hook = Attribute.Hook Nothing
                                    , smtlib = Attribute.Smtlib Nothing
                                    }
                            }
                        , SortActualSort SortActual
                            { sortActualName = (Id "Nat" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            , sortAttributes =
                                Attribute.Sort
                                    { hook = Attribute.Hook Nothing
                                    , smtlib = Attribute.Smtlib Nothing
                                    }
                            }
                        ]
                    , sentenceSymbolReturnSort =
                        SortActualSort SortActual
                            { sortActualName = (Id "Nat" AstLocationNone) :: Id Object
                            , sortActualSorts = []
                            , sortAttributes =
                                Attribute.Sort
                                    { hook = Attribute.Hook Nothing
                                    , smtlib = Attribute.Smtlib Nothing
                                    }
                            }
                    , sentenceSymbolAttributes =
                        Attributes 
                            [ KorePattern
                                { getKorePattern = CofreeT
                                    { runCofreeT = Identity
                                        { runIdentity = UnifiedObject Null :< UnifiedObjectPattern (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id "hook" AstLocationNone) :: Id Object
                                                    , symbolOrAliasParams = []
                                                    }
                                            , applicationChildren =
                                                [ CofreeT
                                                    { runCofreeT = Identity
                                                        { runIdentity = UnifiedMeta Null :< UnifiedMetaPattern (StringLiteralPattern (StringLiteral "NAT.plus"))
                                                        }
                                                    }
                                                ]
                                            })
                                        }
                                    }
                                }
                            , KorePattern
                                { getKorePattern = CofreeT
                                    { runCofreeT = Identity
                                        { runIdentity = UnifiedObject Null :< UnifiedObjectPattern (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id "associative" AstLocationNone) :: Id Object
                                                    , symbolOrAliasParams = []
                                                    }
                                            , applicationChildren = []
                                            })
                                        }
                                    }
                                }
                            , KorePattern
                                { getKorePattern = CofreeT
                                    { runCofreeT = Identity
                                        { runIdentity = UnifiedObject Null :< UnifiedObjectPattern (ApplicationPattern Application
                                            { applicationSymbolOrAlias =
                                                SymbolOrAlias
                                                    { symbolOrAliasConstructor = (Id "commutative" AstLocationNone) :: Id Object
                                                    , symbolOrAliasParams = []
                                                    }
                                            , applicationChildren = []
                                            })
                                        }
                                    }
                                }
                            ]
                    }))
                ]
            , moduleAttributes = Attributes []
            }
        ]
    }